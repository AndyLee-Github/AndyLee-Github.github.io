<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Consolidating the foundation of Linux, sed and awk</title>
      <link href="2021/04/29/Linux/Consolidating-the-foundation-of-Linux-sed-and-awk/"/>
      <url>2021/04/29/Linux/Consolidating-the-foundation-of-Linux-sed-and-awk/</url>
      
        <content type="html"><![CDATA[<h1 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h1><p><code>sed</code> is a stream editer for filtering and transforming text.</p><p>First of all, we need to know the following three points:</p><ul><li>replace command: <code>s</code></li><li>pattern space and hold space</li><li><code>man sed</code></li></ul><a id="more"></a><h2 id="tips-and-example"><a href="#tips-and-example" class="headerlink" title="tips and example"></a>tips and example</h2><h3 id="Basis"><a href="#Basis" class="headerlink" title="Basis"></a>Basis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;s/old/new/&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># -e , add the commands to be executed</span></span><br><span class="line">sed -e <span class="string">&#x27;s/old/new/&#x27;</span> -e <span class="string">&#x27;s/old/new/&#x27;</span> file</span><br><span class="line"><span class="comment"># -&gt; equals</span></span><br><span class="line">sed <span class="string">&#x27;s/old/new/;s/old/new/&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the contents of script-file to the commands to be executed</span></span><br><span class="line">sed -f &lt;script&gt; file</span><br><span class="line"></span><br><span class="line"><span class="comment"># Replace and re-write the original file</span></span><br><span class="line">sed -i <span class="string">&#x27;s/old/new/&#x27;</span> <span class="string">&#x27;s/old/new/&#x27;</span> file</span><br></pre></td></tr></table></figure><h3 id="separator"><a href="#separator" class="headerlink" title="separator"></a>separator</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># separator can be &#x27;!&#x27;, &#x27;#&#x27;,&#x27;@&#x27; .... not only &#x27;/&#x27;</span></span><br><span class="line">sed <span class="string">&#x27;s!/!abc!&#x27;</span> file <span class="comment"># replace &#x27;/&#x27; with &#x27;abc&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="regex"><a href="#regex" class="headerlink" title="regex"></a>regex</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;s/&lt;regex&gt;/new/&#x27;</span> file</span><br><span class="line">sed -r <span class="string">&#x27;s/&lt;extended regex&gt;/new/&#x27;</span> file</span><br><span class="line">head -5 /etc/passwd | sed <span class="string">&#x27;s/...//&#x27;</span> <span class="comment"># delete the first three characters of the first 5 lines</span></span><br><span class="line">head -5 /etc/passwd | sed <span class="string">&#x27;s/s*bin//&#x27;</span> <span class="comment"># delete the first bin,sbin,ssbin... of the first 5 lines</span></span><br><span class="line">grep root /etc/passwd | sed <span class="string">&#x27;s/^root//&#x27;</span> <span class="comment"># delete the root at start of line</span></span><br><span class="line">sed -r <span class="string">&#x27;s/(a.*b)/\1:\1/&#x27;</span> file <span class="comment"># (a.*b):(a.*b), .* -&gt; means 0 or more any char(&#x27;.&#x27;);  `\1` means the first ()</span></span><br></pre></td></tr></table></figure><h3 id="Advanced-sed"><a href="#Advanced-sed" class="headerlink" title="Advanced sed"></a>Advanced sed</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /s/old/new/2 # replace the second match</span></span><br><span class="line"><span class="comment"># /s/old/new/g  # Globally replace</span></span><br><span class="line"><span class="comment"># /s/old/new/p # Print(Output) the replaced line(pattern space) one more time</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># p, P, -n </span></span><br><span class="line">sed -n <span class="string">&#x27;/s/old/new/p&#x27;</span> <span class="comment"># Only output the replaced line, &#x27;-n&#x27; to stop the default output.</span></span><br><span class="line">sed -n <span class="string">&#x27;/&lt;regex&gt;/p&#x27;</span>   <span class="comment"># Only output the &lt;regex&gt; line</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># d, D</span></span><br><span class="line">sed <span class="string">&#x27;/&lt;regex&gt;/d;=&#x27;</span> <span class="comment"># when encounter &lt;regex&gt; , delete the pattern space and exit the current sed motion, &#x27;=&#x27; print the line number</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># /&lt;regex&gt;/s/old/new/g</span></span><br><span class="line"><span class="comment"># &lt;line num&gt;s/old/new/g</span></span><br><span class="line"><span class="string">&#x27;/root/s/bash/!/&#x27;</span> <span class="comment"># replace bash with ! in the line including root. </span></span><br><span class="line">1,<span class="variable">$s</span>/old/new/g <span class="comment"># replace from the first line to the last line</span></span><br><span class="line"><span class="string">&#x27;/^bin/,$s/nologin/!/g&#x27;</span> <span class="comment"># replace from the bin start of line to the end of line </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a[ppend],i[nsert],c[modify]</span></span><br><span class="line">sed <span class="string">&#x27;&lt;regex&gt;/a &lt;content&gt;&#x27;</span> <span class="comment"># append &lt;content&gt; at the next line of &lt;regex&gt;</span></span><br><span class="line">sed <span class="string">&#x27;&lt;regex&gt;/i &lt;content&gt;&#x27;</span> <span class="comment"># insert &lt;content&gt; at the previous line of &lt;regex&gt;</span></span><br><span class="line">sed <span class="string">&#x27;&lt;regex&gt;/c &lt;content&gt;&#x27;</span> <span class="comment"># Modify the line of &lt;regex&gt; as &lt;content&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># r,w</span></span><br><span class="line">sed <span class="string">&#x27;&lt;regex&gt;/r &lt;file&gt;&#x27;</span>  <span class="comment"># Read &lt;file&gt; and append to &lt;regex&gt;</span></span><br><span class="line">sed <span class="string">&#x27;&lt;regex&gt;/w file&quot;&#x27;</span>     <span class="comment"># Write the  &lt;regex&gt; line to file</span></span><br><span class="line">sed -n <span class="string">&#x27;/s/old/new/w file.txt&#x27;</span> <span class="comment"># write the replaced lines to file.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># q -&gt; quit, time summarize system resource usage </span></span><br><span class="line">time sed <span class="string">&#x27;10q&#x27;</span> <span class="comment"># Faster, read and print 10 lines and then quit</span></span><br><span class="line">time sed -n <span class="string">&#x27;1,10p&#x27;</span><span class="comment"># Slower, read all and filter 10 lines</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># n,N - Read the next line of input into the pattern space</span></span><br><span class="line">sed <span class="string">&#x27;N;s/&lt;first line&gt;\n&lt;second line&gt;/&lt;new line&gt;&#x27;</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># hold space, line break exists in default.</span></span><br><span class="line"><span class="comment"># h H # Copy pattern space to hold space</span></span><br><span class="line"><span class="comment"># g G # Copy hold space to pattern space</span></span><br><span class="line"><span class="comment"># x   # swith hold space and pattern space</span></span><br><span class="line"><span class="comment">#  4 ways to concatenate and print files in reverse</span></span><br><span class="line">cat -n file | tac</span><br><span class="line">cat -n file | sed -n <span class="string">&#x27;1h;1!G;$1x;$p&#x27;</span></span><br><span class="line">cat -n file | sed -n <span class="string">&#x27;!G;h;$p&#x27;</span></span><br><span class="line">cat -n file | sed -n <span class="string">&#x27;G;h;$!d&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>Remeber to use <code>man sed</code>.</p></blockquote><h1 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h1><p><code>awk</code> is a pattern scanning and processing language, likes a little system.</p><p>Fist of all, we need to know the following four points:</p><ul><li>record means line</li><li>field means the content separeted by separator.</li><li>How to write?<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BEGAIN action: BEGIN&#123;&#125;</span><br><span class="line">Main action: &#123;&#125;</span><br><span class="line">END action: END&#123;&#125;</span><br></pre></td></tr></table></figure></li><li><code>man awk</code></li></ul><h2 id="Tips-and-example"><a href="#Tips-and-example" class="headerlink" title="Tips and example"></a>Tips and example</h2><h3 id="Basis-1"><a href="#Basis-1" class="headerlink" title="Basis"></a>Basis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The separator is space or tab in default.</span></span><br><span class="line"><span class="variable">$0</span>: Represents the entire line of text.</span><br><span class="line"><span class="variable">$1</span>: Represents the first field.</span><br><span class="line"><span class="variable">$2</span>: Represents the second field.</span><br><span class="line"><span class="variable">$n</span>: Represents the n field.</span><br><span class="line"><span class="variable">$NF</span>: Represents the last field.</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;&#123;print $1,$2,$3&#125;&#x27;</span> file <span class="comment"># Separate each line with space and tab ,and print the first three field. </span></span><br><span class="line">awk -F <span class="string">&#x27;,&#x27;</span> <span class="string">&#x27;&#123;print $1,$2,$3&#125;&#x27;</span> file <span class="comment"># Separate each line with &#x27;,&#x27; and print the first three field.</span></span><br><span class="line">awk <span class="string">&#x27;/^menu/&#123;print $0&#125;&#x27;</span> /boot/grub2/grub.cfg <span class="comment"># print the line starting with &#x27;menu&#x27;</span></span><br><span class="line">awk -F <span class="string">&quot;&#x27;&quot;</span> <span class="string">&#x27;/^menu/&#123;print $2&#125;&#x27;</span> /boot/grub2/grub.cfg <span class="comment"># print the second field(kernel version) of lines with &quot;&#x27;&quot;</span></span><br><span class="line">awk -F <span class="string">&quot;&#x27;&quot;</span> <span class="string">&#x27;/^menu/&#123;print x++,$2&#125;&#x27;</span> /boot/grub2/grub.cfg <span class="comment"># print kernel version with line number, x is 0 in default</span></span><br></pre></td></tr></table></figure><h2 id="Built-in-Variables"><a href="#Built-in-Variables" class="headerlink" title="Built-in Variables"></a>Built-in Variables</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">NF: The number of fields <span class="keyword">in</span> the current input record</span><br><span class="line">NR: The total number of input records seen so far</span><br><span class="line">FS: The input field separator, a space by default, default separator is decided by this var.</span><br><span class="line">OFS: The output field separator, a space by default </span><br><span class="line">FNR: The input record number <span class="keyword">in</span> the current input file</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get username</span></span><br><span class="line">head -5 /etc/passwd | awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> </span><br><span class="line">head -5 /etc/passwd | awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;print $1&#125;&#x27;</span></span><br><span class="line">head -5 /etc/passwd | awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;;OFS=&quot;-&quot;&#125;&#123;print $1,$2&#125;&#x27;</span> <span class="comment"># username-$2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Separete line with &#x27;:&#x27; and output fields</span></span><br><span class="line">head -5 /etc/passwd | awk <span class="string">&#x27;BEGIN&#123;RS=&quot;:&quot;&#125;&#123;print $0&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add line number before fields</span></span><br><span class="line">head -5 /etc/passwd | awk <span class="string">&#x27;&#123;print NR,$0&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;&#123;print FNR,$0&#125;&#x27;</span> /etc/hosts /etc/hosts <span class="comment"># Sort all file lines separately</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print NR,$0&#125;&#x27;</span> /etc/hosts /etc/hosts <span class="comment"># Sort all file lines uniformly</span></span><br><span class="line"></span><br><span class="line">head -5 /etc/passwd | awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;print $NF&#125;&#x27;</span> <span class="comment"># the last field of every record(line)</span></span><br><span class="line">head -5 /etc/passwd | awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;print NF&#125;&#x27;</span>  <span class="comment"># the total nubmer of fields of every record</span></span><br></pre></td></tr></table></figure><h2 id="Expr"><a href="#Expr" class="headerlink" title="Expr"></a>Expr</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">var = <span class="string">&quot;name&quot;</span></span><br><span class="line">var = <span class="string">&quot;string1&quot;</span> <span class="string">&quot;string2&quot;</span></span><br><span class="line">var = <span class="variable">$1</span> <span class="comment"># the first field</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Array</span></span><br><span class="line">arr[subscript]=vaule <span class="comment"># subscript could be any character</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(var <span class="keyword">in</span> arr)</span><br><span class="line">delete arr[var] <span class="comment"># delete array</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Operator</span></span><br><span class="line">++, --, +=, -=, *=, /+, %=, ^=</span><br><span class="line">+, -, *, /, *, ^</span><br><span class="line"></span><br><span class="line"><span class="comment"># Comparison</span></span><br><span class="line">&lt; &gt; &lt;= &gt;= == != ~ !~</span><br><span class="line"></span><br><span class="line"><span class="comment"># Logical</span></span><br><span class="line">&amp;&amp; || ?</span><br><span class="line"></span><br><span class="line"><span class="comment"># Branch</span></span><br><span class="line"><span class="keyword">if</span>()</span><br><span class="line">awk</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span></span><br><span class="line">awk</span><br><span class="line">[<span class="keyword">else</span></span><br><span class="line">awk</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Loop</span></span><br><span class="line"><span class="keyword">while</span>()</span><br><span class="line">    awk</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    awk</span><br><span class="line">&#125;<span class="keyword">while</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(;;) <span class="comment"># same as c language</span></span><br><span class="line">   awk</span><br><span class="line"></span><br><span class="line"><span class="comment"># Loop control</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="built_in">continue</span></span><br></pre></td></tr></table></figure><h3 id="Score-example"><a href="#Score-example" class="headerlink" title="Score example"></a>Score example</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create score.txt</span></span><br><span class="line">cat &gt; score.txt &lt;&lt;EOF</span><br><span class="line">student1 70 80 70 90 50</span><br><span class="line">student2 70 80 70 90 50</span><br><span class="line">student3 80 80 70 90 50</span><br><span class="line">student4 60 80 70 90 50</span><br><span class="line">student5 90 80 70 90 50</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;&#123;if($2&gt;=80) print $1&#125;&#x27;</span> score.txt <span class="comment"># output name got more than 80</span></span><br><span class="line">awk <span class="string">&#x27;&#123;if($2&gt;=80) &#123;print $1? print $2&#125;&#125;&#x27;</span> score.txt <span class="comment"># output name and the first score</span></span><br><span class="line">head -1 score.txt | awk <span class="string">&#x27;&#123;for(c=2;c&lt;=NF;c++) print $c&#125;&#x27;</span><span class="comment"># output the first student&#x27;s score</span></span><br><span class="line">head -1 score.txt | awk <span class="string">&#x27;&#123;for(c=2;c&lt;=NF;c++) sum+=$c;print sum&#125;&#x27;</span><span class="comment"># output the total score of the first student</span></span><br><span class="line">awk <span class="string">&#x27;&#123;sum=0; for(c=2;c&lt;=NF;c++) sum+=$c;print sum&#125;&#x27;</span> score.txt <span class="comment"># output the total score of all students</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Store and print the sum of avarage score</span></span><br><span class="line">awk <span class="string">&#x27;&#123; sum=0; for(column=2;column&lt;=NF;column++) sum+=$column;avg[$1]=sum/(NF-1)&#125;END&#123; for(student in avg) print student,avg[student]&#125;&#x27;</span> score.txt  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Store all avarage score and get sum, print avarage of the sum of avarage score</span></span><br><span class="line">awk <span class="string">&#x27;&#123; sum=0; for(column=2;column&lt;=NF;column++) sum+=$column;avg[$1]=sum/(NF-1)&#125;END&#123; for(student in avg) sum2+=avg[student];print sum2/NR&#125;&#x27;</span> score.txt</span><br></pre></td></tr></table></figure><h3 id="Script"><a href="#Script" class="headerlink" title="Script"></a>Script</h3><h4 id="ARGC-and-ARGV"><a href="#ARGC-and-ARGV" class="headerlink" title="ARGC and ARGV"></a>ARGC and ARGV</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ARGC : The num of argument</span></span><br><span class="line"><span class="comment"># ARGV : The arguments</span></span><br><span class="line">cat &gt; arg.awk &lt;&lt;EOF</span><br><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="keyword">for</span>(x=0;x&lt;ARGC;x++)</span><br><span class="line">        <span class="built_in">print</span> ARGV[x]</span><br><span class="line">    <span class="built_in">print</span> ARGC</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">awk -f arg.awk 1 2 3 4 5</span><br></pre></td></tr></table></figure><h4 id="Score-example-again"><a href="#Score-example-again" class="headerlink" title="Score example again"></a>Score example again</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; result.awk &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">    sum = 0</span><br><span class="line">    <span class="keyword">for</span>( column = 2; column &lt;= NF; column++ )</span><br><span class="line">        sum+ = <span class="variable">$column</span></span><br><span class="line">    avg[<span class="variable">$1</span>] = sum / (NF - 1)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( avg[<span class="variable">$1</span>] &gt;= 80 )</span><br><span class="line">        letter = <span class="string">&quot;A&quot;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( avg[<span class="variable">$1</span>] &gt;= 70 )</span><br><span class="line">        letter = <span class="string">&quot;B&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        letter = <span class="string">&quot;C&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span> <span class="variable">$1</span>,avg[<span class="variable">$1</span>],letter</span><br><span class="line"></span><br><span class="line">    letter_all[letter]++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span>( student <span class="keyword">in</span> avg )</span><br><span class="line">        sum_all += avg[student]</span><br><span class="line">    avg_all = sum_all / NR</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;avg_all&quot;</span>,<span class="variable">$avg_all</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>( student <span class="keyword">in</span> avg )</span><br><span class="line">        <span class="keyword">if</span>( avg[student] &gt; avg_all )</span><br><span class="line">            above++</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(avg[student] == avg_all)</span><br><span class="line">            equal++</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            below++</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;above&quot;</span>,above</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;equal&quot;</span>,equal</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;below&quot;</span>,below</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;A:&quot;</span>,letter_all[<span class="string">&quot;A&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;B:&quot;</span>,letter_all[<span class="string">&quot;B&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;C:&quot;</span>,letter_all[<span class="string">&quot;C&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">awk -f result.awk score.txt</span><br></pre></td></tr></table></figure><h1 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Numeric Functions</span></span><br><span class="line">sin(),cos(),int(),rand(),srand()...</span><br><span class="line"></span><br><span class="line"><span class="comment"># Strings Funcitons</span></span><br><span class="line">sub(r, s [, t]), index(s, t)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom Functions, need to be before BEGIN</span></span><br><span class="line"><span class="keyword">function</span> func ( arg ) &#123;</span><br><span class="line">awk</span><br><span class="line"><span class="built_in">return</span> var</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;function double(str) &#123;return str str&#125; BEGIN&#123; print double(&quot;Hello awk!&quot;)&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Consolidating the foundation of Linux, shell</title>
      <link href="2021/04/29/Linux/Consolidating-the-foundation-of-Linux-shell/"/>
      <url>2021/04/29/Linux/Consolidating-the-foundation-of-Linux-shell/</url>
      
        <content type="html"><![CDATA[<h1 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h1><p>Here is <a href="http://huaqianlee.github.io/2019/09/08/Linux/A-little-basic-knowledge-of-the-shell/">A little basic knowledge of shell</a>.</p><h2 id="env"><a href="#env" class="headerlink" title="env"></a>env</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$USER</span></span><br><span class="line"><span class="variable">$UID</span></span><br><span class="line"><span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> | more <span class="comment"># check the variables including shell-local variables(including shell functions)</span></span><br><span class="line">env | less <span class="comment"># check the variables except shell-local variables(including shell functions)</span></span><br></pre></td></tr></table></figure><h2 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h2><p>Here is a cheetsheet about parameters of shell.</p><table><thead><tr><th>Parameters</th><th>Comments</th></tr></thead><tbody><tr><td>$0</td><td>script name</td></tr><tr><td>$&lt;n&gt;</td><td>the &lt;n&gt;th parameter</td></tr><tr><td>$#</td><td>nums of parameters</td></tr><tr><td>$@</td><td>All parameters, could be a list</td></tr><tr><td>$*</td><td>All parameters, but behave as a whole</td></tr><tr><td>$$</td><td>PID of the current progress</td></tr><tr><td>$?</td><td>return of last cmd</td></tr><tr><td>$!</td><td>PID of the last background cmd</td></tr></tbody></table><a id="more"></a><h2 id="Expression"><a href="#Expression" class="headerlink" title="Expression"></a>Expression</h2><p>Here is some expression cheatsheet.</p><table><thead><tr><th></th><th>Expression</th><th>Comments</th></tr></thead><tbody><tr><td>Integer</td><td>-eq</td><td>equal to</td></tr><tr><td></td><td>-ne</td><td>not equal to</td></tr><tr><td></td><td>-gt</td><td>greater than</td></tr><tr><td></td><td>-lt</td><td>less than</td></tr><tr><td></td><td>-ge</td><td>greater than or equal to</td></tr><tr><td></td><td>-le</td><td>less than or equal to</td></tr><tr><td>String</td><td>-z “$str1”</td><td>str1 is empty or not</td></tr><tr><td></td><td>-n “$str1”</td><td>str1 is not empty or not</td></tr><tr><td></td><td>“$str1” == “$str2”</td><td>str1 equals to str2 or not</td></tr><tr><td></td><td>“$str1” != “$str2”</td><td>str1 doesn’t equals to str2 or not</td></tr><tr><td></td><td>“$str1” =~ “$str2”</td><td>str1 includes str2 or not</td></tr><tr><td>File</td><td>-f $filename</td><td>is file</td></tr><tr><td></td><td>-e $filename</td><td>does file exist</td></tr><tr><td></td><td>-d $filename</td><td>is directory</td></tr><tr><td></td><td>-s $filename</td><td>is not empty file</td></tr><tr><td></td><td>! -s $filename</td><td>is empty file</td></tr><tr><td>Logical</td><td>-o, ||</td><td>or</td></tr><tr><td></td><td>-a, &amp;&amp;</td><td>and</td></tr></tbody></table><blockquote><p><code>man bash</code></p></blockquote><h1 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h1><p>Here is some  usages of syntax and things.</p><h2 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">IPS=(192.168.1.1 192.168.1.2 192.168.1.3)</span><br><span class="line"><span class="comment"># all values:</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;IPS[@]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nums</span></span><br><span class="line"><span class="variable">$&#123;#IPS[@]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The first</span></span><br><span class="line"><span class="variable">$&#123;#IPS[0]&#125;</span></span><br><span class="line"><span class="variable">$IPS</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># get subscript</span></span><br><span class="line">a=(<span class="string">&#x27;a&#x27;</span> <span class="string">&#x27;b&#x27;</span> <span class="string">&#x27;c&#x27;</span>): <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;!a[@]&#125;</span>; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>; <span class="keyword">done</span></span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="Branch"><a href="#Branch" class="headerlink" title="Branch"></a>Branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ ]; <span class="keyword">then</span></span><br><span class="line">:</span><br><span class="line"><span class="keyword">elif</span>; <span class="keyword">then</span></span><br><span class="line">:</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">:</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># How to Judge if the curren user is  root</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$UID</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">name=<span class="string">&quot;aa&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$name</span> <span class="keyword">in</span>    </span><br><span class="line">    <span class="string">&quot;aa&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;name is <span class="variable">$name</span>&quot;</span>    </span><br><span class="line">    ;;    </span><br><span class="line">    <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;name is empty&quot;</span>    </span><br><span class="line">    ;;    </span><br><span class="line">    <span class="string">&quot;bb&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;name is <span class="variable">$name</span>&quot;</span>    </span><br><span class="line">    ;;    </span><br><span class="line">    *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;other name&quot;</span>    </span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">esac</span> <span class="comment"># reverse case</span></span><br></pre></td></tr></table></figure><h2 id="Loop"><a href="#Loop" class="headerlink" title="Loop"></a>Loop</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> `ls *.txt` <span class="comment"># $(ls *.txt)</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    mv <span class="variable">$filename</span> $(basename <span class="variable">$filename</span> .txt).sh</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((;;))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">:</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [<span class="built_in">test</span>]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">:</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> : </span><br><span class="line"></span><br><span class="line">until <span class="comment"># Contrary to while</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="built_in">continue</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> /etc/profile.d/*.sh</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ -x <span class="variable">$name</span> ] ; <span class="keyword">then</span></span><br><span class="line">        . <span class="variable">$name</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> &#123;1..50&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    context</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># C style:</span></span><br><span class="line"><span class="keyword">for</span> ((i=0 ; i&lt;10; i++));<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$@</span>; <span class="keyword">do</span></span><br><span class="line">    context</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;5..15..3&#125;;<span class="keyword">do</span> <span class="comment"># From 5 to 15 , print 5 + 3n</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$input</span>&quot;</span> != <span class="string">&quot;yes&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">&quot;Please input yest to exit this loop:&quot;</span> input</span><br><span class="line">    sleep 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> `seq 1 5`; <span class="keyword">do</span> <span class="comment"># or `seq 10`</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$x</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ((a&lt;=LIMIT)); <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> &quot;</span></span><br><span class="line">    ((a += 1))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># shift to handle the parameters</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$#</span> -ge 1 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;help&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">shift</span> <span class="comment"># shift 1 parameter to the left until there is only one</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span>=$(func)</span><br><span class="line"><span class="built_in">return</span>=$?</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Special-symbols"><a href="#Special-symbols" class="headerlink" title="Special symbols"></a>Special symbols</h2><p>Here is just some special symbols.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">\   <span class="comment"># reverse</span></span><br><span class="line">;   <span class="comment"># ls;cat a.txt </span></span><br><span class="line"><span class="string">&#x27;&#x27;</span>  <span class="comment"># Does not parse variable, likes &#x27;$var&#x27;</span></span><br><span class="line"><span class="string">&quot;&quot;</span>  <span class="comment"># Parsing the variable and replace with its value </span></span><br><span class="line">` ` ,$() <span class="comment">#  execute command, but &#x27;$()&#x27; is better</span></span><br><span class="line">\n\r\t</span><br><span class="line">\$\&quot; \\</span><br><span class="line">()</span><br><span class="line">(())</span><br><span class="line"><span class="variable">$&#123;&#125;</span> <span class="comment"># for variable</span></span><br><span class="line"></span><br><span class="line">[] <span class="comment"># test or array</span></span><br><span class="line">[[]] <span class="comment"># test expression </span></span><br><span class="line"></span><br><span class="line">&lt;, &gt; </span><br><span class="line">&#123;&#125;</span><br><span class="line">&#123;0..9&#125;</span><br><span class="line">+-*/%</span><br><span class="line">&gt;&lt;=</span><br><span class="line">&amp;&amp; || !</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">: <span class="comment"># empty command</span></span><br><span class="line">.</span><br><span class="line">~ <span class="comment"># home</span></span><br><span class="line">,</span><br><span class="line">*</span><br><span class="line">*?</span><br><span class="line">$</span><br><span class="line">|</span><br><span class="line">&amp;</span><br><span class="line">_</span><br><span class="line">`<span class="string">&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Operation"><a href="#Operation" class="headerlink" title="Operation"></a>Operation</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># =, +, -, *, /, **, %</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> <span class="string">&quot;var=value&quot;</span> </span><br><span class="line"><span class="comment"># equals to</span></span><br><span class="line">(( var=value ))</span><br><span class="line">(( a++ ))</span><br><span class="line">$(( <span class="number">4</span> + <span class="number">5</span> ))</span><br><span class="line">num=`expr 4 + 5`</span><br></pre></td></tr></table></figure><h2 id="Exit"><a href="#Exit" class="headerlink" title="Exit"></a>Exit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># If &#x27;exit 0&#x27; exists in func, this won&#x27;t quit the current script.</span></span><br><span class="line"><span class="built_in">exit</span> 0 <span class="comment"># Nomal exit; Non-zero abnormal exit.</span></span><br><span class="line"><span class="built_in">exit</span> <span class="comment"># Return the return value of the previous command</span></span><br><span class="line">$? <span class="comment"># Get the return value</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span> 0  <span class="comment"># recomanded in function</span></span><br></pre></td></tr></table></figure><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test equals to []</span></span><br><span class="line"><span class="built_in">test</span> -f file </span><br><span class="line"><span class="comment"># equals to</span></span><br><span class="line">[ -e file]</span><br><span class="line"></span><br><span class="line">[ 5 -gt 4 ]</span><br></pre></td></tr></table></figure><h2 id="Variable"><a href="#Variable" class="headerlink" title="Variable"></a>Variable</h2><p>Here is four ways to use variable better.</p><ul><li>Prefer local variables in function</li><li>Make global variables readonly</li><li>Always refferred a variable with “${var}”</li><li>Env for ${ALL_CAPS}, local variables for ${lower_case}</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># local var </span></span><br><span class="line"><span class="function"><span class="title">checkpid</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> i</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;$*&quot;</span>; <span class="keyword">do</span></span><br><span class="line">[ -d <span class="string">&quot;/proc/<span class="variable">$i</span>&quot;</span> ] &amp;&amp; <span class="built_in">return</span> 0 <span class="comment"># return is recommanded in function, exit 0 works well too</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> var</span><br><span class="line"><span class="built_in">unset</span> var</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># readonly for the static variable that could be modified</span></span><br><span class="line"><span class="built_in">readonly</span> MY_PATH=/home/lee/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># If $1 is empty, take init_value as the initial value</span></span><br><span class="line">name=<span class="variable">$&#123;1:-init_value&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Singnal-and-trap"><a href="#Singnal-and-trap" class="headerlink" title="Singnal and trap"></a>Singnal and trap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kill -l to list all signals</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="comment"># capture signal 15 (default) and send &#x27;echo signal 15&#x27;</span></span><br><span class="line">    <span class="built_in">trap</span> <span class="string">&quot;echo signal 15&quot;</span> 15    </span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="comment"># capture signal 2 and send &#x27;echo signal C-C&#x27;</span></span><br><span class="line">    <span class="built_in">trap</span> <span class="string">&quot;echo signal C-C&quot;</span> 2    </span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span> $$ <span class="comment"># print the current PID</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="regex"><a href="#regex" class="headerlink" title="regex"></a>regex</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Meta character:</span></span><br><span class="line"><span class="string">&#x27;.&#x27;</span> - Single char except linebreak</span><br><span class="line"><span class="string">&#x27;*&#x27;</span> - The char before it appears any <span class="built_in">times</span></span><br><span class="line"><span class="string">&#x27;[]&#x27;</span> - Any char <span class="keyword">in</span> []</span><br><span class="line"><span class="string">&#x27;^&#x27;</span> - Start of line</span><br><span class="line"><span class="string">&#x27;$&#x27;</span> - End of line</span><br><span class="line"><span class="string">&#x27;\&#x27;</span> - Reverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extended Meta character:</span></span><br><span class="line"><span class="string">&#x27;+&#x27;</span> - The expr(char) before it appeard more than one <span class="built_in">times</span></span><br><span class="line"><span class="string">&#x27;?&#x27;</span> - The expr before it appeard 0 or 1 time</span><br><span class="line"><span class="string">&#x27;|&#x27;</span> - or</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`find -regex pattern`</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&quot;s/oldstring/newstring/g&quot;</span> `grep oldstring <span class="built_in">test</span>/ -rl`</span><br><span class="line">grep <span class="string">&#x27;^lee&#x27;</span>  <span class="comment"># start with lee</span></span><br><span class="line">grep <span class="string">&#x27;bash$&#x27;</span> /etc/passwd <span class="comment"># end with bash</span></span><br><span class="line">grep <span class="string">&#x27;^root|bash$&#x27;</span> passwd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">touch /tm/&#123;1..9&#125;.txt </span><br><span class="line"></span><br><span class="line">find *txt -<span class="built_in">exec</span> rm -v &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cut with space and get the first string</span></span><br><span class="line">grep &lt;pattern&gt; &lt;path&gt; | cut -d <span class="string">&quot; &quot;</span> -f 1</span><br><span class="line"></span><br><span class="line">cut -d <span class="string">&quot;:&quot;</span> -f7 /etc/passwd | uniq -c <span class="comment"># count shells</span></span><br><span class="line">cut -d <span class="string">&quot;:&quot;</span> -f7 /etc/passwd | sort | uniq -c | sort -r</span><br></pre></td></tr></table></figure><h2 id="IO"><a href="#IO" class="headerlink" title="IO"></a>IO</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &lt; input-file &gt; output-file<span class="comment"># rewrite</span></span><br><span class="line"><span class="built_in">command</span> &gt;&gt; output-file <span class="comment"># appending</span></span><br></pre></td></tr></table></figure><h2 id="‘-’-event-designators"><a href="#‘-’-event-designators" class="headerlink" title="‘!’ event designators"></a>‘!’ event designators</h2><p>When the letter that follows is not space, line break, enter, = , (, it means substitution, likes the pointer of c language. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># like the pointer of c language, $&#123;!C&#125; = &quot;Hello&quot;</span></span><br><span class="line">B=<span class="string">&quot;Hello&quot;</span>;C=<span class="string">&quot;B&quot;</span>;value=<span class="variable">$&#123;!C&#125;</span>;<span class="built_in">echo</span> result: <span class="variable">$value</span></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">B=<span class="string">&quot;Hello&quot;</span>;C=B;value=<span class="variable">$&#123;!C&#125;</span>;<span class="built_in">echo</span> result: <span class="variable">$value</span></span><br><span class="line"></span><br><span class="line">!n <span class="comment"># the &lt;n&gt;th command of &#x27;history&#x27;</span></span><br><span class="line">!-n <span class="comment"># the &lt;n&gt;th command from the bottom of &#x27;history&#x27;</span></span><br><span class="line">!!  <span class="comment"># equals to !-1, a alias, &#x27;sudo !!, !!&lt;missing char&gt;&#x27;</span></span><br><span class="line">!$ <span class="comment"># parameters of last command</span></span><br><span class="line">!str  <span class="comment"># the latest command that starts with str</span></span><br><span class="line">!?str <span class="comment"># the latest command that includes str</span></span><br></pre></td></tr></table></figure><h1 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h1><p>Pay attention to accumulation and form your own set of templates.</p><ol><li>function</li><li>source script</li><li><code>type</code> to understand function</li><li>$() to get the output of command and function.</li><li>function and ‘here documents’ to quote.</li><li>bash -x</li><li>msg function to print log</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">msg ()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MSG:<span class="subst">$(date)</span>: $*&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cmd &lt;&lt; delimiter</span><br><span class="line">Here Document</span><br><span class="line">delimiter</span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;&lt;- to remove tab at start of lines</span></span><br><span class="line">cmd &lt;&lt;- delimiter</span><br><span class="line">Here Document</span><br><span class="line">delimiter</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; EOF &gt; output.sh</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;This is output&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$1</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; <span class="string">&quot;EOF&quot;</span> &gt; output.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is output&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span> <span class="comment"># keep output &#x27;$1&#x27;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h2><p>Here is three ways to comment.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. </span></span><br><span class="line">\<span class="comment">#</span></span><br><span class="line"><span class="comment"># 2. </span></span><br><span class="line">:<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"><span class="comment"># 3. </span></span><br><span class="line">: &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">cat &gt;&gt; EOF &gt; /dev/null</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="Encapsulation"><a href="#Encapsulation" class="headerlink" title="Encapsulation"></a>Encapsulation</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">error</span></span>() &#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;<span class="variable">$&#123;red&#125;</span>!!! %s<span class="variable">$&#123;reset&#125;</span>\\n&quot;</span> <span class="string">&quot;<span class="variable">$&#123;*&#125;</span>&quot;</span> 1&gt;&amp;2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &lt;&lt;HELPMSG</span><br><span class="line">usage <span class="variable">$0</span> [OPTION]... [ARGUMENT]...</span><br><span class="line"></span><br><span class="line">HELPMSG</span><br><span class="line"></span><br><span class="line"><span class="comment"># Single-quote heredocs leading tag to prevent interpolation of text between them.</span></span><br><span class="line">cat &lt;&lt;<span class="string">&#x27;MSG&#x27;</span></span><br><span class="line"></span><br><span class="line">MSG</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">help_wanted</span></span>() &#123;</span><br><span class="line">[ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ge <span class="string">&quot;1&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&#x27;-h&#x27;</span> ] || [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&#x27;--help&#x27;</span> ] || [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;-?&quot;</span> ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># function</span></span><br><span class="line"><span class="comment"># one function for one thing</span></span><br><span class="line"><span class="keyword">if</span> help_wanted <span class="string">&quot;<span class="variable">$@</span>&quot;</span>; <span class="keyword">then</span></span><br><span class="line">    usage</span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>Here is some better ways to write shell script.</p><ol><li>Prefer local variables in function</li><li>Make global variables readonly</li><li>Always refferred a variable with “${var}”</li><li>Env for ${ALL_CAPS}, local variables for ${lower_case}</li><li>Printf is preferable to echo.</li><li>And some others as follows.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use = instead of == for String Comparisons</span></span><br><span class="line">value1=<span class="string">&quot;tecmint.com&quot;</span></span><br><span class="line">value2=<span class="string">&quot;fossmint.com&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$value1</span>&quot;</span> = <span class="string">&quot;<span class="variable">$value2</span>&quot;</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use Double Quotes to Reference Variables</span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$names</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span> <span class="comment"># execute arguments as a shell command(multiple commands)</span></span><br><span class="line"></span><br><span class="line">cp | mv test.sh&#123;,.bk&#125;</span><br><span class="line">cp | mv test.sh.bk&#123;,&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> &#123;file1,file2&#125;\ :&#123;\ A,<span class="string">&quot; B&quot;</span>,<span class="string">&#x27; C&#x27;</span>&#125;</span><br><span class="line">file1 : A file1 : B file1 : C file2 : A file2 : B file2 : C</span><br><span class="line"><span class="comment"># Space needs to appear with \, &quot;, &#x27;.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`<span class="built_in">set</span> -e` <span class="comment"># Add at the beginning, exit if any error occurs</span></span><br><span class="line"><span class="comment"># Despite error, still continue to execute some commands </span></span><br><span class="line">&lt;cmd&gt; || <span class="literal">true</span></span><br><span class="line"><span class="comment"># or </span></span><br><span class="line"><span class="built_in">set</span> +e ; &lt;cmd&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add at the beginning, print the excute process</span></span><br><span class="line"><span class="comment"># bash -x myscript.sh</span></span><br><span class="line"><span class="comment"># If you only want debug output in a specific section of the script, put set -x before and set +x after the section.</span></span><br><span class="line"><span class="built_in">set</span> -x </span><br><span class="line"><span class="comment"># Display undefined variable</span></span><br><span class="line"><span class="built_in">set</span> -u </span><br><span class="line"><span class="comment"># don&#x27;t hide errors within pipes, stop the whole pipes when anyone fails</span></span><br><span class="line"><span class="built_in">set</span> -o pipefail </span><br><span class="line"><span class="comment"># abort on nonzero exitstatus</span></span><br><span class="line"><span class="built_in">set</span> -o errexit   </span><br><span class="line"><span class="comment"># abort on unbound variable</span></span><br><span class="line"><span class="built_in">set</span> -o nounset   </span><br><span class="line"></span><br><span class="line">nohup foo | cat &amp; <span class="comment"># if foo must be started from a terminal and run in the background.</span></span><br></pre></td></tr></table></figure><h2 id="shellcheck"><a href="#shellcheck" class="headerlink" title="shellcheck"></a>shellcheck</h2><p>Always check for syntax errors by running the script with <code>bash -n myscript.sh</code>, or use <code>shellcheck</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install shellcheck</span><br><span class="line"></span><br><span class="line">shellcheck xxx.sh</span><br></pre></td></tr></table></figure><h2 id="whiptail"><a href="#whiptail" class="headerlink" title="whiptail"></a>whiptail</h2><p>Display dialog boxes from shell scripts.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">whiptail --yesno <span class="string">&quot;would you like to continue?&quot;</span> 10 40</span><br><span class="line">RESULT=$?</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$RESULT</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;you clicked yes&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;you clicked no&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="Suggestions"><a href="#Suggestions" class="headerlink" title="Suggestions"></a>Suggestions</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Avoid:</span></span><br><span class="line">rm -rf -- <span class="string">&quot;<span class="variable">$&#123;dir&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Good:</span></span><br><span class="line">rm --recursive --force -- <span class="string">&quot;<span class="variable">$&#123;dir&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Don?t use:</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$&#123;foo&#125;</span>&quot;</span></span><br><span class="line">  [...]</span><br><span class="line">  <span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment"># but</span></span><br><span class="line"></span><br><span class="line">  (</span><br><span class="line">    <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$&#123;foo&#125;</span>&quot;</span></span><br><span class="line">    [...]</span><br><span class="line">  )</span><br><span class="line"><span class="comment"># pushd and popd may also be useful:</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">pushd</span> <span class="string">&quot;<span class="variable">$&#123;foo&#125;</span>&quot;</span></span><br><span class="line">  [...]</span><br><span class="line">  <span class="built_in">popd</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Consolidating the foundation of Linux, useful shell script</title>
      <link href="2021/04/29/Linux/Consolidating-the-foundation-of-Linux-useful-shell-script/"/>
      <url>2021/04/29/Linux/Consolidating-the-foundation-of-Linux-useful-shell-script/</url>
      
        <content type="html"><![CDATA[<h2 id="Last-cmd-is-successfull-or-not"><a href="#Last-cmd-is-successfull-or-not" class="headerlink" title="Last cmd is successfull or not"></a>Last cmd is successfull or not</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> last_cmd_status()</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ] <span class="comment"># Space at out of &#x27;[]&#x27;</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;success&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ $? -eq 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;failed,code is 1&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;other code&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="The-most-used-command-in-history-so-far"><a href="#The-most-used-command-in-history-so-far" class="headerlink" title="The most-used command in history so far"></a>The most-used command in history so far</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">history</span> | awk <span class="string">&#x27;BEGIN &#123;FS=&quot;[ \t]+|\\|&quot;&#125; &#123;print $3&#125;&#x27;</span> | sort | uniq -c | sort -nr | head</span><br><span class="line"></span><br><span class="line">find -iname <span class="string">&quot;xxx[abcd]*&quot;</span> -<span class="built_in">type</span> f -mtime +1  <span class="comment"># (File&#x27;s data was last modified n*24 hours ago.)</span></span><br></pre></td></tr></table></figure><h2 id="Receive-input-from-user"><a href="#Receive-input-from-user" class="headerlink" title="Receive input from user"></a>Receive input from user</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Enter Something:&quot;</span></span><br><span class="line"><span class="built_in">read</span> something</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;You Entered: <span class="variable">$something</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="test-sh-X-44-Y-100"><a href="#test-sh-X-44-Y-100" class="headerlink" title="./test.sh X=44 Y=100"></a>./test.sh X=44 Y=100</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> arg <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    index=$(<span class="built_in">echo</span> <span class="variable">$arg</span> | cut -f1 -d=) <span class="comment"># cut X,Y</span></span><br><span class="line">    val=$(<span class="built_in">echo</span> <span class="variable">$arg</span> | cut -f2 -d=) <span class="comment"># cut value behind &#x27;=&#x27;</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$index</span> <span class="keyword">in</span></span><br><span class="line">        X) x=<span class="variable">$val</span>;;</span><br><span class="line">        Y) y=<span class="variable">$val</span>;;</span><br><span class="line">        *)</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">((result=x+y))</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;X+Y=<span class="variable">$result</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="concatenation-strings"><a href="#concatenation-strings" class="headerlink" title="concatenation strings"></a>concatenation strings</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">string1=<span class="string">&quot;Ubuntu&quot;</span></span><br><span class="line">string2=<span class="string">&quot;Pit&quot;</span></span><br><span class="line">string=<span class="variable">$string1</span><span class="variable">$string2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$string</span> is a great resource for Linux beginners.&quot;</span></span><br><span class="line"><span class="comment"># &quot;UbuntuPit is a great resource for Linux beginners.&quot; to the screen.</span></span><br></pre></td></tr></table></figure><h2 id="Slicing-Strings"><a href="#Slicing-Strings" class="headerlink" title="Slicing Strings"></a>Slicing Strings</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">Str=<span class="string">&quot;Learn Bash Commands from UbuntuPit&quot;</span></span><br><span class="line">subStr=<span class="variable">$&#123;Str:0:20&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$subStr</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;VAR_NAME:S:L&#125;</span>. Here, S denotes starting position and L indicates the length.</span><br></pre></td></tr></table></figure><h2 id="Extracting-Substrings-Using-Cut"><a href="#Extracting-Substrings-Using-Cut" class="headerlink" title="Extracting Substrings Using Cut"></a>Extracting Substrings Using Cut</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">Str=<span class="string">&quot;Learn Bash Commands from UbuntuPit&quot;</span></span><br><span class="line"><span class="comment">#subStr=$&#123;Str:0:20&#125;</span></span><br><span class="line"></span><br><span class="line">subStr=$(<span class="built_in">echo</span> <span class="variable">$Str</span>| cut -d <span class="string">&#x27; &#x27;</span> -f 1-3)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$subStr</span></span><br></pre></td></tr></table></figure><h2 id="Function-with-return"><a href="#Function-with-return" class="headerlink" title="Function with return"></a>Function with return</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">Greet</span></span>() &#123;</span><br><span class="line">    str=<span class="string">&quot;Hello <span class="variable">$name</span>, what brings you to UbuntuPit.com?&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$str</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-&gt; what&#x27;s your name?&quot;</span></span><br><span class="line"><span class="built_in">read</span> name</span><br><span class="line"></span><br><span class="line">val=$(Greet)</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;-&gt; <span class="variable">$val</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Create-Directories"><a href="#Create-Directories" class="headerlink" title="Create Directories"></a>Create Directories</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Enter directory name -&gt;&quot;</span></span><br><span class="line"><span class="built_in">read</span> newdir</span><br><span class="line">cmd=<span class="string">&quot;mkdir <span class="variable">$newdir</span>&quot;</span></span><br><span class="line"><span class="built_in">eval</span> <span class="variable">$cmd</span></span><br><span class="line"></span><br><span class="line">You can also pass the <span class="built_in">command</span> to execute inside backticks(<span class="string">&quot;) as shown below.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`mkdir <span class="variable">$newdir</span>`</span></span><br></pre></td></tr></table></figure><h2 id="Create-a-Directory-after-Confirming-Existence"><a href="#Create-a-Directory-after-Confirming-Existence" class="headerlink" title="Create a Directory after Confirming Existence"></a>Create a Directory after Confirming Existence</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Enter directory name -&gt;&quot;</span></span><br><span class="line"><span class="built_in">read</span> dir</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$dir</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Directory exists&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">`mkdir <span class="variable">$dir</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Directory created&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="Reading-files"><a href="#Reading-files" class="headerlink" title="Reading files"></a>Reading files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">file=<span class="string">&#x27;editors.txt&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line"><span class="keyword">done</span> &lt; <span class="variable">$file</span></span><br></pre></td></tr></table></figure><h2 id="Deleting-files"><a href="#Deleting-files" class="headerlink" title="Deleting files"></a>Deleting files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Enter filename -&gt;&quot;</span></span><br><span class="line"><span class="built_in">read</span> name</span><br><span class="line">rm -i <span class="variable">$name</span></span><br></pre></td></tr></table></figure><h2 id="Appending-to-Files"><a href="#Appending-to-Files" class="headerlink" title="Appending to Files"></a>Appending to Files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Before appending the file&quot;</span></span><br><span class="line">cat editors.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;6. NotePad++&quot;</span> &gt;&gt; editors.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;After appending the file&quot;</span></span><br><span class="line">cat editors.txt</span><br></pre></td></tr></table></figure><h2 id="Test-File-Existence"><a href="#Test-File-Existence" class="headerlink" title="Test File Existence"></a>Test File Existence</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">filename=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$filename</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;File exists&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;File does not exist&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="Send-Mails-from-Shell-Scripts"><a href="#Send-Mails-from-Shell-Scripts" class="headerlink" title="Send Mails from Shell Scripts"></a>Send Mails from Shell Scripts</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">recipient=<span class="string">&quot;admin@example.com&quot;</span></span><br><span class="line">subject=<span class="string">&quot;Greetings&quot;</span></span><br><span class="line">message=<span class="string">&quot;Welcome to UbuntuPit&quot;</span></span><br><span class="line">`mail -s <span class="variable">$subject</span> <span class="variable">$recipient</span> &lt;&lt;&lt; <span class="variable">$message</span>`</span><br></pre></td></tr></table></figure><h2 id="Parsing-Date-and-Time"><a href="#Parsing-Date-and-Time" class="headerlink" title="Parsing Date and Time"></a>Parsing Date and Time</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">year=`date +%Y`</span><br><span class="line">month=`date +%m`</span><br><span class="line">day=`date +%d`</span><br><span class="line">hour=`date +%H`</span><br><span class="line">minute=`date +%M`</span><br><span class="line">second=`date +%S`</span><br><span class="line"><span class="built_in">echo</span> `date`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Current Date is: <span class="variable">$day</span>-<span class="variable">$month</span>-<span class="variable">$year</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Current Time is: <span class="variable">$hour</span>:<span class="variable">$minute</span>:<span class="variable">$second</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Sleep"><a href="#Sleep" class="headerlink" title="Sleep"></a>Sleep</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;How long to wait?&quot;</span></span><br><span class="line"><span class="built_in">read</span> time</span><br><span class="line">sleep <span class="variable">$time</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Waited for <span class="variable">$time</span> seconds!&quot;</span></span><br></pre></td></tr></table></figure><h2 id="The-Wait-Command"><a href="#The-Wait-Command" class="headerlink" title="The Wait Command"></a>The Wait Command</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Testing wait command&quot;</span></span><br><span class="line">sleep 5 &amp;</span><br><span class="line">pid=$!</span><br><span class="line"><span class="built_in">kill</span> <span class="variable">$pid</span></span><br><span class="line"><span class="built_in">wait</span> <span class="variable">$pid</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$pid</span> was terminated.</span><br></pre></td></tr></table></figure><h2 id="Displaying-the-Last-Updated-File"><a href="#Displaying-the-Last-Updated-File" class="headerlink" title="Displaying the Last Updated File"></a>Displaying the Last Updated File</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">ls -lrRt | grep ^- | awk <span class="string">&#x27;END&#123;print $NF&#125;&#x27;</span></span><br><span class="line"><span class="comment"># &quot;^-&quot; : &#x27;-&#x27; is start of lines, so means files.</span></span><br></pre></td></tr></table></figure><h2 id="Adding-Batch-Extensions"><a href="#Adding-Batch-Extensions" class="headerlink" title="Adding Batch Extensions"></a>Adding Batch Extensions</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">dir=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `ls <span class="variable">$1</span>/*`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    mv <span class="variable">$file</span> <span class="variable">$file</span>.UP</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="Print-Number-of-Files-or-Directories"><a href="#Print-Number-of-Files-or-Directories" class="headerlink" title="Print Number of Files or Directories"></a>Print Number of Files or Directories</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$@</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Files found: <span class="subst">$(find <span class="string">&quot;<span class="variable">$@</span>&quot;</span> -type f | wc -l)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Folders found: <span class="subst">$(find <span class="string">&quot;<span class="variable">$@</span>&quot;</span> -type d | wc -l)</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[ERROR] Please retry with another folder.&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="Cleaning-Log-Files"><a href="#Cleaning-Log-Files" class="headerlink" title="Cleaning Log Files"></a>Cleaning Log Files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">LOG_DIR=/var/<span class="built_in">log</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$LOG_DIR</span></span><br><span class="line"></span><br><span class="line">cat /dev/null &gt; messages <span class="comment"># file in /var/log</span></span><br><span class="line">cat /dev/null &gt; wtmp</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Logs cleaned up.&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Backup-Script-Using-Bash"><a href="#Backup-Script-Using-Bash" class="headerlink" title="Backup Script Using Bash"></a>Backup Script Using Bash</h2><p>backup the files which were modified in 24 hours.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">BACKUPFILE=backup-$(date +%m-%d-%Y)</span><br><span class="line">archive=<span class="variable">$&#123;1:-<span class="variable">$BACKUPFILE</span>&#125;</span></span><br><span class="line"></span><br><span class="line">find . -mtime -1 -<span class="built_in">type</span> f -print0 | xargs -0 tar rvf <span class="string">&quot;<span class="variable">$archive</span>.tar&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Directory <span class="variable">$PWD</span> backed up in archive file \&quot;<span class="variable">$archive</span>.tar.gz\&quot;.&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h2 id="Check-Whether-You’re-Root"><a href="#Check-Whether-You’re-Root" class="headerlink" title="Check Whether You’re Root"></a>Check Whether You’re Root</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ROOT_UID=0</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$UID</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$ROOT_UID</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;You are root.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;You are not root&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h2 id="Removing-Duplicate-Lines-from-Files"><a href="#Removing-Duplicate-Lines-from-Files" class="headerlink" title="Removing Duplicate Lines from Files"></a>Removing Duplicate Lines from Files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Enter Filename-&gt; &quot;</span></span><br><span class="line"><span class="built_in">read</span> filename</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$filename</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">sort <span class="variable">$filename</span> | uniq | tee sorted.txt</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;No <span class="variable">$filename</span> in <span class="variable">$pwd</span>...try again&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"><span class="comment"># The above script goes line by line through your file and removes any duplicative line. It then places the new content into a new file and keeps the original file intact.</span></span><br></pre></td></tr></table></figure><h2 id="System-Maintenance"><a href="#System-Maintenance" class="headerlink" title="System Maintenance"></a>System Maintenance</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n<span class="subst">$(date <span class="string">&quot;+%d-%m-%Y --- %T&quot;</span>)</span> --- Starting work\n&quot;</span></span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get upgrade</span><br><span class="line"></span><br><span class="line"><span class="comment"># upgrade ubuntu</span></span><br><span class="line">apt list --upgradable</span><br><span class="line">sudo apt-get dist-upgrade</span><br><span class="line"><span class="comment"># Official recommendation</span></span><br><span class="line">sudo do-release-upgrade <span class="comment"># -d</span></span><br><span class="line"></span><br><span class="line">apt-get -y autoremove</span><br><span class="line">apt-get autoclean</span><br><span class="line"><span class="comment"># Clean all</span></span><br><span class="line">sudo apt-get clean</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dpkg --get-selections |grep linux</span><br><span class="line">uname -r</span><br><span class="line">sudo apt-get remove linux-image-xxxx</span><br><span class="line"></span><br><span class="line">sudo apt-get remove --purge <span class="variable">$name</span>  </span><br><span class="line">sudo apt-get autoremove --purge <span class="variable">$name</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dpkg --get-selections | grep <span class="string">&#x27;name&#x27;</span></span><br><span class="line"></span><br><span class="line">sudo apt-get purge</span><br><span class="line"></span><br><span class="line"><span class="comment"># Clean up residual data</span></span><br><span class="line">dpkg -l |grep ^rc|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> |sudo xargs dpkg -P </span><br><span class="line"></span><br><span class="line">uname -r</span><br><span class="line">apt-cache policy linux-image-*</span><br><span class="line">dpkg --list | grep linux-image</span><br><span class="line">sudo apt install linux-image-5.4.0-26-generic </span><br><span class="line">sudo apt-get install linux-headers-5.4.0-26-generic</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n<span class="subst">$(date <span class="string">&quot;+%T&quot;</span>)</span> \t Script Terminated&quot;</span></span><br></pre></td></tr></table></figure><h2 id="checkpid"><a href="#checkpid" class="headerlink" title="checkpid"></a>checkpid</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">checkpid</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> i</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;$*&quot;</span>; <span class="keyword">do</span></span><br><span class="line">[ -d <span class="string">&quot;/proc/<span class="variable">$i</span>&quot;</span> ] &amp;&amp; <span class="built_in">return</span> 0 </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Jump into Tmux + Terminal</title>
      <link href="2021/04/29/Linux/Jump-into-tmux/"/>
      <url>2021/04/29/Linux/Jump-into-tmux/</url>
      
        <content type="html"><![CDATA[<p>之前为了让终端炫酷好用，配置了 <code>Terminator + Oh My ZSH + autosuggestions + highlighting + Agnoster theme + powerline fonts + solarized colors</code>，可是终端的反应速度受到了影响，移植性也不高，最主要的是对于我来说，<code>Terminator</code> 不够 <code>Terminal + Tmux</code> 酷，所以最近决定切回 <code>Terminal + Tmux </code>。</p><p><code>Terminal</code> 是 <code>Ubuntu</code> 自带的终端，就不做介绍了。今天主要聊聊<code>Tmux</code> 的基本用法，做一个备忘录。 <code>Tmux</code> 除了分屏功能外，还有一个功能我很喜欢，即 <code>persistent</code>，也就是运行在 <code>Tmux</code> 中的程序在其断开前会一直保持运行状态。譬如：远程登录服务器，通过 <code>Tmux</code> 运行程序，即使本地登录客户端断开，程序也会保持运行，除非我们在服务器端退出 <code>Tmux</code> 或者重启服务器。</p><a id="more"></a><p><code>Tmux</code> 中的所有命令在执行前都需要一个前缀， 默认为 <code>C-b</code>。</p><blockquote><p><code>C-b</code> 表示 <code>Ctrl + b</code>，如下雷同，<code>C</code> 即代表 <code>Ctrl</code> 建。</p></blockquote><h1 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tmux</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">tmux new -s session_name</span><br></pre></td></tr></table></figure><h1 id="Stop"><a href="#Stop" class="headerlink" title="Stop"></a>Stop</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Kill server and all sessions</span></span><br><span class="line">tmux kill-server</span><br><span class="line">pkill -f tmux</span><br><span class="line"></span><br><span class="line">tmux kill-session -a <span class="comment"># Close all other sessions</span></span><br><span class="line"></span><br><span class="line">tmux kill-session -t &lt;name&gt; <span class="comment"># Kill the specific session</span></span><br></pre></td></tr></table></figure><h1 id="Manual"><a href="#Manual" class="headerlink" title="Manual"></a>Manual</h1><p>Actually, the following command is all we need to know at the first time:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man tmux</span><br></pre></td></tr></table></figure><h1 id="Commands-Cheat-Sheet"><a href="#Commands-Cheat-Sheet" class="headerlink" title="Commands Cheat Sheet"></a>Commands Cheat Sheet</h1><table><thead><tr><th>#</th><th>Commands</th><th>Comments</th></tr></thead><tbody><tr><td>Session</td><td><code>C-b s</code></td><td>List the sessions</td></tr><tr><td></td><td><code>C-b $</code></td><td>Rename the current session</td></tr><tr><td></td><td><code>C-b ?</code></td><td>Display help page, to get a list of all commands</td></tr><tr><td></td><td><code>C-b d</code></td><td>Detach from the Tmux session, the program running in the Tmux will continue to run</td></tr><tr><td></td><td><code>C-b D</code></td><td>Choose one session to detach</td></tr><tr><td></td><td><code>C-b L</code></td><td>Swicth the attached clinet back to the last session</td></tr><tr><td></td><td><code>tmux ls</code></td><td>To get a list of the currently runnning sessions</td></tr><tr><td></td><td><code>tmux attach[-session] -t name</code></td><td>Re-attach to <name> tmux session</td></tr><tr><td></td><td><code>tmux rename[-session] -t old_name new_name</code></td><td>Rename old_name session to new_name</td></tr><tr><td>Window</td><td><code>C-b c</code></td><td>Create a new window (with shell)</td></tr><tr><td></td><td><code>C-b w</code></td><td>List the windows</td></tr><tr><td></td><td><code>C-b ,</code></td><td>Rename the current window</td></tr><tr><td></td><td><code>C-b p</code></td><td>Switch to the previous window</td></tr><tr><td></td><td><code>C-b n</code></td><td>Switch to the next window</td></tr><tr><td></td><td><code>C-b &lt;number&gt;</code></td><td>Switch to window <number></td></tr><tr><td></td><td><code>C-b !</code></td><td>Break the current pane out to a new window</td></tr><tr><td></td><td><code>C-b f</code></td><td>Promt to search for text in open windows</td></tr><tr><td>Pane</td><td><code>C-b %</code></td><td>Split current pane horizontally into two panes</td></tr><tr><td></td><td><code>C-b &quot;</code></td><td>Split current pane vertically into two panes</td></tr><tr><td></td><td><code>C-b o</code></td><td>Go to the next pane</td></tr><tr><td></td><td><code>C-b ;</code></td><td>Toggle between the current and previous pane</td></tr><tr><td></td><td><code>C-b arrows,HIJK</code></td><td>Move among panes</td></tr><tr><td></td><td><code>C-b z</code></td><td>Make a pane go full screen. Hit C-b z again to shrink it back to its previous size</td></tr><tr><td></td><td><code>C-b &#125;</code></td><td>Swap the position of the current pane with the next</td></tr><tr><td></td><td><code>C-b &#123;</code></td><td>Swap the position of the current pane with the previous</td></tr><tr><td></td><td><code>C-b-arrows</code></td><td>Resize the window</td></tr><tr><td></td><td><code>C-b C-arrows</code></td><td>Resize pane in direction of <arrow key>4</td></tr><tr><td></td><td><code>C-b q</code></td><td>Make tmux briefly flash the number of each pane.</td></tr><tr><td></td><td><code>C-b x</code></td><td>Close the current pane</td></tr><tr><td></td><td><code>C-b [</code>, <code>C-b PgUp</code></td><td>Enter vim editting mode, copy mode</td></tr><tr><td></td><td><code>C-b ]</code></td><td>Paste the most recently copied buffer</td></tr><tr><td></td><td><code>C-b t</code></td><td>Show time in the current pane</td></tr></tbody></table><h1 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tmux configuration</span></span><br><span class="line"><span class="comment"># Ref: https://github.com/hamvocke/dotfiles/tree/master/tmux</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># open new windows in the current path</span></span><br><span class="line"><span class="comment">#bind c new-window -c &quot;#&#123;pane_current_path&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reload config file</span></span><br><span class="line"><span class="built_in">bind</span> r source-file ~/.tmux.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#unbind p</span></span><br><span class="line"><span class="comment">#bind p previous-window</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># shorten command delay</span></span><br><span class="line"><span class="built_in">set</span> -sg escape-time 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># don&#x27;t rename windows automatically</span></span><br><span class="line"><span class="built_in">set</span> -g allow-rename off </span><br><span class="line"></span><br><span class="line"><span class="comment"># mouse control (clickable windows, panes, resizable panes)</span></span><br><span class="line"><span class="built_in">set</span> -g mouse on</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use Alt-arrow keys without prefix key to switch panes</span></span><br><span class="line"><span class="built_in">bind</span> -n M-Left select-pane -L</span><br><span class="line"><span class="built_in">bind</span> -n M-Right select-pane -R</span><br><span class="line"><span class="built_in">bind</span> -n M-Up select-pane -U</span><br><span class="line"><span class="built_in">bind</span> -n M-Down select-pane -D</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable vi mode keys</span></span><br><span class="line">set-window-option -g mode-keys vi</span><br><span class="line"></span><br><span class="line"><span class="comment"># set default terminal mode to 256 colors</span></span><br><span class="line"><span class="built_in">set</span> -g default-terminal <span class="string">&quot;screen-256color&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># present a menu of URLs to open from the visible pane. sweet.</span></span><br><span class="line"><span class="built_in">bind</span> u capture-pane \;\ </span><br><span class="line">    save-buffer /tmp/tmux-buffer \;\ </span><br><span class="line">    split-window -l 10 <span class="string">&quot;urlview /tmp/tmux-buffer&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line"><span class="comment">### DESIGN CHANGES ###</span></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># loud or quiet?</span></span><br><span class="line"><span class="built_in">set</span> -g visual-activity off</span><br><span class="line"><span class="built_in">set</span> -g visual-bell off</span><br><span class="line"><span class="built_in">set</span> -g visual-silence off</span><br><span class="line">setw -g monitor-activity off</span><br><span class="line"><span class="built_in">set</span> -g bell-action none</span><br><span class="line"></span><br><span class="line"><span class="comment">#  modes</span></span><br><span class="line">setw -g clock-mode-colour colour5</span><br><span class="line">setw -g mode-style <span class="string">&#x27;fg=colour1 bg=colour18 bold&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># panes</span></span><br><span class="line"><span class="comment">#set -g pane-border-style &#x27;fg=colour19 bg=colour0&#x27;</span></span><br><span class="line"><span class="comment">#set -g pane-active-border-style &#x27;bg=colour0 fg=colour5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># statusbar</span></span><br><span class="line"><span class="built_in">set</span> -g status-position bottom</span><br><span class="line"><span class="built_in">set</span> -g status-justify left</span><br><span class="line"><span class="built_in">set</span> -g status-style <span class="string">&#x27;bg=colour18 fg=colour4&#x27;</span></span><br><span class="line"><span class="built_in">set</span> -g status-left <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">set</span> -g status-right <span class="string">&#x27;#[fg=colour18,bg=colour4] %d/%m #[fg=colour4,bg=colour18] %H:%M:%S &#x27;</span></span><br><span class="line"><span class="built_in">set</span> -g status-right-length 50</span><br><span class="line"><span class="built_in">set</span> -g status-left-length 20</span><br><span class="line"></span><br><span class="line">setw -g window-status-current-style <span class="string">&#x27;fg=colour1 bg=colour19 bold&#x27;</span></span><br><span class="line">setw -g window-status-current-format <span class="string">&#x27; #I #[fg=colour7]#W#[fg=colour8]#F &#x27;</span></span><br><span class="line"></span><br><span class="line">setw -g window-status-style <span class="string">&#x27;fg=colour1 bg=colour18 dim&#x27;</span></span><br><span class="line">setw -g window-status-format <span class="string">&#x27; #I #[fg=colour250]#W#[fg=colour244]#F &#x27;</span></span><br><span class="line"></span><br><span class="line">setw -g window-status-bell-style <span class="string">&#x27;fg=colour255 bg=colour1 bold&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># messages</span></span><br><span class="line"><span class="built_in">set</span> -g message-style <span class="string">&#x27;fg=colour18 bg=colour4 bold&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Consolidating the foundation of Linux, linux tips</title>
      <link href="2020/11/25/Linux/Consolidating-the-foundation-of-Linux-linux-tips/"/>
      <url>2020/11/25/Linux/Consolidating-the-foundation-of-Linux-linux-tips/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-Tips"><a href="#Linux-Tips" class="headerlink" title="Linux Tips"></a>Linux Tips</h1><p>Record the commands that I use more frequently in the form of a memo, and will continue to increase according to usage in the future.</p><a id="more"></a><table><thead><tr><th>#</th><th>Commands</th><th>Comment</th></tr></thead><tbody><tr><td><strong>Basis:</strong></td><td></td><td></td></tr><tr><td></td><td><code>shopt -s histappend</code></td><td>Sync history in multiple terminal</td></tr><tr><td></td><td><code>shopt -s cdspell</code></td><td>Correct the typos of cd</td></tr><tr><td></td><td><code>export</code>, <code>mount</code>, <code>set</code></td><td>Check the defined value</td></tr><tr><td></td><td><code>&amp;&amp;</code></td><td>run the following command only when the previous is successful</td></tr><tr><td></td><td><code>;</code></td><td>run the following command regardless of success of first one</td></tr><tr><td></td><td><code>which &lt;cmd&gt;</code>,<code>file &lt;file&gt;</code>,<code>command -V &lt;cmd&gt;</code></td><td>Examine executable file</td></tr><tr><td></td><td><code>pushd [-n] &lt;dir&gt;</code>,<code>dirs -l -v</code><br><code>popd [-n]  [+N | -N]</code></td><td>Manage directories with stack</td></tr><tr><td></td><td><code>dmesg -w</code></td><td>Wait for new messages</td></tr><tr><td></td><td><code>less -N +F</code></td><td>view logfiles and number the lines</td></tr><tr><td></td><td><code>ls -ld</code></td><td>list directories themselves, not their contents</td></tr><tr><td></td><td><code>flock -xn &quot;/tmp/f.lock&quot; c &quot;filename.sh&quot;</code></td><td>Lock ‘filename.sh’ with flock</td></tr><tr><td></td><td><code>LANG=C stat file</code></td><td>Display file  status in English</td></tr><tr><td></td><td><code>time &lt;cmd&gt;</code></td><td>run <cmd> and summarize system resource usage of &lt;cmd&gt;</td></tr><tr><td></td><td><code>tac</code></td><td>conatenate and print files in reverse,`cat -n file</td></tr><tr><td></td><td><code>r</code></td><td>repeat the previous cmd</td></tr><tr><td></td><td><code>bash -i script</code></td><td>Make the shell interactive</td></tr><tr><td></td><td><code>shred -u &lt;file&gt;</code></td><td>Overwrite file and remove it, better way to delete than ‘rm -rf file’</td></tr><tr><td></td><td><code>nl</code></td><td>number lines of contents, <code>ls | nl -s &quot;:&quot; -w 1</code></td></tr><tr><td></td><td><code>split &lt;prefix&gt;</code>, <code>cat preifx* &gt; file</code></td><td>split , merge file</td></tr><tr><td></td><td><code>killall</code></td><td>kill processes by name</td></tr><tr><td></td><td><code>fc</code></td><td>fix and execute commands from history in editor</td></tr><tr><td></td><td><code>Ctrl-X-E</code></td><td>execute commands in editor</td></tr><tr><td></td><td><code>touch -t 2104250101 &lt;file&gt;</code></td><td>Change the timestamp of file</td></tr><tr><td></td><td><code>touch -r &lt;file1&gt; &lt;file2&gt;</code></td><td>file1’s times instead of current time</td></tr><tr><td></td><td><code>Ctrl-D</code></td><td>Stop current cmd or bash …</td></tr><tr><td></td><td><code>dd</code></td><td>Convert and copy a file, ‘man dd’</td></tr><tr><td></td><td><code>hexdump, hd -C &lt;binary&gt;</code></td><td>ASCII, decimal, hexadecimal, octal dump</td></tr><tr><td></td><td><code>select-editor</code></td><td>Choose the default editor</td></tr><tr><td></td><td><code>ranger</code></td><td>man ranger, ‘?’ in ranger</td></tr><tr><td></td><td><code>sl -F</code></td><td>A funny command</td></tr><tr><td></td><td><code>apropos</code></td><td>search the manual page names and descriptions,eg:<code>apropos &quot;list directory&quot;</code></td></tr><tr><td></td><td><code>echo &gt; /dev/&lt;udp or tcp&gt;/&lt;server ip&gt;/&lt;port&gt;</code></td><td>Check net</td></tr><tr><td></td><td><code>2&gt;&amp;1</code></td><td>2 means stderr, &amp;1 means stdout</td></tr><tr><td></td><td><code>bind -p</code></td><td>to check the shortcut</td></tr><tr><td></td><td><code>Ctrl - _</code></td><td>undo</td></tr><tr><td></td><td><code>ls -alrRt</code></td><td><code>-r</code>: reverse, <code>-R</code>: Recursive</td></tr><tr><td></td><td><code>cp -ar(R)pv</code></td><td><code>-p</code> keep mode,ownership,timestamps; <code>-r</code> equals <code>-R</code></td></tr><tr><td></td><td><code>tail -nf</code></td><td>Output the last n line appended data as the file grows</td></tr><tr><td></td><td><code>more/less</code></td><td>File perusal filter for crt viewing, <code>less</code> opposite of more</td></tr><tr><td></td><td><code>wc</code></td><td>Print newline, word, and byte couts for each file,<code>-l</code> line</td></tr><tr><td></td><td><code>tar -czf/cjf</code></td><td><code>-j</code> bzip2, .tar.bz2, max compression; <code>-z</code> gzip, tar.gz</td></tr><tr><td></td><td><code>whatis &lt;cmd&gt;</code></td><td>display one-line manual page description</td></tr><tr><td><strong>Move:</strong></td><td><code>Ctrl - t</code></td><td>swap two characters</td></tr><tr><td></td><td><code>!!</code>, <code>!-1</code></td><td>Refer to the previous command</td></tr><tr><td></td><td><code>!*</code> or <code>Alt+.</code></td><td>Refer to the previous parameters</td></tr><tr><td></td><td><code>Ctrl-R</code></td><td>Search command from history, doulbe to search next</td></tr><tr><td></td><td><code>ALT - t</code></td><td>swap two words</td></tr><tr><td></td><td><code>ALT - .</code></td><td>prints last argument from previous command</td></tr><tr><td></td><td><code>Ctrl - x - *</code></td><td>expand glob/star</td></tr><tr><td></td><td><code>Ctrl - arrows</code></td><td>move forward a word</td></tr><tr><td></td><td><code>ALT - f</code></td><td>move forward a word</td></tr><tr><td></td><td><code>ALT - b</code></td><td>move backward a word</td></tr><tr><td></td><td><code>Alt-Backspace</code></td><td>delete forward a word</td></tr><tr><td></td><td><code>Ctrl - x , Ctrl - e</code></td><td>Edit command with editor</td></tr><tr><td></td><td><code>Ctrl - e</code></td><td>move cursor to end</td></tr><tr><td></td><td><code>Ctrl - a</code></td><td>move cursor to start</td></tr><tr><td></td><td><code>Ctrl - P, N, B, F</code></td><td>Move previous, next, backward a char, Forward a char</td></tr><tr><td></td><td><code>Ctrl - xx</code></td><td>move to the opposite end of the line</td></tr><tr><td></td><td><code>Ctrl - u</code></td><td>cuts everything before the cursor</td></tr><tr><td></td><td><code>Ctrl - k</code></td><td>cuts everything after the cursor</td></tr><tr><td></td><td><code>Ctrl - y</code></td><td>pastes from the buffer</td></tr><tr><td></td><td><code>Ctrl-W</code></td><td>cuts one word before the cursor</td></tr><tr><td></td><td><code>Ctrl - L</code></td><td>clears screen</td></tr><tr><td></td><td><code>Ctrl - shift - c/v</code></td><td>copy/paste into terminal</td></tr><tr><td></td><td><code>Ctrl-Insert</code>, <code>Shift-Insert</code></td><td>copy/paste</td></tr><tr><td></td><td><code>Ctrl-Z</code>,<code>fg</code>, <code>bg</code></td><td>Pasue the current process, foregroud/backgroud it</td></tr><tr><td><strong>System:</strong></td><td></td><td></td></tr><tr><td></td><td><code>lscpu</code>, <code>cat /proc/cpuinfo</code></td><td>information about cpu</td></tr><tr><td></td><td><code>ps [-eLf]</code></td><td>Get information about process including threads</td></tr><tr><td></td><td><code>pstree -p, -a</code></td><td>Get information about process with tree</td></tr><tr><td></td><td><code>nice</code>, <code>renice</code></td><td>alter priority of process</td></tr><tr><td></td><td><code>ulimit -a</code></td><td>get and set user limits</td></tr><tr><td></td><td><code>free -m</code>, <code>cat /proc/meminfo</code></td><td>information about memory</td></tr><tr><td></td><td><code>lsblk</code>, <code>cat /proc/partitions</code></td><td>formation harddisk and partition</td></tr><tr><td></td><td><code>df -h</code></td><td>infromation about partition</td></tr><tr><td></td><td><code>mount | column -t</code></td><td>status about mounted partition</td></tr><tr><td></td><td><code>hostname</code></td><td>show or set the hostname</td></tr><tr><td></td><td><code>w</code></td><td>show who is logged on and what they are doing</td></tr><tr><td></td><td><code>id</code></td><td>print user and group IDs</td></tr><tr><td></td><td><code>last</code></td><td>show a listing of last logged in users</td></tr><tr><td></td><td><code>cut -d: -f1 /etc/passwd</code></td><td>show all users</td></tr><tr><td></td><td><code>cut -d: -f1 /etc/group</code></td><td>show all groups</td></tr><tr><td></td><td><code>chkconfig ?list | grep on</code></td><td>show all on system service</td></tr><tr><td></td><td><code>uptime</code></td><td>show operation time,user number,load</td></tr><tr><td></td><td><code>ls</code>, <code>du</code>, <code>ln</code>, <code>rmdir</code>, <code>rm</code>, <code>cp</code>, <code>mv</code>, <code>cat</code>, <code>tail</code>, <code>less</code>, <code>grep</code>, <code>find</code></td><td></td></tr><tr><td></td><td><code>htop</code>, <code>top</code></td><td>display processes, 1 - extend top information</td></tr><tr><td></td><td><code>sudo dpkg --get-selections | grep linux-image</code><br><code>cat /proc/version</code><br><code>grep menuentry /boot/grub/grub.cfg</code></td><td>Kernel version</td></tr><tr><td></td><td><code>apt-cache search package</code></td><td>query the APT cache</td></tr><tr><td></td><td><code>apt update</code></td><td></td></tr><tr><td></td><td><code>uname -a , -r</code><br><code>cat /proc/version</code><br><code>cat /etc/issue</code><br><code>lsb_release -a</code></td><td>print system information</td></tr><tr><td></td><td><code>apt upgrade</code></td><td></td></tr><tr><td></td><td><code>apt autoremove</code></td><td></td></tr><tr><td></td><td><code>apt install update-manager-core</code></td><td></td></tr><tr><td></td><td><code>do-release-upgrade</code></td><td></td></tr><tr><td></td><td><code>flameshot``flameshot gui</code></td><td>Capture screen</td></tr><tr><td></td><td><code>Ctrl + Alt + F1/../F7</code></td><td>Enter or quit terminal</td></tr><tr><td></td><td><code>killall &lt;nautilus&gt;</code></td><td>Kill file manager</td></tr><tr><td></td><td><code>pkill Xorg</code>, <code>restart lightdm</code></td><td>Log out</td></tr><tr><td></td><td><code>$(date &quot;+%Y%m%d-%H%M%S&quot;)</code></td><td>Get the current system time</td></tr><tr><td></td><td><code>sshfs user@ip:/dir name</code></td><td>mount sshfs</td></tr><tr><td></td><td><code>fuser mount -u name</code></td><td>unmount sshfs <name>, <code> umount -l name</code> for busy error</td></tr><tr><td><strong>Supper Mode:</strong></td><td></td><td></td></tr><tr><td></td><td><code>rename &#39;s/old_name/new-name/&#39; *.txt</code></td><td>rename files</td></tr><tr><td></td><td><code>cp | mv test.sh&#123;,.bk&#125;</code>, <code>mv test&#123;.sh,&#125;</code></td><td>rename quickly, remove suffix</td></tr><tr><td></td><td><code>find . -type f -exec cat &#123;&#125; +</code></td><td><code>find</code> and <code>cat</code> flies recursively</td></tr><tr><td></td><td><code>find . -type f -exec ls &#123;&#125; +</code></td><td><code>find . type f -exec ls &#123;&#125; \;</code></td></tr><tr><td></td><td><code>find ./ -type f -exec sed -i &#39;s/old/new/g&#39; &#123;&#125; \;</code></td><td>Replace all old in the current directory with new</td></tr><tr><td><strong>Performance:</strong></td><td></td><td></td></tr><tr><td></td><td><code>swapon --show</code></td><td>Check swap space</td></tr><tr><td></td><td><code>swapoff -a</code><br/><code>dd if=/dev/zero of=/swapfile bs=1G count=8</code><br/><code>mkswap /swapfile</code><br/><code>swapon /swapfile</code><br/><code>grep SwapTotal /proc/meminfo</code></td><td>Extend swap space to 8G</td></tr><tr><td></td><td><code>free -h</code></td><td></td></tr><tr><td></td><td><code>top</code>,<code>htop</code></td><td>Interactive process viewer</td></tr><tr><td></td><td><code>vmstat</code></td><td>Report virtual memory statistics</td></tr><tr><td></td><td><code>pmap</code></td><td>Report memory map of a process</td></tr><tr><td></td><td><code>kmemleak</code></td><td>Embeded memeory analysis tool</td></tr><tr><td><strong>schedule:</strong></td><td></td><td></td></tr><tr><td></td><td><code>at &lt;time&gt;</code> + <Ctrl-D></td><td>Execute some commands on <time></td></tr><tr><td></td><td><code>cron</code></td><td>Daemon to execute scheduled commands,<code>/etc/cron.*, /etc/ancrontab</code></td></tr><tr><td></td><td><code>crontab -e</code>,<code>crontab -l</code></td><td>Edit, list the scheduled commands</td></tr><tr><td></td><td><code>anacron</code></td><td>run commands periodically</td></tr><tr><td><strong>Directory:</strong></td><td></td><td></td></tr><tr><td></td><td><code>/var/cache/apt/archives/</code></td><td>All archived debs</td></tr><tr><td></td><td><code>hexedit</code>,<code>hex</code></td><td>Hexdump</td></tr><tr><td></td><td><code>xxd</code></td><td>Make a hexdump or do the reverse</td></tr><tr><td></td><td><code>strings -a</code></td><td><code>-a</code> Scan the whole file</td></tr><tr><td></td><td><code>cpio -if</code></td><td>Copy files to and from archives</td></tr><tr><td><strong>Network:</strong></td><td></td><td></td></tr><tr><td></td><td><code>lspci | grep -i &#39;eth&#39;</code></td><td>Information about eth</td></tr><tr><td></td><td><code>ifconfig -a</code></td><td>information about all net port</td></tr><tr><td></td><td><code>ethtool eth0</code></td><td>Details of eth0</td></tr><tr><td></td><td><code>ping &lt;remote host address&gt;</code></td><td></td></tr><tr><td></td><td><code>ssh</code>, <code>sshfs</code>, <code>scp</code></td><td>remote login, mount, copy</td></tr><tr><td></td><td><code>iptables -L</code></td><td>information about firewall</td></tr><tr><td></td><td><code>service iptables status</code></td><td>status about firewall</td></tr><tr><td></td><td><code>service iptables stop</code></td><td>Close firewall</td></tr><tr><td></td><td><code>route -n</code></td><td>show the IP routing table</td></tr><tr><td></td><td><code>netstat -lntp,-antp,-s,-at,-au,-lt</code></td><td>information about port,conection,…</td></tr><tr><td><strong>Others:</strong></td><td></td><td></td></tr><tr><td></td><td><code>addgroup lee vboxusers</code></td><td>Make virtual box recognize USB</td></tr><tr><td></td><td><code>*/?/[xyz]/[^xyz]/[!xyz]/[a~z]</code></td><td>Regular expression</td></tr><tr><td></td><td><code>make &gt; /dev/null</code></td><td></td></tr><tr><td></td><td><code>while true; do adb shell cat /proc/interrupts | grep kgsl; sleep 0.5; done</code></td><td></td></tr><tr><td></td><td><code>adb shell cd sdcard nohup watch -n 5 &#39;cat /sys/bus/cpu/devices/cpu0/online &gt;&gt; online.log&#39; &amp;</code></td><td></td></tr><tr><td></td><td><code>readelf -h vmlinux</code></td><td></td></tr><tr><td></td><td><code>nm</code></td><td>List symbols from object files， `nm -n vmlinux</td></tr><tr><td></td><td><code>ldd</code></td><td>Print shared object dependencies, list dynamic dependencies, likes xxx.so</td></tr><tr><td></td><td><code>objdump</code></td><td>Display information from object files, disassembler</td></tr><tr><td></td><td><code>ndisasm -u</code></td><td>The Netwide Disassembler, an 80x86 binary file disassembler</td></tr><tr><td></td><td><code>c++filt</code></td><td>Demangle C++ and Java symbols</td></tr><tr><td></td><td><code>hexdump, hd</code></td><td>ASCII, decimal, hexadecimal, octal dump， <code>hexdump -s 0x18408a8 -n 1024 vmlinux</code></td></tr><tr><td></td><td><code>file</code></td><td>Determine file type, <code>file *.img, *.mbn, *.bin ...</code></td></tr><tr><td></td><td><code>readelf</code></td><td>Displays information about ELF files,<code>readelf -hlSVAI vmlinux</code></td></tr><tr><td></td><td><code>objdump</code></td><td>Display information from object(files) <code>xxx-objdump -afphG vmlinux</code></td></tr><tr><td></td><td><code>objcopy</code></td><td>Copy and tranlate objects, eg:Generate zImage with vimlinux</td></tr><tr><td></td><td><code>[android-unpackbootimg](https://github.com/anestisb/android-unpackbootimg)  -i boot.img -o boot_img/</code></td><td></td></tr><tr><td></td><td><code>python3 [extract-dtb.py](https://github.com/PabloCastellano/extract-dtb)</code> kernel</td><td>Get dts from kernel</td></tr><tr><td></td><td><code>dtc -I dtb -O dts ... -o ...</code></td><td>Disassembler</td></tr><tr><td></td><td><code>od</code></td><td>Dump files in octal and other formats</td></tr><tr><td></td><td><code>vim -b file</code> + <code>:%!xxd -u</code> + <code>:%!xxd -r</code></td><td>Edit ELF file, <code>-u</code> to hex, <code>-r</code> to binary</td></tr><tr><td></td><td><code>ltrace</code></td><td>A library call tracer</td></tr><tr><td></td><td><code>strace</code></td><td>Trace system calls and signals</td></tr><tr><td></td><td><code>gdb</code></td><td>The GNU debugger</td></tr><tr><td></td><td><code>strip</code></td><td>Discard symbols from object files</td></tr><tr><td></td><td><code>lsof</code></td><td>List open files opened by processes</td></tr><tr><td></td><td><code>fuser</code></td><td>Identify processes using files or sockets</td></tr><tr><td></td><td><code>/proc</code></td><td>Process information pseudo-filesystem</td></tr><tr><td></td><td><code>ELF</code></td><td>Format of Executable and Linking Format(ELF) files</td></tr></tbody></table><h2 id="Add-default-CDPATH"><a href="#Add-default-CDPATH" class="headerlink" title="Add default CDPATH"></a>Add default CDPATH</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CDPATH=<span class="string">&#x27;$CDPATH:...&#x27;</span></span><br><span class="line"><span class="built_in">export</span> CDPATH=<span class="string">&#x27;~:/var/log:/etc&#x27;</span></span><br><span class="line">lee@lee-pc:~$ <span class="built_in">cd</span> fonts</span><br><span class="line">/etc/fonts</span><br></pre></td></tr></table></figure><h1 id="Modify-user"><a href="#Modify-user" class="headerlink" title="Modify user"></a>Modify user</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami) file</span><br></pre></td></tr></table></figure><h1 id="Get-IP-and-Netmask"><a href="#Get-IP-and-Netmask" class="headerlink" title="Get IP and Netmask"></a>Get IP and Netmask</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># IP</span></span><br><span class="line">hostname -I</span><br><span class="line">ifconfig | grep -Eo <span class="string">&#x27;inet (addr:)?([0-9]*\.)&#123;3&#125;[0-9]*&#x27;</span> | grep -Eo <span class="string">&#x27;([0-9]*\.)&#123;3&#125;[0-9]*&#x27;</span> | grep -v <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Netmask</span></span><br><span class="line">ifconfig | sed -En <span class="string">&#x27;s/255.0.0.0//;s/.*netmask (addr:)?(([0-9]*\.)&#123;3&#125;[0-9]*).*/\2/p&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Only wlan0</span></span><br><span class="line">ifconfig wlan0 | ...</span><br></pre></td></tr></table></figure><h1 id="others"><a href="#others" class="headerlink" title="others"></a>others</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /proc/device-tree/soc/leds-gpios/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Shell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Consolidating the foundation of Linux, vim tips</title>
      <link href="2020/11/19/Linux/Consolidating-the-foundation-of-Linux-vim-tips/"/>
      <url>2020/11/19/Linux/Consolidating-the-foundation-of-Linux-vim-tips/</url>
      
        <content type="html"><![CDATA[<h1 id="Vim-Tips"><a href="#Vim-Tips" class="headerlink" title="Vim Tips"></a>Vim Tips</h1><p>Here is <a href="http://huaqianlee.github.io/2020/02/06/Linux/Consolidating-the-foundation-of-Linux-vim/">Consolidating the foundation of Linux, vim</a>, and I write this tips for my vim configuration, record my commonly used commands in the form of a memo, Here is <a href="https://github.com/huaqianlee/dotfiles/tree/main/vim">My vim configuration</a>.</p><a id="more"></a><table><thead><tr><th>#</th><th>Commands</th><th>Comment</th></tr></thead><tbody><tr><td><strong>Basis:</strong></td><td></td><td></td></tr><tr><td></td><td><code>apt install vim-gtk3 , or vim-gnome</code></td><td>Install gvim</td></tr><tr><td></td><td><code>?ve[rsion]</code></td><td>Print the vim information</td></tr><tr><td></td><td><code>/etc/vim/vimrc</code><br><code>/usr/share/vim/vim81</code></td><td></td></tr><tr><td></td><td><code>vimdiff</code>, <code>gvimdiff</code>, <code>:vert diffsplit</code></td><td>diff comparision</td></tr><tr><td><strong>Help:</strong></td><td></td><td></td></tr><tr><td></td><td><code>vimtutor</code></td><td>vim tutor with shell</td></tr><tr><td></td><td><code>:help user-manual</code></td><td>User manual overview</td></tr><tr><td></td><td><code>:help usr_02.txt</code></td><td>User manual</td></tr><tr><td></td><td><code>:help index</code></td><td>All commands for each mode</td></tr><tr><td></td><td><code>:help insert-index/visual-index/...</code></td><td>All commands for insert/visual/… mode</td></tr><tr><td></td><td><code>:help -t</code></td><td><code>vim -t &#123;tag&#125;</code></td></tr><tr><td></td><td><code>:help E37</code></td><td>‘error inf E37…’ explanation</td></tr><tr><td></td><td><code>:help &lt;command&gt;</code></td><td>Command’s manual</td></tr><tr><td></td><td><code>:help w</code></td><td>Common commands</td></tr><tr><td></td><td><code>:help c_Ctrl-D</code></td><td>Command-line Editing commands</td></tr><tr><td></td><td><code>:help vimrCtrl-intro</code></td><td>vimrc introduction</td></tr><tr><td></td><td><code>:r $VIMRUNTIME/vimrc_example.vim</code></td><td>Read vimrc example</td></tr><tr><td></td><td><code>Ctrl-A</code> or <code>Tab</code></td><td>Automaticly transfer $VIMRUNTIME as <code>:r /usr/share/vim/vim80/</code></td></tr><tr><td></td><td><code>:help helphelp</code></td><td>Help on help files</td></tr><tr><td></td><td><code>help help</code></td><td>help on help commands</td></tr><tr><td><strong>Command Line Editing:</strong></td><td><code>: / ? !</code> …</td><td></td></tr><tr><td></td><td><code>:help ex-edit-index</code></td><td>All commands for command-line</td></tr><tr><td></td><td><code>/</code> <code>?</code></td><td>Forward or reverse search,  <code>n, N</code> - next/previous</td></tr><tr><td></td><td><code>:s</code></td><td>replace , ‘:help :s’ to check the detail</td></tr><tr><td></td><td><code>:e[dit]</code></td><td>edit or reload</td></tr><tr><td></td><td><code>:w</code>,<code>:r</code></td><td>Write , Read</td></tr><tr><td></td><td><code>Ctrl-D</code>, <code>Tab</code></td><td>AutoComplete the cmd or filename</td></tr><tr><td></td><td><code>:saveas &lt;path/to/file&gt;</code></td><td>Save to &lt;path/to/file&gt;</td></tr><tr><td></td><td><code>:x, ZZ , :wq</code></td><td>Save and quit (:x only save if necessary)</td></tr><tr><td></td><td><code>:q!</code></td><td>Quit without saving, also: :qa! to quit even if there are modified hidden buffers</td></tr><tr><td></td><td><code>:bn/bp</code></td><td>Next/previous file buffer</td></tr><tr><td></td><td><code>:[%]s/old/new/[gcI]</code></td><td>Replace,<code>%</code> - whole file, <code>gc</code> globally and confirm, <code>I</code> - ?</td></tr><tr><td></td><td><code>:3,5s/old/new/g</code></td><td>Replace from 3 to 5 line</td></tr><tr><td></td><td><code>:set hls[earch]/nonhls</code></td><td>highlight all matching phrases or not</td></tr><tr><td></td><td><code>:set [no]ic, &#39;ignorecase&#39;</code></td><td>ignore upper/lower case when searching or not</td></tr><tr><td></td><td><code>\c</code></td><td>Ignore capital, likes <code>/ignor\c</code>,<code>:s/old\c/new/g</code></td></tr><tr><td></td><td><code>:set [no]is, &#39;incsearch&#39;</code></td><td>show partial matches for a search phrase or not</td></tr><tr><td></td><td><code>sp[lit] vsp</code></td><td><code>:help split</code>,Split screen horizontal or vertical</td></tr><tr><td></td><td><code>：vertical res/res + num</code></td><td>Set the width or height</td></tr><tr><td></td><td><code>Ctrl-W + Ctrl-W/HJKL</code></td><td>Move between/among splitted screens</td></tr><tr><td></td><td><code>Ctrl-W _</code>(resp. <code>Ctrl-W |</code>)</td><td>Maximise the size of the split (resp. vertical split)</td></tr><tr><td></td><td><code>Ctrl-W +</code>(resp. <code>Ctrl-W -</code>)</td><td>Grow (resp. shrink) split</td></tr><tr><td></td><td><code>Ctrl-W =</code></td><td>Evenly allocate size</td></tr><tr><td></td><td><code>:set [no]scb, &#39;scrollbind&#39;</code></td><td>Sync the screens which this option is set</td></tr><tr><td></td><td><code>:Ctrl-D</code></td><td>Show a list of commands</td></tr><tr><td></td><td><code>&lt;TAB&gt;</code></td><td>Complete , likes <code>:edi[t]</code>,<code>:!fin[d]</code> and others. like name</td></tr><tr><td></td><td><code>:set showmode</code></td><td>Tell you which mode you are on the last line</td></tr><tr><td></td><td><code>:r !ls</code></td><td>Put ls’s output below the cursor</td></tr><tr><td></td><td><code>:r &lt;file&gt;</code></td><td>Put the contents of file below the cursor</td></tr><tr><td></td><td><code>:map Y y$</code></td><td>Map <code>Y</code> command yank to the end of line, map shortcut</td></tr><tr><td></td><td><code>:set [no]nu[mber]</code></td><td>Hider/display line number</td></tr><tr><td></td><td><code>:set mouse=[all]</code></td><td>Enable mouse usage (all modes)</td></tr><tr><td></td><td><code>:se[t]</code></td><td>Show all options that differ from their default value</td></tr><tr><td></td><td><code>:se[t] all</code></td><td>Show all but terminal options.</td></tr><tr><td></td><td><code>:set ft?</code></td><td>Check filetype of the current file</td></tr><tr><td><strong>Normal Mode:</strong></td><td><code>ESC Ctrl-[  Ctrl-C</code>…</td><td>Back to Normal Mode</td></tr><tr><td></td><td><code>:help normal-index</code></td><td>All commands for normal mode</td></tr><tr><td></td><td><code>[n]command</code></td><td>Excute n times command, likes <code>10itest</code>, insert 10 test</td></tr><tr><td></td><td><code>Ctrl-D/Ctrl-U</code>,<code>hjkl</code></td><td>Move down or up,…</td></tr><tr><td></td><td><code>0,^,$,g_</code></td><td>Go to the first/last column or non-blank character</td></tr><tr><td></td><td><code>[N]G, :N</code></td><td>Go to line N</td></tr><tr><td></td><td><code>gg</code>,<code>G</code></td><td>Go to the start of the file, to last line</td></tr><tr><td></td><td><code>w, e , b</code> <code>2w,3e</code></td><td>Go to the start/end of next word, start of previous word</td></tr><tr><td></td><td><code>W,E,B</code></td><td>Go to the start/end of next/previous Group</td></tr><tr><td></td><td><code>fa/F</code>,<code>,</code> <code>;</code></td><td>Go to next/previous ‘a’ on the line,<code>3fa</code> go to 3rd ‘a’, <code>,</code> <code>;</code> next/previous</td></tr><tr><td></td><td><code>t,/T</code> <code>,</code> <code>;</code></td><td>Go to before/after <code>,</code>, <code>,</code> <code>;</code> next/previous</td></tr><tr><td></td><td><code>%</code></td><td>Go to next corresponding item, likes <code>([&#123;&#125;],#ifdef/#endif</code>)</td></tr><tr><td></td><td><code>*,#</code></td><td>Go to next/previous occurence of the word, <code>:set hls</code> will highlight them</td></tr><tr><td></td><td><code>x</code>,<code>J</code></td><td>Delete char, rm line break</td></tr><tr><td></td><td><code>Ctrl-A</code></td><td>Increment the number</td></tr><tr><td></td><td><code>Shift-~</code></td><td>Case conversion</td></tr><tr><td></td><td><code>U/u</code>,<code>Ctrl-R</code></td><td>Undo all latest changes on one line or undo one changes, redo changes</td></tr><tr><td></td><td><code>Ctrl-O</code>,<code>Ctrl-I</code></td><td>Go to older/newer cursor possitons,support switching files</td></tr><tr><td></td><td><code>Ctrl-]</code></td><td>jumps to the location of the tag given by the word under the cursor</td></tr><tr><td></td><td><code>Ctrl-T</code></td><td>(pop tag) takes you back to the preceding position</td></tr><tr><td></td><td><code>Ctrl-G</code></td><td>Prints the current file name, the cursor position, etc.</td></tr><tr><td></td><td><code>Te(gt gT),Ve[!],He[!]</code></td><td>Create a Tab/Vertical/Horizontal page, gt/gT - next/previous, <code>!</code> -&gt; switch split place</td></tr><tr><td><strong>EX commands:</strong></td><td></td><td></td></tr><tr><td></td><td><code>:help ex-cmd-index</code></td><td>All commands for ex-cmd</td></tr><tr><td></td><td><code>man vim</code></td><td></td></tr><tr><td></td><td><code>:!&lt;command&gt;</code> <code>:！which shutdown</code></td><td>Excute shell command</td></tr><tr><td></td><td><code>Ctrl-Z</code> <code>fg</code></td><td>Pause vim, back to vim</td></tr><tr><td></td><td><code>vim -pO/o[N] files...</code></td><td>Open N/one(when N is omitted) tab page for each file,<code>o</code> Horizontal, <code>O</code>-Vertical</td></tr><tr><td></td><td><code>vim -n</code></td><td>No swap file will be used</td></tr><tr><td></td><td><code>Ctrl-Shift-C</code>,<code>Ctrl-Shift-V</code></td><td>Copy and Paste, supports outside of vim</td></tr><tr><td><strong>Insert Mode:</strong></td><td><code>a i r s</code> …</td><td>Enter Insert Mode</td></tr><tr><td></td><td><code>:help insert-index</code></td><td>All commands for insert mode</td></tr><tr><td></td><td><code>r,R gR</code></td><td>Replace mode,<code>gR</code>:visual mode replace</td></tr><tr><td></td><td><code>Ctrl-N, Ctrl-P</code></td><td>Completion,complete the word from start of word</td></tr><tr><td><strong>Visual Mode:</strong></td><td><code>v V Ctrl-V Ctrl-Q</code> …</td><td>Enter visual Mode, CTRL-Q insteads Ctrl-V(used to paste) in Insert and Command-line mode.</td></tr><tr><td></td><td><code>:help visual-index</code></td><td>All commands for visual mode</td></tr><tr><td></td><td><code>v/V/Ctrl-V</code></td><td>Select char/line/block</td></tr><tr><td></td><td><code>Ctrl-V</code> + <code>Shift-I</code> + <code>ESC</code></td><td>Add same content at beginning of all lines of block</td></tr><tr><td></td><td><code>Ctrl-V</code> + [<code>$</code>] + <code>Shift-A</code> + <code>ESC</code></td><td>Add same content at the end of block[or all lines]</td></tr><tr><td></td><td><code>y</code>,<code>d</code>…</td><td>Yank,delete selected content in visual mode</td></tr><tr><td></td><td><code>Y ,yy</code></td><td>Yank the current line</td></tr><tr><td></td><td><code>J</code></td><td>Join all lines together</td></tr><tr><td></td><td><code>&lt;</code>, <code>&gt;</code></td><td>Indent to the left, to the right</td></tr><tr><td></td><td><code>=</code></td><td>Auto indent</td></tr><tr><td><strong>Op pending Mode</strong></td><td><code>c d y &lt; &gt;</code> …</td><td></td></tr><tr><td></td><td><code>c[N]&#123;motion&#125; c2w,ce,c$</code></td><td>Delete motion text and start insert</td></tr><tr><td></td><td><code>y,d&#123;motion&#125; y$,d$,dt&#123;?&#125;</code>, <code>Np</code></td><td>Yank/Delete {motion} text, paste N times</td></tr><tr><td></td><td><code>y</code>,<code>d</code>,<code>D/d$</code>…</td><td>Yank,delete the selected content, delete until the end</td></tr><tr><td></td><td><code>Y ,yy</code></td><td>Yank the current line</td></tr><tr><td></td><td><code>yl</code></td><td>Yanks a letter</td></tr><tr><td></td><td><code>yaw</code></td><td>Yanks a word</td></tr><tr><td></td><td><code>yas</code></td><td>Yanks a sentence</td></tr><tr><td></td><td><code>yi(</code></td><td>Yanks everything within ( and so on…</td></tr><tr><td></td><td><code>p</code></td><td>pastes something after the cursor</td></tr><tr><td></td><td><code>P</code></td><td>pastes something before the cursor</td></tr><tr><td></td><td><code>gp</code></td><td>same as p but puts the cursor after the pasted selection</td></tr><tr><td></td><td><code>gP</code></td><td>same as P and puts the cursor after the pasted selection</td></tr><tr><td></td><td><code>&lt;, &gt;</code></td><td>Undent and indent</td></tr><tr><td></td><td><code>d, c, v, y + &lt;numb&gt;i/a + w, s(sentence), p, t(tag,XML..), [], &#123;&#125; ...</code></td><td><code>c2i&#123;</code></td></tr><tr><td></td><td><code>if (message == &quot;sesame open&quot;)</code></td><td>‘a’ under the cursor</td></tr><tr><td></td><td><code>dw</code></td><td>delete ‘ame ‘</td></tr><tr><td></td><td><code>diw</code></td><td>delete ‘sesame’  ; delete inside word</td></tr><tr><td></td><td><code>daw</code></td><td>delete ‘sesame ‘; delete a word</td></tr><tr><td></td><td><code>diW</code></td><td>delete ‘“sesame’</td></tr><tr><td></td><td><code>daW</code></td><td>delete ‘“sesame ‘</td></tr><tr><td></td><td><code>di&quot;</code></td><td>delete ‘sesame open’</td></tr><tr><td></td><td><code>da&quot;</code></td><td>delete ‘“sesame open”‘</td></tr><tr><td></td><td><code>di(,di)</code></td><td>delete ‘message == “sesame open”‘</td></tr><tr><td></td><td><code>da(,da)</code></td><td>delete ‘(message == “sesame open”)’</td></tr><tr><td></td><td><code>ysiw&quot;</code></td><td>add “” to word, word -&gt; “word”</td></tr><tr><td></td><td><code>ysiW&quot;</code></td><td>add “” to string</td></tr><tr><td></td><td><code>cs&quot;&#39;</code></td><td>“word” to ‘word’</td></tr><tr><td></td><td><code>cs[&lt;em&gt;</code></td><td>[Mine] -&gt; <em>Mine</em></td></tr><tr><td></td><td><code>S&lt;em&gt;</code></td><td>‘word -&gt; <em>word</em>‘ in visual mode</td></tr><tr><td></td><td><code>ds&quot;</code>, <code>dst</code></td><td>remove “” , HTML tab</td></tr><tr><td></td><td><code>:1,10y</code>, <code>y10G</code></td><td>yank 10 lines</td></tr><tr><td></td><td>`vim -c ‘normal 5G36</td><td>‘`</td></tr><tr><td></td><td><code>\v</code>, <code>ve&quot;0p</code></td><td>replace the word under the cursor, efficient with ‘*’, ‘n’</td></tr><tr><td><em>move</em></td><td><code>f[ind]</code>, <code>t[ill]</code></td><td></td></tr><tr><td></td><td><code>gj</code>, <code>gk</code></td><td>move screen line</td></tr><tr><td></td><td><code>(, )</code></td><td>previous / next senstence</td></tr><tr><td></td><td><code>&#123;, &#125;</code></td><td>previous / next paragraph</td></tr><tr><td></td><td><code>D, d$</code>, <code>C, c$</code></td><td>delete , modify to the end of line</td></tr><tr><td></td><td><code>S, cc</code></td><td>Modify line</td></tr><tr><td></td><td><code>s, cl</code></td><td>l -&gt; right move. delete one char and insert</td></tr><tr><td></td><td><code>U</code></td><td>revoke all modifiation</td></tr><tr><td></td><td><code>Ctrl-B, Ctrl-F</code></td><td>scoll window backword/forward</td></tr><tr><td></td><td><code>Ctrl-U, Ctrl-D</code></td><td>scroll half a screen up/down</td></tr><tr><td></td><td><code>&lt;num&gt;G, &lt;num&gt;|</code></td><td>go <num>th line, column</td></tr><tr><td></td><td><code>H, M, L</code></td><td>Top, Middle, Bottom of the current screen</td></tr><tr><td></td><td><code>Ctrl-E, Ctrl-Y</code></td><td>Scroll screen, not move cursor</td></tr><tr><td></td><td><code>zt, zz, zb</code></td><td>scroll the current line to top, middle, bottom</td></tr><tr><td></td><td><code>;</code></td><td>repeat the recent searching by f, t …</td></tr><tr><td></td><td><code>,</code></td><td>repeat the recent searching by f, t …  reversely</td></tr><tr><td></td><td><code>n, N</code></td><td>repeat the recent searching by /, ?</td></tr><tr><td></td><td><code>.</code></td><td>Repeat last change</td></tr><tr><td><strong>Windows and Tabs</strong></td><td><code>help :tab</code></td><td></td></tr><tr><td></td><td><code>Ctrl-w s,v</code></td><td>sp, vs</td></tr><tr><td></td><td><code>Ctrl-w w,W</code></td><td>next or last</td></tr><tr><td></td><td><code>Ctrl-W n</code>, <code>:new</code></td><td>New window</td></tr><tr><td></td><td><code>Ctrl-W c</code></td><td>close current window excepte it is the last one.</td></tr><tr><td></td><td><code>Ctrl-W q</code></td><td>quit the current window</td></tr><tr><td></td><td><code>Ctrl-W o</code></td><td>only reserve the current window</td></tr><tr><td></td><td><code>Ctrl-W =</code></td><td>resize all windows as the same size</td></tr><tr><td></td><td><code>&lt;n&gt;Ctrl-W _</code>, <code>:res[ize] &lt;n&gt;</code></td><td>set the height of the window</td></tr><tr><td></td><td><code>&lt;n&gt;Ctrl-W |</code>,<code>:vertical res[ize] n</code></td><td>set the width of the window</td></tr><tr><td></td><td><code>Ctrl-w -</code>, <code>Ctrl-w +</code>, <code>:res[ize] -n/+n</code></td><td>increase/decrease the height</td></tr><tr><td></td><td><code>Ctrl-w &gt;,&lt;</code></td><td>increase/decrease the width</td></tr><tr><td></td><td><code>Ctrl-W HJKL(capital)</code></td><td>Maximize in a certain direction</td></tr><tr><td></td><td><code>:tab &lt;cmd&gt;</code></td><td>new tab for <cmd></td></tr><tr><td></td><td><code>:tabs</code></td><td>List all the tabs</td></tr><tr><td></td><td><code>:tabnew</code>, <code>:tabedit</code></td><td>Open a new blank tab</td></tr><tr><td></td><td><code>:tabclose</code>, <code>Ctrl-w c</code></td><td>Close the current tab</td></tr><tr><td></td><td><code>:tabn</code>, <code>gt</code></td><td>go to next</td></tr><tr><td></td><td><code>:tabN</code>, <code>tabp</code>, <code>gT</code></td><td>go to the previous tab</td></tr><tr><td></td><td><code>:tabf</code>,  <code>:tabr[ewind]</code>,<code>tabl</code></td><td>go to the first ,last tab</td></tr><tr><td></td><td><code>Ctrl-w T</code></td><td>Change the current window to a tab</td></tr><tr><td></td><td><code>F9 + Tab</code></td><td>to show the recent used files in terminal</td></tr><tr><td></td><td><code>:set paste</code>, <code>:set nopaste</code></td><td>Do not/ modify the format of the pasting content</td></tr><tr><td></td><td><code>:set autowrite</code></td><td>autosave when swithching file</td></tr><tr><td></td><td><code>n|normal ggp</code>, <code>gg&quot;+p</code></td><td>switch to next and paste at the beginning, plaste system clipboard</td></tr><tr><td><strong>Arguments and buffers</strong></td><td><code>vi *.c</code></td><td></td></tr><tr><td></td><td><code>:args</code></td><td>list the files</td></tr><tr><td></td><td><code>args file</code></td><td>replace args with file</td></tr><tr><td></td><td><code>:args **/*.cpp **/*.h</code></td><td>‘**’: open the relevant files, including the current directory and $(pwd)/${PWD}</td></tr><tr><td></td><td><code>:n[ext]</code>, <code>:N[ext]/:prev[ious]</code></td><td>go to the previous file</td></tr><tr><td></td><td><code>:first</code>, <code>:rewind</code></td><td>go to the fiirst file</td></tr><tr><td></td><td><code>:last</code></td><td>go to the last file</td></tr><tr><td></td><td><code>:buffers</code>, <code>:ls</code></td><td>Check the buffers,’%a’: the current file, ‘#’:the recent buffer, ‘+’: Modified buffer</td></tr><tr><td></td><td><code>b[uffer]&lt;num&gt;</code></td><td>Jump to <num> buffer</td></tr><tr><td></td><td><code>bd[elete]</code>, <code>bw</code></td><td>Delete one buffer</td></tr><tr><td></td><td><code>bn</code>, <code>bN/bp</code>, <code>bl/bf</code></td><td>Jump to next, the previous, last/first</td></tr><tr><td></td><td><code>Ctrl-^</code>, <code>1Ctrl-^</code></td><td>Jump between the two recent buffers ,or to the first</td></tr><tr><td><strong>Supper Mode</strong></td><td></td><td></td></tr><tr><td></td><td><code>v</code>+<code>:</code>-&gt;<code>:&#39;&lt;,&#39;&gt;w flie</code></td><td>Save selected content in a new file</td></tr><tr><td></td><td><code>./N.</code></td><td>Repeat one/N times the last cmd</td></tr><tr><td></td><td><code>N&lt;command&gt;</code></td><td>Repeat the command N times,likes <code>2dd,3p</code></td></tr><tr><td></td><td><code>100icontent</code></td><td>Write 100 times <code>content</code>,<code>.</code>-&gt;100 times again, <code>3.</code>-&gt;3 times, not 300</td></tr><tr><td></td><td><code>&lt;start position&gt;&lt;command&gt;&lt;end position&gt;</code></td><td>Command from start positon to end position,<code>y,v (visual select), gU (uppercase), gu (lowercase) ...</code></td></tr><tr><td></td><td><code>0y$</code></td><td>Yank from beginning to end of this line</td></tr><tr><td></td><td><code>ye</code></td><td>Yank from here to end of word</td></tr><tr><td></td><td><code>y2/foo</code></td><td>Yank up to second foo</td></tr><tr><td></td><td><code>&lt;action&gt;a/i&lt;object&gt;</code></td><td>Only be used after an operator in visual mode,action:<code>y,d,v...</code>, object:<code>w,W,s,p,&quot;,&#39;,),&#125;,]</code></td></tr><tr><td></td><td><code>vis</code></td><td>Select the current sentence</td></tr><tr><td></td><td><code>vip</code></td><td>Select the current paragraph</td></tr><tr><td></td><td><strong>Suppose the cursor is on the first <code>o</code> of <code>(map (+) (&quot;foo&quot;))</code></strong></td><td></td></tr><tr><td></td><td><code>vi&quot;</code></td><td>Select <code>foo</code></td></tr><tr><td></td><td><code>va&quot;</code></td><td>Select <code>&quot;foo&quot;</code></td></tr><tr><td></td><td><code>vi)</code></td><td>Select <code>&quot;foo&quot;</code></td></tr><tr><td></td><td><code>va)</code></td><td>Select <code>(&quot;foo&quot;)</code></td></tr><tr><td></td><td><code>v2i)</code></td><td>Select <code>map (+) (&quot;foo&quot;)</code></td></tr><tr><td></td><td><code>v2a)</code></td><td>Select <code>(map (+) (&quot;foo&quot;))</code></td></tr><tr><td></td><td><code>:[n]cnext</code></td><td>To go to the [n] next one error</td></tr><tr><td></td><td><code>:copen </code></td><td>All matches are available in the quickfix window which can be opened</td></tr><tr><td></td><td><strong>Register</strong></td><td></td></tr><tr><td></td><td><code>qa,@a</code></td><td>Start recording your actions in a register, replay the action,</td></tr><tr><td></td><td><code>@@</code></td><td>A shortcut to replay the last executed macro</td></tr><tr><td></td><td><code>&quot;kyy</code></td><td>Copy the current line into k register</td></tr><tr><td></td><td><code>&quot;Kyy</code></td><td>Append the current line into  k register</td></tr><tr><td></td><td><code>&quot;kp</code></td><td>Paste k regiser</td></tr><tr><td></td><td><code>&quot;+p</code></td><td>Paste from system clipboard on Linux</td></tr><tr><td></td><td><code>&quot;*p</code></td><td>To paste from system clipboard on Windows (or from “mouse highlight” clipboard on Linux)</td></tr><tr><td></td><td><code>:reg</code></td><td>To access all currently defined registers type</td></tr><tr><td></td><td><strong>Suppose on a line containing only the number 1</strong></td><td></td></tr><tr><td></td><td><code>qaYp&lt;Ctrl-A&gt;q</code></td><td><code>qa</code> Start recording <code>Yp</code> duplicate this line <code>Ctrl-A</code> increment the number <code>q</code> stop recording</td></tr><tr><td></td><td><code>@a</code></td><td>Write 2 under the 1</td></tr><tr><td></td><td><code>@@</code></td><td>Write 3 under the 2</td></tr><tr><td></td><td><code>100@@</code></td><td>Create a list of increasing numbers until 103</td></tr><tr><td></td><td><strong>Global:</strong></td><td><code>:g</code>:<code>%</code></td></tr><tr><td></td><td><code>ggvG$</code></td><td>Select all content</td></tr><tr><td></td><td><code>:%d</code></td><td>delete every line</td></tr><tr><td></td><td><code>:%y</code></td><td>yank every line</td></tr><tr><td></td><td><code>:%normal! &gt;&gt;</code></td><td>indent every line</td></tr><tr><td></td><td><code>:g/^/d</code></td><td>delete every line</td></tr><tr><td></td><td><code>:g/^/y</code></td><td>yank every line</td></tr><tr><td></td><td><code>:g/^/normal! &gt;&gt;</code></td><td>indent every line</td></tr><tr><td><strong>NERDTree</strong></td><td><code>:NERDTree</code>, <code>:e .</code></td><td>open NERDTree</td></tr><tr><td></td><td><code>:NERDTreeToggle</code></td><td>open/close NERDTree -&gt; remap shortcut, or short cmd</td></tr><tr><td></td><td><code>?</code>, <code>go</code></td><td>help, only preview, not jump into file</td></tr><tr><td></td><td><code>i</code>,  <code>s</code>, <code>t</code></td><td>Open to a new hirizontal ,vertical window, or a tab</td></tr><tr><td></td><td><code>I</code>, <code>m</code></td><td>display hidden files, open ‘add, delete, rename, …’ menu</td></tr><tr><td></td><td><code>:setlocal</code>, <code>:setglobal</code></td><td>Check the local, global options</td></tr><tr><td></td><td><code>:set tabstop?</code>, <code>:set tabstop=4</code></td><td>return the local value, set local and global</td></tr><tr><td><strong>Tags</strong></td><td><code>$VIMRUNTIME/doc/tags</code><br><code>/usr/share/vim/vim80/doc/tags</code></td><td></td></tr><tr><td></td><td><code>:helpt[ags]</code></td><td>Generate the help tags,’:hep :helpt’</td></tr><tr><td></td><td><code>set runtimepath?</code></td><td>the patch including all plugins</td></tr><tr><td></td><td><code>ctags -R .</code></td><td>Create tags index for the current directory</td></tr><tr><td></td><td><code>ctags -fields=+iaS --extra=+q -R .</code></td><td>create tags index for C++, <code>--c-kinds=+p</code> for system head file</td></tr><tr><td></td><td><code>ctags --languages=c --langmap=c:.c.h --fields=+S -R .</code></td><td>create tags file</td></tr><tr><td></td><td><code>Ctrl-]</code>, <code>g-click</code>, <code>:tag &lt;str&gt;</code></td><td>Jump to defined or declared location</td></tr><tr><td></td><td><code>g]</code>, <code>:tj[ump]</code></td><td>list, list and jump if only one</td></tr><tr><td></td><td><code>:sts[elect]</code>, <code>:stj[ump]</code></td><td>new window to list, list and jump if only one</td></tr><tr><td></td><td><code>:tn</code>, <code>:tN,:tp</code>,<code>:tf,:tr</code>,<code>:tl</code></td><td>next, previous, first, last</td></tr><tr><td></td><td><code>:ts[elect]</code>, <code>:tag</code></td><td>list all the tags</td></tr><tr><td></td><td><code>Ctrl-W + Ctrl-], g], g&lt;Ctrl-]&gt;</code></td><td>Open in new window</td></tr><tr><td></td><td><code>sudo python gen_systags.py</code></td><td>generate tags for system head file</td></tr><tr><td><strong>Tagbar</strong></td><td><code>:TagbarToggle</code></td><td>Open tagbar</td></tr><tr><td></td><td><code>:copen</code></td><td>Open quickfix</td></tr><tr><td></td><td><code>:cn</code>, <code>:cN, :cp</code>, <code>:cf, :cr</code>, <code>:cl</code></td><td>next, previous, first, last</td></tr><tr><td><strong>Coding</strong></td><td><code>:set makeprg=make\ -j4</code>, <code>make</code></td><td>building</td></tr><tr><td></td><td><code>gp, grepprg</code></td><td>‘help gp’ for ‘:grep’</td></tr><tr><td></td><td><code>:set tw=64 fo+=n + gq</code></td><td>set linewidth = 64, number list to format content of code</td></tr><tr><td></td><td><code>gq</code>, <code>:help gq</code>, <code>help fo-tale</code></td><td>Format the lines</td></tr><tr><td></td><td><code>gg=G</code></td><td>Format the file</td></tr><tr><td></td><td><code>:%s/\s\+$//g</code></td><td>Remove all trailing whitespace</td></tr><tr><td></td><td><code>:grep -R --include=&#39;*.c&#39; --include=&#39;*.h&#39; &#39;\&lt;printf\&gt;&#39; . </code></td><td>all files who used ‘printf’</td></tr><tr><td></td><td><code>:command! -bang -nargs=* -complete=file Make AsyncRun -program=make @ &lt;args&gt;</code></td><td>run make asynchronously</td></tr><tr><td></td><td><code>K</code></td><td>check the help document of word under the cursor, works for function</td></tr><tr><td></td><td><code>:help keywordprg</code></td><td>to check help of K</td></tr><tr><td></td><td><code>Ctrl-p</code>,<code>Ctrl-n</code></td><td>Looking backforward, looking forward</td></tr><tr><td></td><td><code>Ctrl-X Ctrl-F</code></td><td>autocomplete filename or directory, ‘Ctrl-p’, ‘Ctrl-n’ to choose</td></tr><tr><td></td><td><code>gf</code>, <code>gx</code></td><td>Jump to the file, link under the cursor</td></tr><tr><td></td><td><code>Ctrl-w f</code></td><td>Jump to the file and open a new window</td></tr><tr><td><strong>Writing</strong></td><td></td><td></td></tr><tr><td></td><td><code>iconv -l</code></td><td>check the formats what libiconv supports</td></tr><tr><td></td><td><code>:e ++ff=dos</code></td><td>Load file with DOS EOL(End Of Line)</td></tr><tr><td></td><td><code>:%s/\r$//</code></td><td>Dlelete <CR> of EOL, from DOS to Unix</td></tr><tr><td></td><td><code>:help fo-table</code></td><td><code>t, c, q, r, o, l, n, w, a</code>, chinese: <code>m, M, B</code></td></tr><tr><td></td><td><code>:set fo+=r ..., -=r ...</code></td><td>set option flags</td></tr><tr><td></td><td><code>:set listchars</code></td><td>highlight the end-of-line spaces and <LR></td></tr><tr><td></td><td><code>:set linebreak</code></td><td>Wrap long lines at ‘space, ‘, ., ?…’ rather than at the last char</td></tr><tr><td></td><td><code>gq&#123;motion&#125;</code></td><td>Format the lines (like 72/80 chars each line)that {motion} moves over</td></tr><tr><td></td><td><code>J</code></td><td>Connect mutiple lines to one line, the reverse of ‘gq’</td></tr><tr><td><strong>Undotree</strong></td><td><code>:UndotreeToggle</code></td><td>Open undotree window</td></tr><tr><td></td><td><code>J, K</code></td><td>move in history list</td></tr><tr><td></td><td><code>:Rename</code>, <code>Move</code></td><td>file handle</td></tr><tr><td><strong>fzf</strong></td><td><code>:Files</code></td><td>Open fuzzy matching to find unknown-name file</td></tr><tr><td><strong>Binary</strong></td><td><code>vim -b</code>, <code>:e ++binary</code></td><td>Edit binary</td></tr><tr><td></td><td><code>gvim-&gt;tools-&gt;convert to Hex</code></td><td></td></tr><tr><td></td><td><code>:%!xxd</code>, <code>%!xxd -r</code></td><td>Covert to Hex</td></tr><tr><td></td><td><code>:setf xxd</code></td><td>highlight binary file contents</td></tr><tr><td></td><td><code>:help using-xxd</code></td><td></td></tr><tr><td><strong>YouCompleteMe</strong></td><td><code>Tab</code>, Double<code>Tab</code></td><td>select, autoecomplete</td></tr><tr><td></td><td><code>install vim-youcompleteme</code></td><td></td></tr><tr><td></td><td><code>vam install youcompleteme</code></td><td>enable, link youcompleteme.vim to ~/.vim/plugin</td></tr><tr><td></td><td><code>:YcmCompleter RefactorRename bar</code></td><td>rename the word under the cursor as bar</td></tr><tr><td></td><td><code>:YcmDiags</code></td><td>Display issue of all codes , not only the current line</td></tr><tr><td><strong>vim-fugitive</strong></td><td><code>:help fugitive</code></td><td></td></tr><tr><td></td><td><code>:G[it] pull, log ...</code></td><td></td></tr><tr><td></td><td><code>:Gwrite</code>, <code>:Gread</code></td><td>Save and git add, git checkout or …</td></tr><tr><td></td><td><code>:Gmove</code>, <code>GRename</code>, <code>GDelete</code></td><td></td></tr><tr><td></td><td><code>:0Gclog</code></td><td>Check the history with quickfix</td></tr><tr><td></td><td><code>:Git blame</code>, <code>:Git</code>, <code>:Gvdiff</code></td><td>git blame, git status, git diff –stage</td></tr><tr><td><em><code>:G</code> to enter fugitive first</em></td><td><code>:help fugitive-staging-maps</code></td><td></td></tr><tr><td></td><td><code>s</code>, <code>u</code></td><td>git add, revoke ‘s’</td></tr><tr><td></td><td><code>=</code></td><td>open/clos the diff-view of the current file</td></tr><tr><td></td><td><code>o</code></td><td>Open file in new split window</td></tr><tr><td></td><td><code>dv</code></td><td>Compare to the stage area</td></tr><tr><td></td><td><code>cc</code></td><td>:Git commit</td></tr><tr><td><strong>vim-gitgutter</strong></td><td></td><td></td></tr><tr><td></td><td><code>[c</code>, <code>]c</code></td><td>Jump to previous/next modification</td></tr><tr><td></td><td><code>&lt;Leader&gt;hp</code></td><td>Compare the modification block under the cursor to the stage area</td></tr><tr><td></td><td><code>&lt;Leader&gt;hs</code></td><td>git add the modification block under the cursor</td></tr><tr><td></td><td><code>&lt;leader&gt;hu</code></td><td>revoke the stage area</td></tr><tr><td><strong>vim-airline</strong></td><td></td><td>a nice statusline at the bottom of each window</td></tr><tr><td></td><td><code>:AirlineExtensions</code></td><td>all available airline extensions</td></tr><tr><td></td><td><code>:help airline</code></td><td></td></tr><tr><td></td><td><code>:AirlineToggle</code></td><td>Open or close statusline</td></tr><tr><td><strong>nerdcommenter</strong></td><td></td><td></td></tr><tr><td></td><td><code>&lt;Leader&gt;cc</code></td><td>comment the codes under the cursor</td></tr><tr><td></td><td><code>&lt;Leader&gt;cu</code></td><td>remove comment, revoke ‘\cc’</td></tr><tr><td></td><td><code>&lt;Leader&gt;c&lt;Space&gt;</code></td><td>comment/uncomment</td></tr><tr><td></td><td><code>&lt;Leader&gt;cb</code></td><td>add comment</td></tr><tr><td></td><td><code>&lt;Leader&gt;cs</code></td><td>add comment, a different comment</td></tr><tr><td><strong>vim-visual-multi</strong></td><td></td><td>put cursur on multiple locations and then c, d, i …{motion}</td></tr><tr><td></td><td><code>:help vm-quickref</code></td><td></td></tr><tr><td></td><td><code>\\/</code></td><td>start search</td></tr><tr><td></td><td><code>n</code>, <code>q</code></td><td>select and jump to next one, skip</td></tr><tr><td></td><td><code>\\A</code></td><td>Select all directly</td></tr><tr><td></td><td><code>Ctrl-N</code></td><td>search the word under the cursor, just likes ‘*’</td></tr><tr><td></td><td><code>\\\</code></td><td>add a cursor location manually</td></tr><tr><td><strong>Terminal</strong></td><td><code>:help t_CTRL-W</code></td><td></td></tr><tr><td></td><td><code>:term[inal] [cmd] ++noclose/++close</code></td><td>open a ternminal, and to not close/close when exiting shell</td></tr><tr><td></td><td><code>:vert term</code>, <code>:tab term</code></td><td></td></tr><tr><td></td><td><code>Ctrl-w &#39;N&#39;</code>, <code>Ctrl-\ Ctrl-N</code></td><td>quit terminal, enter normal text terminal</td></tr><tr><td></td><td><code>a</code>, <code>i</code></td><td>reactive terminal</td></tr><tr><td></td><td><code>Ctrl-W &quot;&lt;register&gt;</code></td><td>paste the value of <register></td></tr><tr><td></td><td><code>Ctrl-W .</code></td><td>send ‘Ctrl-W’ to terminal</td></tr><tr><td></td><td><code>Ctrl-W Ctrl-\</code></td><td>send ‘Ctrl-&#39; to ternminal</td></tr><tr><td></td><td><code>exit</code>, <code>Ctrl-D</code></td><td>quit terminal</td></tr><tr><td></td><td><code>Ctrl-w Ctrl-c</code></td><td>Force quit terminal</td></tr><tr><td><strong>GDB</strong></td><td></td><td></td></tr><tr><td></td><td><code>:packadd termdebug</code></td><td></td></tr><tr><td></td><td><code>:Termdebug</code></td><td>start to debug</td></tr><tr><td><strong>echofunc</strong></td><td>‘tags is required for this plugin’</td><td></td></tr><tr><td></td><td><code>let g:EchoFuncAutoStartBalloonDeclaration = 0</code></td><td>disable the function prompt</td></tr><tr><td></td><td><code>Alt-=</code>, <code>Alt -</code></td><td>to swith the function prototype declartion</td></tr><tr><td><strong>Cscope</strong></td><td></td><td></td></tr><tr><td></td><td><code>Ctrl-\ &lt;cmd&gt;</code></td><td>Execute cscope cmd in the current window</td></tr><tr><td></td><td><code>|&lt;cmd&gt;</code></td><td>Execute cscope cmd in a new herizontal window</td></tr><tr><td></td><td><code>||&lt;CMD&gt;</code></td><td>Execute cscope cmd in a new vertical window</td></tr><tr><td></td><td><code>apt install cscope</code></td><td></td></tr><tr><td></td><td><code>cscope  -b</code></td><td></td></tr><tr><td></td><td><code>g</code></td><td>find the global definition</td></tr><tr><td></td><td><code>s</code></td><td>find the reference of symbol</td></tr><tr><td></td><td><code>d</code></td><td>find the called function</td></tr><tr><td></td><td><code>c</code></td><td>find who call this funciton</td></tr><tr><td></td><td><code>t</code></td><td>find all locations where this text appears</td></tr><tr><td></td><td><code>e</code></td><td>with ‘egrep’ to search</td></tr><tr><td></td><td><code>f</code></td><td>According to filename to search, likes gf, <Ctrl-W>f of vim.</td></tr><tr><td></td><td><code>i</code></td><td>find who includes this file</td></tr><tr><td></td><td><code>a</code></td><td>find where it is assigned</td></tr><tr><td></td><td><code>:cscope find g funcname</code>, <code>Ctrl-\ g</code>, <code>Ctrl-]</code></td><td>find the definition of funcname</td></tr><tr><td></td><td><code>:scscope find g funcname</code>, <code>|g</code>, <code>Ctrl-w ]</code></td><td>split the window</td></tr><tr><td></td><td><code>:vert scscope find g funcname</code>, <code>||g</code></td><td>vertically split the window</td></tr><tr><td><strong>clang-format</strong></td><td></td><td></td></tr><tr><td></td><td><code>apt install clang-format</code></td><td></td></tr><tr><td></td><td><code>cp .vim/.clang-format .</code></td><td>copy to the current project to make it work</td></tr><tr><td></td><td><code>Tab</code></td><td>format code</td></tr><tr><td><strong>python-mode</strong></td><td></td><td>‘K’ for searching works</td></tr><tr><td></td><td><code>:Pymodeint</code></td><td>check code format</td></tr><tr><td></td><td><code>:PymodeLintAuto</code></td><td>Fix automaticly</td></tr><tr><td><strong>vim-renamer</strong></td><td></td><td></td></tr><tr><td></td><td><code>:Ren[amer]</code></td><td>rename</td></tr><tr><td></td><td><code>Ctrl-Del</code></td><td>delete fiel</td></tr><tr><td></td><td><code>gu</code></td><td>lowcase the selected word</td></tr><tr><td></td><td><code>Ctrl-V</code>, <code>Ctrl-A</code>, <code>Ctrl-X</code></td><td>increase, decrease the number</td></tr><tr><td><strong>vim-rainbow</strong></td><td></td><td></td></tr><tr><td></td><td><code>:RainbowToggle</code></td><td></td></tr><tr><td></td><td><code>:RainbowLoad</code></td><td></td></tr></tbody></table><h1 id="More-tips"><a href="#More-tips" class="headerlink" title="More tips"></a>More tips</h1><h2 id="write-with-sudo"><a href="#write-with-sudo" class="headerlink" title="write with sudo"></a>write with sudo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:w !sudo tee %</span><br><span class="line"></span><br><span class="line"><span class="comment"># :w – Write a file (actually buffer).</span></span><br><span class="line"><span class="comment"># !sudo – Call shell with sudo command.</span></span><br><span class="line"><span class="comment"># tee – The output of write (vim :w) command redirected using tee.</span></span><br><span class="line"><span class="comment"># % – The % is nothing but current file name.</span></span><br></pre></td></tr></table></figure><h2 id="c2i-to-modify-the-content-in"><a href="#c2i-to-modify-the-content-in" class="headerlink" title="c2i{ to  modify the content in {}."></a><code>c2i&#123;</code> to  modify the content in {}.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(count&lt;100) &#123;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># -&gt; ```c2i&#123;`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(ture)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Complex-repeats"><a href="#Complex-repeats" class="headerlink" title="Complex repeats"></a>Complex repeats</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">q           -&gt; record, <span class="emphasis">* to search, qa to record content to a register</span></span><br><span class="line"><span class="emphasis">eabar<span class="xml"><span class="tag">&lt;<span class="name">Esc</span>&gt;</span></span>  -&gt; Modify foo under the cursor to foobar , ea -&gt; append at end of foo</span></span><br><span class="line"><span class="emphasis">@           -&gt; execute</span></span><br><span class="line"><span class="emphasis">q           -&gt; stop to record</span></span><br><span class="line"><span class="emphasis">@a          -&gt; repeat modification</span></span><br><span class="line"><span class="emphasis">`````</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">## Register</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">```bash</span></span><br><span class="line"><span class="emphasis">unnamed register &quot;&quot; : default,no &quot; before opertation or &quot;&quot; . &quot;&quot;p = p</span></span><br><span class="line"><span class="emphasis">0..9: 0 - the latest yank(d,x,c...), 1..9 and so on. &quot;0p -&gt; paste 0 register content.</span></span><br><span class="line"><span class="emphasis">- -&gt; delete less than one line, and not use &#x27;%,(,),`,/,?,n,N&#x27; to delete, the contents will save in &#x27;-&#x27; register</span></span><br><span class="line"><span class="emphasis">- a..z -&gt; need user to point, quit vim will not clear. &quot;ayy, &quot;ap could always paste it until a is rewriten</span></span><br><span class="line"><span class="emphasis">- .,:,#,% -&gt; uncommonly used, :help &quot;. </span></span><br><span class="line"><span class="emphasis">- _ -&gt; black hole register, for delete , likes /dev/null</span></span><br><span class="line"><span class="emphasis">- / -&gt; last search pattern register, used for &#x27;n&#x27; , &#x27;hlsearch&#x27;...</span></span><br><span class="line"><span class="emphasis">- = -&gt; expression register</span></span><br><span class="line"><span class="emphasis">- + -&gt; system clipboard, help &quot;+</span></span><br><span class="line"><span class="emphasis">- *</span>,~ -&gt; help &quot;  </span><br><span class="line"></span><br><span class="line">&quot;+yy -&gt; yank to system clipboard , &quot;+y12G  -&gt; yank to 12G</span><br><span class="line">&quot;+nyy</span><br><span class="line"></span><br><span class="line">&quot;+p -&gt; paste from system clipboard</span><br><span class="line">&quot;+P</span><br></pre></td></tr></table></figure><p>Access register:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">normal mode -&gt; d,y,p, &quot;ayy...</span><br><span class="line">Insert mode -&gt; Ctrl-R&lt;register&gt;</span><br></pre></td></tr></table></figure><h2 id="swith-two-contents"><a href="#swith-two-contents" class="headerlink" title="swith two contents"></a>swith two contents</h2><ul><li><code>d</code> -&gt; delete first content, unnamed register saved it</li><li><ul><li><code>p</code> -&gt; select next content, p , unnamed register will saved new content</li></ul></li><li><ul><li><code>P</code> -&gt; Paste next content to first location </li></ul></li></ul><h2 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">:v&#x2F;&lt;pattern&gt;&#x2F;d -&gt; find not &lt;pattern&gt; content and delete to filter.</span><br><span class="line">:g -&gt; help :g  ,find &lt;pattern&gt; content</span><br><span class="line"></span><br><span class="line">:364,757y equals 364GV757Gy</span><br><span class="line"></span><br><span class="line">:%s&#x2F;pattern&#x2F;&#x2F;ng  -&gt; Print matching message, and no changes will be made to buffer</span><br><span class="line"></span><br><span class="line">&#96;:global&#x2F;pattern&#x2F;print&#96;, &#96;:g&#x2F;pattern&#96;   -&gt; Display all &lt;pattern&gt; lines in a new window</span><br></pre></td></tr></table></figure><h1 id="Vim-cheat-sheet-for-programmers"><a href="#Vim-cheat-sheet-for-programmers" class="headerlink" title="Vim cheat sheet for programmers"></a>Vim cheat sheet for programmers</h1><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/vim/vim_cheat_sheet_for_programmers_print.png" alt="vim_cheat_sheet_for_programmers_print"></p><h1 id="Vim-common-cheat-sheet"><a href="#Vim-common-cheat-sheet" class="headerlink" title="Vim common cheat sheet"></a>Vim common cheat sheet</h1><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/vim/vi-vim-cheat-sheet.gif" alt="vi-vim-cheat-sheet"></p>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to develop and debug kernel?</title>
      <link href="2020/11/16/Linux/How-to-develop-and-debug-kernel/"/>
      <url>2020/11/16/Linux/How-to-develop-and-debug-kernel/</url>
      
        <content type="html"><![CDATA[<blockquote><p>此篇文章是基于高通 ODM BSP 开发做的一个简单总结，起初是用来对新人进行培训的。</p></blockquote><p>我觉得学习内核驱动时，最开始只需要 ‘Know what, not know how ’。 不用去探究细节，只需要知道整体的框架，知道有哪些需要我们重视的内容即可。</p><h1 id="何为-Linux-内核开发？"><a href="#何为-Linux-内核开发？" class="headerlink" title="何为 Linux 内核开发？"></a>何为 Linux 内核开发？</h1><h2 id="首先，初步认识下-Linux-kernel"><a href="#首先，初步认识下-Linux-kernel" class="headerlink" title="首先，初步认识下 Linux kernel"></a>首先，初步认识下 Linux kernel</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/linux_intro.png" alt="linux_intro"></p><ul><li>Linux 内核的框架如上图。</li><li>设备子系统负责和硬件打交道。</li><li>大部分工作集中在设备子系统部分。</li></ul><a id="more"></a><h2 id="内核开发是什么？"><a href="#内核开发是什么？" class="headerlink" title="内核开发是什么？"></a>内核开发是什么？</h2><ul><li>广义上讲，新增或修改上图中内核部分的所有子系统。</li><li>非 Linux 源码贡献者，一般来说只修改设备子系统部分。</li></ul><p>接下来，简单聊聊初学者需要重点关注的三个部分：设备树，字符设备，平台设备驱动。</p><h2 id="设备树（DTS）"><a href="#设备树（DTS）" class="headerlink" title="设备树（DTS）"></a>设备树（DTS）</h2><p>设备树相当于一份软件中描述硬件结构的配置框图。假设下图为硬件框图：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/dts_hw.png" alt="dts_hw"> </p><p>那么其软件描述的代码片段如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">/ &#123; <span class="comment">// root node</span></span><br><span class="line">    model = <span class="string">&quot;Qualcomm Technologies, Inc. SDM xxx&quot;</span>;</span><br><span class="line">    compatible = <span class="string">&quot;qcom,sdmxxx&quot;</span>;</span><br><span class="line">    cpus &#123;</span><br><span class="line">        ... </span><br><span class="line">        cpu@<span class="number">0</span> &#123;</span><br><span class="line">            ... </span><br><span class="line">        &#125;;</span><br><span class="line">        cpu@<span class="number">1</span> &#123;</span><br><span class="line">            ... </span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    usb@&lt;address&gt; &#123;</span><br><span class="line">        ... </span><br><span class="line">    &#125;;</span><br><span class="line">    serial@&lt;address&gt; &#123;</span><br><span class="line">        ... </span><br><span class="line">    &#125;;</span><br><span class="line">    gpio@&lt;address&gt; &#123;</span><br><span class="line">        ... </span><br><span class="line">    &#125;;</span><br><span class="line">    intc: interrupt-controller@&lt;address&gt; &#123;</span><br><span class="line">        ... </span><br><span class="line">    &#125;;</span><br><span class="line">    external-bus &#123;</span><br><span class="line">        ...</span><br><span class="line">        i2c@<span class="number">0</span>,<span class="number">0</span> &#123;</span><br><span class="line">            ... </span><br><span class="line">            xxx@&lt;address&gt; &#123; <span class="comment">// I2C Dev</span></span><br><span class="line">            .... </span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line">        flash@<span class="number">1</span>,<span class="number">0</span> &#123;</span><br><span class="line">            ... </span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="字符设备驱动"><a href="#字符设备驱动" class="headerlink" title="字符设备驱动"></a>字符设备驱动</h2><ul><li>字符设备驱动是理解设备驱动的基础。</li><li>大多数设备都可以归于字符设备。  </li></ul><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/char_dev.png" alt="char_dev"></p><h2 id="平台设备驱动模型"><a href="#平台设备驱动模型" class="headerlink" title="平台设备驱动模型"></a>平台设备驱动模型</h2><ul><li>设备（或驱动）注册时，会通过总线去匹配对应的驱动（或设备）。</li><li>设备和驱动通常需要挂在一种实际总线上，除带有 I2C、SPI、USB 等的设备外，内核为没有实际总线的外设实现了虚拟的平台总线 。</li><li>平台设备驱动是独立于字符设备、网络设备等的一种抽象概念 。</li></ul><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/platform_dev.png" alt="platform_dev">  </p><h1 id="kernel-开发需要什么样的知识储备？"><a href="#kernel-开发需要什么样的知识储备？" class="headerlink" title="kernel 开发需要什么样的知识储备？"></a>kernel 开发需要什么样的知识储备？</h1><h2 id="C-语言"><a href="#C-语言" class="headerlink" title="C 语言"></a>C 语言</h2><p>良好的 C 语言能力， Linux 官方推荐了如下书籍。  </p><ul><li><a href="https://book.douban.com/subject/25735837/">The C Programming Language</a></li><li><a href="https://book.douban.com/subject/4743677/">Practical C Programming</a></li><li><a href="https://book.douban.com/subject/1767969/">C: A Reference Manual</a></li></ul><p>不过我觉得结合如下书籍一步步学习会更适合学习：  </p><ol><li>《啊哈 C 语言》入门书籍，号称马桶上看的 C 语言，通俗易懂。</li><li>《The C Programming Language》的中文版 《C 程序设计语言》，英文版也是很好一个选择的，一书两用，技术和英语都学习了。我觉得这一本是学习 C 语言的朋友们，必读的一本。</li><li>《C 专家编程》，这本书主要讲语法特性，告诉我们 C 语言是怎么设计出来的，看了这本书，我们可以更深刻的理解每一行代码。</li><li>《C 缺陷与陷阱》，《C 专家编程 》的延续，针对性更强，告诉我们 C 语言这个工具的缺陷与陷阱，让我们使用 c 语言时更加游刃有余。</li><li>《数据结构与算法分析 : C语言描述》，入门数据结构与算法，也是一本经典书籍，比《算法导论》那边砖头厚的书友好得多。</li></ol><h2 id="GNU"><a href="#GNU" class="headerlink" title="GNU"></a>GNU</h2><p>内核由 GNU C 和 GNU toolchain 实现，所以如下两方面的知识是需要的。</p><ul><li>GNU C 的编码规则</li><li>GNU 工具链的使用</li></ul><h2 id="Linux-基本命令"><a href="#Linux-基本命令" class="headerlink" title="Linux 基本命令"></a>Linux 基本命令</h2><p>学习 Linux 前，我们需要先熟悉 Linux 的“命令行 + 文件”的使用模式，要想学好一个东西，开始肯定需要用好这个东西。《鸟哥的 Linux 私房菜》应该是最适合初学者的一本书了。如果想深入的话，推荐 《Linux 系统管理技术手册》，这本书很厚，算是 Linux 运维必备的手册。  </p><ul><li><a href="https://book.douban.com/subject/4889838/">鸟哥的 Linux 私房菜</a></li><li><a href="https://book.douban.com/subject/10747453/">Linux 系统管理技术手册</a></li></ul><h2 id="设备驱动相关知识"><a href="#设备驱动相关知识" class="headerlink" title="设备驱动相关知识"></a>设备驱动相关知识</h2><ul><li><a href="https://book.douban.com/subject/1723151/">Linux 设备驱动程序</a></li></ul><h2 id="内核原理"><a href="#内核原理" class="headerlink" title="内核原理"></a>内核原理</h2><ul><li><a href="https://book.douban.com/subject/3229243/">Linux 内核完全注释</a></li><li><a href="https://book.douban.com/subject/1767120/">深入理解 Linux 内核</a></li></ul><h1 id="在我们的工作中，kernel-开发一般怎么做？"><a href="#在我们的工作中，kernel-开发一般怎么做？" class="headerlink" title="在我们的工作中，kernel 开发一般怎么做？"></a>在我们的工作中，kernel 开发一般怎么做？</h1><h2 id="Android-设备通常的开发周期"><a href="#Android-设备通常的开发周期" class="headerlink" title="Android 设备通常的开发周期"></a>Android 设备通常的开发周期</h2><p>在我们的工作中，kernel 开发主要集中在 Bringup、Integrate、Verify 三个阶段 。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/product_phase.png" alt="product_phase"></p><h2 id="源码获取"><a href="#源码获取" class="headerlink" title="源码获取"></a>源码获取</h2><ul><li>高通的代码分两部分：一部分是开源的，可以从 codeaurora.org 下载，还有一部分是高通产权的，需要从高通的网站上下载。</li><li>高通产权的代码存放路径：vendor/qcom/proprietary 。</li><li>实际工作中，SCM 一般会帮忙准备好 Base 代码。<blockquote><p>可以通过 <code>repo init -u https://android.googlesource.com/platform/manifest -b android-4.0.1_r1</code> 在 <a href="https://source.android.com/setup/build/downloading">Source.android</a> 下载 Google 官方源码。</p></blockquote></li></ul><h2 id="Bringup"><a href="#Bringup" class="headerlink" title="Bringup"></a>Bringup</h2><ul><li>根据需求实现各种外设模块的基本功能。</li><li>LCD、TP 、Sensor 、Charger 等功能正常，手机能进入 Launcher 界面，能正常使用，USB 连接正常。<br>这样 Bringup 工作就基本完成了。</li></ul><h2 id="Porting-和编写各种外设的驱动（需求的具体实现）"><a href="#Porting-和编写各种外设的驱动（需求的具体实现）" class="headerlink" title="Porting 和编写各种外设的驱动（需求的具体实现）"></a>Porting 和编写各种外设的驱动（需求的具体实现）</h2><ul><li>Porting 硬件相关配置，即实现 DTS 。</li><li>Porting 相关驱动 。</li><li>Sensor 和其他外设有一点差异 。</li><li>其分为 AP 侧驱动（厂商提供）和 ADSP 侧驱动（高通和厂商协同）两种方式 。</li><li>主要配置总线、 GPIO 及 Sensor 的属性 。</li></ul><h2 id="系统维护（解-BUG）"><a href="#系统维护（解-BUG）" class="headerlink" title="系统维护（解 BUG）"></a>系统维护（解 BUG）</h2><ul><li>对比机</li><li>阅读源码</li><li>善用调试工具</li><li><a href="https://createpoint.qti.qualcomm.com/">Createpoint</a> + <a href="https://qualcomm-cdmatech-support.my.salesforce.com/">QCOM Case</a> （<em>高通文档工具下载，及向高通在线寻求帮助。</em>）</li><li>搜索引擎</li><li>GTD （主动性）</li><li>文档（Read + Write）</li></ul><h1 id="kernel-调试的常用方式有哪些？"><a href="#kernel-调试的常用方式有哪些？" class="headerlink" title="kernel 调试的常用方式有哪些？"></a>kernel 调试的常用方式有哪些？</h1><h2 id="硬件调试"><a href="#硬件调试" class="headerlink" title="硬件调试"></a>硬件调试</h2><ul><li>示波器</li><li>程控电源</li><li>万用表</li><li>Power monitor </li></ul><h2 id="Logs"><a href="#Logs" class="headerlink" title="Logs"></a>Logs</h2><ul><li>串口日志</li><li>Logging System</li><li>logcat/kmsg… </li><li>Enhanced log</li><li>pstore</li><li>ramdump</li></ul><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><ul><li>adb dumpsys</li><li>gdb</li><li>QPST</li><li>Get ramdump/adsp log/… - systrace</li><li>trace CPU/GPU/Function/Activity/… - powerTop</li><li>power consumption</li><li>kmemleak</li><li>vmstat + top/ps + pmap in android</li><li>out/soong/host/linux-x86/bin/ - simg2img/lpdump… </li><li>objdump</li></ul><h2 id="文件系统或节点"><a href="#文件系统或节点" class="headerlink" title="文件系统或节点"></a>文件系统或节点</h2><ul><li>sys</li><li>power/irq/gpio … </li><li>proc</li><li>内核信息</li><li>打印级别</li><li>dynamic debug</li><li>echo “file xxx.c +p” &gt; /sys/kernel/dynamic_debug/control</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>原来你是这样的 VCS！</title>
      <link href="2020/11/13/Git/vcs-repo-git/"/>
      <url>2020/11/13/Git/vcs-repo-git/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文的动态图皆来自于莉迪亚·哈莉（Lydia Hallie） 的文章 <a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1">CS Visualized: Useful Git Commands</a>。</p></blockquote><h1 id="VCS-的发展历史"><a href="#VCS-的发展历史" class="headerlink" title="VCS 的发展历史"></a>VCS 的发展历史</h1><p>首先，我们来聊聊 VCS， Version Control System， 即版本控制系统的发展历史。  </p><h2 id="Manual-VCS"><a href="#Manual-VCS" class="headerlink" title="Manual VCS"></a>Manual VCS</h2><p>最初的时候，大家都是通过复制目录来进行版本管理，如下图：  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/manual_vcs.png" alt="manual vcs">  </p><p>这样做的缺点显而易见：  </p><ul><li>难以维护</li><li>难以回溯</li></ul><a id="more"></a><h2 id="Central-VCS"><a href="#Central-VCS" class="headerlink" title="Central VCS"></a>Central VCS</h2><p>然后呢，就有了 svn ， 一种集中式版本控制系统，效率一下提升了很多，不过呢仍然有诸多不便，最明显的就是客户端功能较弱。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/central_vcs.jpeg" alt="central_vcs"></p><ul><li>集中的版本管理服务器</li><li>支持版本管理与分支管理</li><li>客户端需要保持与服务器相连</li></ul><h2 id="Distributed-VCS"><a href="#Distributed-VCS" class="headerlink" title="Distributed VCS"></a>Distributed VCS</h2><p>再到后面，Linus 同学就出马了， 不得不说大神就是大神，一直是只能膜拜的存在， 开发了 linux 不说，觉得已有的 VCS 不好用，就自己花了一周多的时间开发了划时代的 git，一种分布式版本控制系统。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/distributed_vcs.jpeg" alt="distributed_vcs"></p><ul><li>服务端和客户端都有完整的版本库</li><li>客户端可以在本地进行版本管理</li><li>能在本地进行回溯等大多数操作</li></ul><h1 id="Git-work-flow"><a href="#Git-work-flow" class="headerlink" title="Git work flow"></a>Git work flow</h1><p> 在工作流程方面来说的话， 我把 Git 看着四个层级，第一呢， working directory， 即工作区， 第二呢 staging area ，即暂存区，第三呢 local repository， 即本地仓库，第四呢，remote repository ，即远程仓库。  </p><p>当我们在本地做了修改，<code>git add</code> 之后，内容就提交到了暂存区，即 <code>index</code> 文件，<code>git commit</code> 之后呢，就提交到了本地仓库，<code>git push</code> 之后，就推到了远程仓库。  </p><p>反过来，我们可以通过 <code>git fetch/clone</code> 从远程仓库取到本地仓库，然后本地仓库的东西可以通过 <code>git reset --soft</code> 还原到暂存区，而暂存区的内容可以通过 <code>git restore --staged</code> 移交到工作区，工作区的修改我们可以通过 <code>git checkout/restore</code> 遗弃掉。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_workflow.png" alt="git_workflow"></p><h1 id="Git-tips"><a href="#Git-tips" class="headerlink" title="Git tips"></a>Git tips</h1><p>接下来，针对我们比较常用的部分分享一些 tips。  </p><h2 id="Documentation"><a href="#Documentation" class="headerlink" title="Documentation"></a>Documentation</h2><p><a href="git-scm.com">官方文档</a>是我们第一时间应该关注的部分，可以看到上面不仅有教程，还有 cheat sheet 和视频，基本上我们想要的都可以从上面找到的。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_official_doc.png" alt="git_official_doc"></p><h2 id="man"><a href="#man" class="headerlink" title="man"></a>man</h2><p>学过 Linux 的都应该比较熟悉这个命令，我们不可能记住所有的命令以及它们的用法，使用的时候就可以通过 <code>man</code> 命令去确认相关信息，  Git 这个文档不知道是谁写得，名字取得十分有特色：the stupid  content tracker。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/man_git.png" alt="man_git"></p><p>另外一些比较常用的 help 命令：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">help</span>        <span class="comment"># 常用命令</span></span><br><span class="line">git <span class="built_in">help</span> -a     <span class="comment"># 所有命令</span></span><br><span class="line">git <span class="built_in">help</span> -g     <span class="comment"># 常用教程</span></span><br><span class="line"></span><br><span class="line">git &lt;<span class="built_in">command</span>&gt; --<span class="built_in">help</span></span><br><span class="line">git <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt; <span class="comment"># 指定命令</span></span><br></pre></td></tr></table></figure><h2 id="git-config"><a href="#git-config" class="headerlink" title="git config"></a>git config</h2><p><code>git config</code> 命令呢用来配置我们常用的 gitconfig 文件，分为 local，global，sytem 。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">local</span>      <span class="comment"># 当前 git 仓, .git/config</span></span><br><span class="line">git config --global     <span class="comment"># 当前用户, ~/.gitconfig</span></span><br><span class="line">git config --system     <span class="comment"># 当前电脑的所有用户, git 安装路径</span></span><br></pre></td></tr></table></figure><blockquote><p>Priority: local &gt; global &gt; system</p></blockquote><h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h2><p><code>git log</code> 算使用频率十分高的一个命令，用来查看提交历史。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --oneline --all -n5 --graph <span class="comment"># oneline 代表单行显示， all 代表显示所有分支， graph 代表以图表展示</span></span><br><span class="line">git <span class="built_in">log</span> &lt;branch&gt;        <span class="comment"># 查看指定分支</span></span><br></pre></td></tr></table></figure><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_log.png" alt="git_log"></p><h2 id="gitk"><a href="#gitk" class="headerlink" title="gitk"></a>gitk</h2><p>有时候用命令行的图形化查看提交历史不是那么形象，就可以通过 gitk 来直观的查看。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/gitk.png" alt="gitk"></p><h2 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git diff [-- filename]          <span class="comment"># 比较工作区与暂存区</span></span><br><span class="line">git diff HEAD                   <span class="comment"># 比较工作区与 HEAD</span></span><br><span class="line">git diff --cached | --staged    <span class="comment"># 比较暂存区与 HEAD</span></span><br><span class="line"></span><br><span class="line">git diff HEAD HEAD~1 | HEAD^ / HEAD~2 | HEAD^^ | HEAD^2</span><br><span class="line"><span class="comment"># &#x27;^2&#x27;表示第二个父亲（譬如两个分支 merge 到一起，merged 的分支）, &#x27;~2&#x27; 表示父亲的父亲</span></span><br></pre></td></tr></table></figure><h2 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h2><p><code>git checkout</code> 呢主要就是基于当前基点创建新建一个指针，或者基于暂存区更新工作区。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch&gt; [base SHA-1] <span class="comment"># 创建并切换分支</span></span><br><span class="line">git checkout . | [--] filename <span class="comment"># 基于暂存区更新工作区</span></span><br><span class="line">git checkout SHA-1 <span class="comment"># 以分离头指针形式切换到 SHA-1</span></span><br></pre></td></tr></table></figure><h2 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h2><h3 id="Fast-forward-–ff"><a href="#Fast-forward-–ff" class="headerlink" title="Fast-forward (–ff)"></a>Fast-forward (–ff)</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_merge_ff.GIF" alt="git_merge_ff"></p><h3 id="No-fast-foward-–no-ff"><a href="#No-fast-foward-–no-ff" class="headerlink" title="No-fast-foward (–no-ff)"></a>No-fast-foward (–no-ff)</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_merge_noff_confict.GIF" alt="git_merge_noff_confict"></p><h3 id="Merge-Conflicts"><a href="#Merge-Conflicts" class="headerlink" title="Merge Conflicts"></a>Merge Conflicts</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_merge_noff.GIF" alt="git_merge_noff"></p><h2 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h2><p>将本地仓库的 HEAD 指针指向指定的 commit。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git reset --soft|hard|mixed &lt;commit&gt; [file]</span><br><span class="line">--soft: HEAD 指向 &lt;commit&gt;, 工作区和暂存区不变化</span><br><span class="line">--hard: 所有都指向 &lt;commit&gt;</span><br><span class="line">--mixed: 缺省值,HEAD 和暂存区指向 &lt;commit&gt;</span><br></pre></td></tr></table></figure><h3 id="git-reset-–hard"><a href="#git-reset-–hard" class="headerlink" title="git reset –hard"></a>git reset –hard</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_reset_hard.GIF" alt="git_reset_hard"></p><h3 id="git-reset-–soft"><a href="#git-reset-–soft" class="headerlink" title="git reset –soft"></a>git reset –soft</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_reset_soft.GIF" alt="git_reset_soft"></p><h2 id="git-rebase"><a href="#git-rebase" class="headerlink" title="git rebase"></a>git rebase</h2><p><code>git rebase</code> 也就是变基操作， 指定父指针进行变基，基本用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git rebase [-i] start_sha-1 [end_sha-1]</span><br><span class="line"><span class="comment"># start_sha-1: 变基 commit 的父亲</span></span><br><span class="line"><span class="comment"># a. 如果有 end_sha-1, 则变基生成一个分离头指针。</span></span><br><span class="line"><span class="comment"># b. 如果没有 end_sha-1, 则先变基生成一个分离头指针,然后将HEAD 以及分支名等指向此分离头指针。</span></span><br></pre></td></tr></table></figure><p>当我们以 <code>git rebase -i</code> 的形式执行了变基操作后，就会弹出如下的交付界面，最新的 commit 列在最下面， 所有的操作，下面都有注释，个人觉得比较常用的是 <code>p, r, s,e,d</code> 这几个。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_rebase_i.png" alt="git_rebase_i"></p><h3 id="rebase-branch"><a href="#rebase-branch" class="headerlink" title="rebase branch"></a>rebase branch</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_rebase_ff.GIF" alt="git_rebase_ff"></p><h3 id="rebase-drop"><a href="#rebase-drop" class="headerlink" title="rebase - drop"></a>rebase - drop</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_rebase_drop.GIF" alt="git_rebase_drop"></p><h3 id="rebase-squash"><a href="#rebase-squash" class="headerlink" title="rebase - squash"></a>rebase - squash</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_rebase_squash.GIF" alt="git_rebase_squash"></p><h2 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h2><p>stash 翻译过来就是存储的意思，可以理解为栈，当我们开发过程中突然插入了其他紧急情况时，可以把修改推入栈顶，完成任务后再出栈。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git stash           <span class="comment"># 存储当前修改</span></span><br><span class="line">git stash list      <span class="comment"># 查看所有存储的修改</span></span><br><span class="line">git stash pop       <span class="comment"># 推出最新存储的修改</span></span><br><span class="line">git stash apply     <span class="comment"># 用最新存储的修改,但是不推出,仍然保存在栈顶</span></span><br></pre></td></tr></table></figure><h2 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin remote.git        <span class="comment"># 关联远程仓库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定远程分支名</span></span><br><span class="line">git branch --set-upstream-to=&lt;upstream&gt;</span><br><span class="line">git branch --track &lt;branchname&gt;</span><br><span class="line">git branch -u &lt;upstream&gt;                <span class="comment"># -u = set-upstream</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置本地分支名为远程分支名,并 push</span></span><br><span class="line">git push -u origin --all                <span class="comment"># push 所有分支</span></span><br><span class="line">git push set-upstream origin branch </span><br><span class="line"></span><br><span class="line">git pull &lt;remote&gt; &lt;branch&gt;              <span class="comment"># 指定 merge 的远程和本地分支</span></span><br></pre></td></tr></table></figure><h2 id="git-submodule"><a href="#git-submodule" class="headerlink" title="git submodule"></a>git submodule</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive git://github.com/foo/bar.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># for already existed</span></span><br><span class="line">git submodule update --init --recursive</span><br><span class="line">git mv old/path/to/module new/path/to/module</span><br></pre></td></tr></table></figure><h2 id="Search-history"><a href="#Search-history" class="headerlink" title="Search history"></a>Search history</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --all --grep=<span class="string">&#x27;search content&#x27;</span></span><br><span class="line"></span><br><span class="line">git grep <span class="string">&#x27;search content&#x27;</span> $(git rev-list --all)</span><br><span class="line">git rev-list --all | xargs git grep <span class="string">&#x27;search content&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="LearnGitBranching"><a href="#LearnGitBranching" class="headerlink" title="LearnGitBranching"></a>LearnGitBranching</h2><p><a href="https://learngitbranching.js.org/?NODEMO=&locale=zh_CN">pcottle/learnGitBranching</a>是一个比较好用的在线 Git 练习网站。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/learninggitbranch.png" alt="learninggitbranch"></p><h2 id="gitconfig"><a href="#gitconfig" class="headerlink" title=".gitconfig"></a>.gitconfig</h2><p><a href="https://github.com/csswizardry/dotfiles/blob/master/.gitconfig">Template: dotfiles/.gitconfig</a> 是一个比较全的 gitconfig 模板，我们可以参考这个模板设计自己的 gitconfig，譬如如下是我的 gitconfig。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/gitconfig.png" alt="gitconfig"></p><h1 id="git-directory"><a href="#git-directory" class="headerlink" title=".git directory"></a>.git directory</h1><p>我创建了一个简单的演示 demo，做了几次提交，创建了些文件夹和文件，如下：  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_demo_tree.png" alt="git_demo_tree"></p><h2 id="git-HEAD"><a href="#git-HEAD" class="headerlink" title=".git/HEAD"></a>.git/HEAD</h2><p><code>HEAD</code> 相当于是一个指针，指向当前工作的分支或者 commit。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_head.png" alt="git_head"></p><h2 id="git-index"><a href="#git-index" class="headerlink" title=".git/index"></a>.git/index</h2><p><code>index</code> 就是我们所说的暂存区，其主要由如下四部分内容组成，不过我们可以不用太关心。  </p><ul><li>一个 12 字节的标头</li><li>排序的 index 条目</li><li>通过签名识别的扩展名</li><li>160 位 SHA-1</li></ul><p>通过下图我们可以看到 <code>index</code> 是一个二进制文件，我们很难从其内容中看出什么东西。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_index.png" alt="git_index"></p><p>不过 <code>Git</code> 提供了 <code>ls-files</code> 命令来查看暂存区中的内容。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_ls_files.png" alt="git_ls_files"></p><h2 id="git-config-1"><a href="#git-config-1" class="headerlink" title=".git/config"></a>.git/config</h2><p>最高优先级的 local configuration, 同一台电脑上的多个项目可以通过此文件进行差异化配置.  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_config.png" alt="git_config"></p><h2 id="git-refs"><a href="#git-refs" class="headerlink" title=".git/refs"></a>.git/refs</h2><p>这个文件夹里面存储的就是所有的 commit ‘指针’文件。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_refs.png" alt="git_refs"></p><h2 id="git-logs"><a href="#git-logs" class="headerlink" title=".git/logs"></a>.git/logs</h2><p>此文件夹存放的是变更历史，可以看到 HEAD 指针， 分支，远程分支的内容都是一样的，只是远程分支的 message 一直是 ‘update by push’。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_logs.png" alt="git_logs"></p><h2 id="git-objects"><a href="#git-objects" class="headerlink" title=".git/objects"></a>.git/objects</h2><p>此文件夹存放所有的对象，即我们管理的内容。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_objects.png" alt="git_objects"></p><h2 id="commit-tree-blob"><a href="#commit-tree-blob" class="headerlink" title="commit, tree,blob"></a>commit, tree,blob</h2><p><code>commit, tree, blob</code> 是 Git 的三个基本单元, 比如我的 Demo 的提交历史如下.  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_log_demo.png" alt="git_log_demo"></p><p>我们可以通过 <code>git cat-file -p</code> 查看 Git 对象的内容，通过 <code>git cat-file -t</code> 查看 Git 对象的类型。</p><h3 id="从第二个-commit-726c6c0-看进去"><a href="#从第二个-commit-726c6c0-看进去" class="headerlink" title="从第二个 commit (726c6c0) 看进去"></a>从第二个 commit (726c6c0) 看进去</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_commit_content1.png" alt="git_commit_content1"></p><h3 id="从-HEAD-看进去"><a href="#从-HEAD-看进去" class="headerlink" title="从 HEAD 看进去"></a>从 HEAD 看进去</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_commit_content2.png" alt="git_commit_content2"></p><p>为了节约空间，任何相同内容的文件 ， 在 Git 看来都是同一个 blob  享元模式 ，享元模式是应用编程比较常见的一个概念，（Flyweight Pattern）主要用于减少创建对象的数量，以减少内存占用和提高性能。感兴趣的下来可以去了解下。享元模式和单例模式有点类似，不过它是针对对象，而单例模式是针对类。譬如相同字符串，只分配一次内存，地址一样，指向同一个对象，可以节省内存。<br>根目录下的 <code>README.md</code> 和 <code>doc/README.md</code> 文件内容相同，所以 Git 只存储一份，</p><h2 id="Detached-HEAD"><a href="#Detached-HEAD" class="headerlink" title="Detached HEAD"></a>Detached HEAD</h2><p>分离头指针，这个在实际开发中也比较容易见到，比如我的当前提交历史如下：  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_demo_log_graph.png" alt="git_demo_log_graph"></p><p>通过 <code>git checkout 8c19a38</code> 切到分离头指针。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_detached_head.png" alt="git_detached_head"></p><p><code>git commit -am</code> 如下修改。   </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_detached_head_diff.png" alt="git_detached_head_diff"></p><p><code>git commit</code> 后的状态如下图，在切换分支时如果我们不用分支或者 tags 关联此 commit，这部分内容就会被 git 回收掉。 不过很多时候分离头指针在 Git 里还是大有用处的，比如在 rebase 的时候。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/git_detached_head_push.png" alt="git_detached_head_push"></p><h1 id="Repo-work-flow"><a href="#Repo-work-flow" class="headerlink" title="Repo work flow"></a>Repo work flow</h1><p>一般开始编码工作之前我都会通过 <code>repo start</code> 创建对应的 <code>Git Topic branch</code>， 完成开发工作后合入主分支，或者直接提交。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- A - B - C - D - master .</span><br><span class="line">            \</span><br><span class="line">            E - F - G - topic234</span><br><span class="line">After merge:</span><br><span class="line">- A - B - C - D - master^ - master</span><br><span class="line">            \                /</span><br><span class="line">            E - F - G - topic234</span><br></pre></td></tr></table></figure><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/repo_workflow.png" alt="repo_workflow"></p><h1 id="Repo-tips"><a href="#Repo-tips" class="headerlink" title="Repo tips"></a>Repo tips</h1><p>repo 的 tips 内容很简单，就下图的这些命令：</p><ul><li>给所有仓创建 topic 分支</li><li>清除本地修改，保持和远程仓库一致</li><li>回退到指定时间点</li><li>本地镜像多套代码</li></ul><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/repo_tips.png" alt="repo_tips"></p><h1 id="repo-directory"><a href="#repo-directory" class="headerlink" title=".repo directory"></a>.repo directory</h1><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/repo_dirctory.png" alt="repo_dirctory"></p><h2 id="repo"><a href="#repo" class="headerlink" title="repo"></a>repo</h2><p>repo 由 launcher 和 tool 两部分组成， launcher 是一个 python 脚本，也就是我们用到的 repo ， tool 由其下载 ， tool 也是一系列 python 脚本，我们平时执行 <code>repo xxx</code> 命令时，会把后面的参数转发给 tool ，由 tool 来执行。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/repo_launcher_tool.png" alt="repo_launcher_tool"></p><h2 id="repo-init"><a href="#repo-init" class="headerlink" title="repo init"></a>repo init</h2><p><code>repo init</code> 执行流程转换为命令形式如下：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">--------------------</span><br><span class="line">mkdir .repo; <span class="built_in">cd</span> .repo</span><br><span class="line">git <span class="built_in">clone</span> https://gerrit.googlesource.com/git-repo</span><br><span class="line">git <span class="built_in">clone</span> --bare <span class="variable">$URL</span> manifests.git</span><br><span class="line">mkdir -p manifests/.git; <span class="built_in">cd</span> manifests/.git</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ../../manifests.git/*; <span class="keyword">do</span> ln -s <span class="variable">$i</span> .; <span class="keyword">done</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">git checkout <span class="variable">$BRANCH</span> -- .</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">ln -s manifests/<span class="variable">$MANIFEST</span> manifest.xml</span><br></pre></td></tr></table></figure><h2 id="repo-sync"><a href="#repo-sync" class="headerlink" title="repo sync"></a>repo sync</h2><ol><li>克隆 manifest.xml 中指定的 git 仓库到 .repo/projects。</li><li>基于.repo/projects 中的裸仓库创建工作路径及其中 .git 链接。</li><li>checkout manifest 中指定的分支到工作路径,并更新 .repo/project.list。</li></ol><h2 id="manifests"><a href="#manifests" class="headerlink" title="manifests"></a>manifests</h2><h3 id="manifests-repo"><a href="#manifests-repo" class="headerlink" title="manifests repo"></a>manifests repo</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/repo_manifest.png" alt="repo_manifest"></p><h3 id="manifest-format"><a href="#manifest-format" class="headerlink" title="manifest format"></a>manifest format</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/repo_manifest_format.png" alt="repo_manifest_format"></p><h2 id="repo-hook"><a href="#repo-hook" class="headerlink" title="repo hook"></a>repo hook</h2><p>Repo 提供了一种机制，使用自定义的 python 模块 hook 运行时的特定阶段。所有 hook 都位于一个 git 项目中，该项目基于 mainifests 在 <code>repo init</code> 时 checkout 。<code>repo hook</code> 在执行步骤之前(例如提交到Gerrit之前)运行 linters, 检查格式及进行单元测试, linter 简单来说就是分析源码，查找问题的工具。</p><p><a href="https://android.googlesource.com/platform/tools/repohooks">Android 项目</a> 中可以找到一个完整的示例。它可以很容易地被任何基于 repo 的项目使用，并不特定于Android。如下是一个 mainifest 设置范例。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;project path=<span class="string">&quot;tools/repohooks&quot;</span> name=<span class="string">&quot;platform/tools/repohooks&quot;</span> /&gt;</span><br><span class="line">&lt;repo-hooks in-project=<span class="string">&quot;platform/tools/repohooks&quot;</span> enabled-list=<span class="string">&quot;pre-upload&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="project-list"><a href="#project-list" class="headerlink" title="project.list"></a>project.list</h2><p>repo 跟踪的所有仓库:    </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/repo_project_list.png" alt="repo_project_list"></p><h2 id="projects-project-objects"><a href="#projects-project-objects" class="headerlink" title="projects, project-objects"></a>projects, project-objects</h2><ul><li>projects: manifest 中指定的所有 project 的 git 裸仓库,repo 将基于此 git 仓库生成工作区。</li><li>project-objects:可以在多个本地 git 中安全共享的 Git 对象。</li></ul><p>i.e. : 将 foo/bar.git 的不同分支 checkout 到本地 foo/bar-master,foo/bar-release 等, 在 projects 下将为每一个分支创建路径,而 project-objects 下面将会只有一个路径。  </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/media/projects_objects.png" alt="projects_objects"></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> Repo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pstore 的一些记录</title>
      <link href="2020/11/13/Android/pstore/"/>
      <url>2020/11/13/Android/pstore/</url>
      
        <content type="html"><![CDATA[<h1 id="What-is-pstore？"><a href="#What-is-pstore？" class="headerlink" title="What is pstore？"></a>What is pstore？</h1><p><code>pstore, persistent storage</code>, 是一个存储内核日志或者内核 panic 的文件系统，内核会把相关信息存储在一个不能被其他用户重写的指定 RAM 区域，下一次启动时，这个区域会被挂载到 <code>/pstore</code>，一般在 <code>/sys/fs/pstore</code>, 这样我们就可以访问这些数据了。</p><p>pstore 在内核中的开关是 CONFIG_PSTORE，pstore 提供的是一套可扩展的机制，提供如下类型：</p><ul><li>PSTORE_TYPE_DMESG, 表示内核日志</li><li>PSTORE_TYPE_MCE, 表示硬件错误</li><li>PSTORE_TYPE_CONSOLE, 表示控制台输出,所有内核信息。</li><li>PSTORE_TYPE_FTRACE, 表示函数调用序列, ftrace 信息。</li></ul><p>ramoops 指的是采用 ram 保存 oops 信息的一个功能，这个功能从 3.10.40 开始采用 pstore 机制来实现，内核中的开关控制：</p><ul><li>PSTORE_PMSG，用户空间信息，/dev/pmsg0，pmsg-ramoops-<ID></li><li>PSTORE_CONSOLE，控制台输出，所有内核信息，console-ramoops-<ID></li><li>PSTORE_FTRACE，函数调用序列, ftrace 信息。</li><li>PSTORE_RAM， panic/oops 信息</li></ul><h1 id="How-to-config"><a href="#How-to-config" class="headerlink" title="How to config?"></a>How to config?</h1><a id="more"></a><p>用我本地的 SDM660 和 MSM8909 平台源码配置 pstore 时，按照如下方式可以实现：  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// kernel/msm-4.14/arch/arm64/configs/vendor/sdm660_defconfig</span></span><br><span class="line">CONFIG_PSTORE=y</span><br><span class="line">CONFIG_PSTORE_CONSOLE=y</span><br><span class="line">CONFIG_PSTORE_RAM=y</span><br><span class="line">CONFIG_PSTORE_FTRACE=y</span><br><span class="line"></span><br><span class="line">CONFIG_DEBUG_FS=y</span><br><span class="line">CONFIG_FUNCTION_TRACER=y</span><br><span class="line"></span><br><span class="line"><span class="keyword">and</span> disable below config:</span><br><span class="line"># CONFIG_STRICT_MEMORY_RWX</span><br><span class="line"></span><br><span class="line"># kernel/msm<span class="number">-4.14</span>/fs/pstore/ram.c</span><br><span class="line">-<span class="keyword">static</span> ulong ramoops_console_size = MIN_MEM_SIZE;</span><br><span class="line">+<span class="keyword">static</span> ulong ramoops_console_size = <span class="number">256</span>*<span class="number">1024U</span>L;</span><br><span class="line"></span><br><span class="line">- <span class="keyword">static</span> ulong mem_address;</span><br><span class="line">+ <span class="keyword">static</span> ulong mem_address=<span class="number">0x9ff00000</span>;</span><br><span class="line"> module_param(mem_address, ulong, <span class="number">0400</span>);</span><br><span class="line"> MODULE_PARM_DESC(mem_address,</span><br><span class="line">         <span class="string">&quot;start of reserved RAM used to store oops/panic logs&quot;</span>);</span><br><span class="line"> </span><br><span class="line">- <span class="keyword">static</span> ulong mem_size;</span><br><span class="line">+ <span class="keyword">static</span> ulong mem_size=<span class="number">0x100000</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// kernel/msm-4.14/arch/arm64/boot/dts/qcom/sdm660.dtsi</span></span><br><span class="line"><span class="comment">// 在 RAM 中保留空间：       </span></span><br><span class="line">reserved-memory &#123;</span><br><span class="line"><span class="meta">#address-cells = <span class="meta-string">&lt;2&gt;;</span></span></span><br><span class="line"><span class="meta">#size-cells = <span class="meta-string">&lt;2&gt;;</span></span></span><br><span class="line">ranges;</span><br><span class="line">        ...</span><br><span class="line">+        pstore_reserve_mem: pstore_reserve_mem_region@<span class="number">0</span> &#123;</span><br><span class="line">+            linux,reserve-contiguous-region;</span><br><span class="line">+            linux,reserve-region;</span><br><span class="line">+            linux,remove-completely;</span><br><span class="line">+            reg = &lt;<span class="number">0x0</span> <span class="number">0x9ff00000</span> <span class="number">0x0</span> <span class="number">0x00100000</span>&gt;;</span><br><span class="line">+            label = <span class="string">&quot;pstore_reserve_mem&quot;</span>;</span><br><span class="line">+        &#125;;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基于我的实验，在 SM6125 平台按照如下方式修改可以使 ramoops 正常工作。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// arch/arm64/boot/dts/qcom/trinket.dtsi</span></span><br><span class="line">@@ <span class="number">-594</span>,<span class="number">6</span> +<span class="number">594</span>,<span class="number">18</span> @@</span><br><span class="line">size = &lt;<span class="number">0</span> <span class="number">0x2000000</span>&gt;;</span><br><span class="line">linux,cma-<span class="keyword">default</span>;</span><br><span class="line">&#125;;</span><br><span class="line">+</span><br><span class="line">+ <span class="comment">/* enabled pstore */</span></span><br><span class="line">+ ramoops: ramoops@ffc00000 &#123;</span><br><span class="line">+ compatible = <span class="string">&quot;removed-dma-pool&quot;</span>, <span class="string">&quot;ramoops&quot;</span>;</span><br><span class="line">+ no-<span class="built_in">map</span>;</span><br><span class="line">+ reg = &lt;<span class="number">0</span> <span class="number">0xffc00000</span> <span class="number">0</span> <span class="number">0x00100000</span>&gt;;</span><br><span class="line">+ record-size = &lt;<span class="number">0x1000</span>&gt;;</span><br><span class="line">+ console-size = &lt;<span class="number">0x40000</span>&gt;;</span><br><span class="line">+ ftrace-size = &lt;<span class="number">0x0</span>&gt;;</span><br><span class="line">+ msg-size = &lt;<span class="number">0x20000</span> <span class="number">0x20000</span>&gt;;</span><br><span class="line">+ cc-size = &lt;<span class="number">0x0</span>&gt;;</span><br><span class="line">+ &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// arch/arm64/configs/vendor/trinket-perf_defconfig</span></span><br><span class="line">CONFIG_SND_SOC_DBMDX_VA_I2S_MASTER=y</span><br><span class="line">CONFIG_SND_SOC_DBMDX_AEC_REF_32_TO_16_BIT=y</span><br><span class="line">CONFIG_ANT_CHECK=y</span><br><span class="line">+</span><br><span class="line">+# enable pstore</span><br><span class="line">+CONFIG_PSTORE=y</span><br><span class="line">+CONFIG_PSTORE_FTRACE=y</span><br><span class="line">+CONFIG_PSTORE_PMSG=y</span><br><span class="line">+CONFIG_PSTORE_RAM=y</span><br><span class="line">+CONFIG_PSTORE_CONSOLE=y</span><br><span class="line">-CONFIG_FREE_PAGES_RDONLY=y</span><br><span class="line"></span><br><span class="line"><span class="comment">//为了保持在 DDR 中保存 `pstore` 的内容，需要设备 WARM-RESET。</span></span><br><span class="line"># drivers/power/reset/msm-poweroff.c,</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> msm_restart_prepare(<span class="keyword">const</span> <span class="keyword">char</span> *cmd)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">bool</span> need_warm_reset = <span class="literal">false</span>;</span><br><span class="line">...</span><br><span class="line">+ <span class="comment">/* WARM-RESET is needed for keeping PSTORE content in DDR */</span></span><br><span class="line">+ need_warm_reset = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Hard reset the PMIC unless memory contents must be maintained. */</span></span><br><span class="line"><span class="keyword">if</span> (need_warm_reset) &#123;</span><br><span class="line">    qpnp_pon_system_pwr_off(PON_POWER_OFF_WARM_RESET);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    qpnp_pon_system_pwr_off(PON_POWER_OFF_HARD_RESET);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Where-does-sysfs-create"><a href="#Where-does-sysfs-create" class="headerlink" title="Where does sysfs create?"></a>Where does sysfs create?</h1><p>我们可以在 <code>/sys/fs/pstore/*</code> 看到加载的 <code>pstore</code> 数据，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls /sys/fs/pstore/                                                                                                                                                                               </span><br><span class="line">console-ramoops-0 pmsg-ramoops-0  ...</span><br></pre></td></tr></table></figure><p>其来自于如下源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /kernel/msm-4.4/fs/pstore/inode.c#300</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pstore_mkfile</span><span class="params">(<span class="keyword">enum</span> pstore_type_id type, <span class="keyword">char</span> *psname, u64 id, <span class="keyword">int</span> count,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">char</span> *data, <span class="keyword">bool</span> compressed, <span class="keyword">size_t</span> size,</span></span></span><br><span class="line"><span class="function"><span class="params">  struct timespec time, struct pstore_info *psi)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">switch</span> (type) &#123;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_DMESG:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;dmesg-%s-%lld%s&quot;</span>,</span><br><span class="line">  psname, id, compressed ? <span class="string">&quot;.enc.z&quot;</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_CONSOLE:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;console-%s-%lld&quot;</span>, psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_FTRACE:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;ftrace-%s-%lld&quot;</span>, psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_MCE:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;mce-%s-%lld&quot;</span>, psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_PPC_RTAS:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;rtas-%s-%lld&quot;</span>, psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_PPC_OF:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;powerpc-ofw-%s-%lld&quot;</span>,</span><br><span class="line">  psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_PPC_COMMON:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;powerpc-common-%s-%lld&quot;</span>,</span><br><span class="line">  psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_PMSG:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;pmsg-%s-%lld&quot;</span>, psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_PPC_OPAL:</span><br><span class="line"><span class="built_in">sprintf</span>(name, <span class="string">&quot;powerpc-opal-%s-%lld&quot;</span>, psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PSTORE_TYPE_UNKNOWN:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;unknown-%s-%lld&quot;</span>, psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">scnprintf(name, <span class="keyword">sizeof</span>(name), <span class="string">&quot;type%d-%s-%lld&quot;</span>,</span><br><span class="line">  type, psname, id);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h1 id="How-to-test"><a href="#How-to-test" class="headerlink" title="How to test?"></a>How to test?</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查 pstore 配置成功与否。</span></span><br><span class="line">cat /sys/module/pstore/parameters/*  </span><br><span class="line">ramoops <span class="comment"># backend</span></span><br><span class="line">-1      <span class="comment"># update_ms</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查相关预留 size 是否配置成功</span></span><br><span class="line">ls /sys/module/ramoops/parameters</span><br><span class="line">console_size ftrace_size mem_type         pmsg_pmc_size    record_size </span><br><span class="line">dump_oops    mem_address pmsg_events_size pmsg_radio_size  </span><br><span class="line">ecc          mem_size    pmsg_main_size   pmsg_system_size </span><br><span class="line">cat /sys/module/ramoops/parameters/*</span><br><span class="line">131072</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">0</span><br><span class="line">2499805184</span><br><span class="line">1441792</span><br><span class="line">0</span><br><span class="line">262144</span><br><span class="line">262144</span><br><span class="line">262144</span><br><span class="line">262144</span><br><span class="line">262144</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable record ftrace</span></span><br><span class="line">mount -t debugfs debugfs /sys/kernel/debug/</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /sys/kernel/debug/pstore/record_ftrace</span><br><span class="line"></span><br><span class="line"><span class="comment"># `pstore` 配置成功后，不能自动重启并加载 pstore 数据的话，一般是由于配置了 panic 时进入 download mode。即 download_mode 为 1，定义于 `kernel/msm-4.14/drivers/power/reset/msm-poweroff.c`。</span></span><br><span class="line"><span class="comment"># disable download mode:</span></span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /sys/module/msm_poweroff/parameters/download_mode</span><br><span class="line"><span class="built_in">echo</span> c &gt; /proc/sysrq-trigger</span><br><span class="line"></span><br><span class="line">ls /sys/fs/pstore/</span><br><span class="line">  console-ramoops</span><br><span class="line">  dmesg-ramoops-0</span><br><span class="line">  dmesg-ramoops-1</span><br><span class="line">  ftrace-ramoops</span><br><span class="line"></span><br><span class="line">cat /sys/fs/pstore/ftrace-ramoops</span><br><span class="line">0 c08bf830  c08bfbf0  do_page_fault.part.8 &lt;- do_page_fault+0x3c/0xa8</span><br><span class="line">0 c001b770  c08bfb48  fixup_exception &lt;- do_page_fault.part.8+0x32c/0x398</span><br><span class="line">0 c0045bb0  c001b780  search_exception_tables &lt;- fixup_exception+0x20/0x38</span><br><span class="line">0 c008914c  c0045bd8  search_module_extables &lt;- search_exception_tables+0x38/0x44</span><br><span class="line">0 c08bff5c  c008915c  add_preempt_count &lt;- search_module_extables+0x24/0xc0</span><br><span class="line">0 c08bfe78  c00891cc  sub_preempt_count &lt;- search_module_extables+0x94/0xc0</span><br><span class="line">0 c08b2e28  c08bfb64  __do_kernel_fault.part.7 &lt;- do_page_fault.part.8+0x348/0x398</span><br></pre></td></tr></table></figure><h1 id="How-to-debug"><a href="#How-to-debug" class="headerlink" title="How to debug?"></a>How to debug?</h1><ol><li><p>在 <code>msm_restart_probe</code> 中加日志确认 PMIC 是被配置为 warm reset mode。</p></li><li><p>如果需要为未知重启保存 <code>pstore</code> 日志，需要确认 <code>XBL</code> 中正确设置了 PSHOLD trigger 为 PMIC warm reset mode。</p></li><li><p>查看 <code>pstore</code> setup 流程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ramoops_init</span><br><span class="line">ramoops_register_dummy</span><br><span class="line">ramoops_probe</span><br><span class="line">ramoops_register</span><br></pre></td></tr></table></figure></li><li><p>查看 <code>pstore</code> 数据保存流程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">register</span> a pstore_dumper</span><br><span class="line"><span class="comment">// when panic happens, kmsg_dump is called</span></span><br><span class="line">call dumper-&gt;dump</span><br><span class="line">pstore_dump</span><br></pre></td></tr></table></figure></li><li><p>查看 <code>pstore</code> 数据读取流程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ramoops_probe</span><br><span class="line">persistent_ram_post_init</span><br><span class="line">pstore_register</span><br><span class="line">pstore_get_records</span><br><span class="line">ramoops_pstore_read</span><br><span class="line">pstore_decompress (only <span class="keyword">for</span> dmesg)</span><br><span class="line">pstore_mkfile (save to files)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>What is in the .repo?</title>
      <link href="2020/10/17/Git/What-is-in-the-repo/"/>
      <url>2020/10/17/Git/What-is-in-the-repo/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2019/09/15/Git/How-does-android-repo-work/">How does the repo of android source code work ?</a></p><h1 id="repo"><a href="#repo" class="headerlink" title=".repo"></a>.repo</h1><p>通常情况下， Android 的 <code>.repo</code> 里面有如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls .repo</span><br><span class="line">manifests  manifests.git  manifest.xml  project.list  project-objects  projects  repo</span><br></pre></td></tr></table></figure><h1 id="manifests"><a href="#manifests" class="headerlink" title="manifests"></a>manifests</h1><p><code>manifests</code> 路径是项目 manifest 仓的 <code>git checkout</code>，其中的 <code>.git</code> 是 <code>manifest.git</code> 的软链接，追踪 <code>repo init --manifest-branch</code> 指定的分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.repo$ ls manifests/.git/</span><br><span class="line">config       HEAD   index  logs     ORIG_HEAD    refs      shallow</span><br><span class="line">description  hooks  info   objects  packed-refs  rr-cache  svn</span><br><span class="line"></span><br><span class="line">.repo$ ls manifests.git/</span><br><span class="line">branches  description  HEAD   info  objects      refs      svn</span><br><span class="line">config    FETCH_HEAD   hooks  logs  packed-refs  rr-cache</span><br></pre></td></tr></table></figure><p>不管远程分支名字是什么，<code>manifests</code> 的本地分支命名为 default。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.repo$ cat manifests/.git/HEAD </span><br><span class="line">ref: refs/heads/default  </span><br><span class="line"></span><br><span class="line">.repo$ cat manifests.git/config  </span><br><span class="line"><span class="comment"># cat manifests/.git/config</span></span><br><span class="line">[core]</span><br><span class="line">repositoryformatversion = 0</span><br><span class="line">filemode = <span class="literal">true</span></span><br><span class="line">[filter <span class="string">&quot;lfs&quot;</span>]</span><br><span class="line">smudge = git-lfs smudge --skip -- %f</span><br><span class="line">[remote <span class="string">&quot;origin&quot;</span>]</span><br><span class="line">url = https://&lt;url&gt;/platform/manifest.git</span><br><span class="line">fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line">[branch <span class="string">&quot;default&quot;</span>]</span><br><span class="line">remote = origin</span><br><span class="line">merge = refs/heads/&lt;remote_branch_name&gt;</span><br></pre></td></tr></table></figure><h1 id="manifests-git"><a href="#manifests-git" class="headerlink" title="manifests.git"></a>manifests.git</h1><p><code>manifests.git</code> 是当前项目 <code>manifest</code> 仓的一个没有工作空间的 <code>checkout</code>，即只 <code>checkout</code> <code>.git</code> ，追踪<code>repo init --manifest-url</code> 指定的 Git 仓。不能手动修改这部分，如果需要修改的话，可重新运行 <code>repo init</code> 来更新设置。</p><h2 id="repo-config-json"><a href="#repo-config-json" class="headerlink" title=".repo_config.json"></a>.repo_config.json</h2><p>缓存 <code>manifests.git/config</code>，用来提升 <code>repo</code> 的速度。</p><h1 id="manifest-xml"><a href="#manifest-xml" class="headerlink" title="manifest.xml"></a>manifest.xml</h1><p><code>repo</code> 使用的 <code>manifest</code> ， 此文件由 <code>repo init --manifest-name</code> 指定链接到 <code>manifests</code> 中的哪一个文件，如下：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manifest.xml -&gt; manifests/&lt;manifest-name&gt;.xml <span class="comment"># 指向用户希望用来同步源码的 manifest</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Manifest-format"><a href="#Manifest-format" class="headerlink" title="Manifest format"></a>Manifest format</h2><p>以 <a href="https://android.googlesource.com/platform/manifest/+/master/default.xml">default.xml in Android</a> 为例简单介绍下 manifest 的格式。 </p><blockquote><p>详细格式介绍见 <a href="https://gerrit.googlesource.com/git-repo/+/master/docs/manifest-format.md">repo Manifest Format</a> 。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    name: 独一无二的一个名字， 用作每个项目中 .git/config 的 remote name, 自动用于 git fetch, git remote, git pull and git push 等命令， 大多数时候我们会定义为 ‘origin’.</span></span><br><span class="line"><span class="comment">    alias: 别名，重写 name。</span></span><br><span class="line"><span class="comment">    fetch: 用作所有使用此 remote 的 Git URL 前缀，在后面加上项目名就形成了 ’git clone‘ 需要的链接。</span></span><br><span class="line"><span class="comment">    pushurl: ’git push‘ 的链接前缀，若未定义，则使用 ’fetch‘ 属性。</span></span><br><span class="line"><span class="comment">    review: ’repo upload‘ 的 Gerrit 服务器主机名，此服务器主要用来 review ，如果不指定，’repo upload‘ 命令无效。</span></span><br><span class="line"><span class="comment">    revision: Git 分支名 (e.g. master or refs/heads/master)，若定义，将重写下方 default revision.</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">remote</span>  <span class="attr">name</span>=<span class="string">&quot;aosp&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">fetch</span>=<span class="string">&quot;..&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">review</span>=<span class="string">&quot;https://android-review.googlesource.com/&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    默认属性，remote 或 project 未定义则使用此处定义属性。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    remote: projects 的默认 remote name，在前面 remote 中定义</span></span><br><span class="line"><span class="comment">    revision: projects 的默认分支名</span></span><br><span class="line"><span class="comment">    dest-branch: 默认 review 分支名，不设置则使用 revison 属性作为默认分支  </span></span><br><span class="line"><span class="comment">    upstream: sha1 的来源 Git ref 名，有时我们只需要同步到某 Git ref 指定的 sha1，而不用在 `-c mode` 同步整个 ref 空间，则用 upstream 指定 ref ，revision 指定 sha1.</span></span><br><span class="line"><span class="comment">    sync-j: 同步时的默认并行线程数</span></span><br><span class="line"><span class="comment">    sync-c: true， 表示只同步当前 revision， 而不是整个 ref 空间.</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">default</span> <span class="attr">revision</span>=<span class="string">&quot;master&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">remote</span>=<span class="string">&quot;aosp&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">sync-j</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      </span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">manifest-server</span> <span class="attr">url</span>=<span class="string">&quot;http://android-smartsync.corp.google.com/android.googlesource.com/manifestserver&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    path: 当前 project 的 git 工作路径</span></span><br><span class="line"><span class="comment">    revision: Git 分支名，可以来自 refs/heads (e.g. just “master”)， “refs/heads/master”， Tags， SHA-1s，如果不设定，则由 remote 或者 default 中的属性决定.</span></span><br><span class="line"><span class="comment">    dest-branch: repo upload 的 review 分支名. 如果这里和 default 都没有指定此属性，则使用 revision 属性</span></span><br><span class="line"><span class="comment">    groups: project 所属组， 多个组用空格或逗号隔开，所有 projects 都默认属于 “all” ，”name:name“， ”path:path“  </span></span><br><span class="line"><span class="comment">    upstream: 指定 sha1 的 Git ref 名</span></span><br><span class="line"><span class="comment">    copyfile: 复制文件到指定位置</span></span><br><span class="line"><span class="comment">    linkfile: 链接文件到指定位置</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;build/make&quot;</span> <span class="attr">name</span>=<span class="string">&quot;platform/build&quot;</span> <span class="attr">groups</span>=<span class="string">&quot;pdk&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">copyfile</span> <span class="attr">src</span>=<span class="string">&quot;core/root.mk&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;Makefile&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linkfile</span> <span class="attr">src</span>=<span class="string">&quot;CleanSpec.mk&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;build/CleanSpec.mk&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linkfile</span> <span class="attr">src</span>=<span class="string">&quot;buildspec.mk.default&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;build/buildspec.mk.default&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linkfile</span> <span class="attr">src</span>=<span class="string">&quot;core&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;build/core&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linkfile</span> <span class="attr">src</span>=<span class="string">&quot;envsetup.sh&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;build/envsetup.sh&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linkfile</span> <span class="attr">src</span>=<span class="string">&quot;target&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;build/target&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linkfile</span> <span class="attr">src</span>=<span class="string">&quot;tools&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;build/tools&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;build/bazel&quot;</span> <span class="attr">name</span>=<span class="string">&quot;platform/build/bazel&quot;</span> <span class="attr">groups</span>=<span class="string">&quot;pdk&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linkfile</span> <span class="attr">src</span>=<span class="string">&quot;bazel.WORKSPACE&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;WORKSPACE&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;build/blueprint&quot;</span> <span class="attr">name</span>=<span class="string">&quot;platform/build/blueprint&quot;</span> <span class="attr">groups</span>=<span class="string">&quot;pdk,tradefed&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;build/soong&quot;</span> <span class="attr">name</span>=<span class="string">&quot;platform/build/soong&quot;</span> <span class="attr">groups</span>=<span class="string">&quot;pdk,tradefed&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linkfile</span> <span class="attr">src</span>=<span class="string">&quot;root.bp&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;Android.bp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linkfile</span> <span class="attr">src</span>=<span class="string">&quot;bootstrap.bash&quot;</span> <span class="attr">dest</span>=<span class="string">&quot;bootstrap.bash&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;art&quot;</span> <span class="attr">name</span>=<span class="string">&quot;platform/art&quot;</span> <span class="attr">groups</span>=<span class="string">&quot;pdk&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;bionic&quot;</span> <span class="attr">name</span>=<span class="string">&quot;platform/bionic&quot;</span> <span class="attr">groups</span>=<span class="string">&quot;pdk&quot;</span> /&gt;</span></span><br><span class="line">...</span><br><span class="line">  <span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;tools/treble&quot;</span> <span class="attr">name</span>=<span class="string">&quot;platform/tools/treble&quot;</span> <span class="attr">groups</span>=<span class="string">&quot;tools,pdk&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;tools/trebuchet&quot;</span> <span class="attr">name</span>=<span class="string">&quot;platform/tools/trebuchet&quot;</span> <span class="attr">groups</span>=<span class="string">&quot;tools,cts,pdk,pdk-cw-fs,pdk-fs&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">repo-hooks</span> <span class="attr">in-project</span>=<span class="string">&quot;platform/tools/repohooks&quot;</span> <span class="attr">enabled-list</span>=<span class="string">&quot;pre-upload&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">## repo hook</span><br><span class="line"></span><br><span class="line">[hook](https://android.googlesource.com/platform/tools/repohooks) 主要在允许执行步骤之前（例如在将提交上载到Gerrit之前），运行 linters，检查格式和运行单元测试。</span><br><span class="line"></span><br><span class="line">&gt; linter 的维基百科解释是：a tool that analyzes source code to flag programming errors, bugs, stylistic errors, and suspicious constructs.<span class="tag">&lt;<span class="name">br</span>/&gt;</span>简单来说就是分析源码，查找问题。</span><br><span class="line"></span><br><span class="line">如下是一个 Android 中的使用范例，在战’pre-upload&#x27;（即，`repo upload`） 阶段运行名为 ’platform/tools/repohooks‘ 的 hook 。</span><br><span class="line">```xml</span><br><span class="line"> <span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;tools/repohooks&quot;</span> <span class="attr">name</span>=<span class="string">&quot;platform/tools/repohooks&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repo-hooks</span> <span class="attr">in-project</span>=<span class="string">&quot;platform/tools/repohooks&quot;</span> <span class="attr">enabled-list</span>=<span class="string">&quot;pre-upload&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h1 id="project-list"><a href="#project-list" class="headerlink" title="project.list"></a>project.list</h1><p><code>repo sync</code> 基于此文件内容增删 projects ，并更新对应的 <code>checkout</code> 工作路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.repo$ more project.list </span><br><span class="line">art</span><br><span class="line">bionic</span><br><span class="line">bootable/bootloader/edk2</span><br><span class="line">bootable/recovery</span><br><span class="line">build/blueprint</span><br><span class="line">build/kati</span><br><span class="line">build/make</span><br><span class="line">build/soong</span><br><span class="line">cts</span><br><span class="line">dalvik</span><br><span class="line">developers/build</span><br><span class="line">...</span><br><span class="line">device/qcom/common</span><br><span class="line">device/qcom/sepolicy</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h1 id="projects"><a href="#projects" class="headerlink" title="projects"></a>projects</h1><p>存放 repo 克隆的 manifest 中指定的所有 project 的 git 仓库，repo 将基于此 git 仓库链接 .git 并创建工作路径，然后 checkout 对应分支，并更新 .repo/project.list。一些 git 将进一步拆分到如下的 project-objects。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.repo$ ls projects</span><br><span class="line">art.git     dalvik.git       frameworks           packages              shortcut-fe.git  vendor</span><br><span class="line">bionic.git  developers       hardware             pdk.git               system</span><br><span class="line">bootable    development.git  kernel               platform_testing.git  <span class="built_in">test</span></span><br><span class="line">build       device           libcore.git          prebuilts             toolchain</span><br><span class="line">cts.git     external         libnativehelper.git  sdk.git               tools</span><br></pre></td></tr></table></figure><h1 id="project-objects"><a href="#project-objects" class="headerlink" title="project-objects"></a>project-objects</h1><p>可以在多个 <code>git chekcout</code> 中安全共享的 Git 对象，例如，可以将 foo/bar.git 的不同分支 <code>checkout</code> 到 foo/bar-master，foo/bar-release 等， 在 projects 下将为每一个分支创建路径，而  project-objects 下面将会只有一个路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.repo$ ls project-objects/</span><br><span class="line">abl  device  kernel  platform  toolchain</span><br></pre></td></tr></table></figure><h1 id="repo-1"><a href="#repo-1" class="headerlink" title="repo"></a>repo</h1><p>完整的 Repo 工具，接收并处理 Repo-Launcher 转发的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ls .repo/repo/</span><br><span class="line">color.py    command.pyc  editor.py   error.pyc        git_config.py   gitc_utils.pyc  git_ssh  manifest_xml.py   pager.pyc     project.py    pyversion.pyc  repoc                  tests      wrapper.py</span><br><span class="line">color.pyc   COPYING      editor.pyc  git_command.py   git_config.pyc  git_refs.py     hooks    manifest_xml.pyc  progress.py   project.pyc   README.md      subcmds                trace.py   wrapper.pyc</span><br><span class="line">command.py  docs         error.py    git_command.pyc  gitc_utils.py   git_refs.pyc    main.py  pager.py          progress.pyc  pyversion.py  repo           SUBMITTING_PATCHES.md  trace.pyc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> Repo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 性能调试手册</title>
      <link href="2020/10/10/Android/performance-debug-guide/"/>
      <url>2020/10/10/Android/performance-debug-guide/</url>
      
        <content type="html"><![CDATA[<p>俗话说“雨过留痕，雁过留声”，之前因为工作需要折腾了小几个月的性能 BUG，还是得留下一点东西，这是第一篇：Android 性能调试手册，这篇文章简单聊聊工作中应该怎么进行性能分析。因为没有深入研究 Performance 相关内容，所以保留出错的权利。</p><h1 id="0-写在开头"><a href="#0-写在开头" class="headerlink" title="0. 写在开头"></a>0. 写在开头</h1><p>在我司处理 Performance 问题时，大多数情况不会像顶级大厂那样优化每一帧，尽量榨干每一个硬件的性能。因为没有前人提供经验，全是自己总结的，如果存在有失偏颇的地方，你也只能看着。我理解的主要处理方式如下：</p><ul><li><p>第一种，推不解。</p><ul><li>gaps 小， 个人经验是 10% 以内即可以尝试推不解，譬如：问题机 Chrome 启动时间为 800 ms， 对比机为 750 ms。</li><li>分析出时间消耗，列出与对比机的对比， 详细阐述差分部分，一般来说大部分差分是原生代码引起，或者 gaps 很小。</li></ul></li><li><p>第二种嘛，当然就是想办法解决或优化了。</p></li></ul><h1 id="1-怎么开始？"><a href="#1-怎么开始？" class="headerlink" title="1. 怎么开始？"></a>1. 怎么开始？</h1><p>针对任何性能问题，我觉得第一步都先需要做如下三个确认：</p><ol start="0"><li>确认问题现象，最好自己复现一次。</li><li>确认有没有大量 crash 发生。</li><li>查看 kernel footprint（config）， 确认是否使用 perf config： msmxxx-perf_defconfig。</li></ol><a id="more"></a><h1 id="2-systrace"><a href="#2-systrace" class="headerlink" title="2. systrace"></a>2. systrace</h1><p>我处理的这几十个性能问题中，超过 90% 都是和 APP 相关的，所以先来聊聊这方面的主要工具 systrace， 此篇文章主要讲讲调试方式，如果想了解怎么分析，可以看看我的第二篇文章 <a href="http://huaqianlee.github.io/2020/10/10/Android/breakdown_from_touch_input_to_drawing.html">APP 启动，触摸事件和 UI 绘制的简单分析示例</a> 和官方文档。</p><h2 id="2-1-Python-脚本"><a href="#2-1-Python-脚本" class="headerlink" title="2.1 Python 脚本"></a>2.1 Python 脚本</h2><p>比较常用的方式是通过 Google 提供的 Python 脚本抓取 systrace， 我们可以在 SDK 或者 Android 源码中找到这个脚本，使用方式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">systrace.py gfx rs input view <span class="built_in">sched</span> am wm camera dalvik freq idle load sync workq power mmc disk sm audio hal video app res binder_driver binder_lock -b 20480 -t 10 -o trace.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># -b trace buffer 大小,单位为 kb，建议 20M，太小会信息不足，太大会因内存不足而抓取不了</span></span><br><span class="line"><span class="comment"># -t 持续时间，单位为秒，时间必须覆盖问题现场，但是也不能太长，不然内存不足</span></span><br><span class="line"><span class="comment"># -o Systrace 输出的文件路径</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要抓取的 tags,一般情况下，我们可以全选。不同的 Android SDK 其 tags 有所不同, 可以通过如下方式查看。</span></span><br><span class="line">systrace.py --list-categories</span><br><span class="line">gfx - Graphics</span><br><span class="line">input - Input</span><br><span class="line">view - View System</span><br><span class="line">wm - Window Manager</span><br><span class="line">am - Activity Manager</span><br><span class="line">hal - Hardware Modules</span><br><span class="line">res - Resource Loading</span><br><span class="line">dalvik - Dalvik VM</span><br><span class="line">power - Power Management</span><br><span class="line"><span class="built_in">sched</span> - CPU Scheduling</span><br><span class="line">freq - CPU Frequency</span><br><span class="line">idle - CPU Idle</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="2-2-atrace"><a href="#2-2-atrace" class="headerlink" title="2.2 atrace"></a>2.2 atrace</h2><p>有些性能问题只有在不连接 USB 的时候才能重现问题,我们就需要利用 atrace 来获取离线的 systrace。</p><ol><li>确认如下先决条件是否满足：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a. adb root and adb remount is available</span><br><span class="line">b. /system/bin/atrace is available</span><br></pre></td></tr></table></figure></li><li>抓取 systrace<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb root &amp;&amp; adb remount</span><br><span class="line">adb shell</span><br><span class="line">atrace -z -b 40960 gfx input view wm am hal res dalvik rs <span class="built_in">sched</span> freq idle load disk mmc -t 15 &gt; /data/<span class="built_in">local</span>/tmp/trace_output &amp;</span><br></pre></td></tr></table></figure></li><li>断开 USB 并复现问题。</li><li>重连 USB 确认 atrace 进程是否结束。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell ps -t | grep atrace</span><br></pre></td></tr></table></figure></li><li>atrace 如已完成，取出 dump。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull /data/<span class="built_in">local</span>/tmp/trace_output</span><br></pre></td></tr></table></figure></li><li>将 dump 转换为 systrace。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systrace.py --from-file trace_output -o output.html</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-3-traceview-log"><a href="#2-3-traceview-log" class="headerlink" title="2.3 traceview log"></a>2.3 traceview log</h2><p>当我们需要深入剖析某一个进程的耗时时，我们可以通过 traceview 跟踪的程序的性能，查看每个方法执行的时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &lt;PROCESS&gt; 填写进程名,如 AndroidManifest.xml 中声明的包名，通常都是主进程名.</span></span><br><span class="line">1. adb shell am profile &lt;PROCESS&gt; start &lt;FILE&gt;</span><br><span class="line">2. 再现问题。</span><br><span class="line">3. adb shell am profile &lt;PROCESS&gt; stop</span><br><span class="line">4. &lt;FILE&gt; 即为我们需要的 traceview <span class="built_in">log</span>。</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">adb shell am profile com.android.gallery3d start /data/<span class="built_in">local</span>/tmp/galler3d.trace</span><br><span class="line">adb shell am profile com.android galler3d.stop</span><br></pre></td></tr></table></figure><h2 id="2-4-启动性能"><a href="#2-4-启动性能" class="headerlink" title="2.4 启动性能"></a>2.4 启动性能</h2><p>当遇到 APP 启动问题时，我们可以使用 profiling 来帮助我们定位问题，首先我们需要在其 activity 中添加 profiling 的代码，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Debug.startMethodTracing(<span class="string">&quot;MainActivity Trace&quot;</span> ); <span class="comment">//trace begin</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        Debug.stopMethodTracing(); <span class="comment">//trace end</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们就可以通过如下指令去获取 trace 帮助我们分析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb shell am start -n &lt;Package Name&gt;/&lt;Package Name&gt;.&lt;Activity Name&gt; --start-profiler &lt;FILE&gt;</span><br><span class="line"></span><br><span class="line">eg：</span><br><span class="line">adb shell am start -n com.example/com.example.MainActivity --start-profiler /data/<span class="built_in">local</span>/tmp/example.trace</span><br></pre></td></tr></table></figure><h1 id="3-性能模式"><a href="#3-性能模式" class="headerlink" title="3. 性能模式"></a>3. 性能模式</h1><p>使系统运行于 performance 模式，查看一下问题是否存在。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">adb shell root</span><br><span class="line">adb shell setenforce 0</span><br><span class="line">adb shell stop thermal-engine</span><br><span class="line">adb shell rmmod core_ctl</span><br><span class="line"><span class="comment"># CPU 性能模式</span></span><br><span class="line">adb shell <span class="string">&quot;echo 1 &gt; /sys/devices/system/cpu/cpu1/online&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 1 &gt; /sys/devices/system/cpu/cpu2/online&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 1 &gt; /sys/devices/system/cpu/cpu3/online&quot;</span></span><br><span class="line">...</span><br><span class="line">adb shell <span class="string">&quot;echo performance &gt; /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo performance &gt; /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo performance &gt; /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo performance &gt; /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor&quot;</span></span><br><span class="line">...</span><br><span class="line"><span class="comment"># GPU 性能模式</span></span><br><span class="line">adb shell <span class="string">&quot;echo 1 &gt; /sys/class/kgsl/kgsl-3d0/force_rail_on&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 1 &gt; /sys/class/kgsl/kgsl-3d0/force_clk_on&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 1 &gt; /sys/class/kgsl/kgsl-3d0/force_bus_on&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 10000000 &gt; /sys/class/kgsl/kgsl-3d0/idle_timer&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo performance &gt; /sys/class/kgsl/kgsl-3d0/devfreq/governor&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 0 &gt; /sys/class/kgsl/kgsl-3d0/bus_split&quot;</span></span><br><span class="line"><span class="comment"># DDR 性能模式</span></span><br><span class="line">adb shell <span class="string">&quot;echo 1 &gt; /sys/kernel/debug/msm-bus-dbg/shell-client/mas&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 512 &gt; /sys/kernel/debug/msm-bus-dbg/shell-client/slv&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 0 &gt; /sys/kernel/debug/msm-bus-dbg/shell-client/ab&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 16 * DDR max frequency &gt; /sys/kernel/debug/msm-bus-dbg/shell-client/ib&quot;</span></span><br><span class="line">adb shell <span class="string">&quot;echo 1 &gt; /sys/kernel/debug/msm-bus-dbg/shell-client/update_request&quot;</span></span><br></pre></td></tr></table></figure><h1 id="4-“死马当活马医”"><a href="#4-“死马当活马医”" class="headerlink" title="4. “死马当活马医”"></a>4. “死马当活马医”</h1><p>写在“死马当活马医”的最前面，在使用如下这些方式时，记得<strong>多和对比机对比</strong>。</p><h2 id="4-1-Thermal"><a href="#4-1-Thermal" class="headerlink" title="4.1 Thermal"></a>4.1 Thermal</h2><p>获取 thermal-engine 的调试日志，查看是否有限制动作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb shell stop thermal-engine</span><br><span class="line">adb shell thermal-engine --debug &amp;</span><br><span class="line">adb shell logcat -v time -s ThermalEngine &gt; &lt;FILE&gt;</span><br></pre></td></tr></table></figure><h2 id="4-2-Perfd"><a href="#4-2-Perfd" class="headerlink" title="4.2 Perfd"></a>4.2 Perfd</h2><p>Perfd 是 QCOM 开发的一个和性能相关的后台程序。默认情况下会开机自启动，其对机器性能至关重要，所以我们需要确保其已启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell ps |grep perfd</span><br><span class="line">root 4326 1 8704 844 futex_wait 7fa7af1984 S /system/vendor/bin/perfd</span><br></pre></td></tr></table></figure><p>我们也可以打开 perfd 的调试日志，然后抓取 logcat 和 systrace， 以便获取更多的调试信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一：</span></span><br><span class="line">adb pull /system/build.prop</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;debug.trace.perf=1&quot;</span> &gt;&gt; build.prop</span><br><span class="line">adb push build.prop /system/</span><br><span class="line">adb shell chmod 0644 /system/build.prop</span><br><span class="line">adb shell sync</span><br><span class="line">adb shell reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二：</span></span><br><span class="line">adb shell root</span><br><span class="line">adb shell setenforce 0</span><br><span class="line">adb shell setprop debug.trace.perf 1</span><br><span class="line">adb shell stop perfd</span><br><span class="line">adb shell start perfd</span><br></pre></td></tr></table></figure><h2 id="4-3-确认-ART-参数"><a href="#4-3-确认-ART-参数" class="headerlink" title="4.3 确认 ART 参数"></a>4.3 确认 ART 参数</h2><h3 id="4-3-1-pm-dexopt系统属性"><a href="#4-3-1-pm-dexopt系统属性" class="headerlink" title="4.3.1 pm.dexopt系统属性"></a>4.3.1 pm.dexopt系统属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell getprop | grep &quot;pm.dexopt&quot;</span><br><span class="line">[pm.dexopt.ab-ota]: [speed-profile]</span><br><span class="line">[pm.dexopt.bg-dexopt]: [speed-profile]</span><br><span class="line">[pm.dexopt.boot]: [verify]</span><br><span class="line">[pm.dexopt.first-boot]: [quicken]</span><br><span class="line">[pm.dexopt.inactive]: [verify]</span><br><span class="line">[pm.dexopt.install]: [quicken]</span><br><span class="line">[pm.dexopt.shared]: [speed]</span><br><span class="line"></span><br><span class="line"># pm.dexopt.install</span><br><span class="line"># 从性能上来说</span><br><span class="line">verify &lt; quicken &lt; speed-profile &lt; speed</span><br><span class="line"></span><br><span class="line"># 编译和安装速度</span><br><span class="line">verify &gt; quicken &gt; speed-profile &gt; speed</span><br></pre></td></tr></table></figure><blockquote><p>dexopt 宏： odex 开关</p></blockquote><h3 id="4-3-2-dalvik-vm-属性"><a href="#4-3-2-dalvik-vm-属性" class="headerlink" title="4.3.2 dalvik.vm 属性"></a>4.3.2 dalvik.vm 属性</h3><p>可以通过调整堆内存的初始大小（dalvik.vm.heapstartsize）来优化性能，不过此方案需谨慎。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># device/qcom/msmxxx/msmxxx.mk</span></span><br><span class="line">PRODUCT_PROPERTY_OVERRIDES += \</span><br><span class="line">dalvik.vm.dex2oat-filter=interpret-only \</span><br><span class="line">dalvik.vm.image-dex2oat-filter=speed\</span><br><span class="line">dalvik.vm.heapminfree=4m \</span><br><span class="line">dalvik.vm.heapstartsize=16m</span><br></pre></td></tr></table></figure><h2 id="4-4-系统负载"><a href="#4-4-系统负载" class="headerlink" title="4.4 系统负载"></a>4.4 系统负载</h2><h3 id="4-4-1-CPU"><a href="#4-4-1-CPU" class="headerlink" title="4.4.1 CPU"></a>4.4.1 CPU</h3><p>我比较喜欢结合如下两条命令进行分析，主要查看是否有异常进程，比如长时间暂用 CPU。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell top -m 5</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span> adb shell dumpsys cpuinfo; sleep 1; <span class="keyword">done</span> | tee cpu_usage.txt </span><br></pre></td></tr></table></figure><h3 id="4-4-2-内存与-IO"><a href="#4-4-2-内存与-IO" class="headerlink" title="4.4.2 内存与 IO"></a>4.4.2 内存与 IO</h3><p>我主要使用如下内存和 IO 的工具，一般还需要结合 <code>top、ps</code> 等工具来一起定位导致内存泄漏的进程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys meminfo</span><br><span class="line">free</span><br><span class="line">vmstat</span><br><span class="line">iostat</span><br><span class="line">pmap  PID</span><br><span class="line"></span><br><span class="line">adb shell pull /d/ion                            <span class="comment"># 可以检查heaps来确定cached ION memory.</span></span><br><span class="line">adb shell cat /d/kgsl/proc/*/mem &gt; kgsl_mem.txt  <span class="comment"># 可以用例看每个processgfx所用的memory.</span></span><br><span class="line">adb shel cat /proc/meminfo </span><br><span class="line">adb shell cat /proc/zoneinfo                     <span class="comment"># 获得更准确的memoryinfo</span></span><br><span class="line">adb shell cat /d/shrinker                        <span class="comment"># 查看可以 free的memory 大小及其优先级.</span></span><br><span class="line">adb shell cat /sys/class/kgsl/kgsl/page_alloc    <span class="comment"># kgsl  /1024/1024 gfx 分配的size</span></span><br><span class="line">adb shell cat /sys/kernel/debug/ion/heaps/system  <span class="comment"># ION  total  /1024/1024</span></span><br></pre></td></tr></table></figure><h3 id="4-4-3-event"><a href="#4-4-3-event" class="headerlink" title="4.4.3 event"></a>4.4.3 event</h3><p>一般和系统相关的性能问题，我也会对比一下 event。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -b events</span><br></pre></td></tr></table></figure><h2 id="4-5-Camera-相关"><a href="#4-5-Camera-相关" class="headerlink" title="4.5 Camera 相关"></a>4.5 Camera 相关</h2><p>遇到 Camera 相关的问题，一般需要通过如下方式增加 trace。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. adb root</span><br><span class="line">2. adb shell <span class="string">&quot;echo 1 &gt; /d/tracing/events/camera/enable&quot;</span></span><br><span class="line">3. adb shell <span class="string">&quot;echo 1 &gt; /d/tracing/tracing_on&quot;</span></span><br><span class="line">4. 在对应界面添加 Trace.beginSection 和 Trace.endSection标签</span><br></pre></td></tr></table></figure><h1 id="5-最后"><a href="#5-最后" class="headerlink" title="5. 最后"></a>5. 最后</h1><p>如上是我试验过的一些调试方法，如下两篇高通文档中，有更多针对常见问题的调试方式和解决方案。</p><p><a href="http://sorry-it-is-prietary/80-np885-1_c_graphics_power_and_performance_overview.pdf">80-np885-1_c_graphics_power_and_performance_overview.pdf</a>  </p><p>[80-p0584-1_b_common-performance-issues-debugging-guide.pdf](<a href="http://sorry-it-is-prietary/80-p0584-1_b_common">http://sorry-it-is-prietary/80-p0584-1_b_common</a> performance issues debugging guide.pdf)</p><h1 id="6-最最后"><a href="#6-最最后" class="headerlink" title="6. 最最后"></a>6. 最最后</h1><p>提供一份获取主要性能信息的脚本源码，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#=================================================================</span></span><br><span class="line"><span class="comment"># Script of capturing CPU, procrank, memory and top information with time interval.</span></span><br><span class="line">mkdir PerfLogs</span><br><span class="line">cd PerfLogs</span><br><span class="line">rm ./*.txt</span><br><span class="line">echo <span class="string">&quot;Start...&quot;</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line">do</span><br><span class="line">echo <span class="string">&quot;Perf&quot;</span></span><br><span class="line">MYDATE=`date +%y-%m-%d_%H:%M:%S`</span><br><span class="line">echo $MYDATE</span><br><span class="line"><span class="comment"># Print current CPU frequency</span></span><br><span class="line"><span class="comment"># Modify below lines based on CPU core number.</span></span><br><span class="line">echo <span class="string">&quot;&quot;</span></span><br><span class="line">echo <span class="string">&quot;$&#123;MYDATE&#125;&quot;</span> &gt;&gt; cpuinfo_cur_freq.txt &amp;</span><br><span class="line">echo <span class="string">&quot;cpu0 cur freq:`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq`&quot;</span> &gt;&gt;</span><br><span class="line">cpuinfo_cur_freq.txt &amp;</span><br><span class="line">echo <span class="string">&quot;cpu1 cur freq:`cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq`&quot;</span> &gt;&gt;</span><br><span class="line">cpuinfo_cur_freq.txt &amp;</span><br><span class="line">echo <span class="string">&quot;cpu2 cur freq:`cat /sys/devices/system/cpu/cpu2/cpufreq/scaling_cur_freq`&quot;</span> &gt;&gt;</span><br><span class="line">cpuinfo_cur_freq.txt &amp;</span><br><span class="line">echo <span class="string">&quot;cpu3 cur freq:`cat /sys/devices/system/cpu/cpu3/cpufreq/scaling_cur_freq`&quot;</span> &gt;&gt;</span><br><span class="line">cpuinfo_cur_freq.txt &amp;</span><br><span class="line">echo <span class="string">&quot;cpu4 cur freq:`cat /sys/devices/system/cpu/cpu4/cpufreq/scaling_cur_freq`&quot;</span> &gt;&gt;</span><br><span class="line">cpuinfo_cur_freq.txt &amp;</span><br><span class="line">echo <span class="string">&quot;cpu5 cur freq:`cat /sys/devices/system/cpu/cpu5/cpufreq/scaling_cur_freq`&quot;</span> &gt;&gt;</span><br><span class="line">cpuinfo_cur_freq.txt &amp;</span><br><span class="line">echo <span class="string">&quot;cpu6 cur freq:`cat /sys/devices/system/cpu/cpu6/cpufreq/scaling_cur_freq`&quot;</span> &gt;&gt;</span><br><span class="line">cpuinfo_cur_freq.txt &amp;</span><br><span class="line">echo <span class="string">&quot;cpu7 cur freq:`cat /sys/devices/system/cpu/cpu7/cpufreq/scaling_cur_freq`&quot;</span> &gt;&gt;</span><br><span class="line">cpuinfo_cur_freq.txt &amp;</span><br><span class="line">echo <span class="string">&quot;$&#123;MYDATE&#125;&quot;</span> &gt;&gt; procrank.txt &amp;</span><br><span class="line">procrank &gt;&gt; procrank.txt &amp;</span><br><span class="line">echo <span class="string">&quot;$&#123;MYDATE&#125;&quot;</span> &gt;&gt; proc_meminfo.txt &amp;</span><br><span class="line">cat /proc/meminfo &gt;&gt; proc_meminfo.txt &amp;</span><br><span class="line">echo <span class="string">&quot;$&#123;MYDATE&#125;&quot;</span> &gt;&gt; meminfo.txt &amp;</span><br><span class="line">dumpsys meminfo &gt;&gt; meminfo.txt &amp;</span><br><span class="line">echo <span class="string">&quot;$&#123;MYDATE&#125;&quot;</span> &gt;&gt; top.txt &amp;</span><br><span class="line">top -t -m <span class="number">8</span> -n <span class="number">1</span> &gt;&gt; top.txt &amp;</span><br><span class="line">sleep <span class="number">60</span> <span class="comment">#60 seconds, you can modify the time interval.</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> OS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Performance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APP 启动，触摸事件和 UI 绘制的简单分析示例</title>
      <link href="2020/10/10/Android/breakdown-from-touch-input-to-drawing/"/>
      <url>2020/10/10/Android/breakdown-from-touch-input-to-drawing/</url>
      
        <content type="html"><![CDATA[<p>“雨过留痕，雁过留声”的第二篇：APP 启动，触摸事件和 UI 绘制的简单分析示例，此文通过 systrace 分析一个示例 APP 的启动、触摸事件和 UI 绘制的流程和时间消耗。本文的示例 APP （<a href="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/SimpleApplication.apk">SimpleApplication.apk</a>）只有一个简单的按钮， 点击按钮时会改变屏幕的颜色。同样因为没有深入研究 Performance 相关内容，所以保留出错的权利。</p><blockquote><p>如果对第一篇感兴趣，请查看： <a href="http://huaqianlee.github.io/2020/10/10/Android/performance_debug_guide.html">Android 性能调试手册</a>.</p></blockquote><h1 id="0-写在开头"><a href="#0-写在开头" class="headerlink" title="0. 写在开头"></a>0. 写在开头</h1><p>我一开始看到 systrace 文件时，是一脸懵逼的，所以在开始正文之前先简单说一下 systrace 文件中的一些基本信息，如下：</p><ul><li><code>Frames</code>: 一个圆圈代表一帧。  <ul><li>绿色：正常；</li><li>黄色、红色： 异常，如卡顿、掉帧(Jank) 等，可能是它的渲染时间超过了 16.67ms（60fps）。</li><li>点击圆圈可查看详细信息</li></ul></li><li><code>Alerts</code>: 右侧标签,跟踪记录中出现的问题以及这些问题导致出现卡顿的频率</li><li><code>system_server  iq</code>: 第一帧的触发</li><li><code>gfx3d_clk</code> : GPU 频率</li><li><code>iq in systemsever</code> : 触发中断</li><li><code>bindApplication, activityStart ...</code>： 表示冷启动， 热启动不会有这些信息。</li><li><code>surfaceflinger</code>-&gt;<code>UI Thread</code>-&gt;<code>HIDL::IComposerClient:setPowerMode_2_2:client</code>: 代表 LCD 上电时间  <blockquote><p>一般使用 Chrome 打开 systrace.html， 右上角的 <code>？</code>  也可以提供一些基本的帮助</p></blockquote></li></ul><h1 id="1-获取-systrace"><a href="#1-获取-systrace" class="headerlink" title="1. 获取 systrace"></a>1. 获取 systrace</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a. python systrace.py gfx input view <span class="built_in">sched</span> am wm dalvik freq idle power video app -b 40960 -t 10 -o traceout.html</span><br><span class="line"></span><br><span class="line">Explaination of these categories:</span><br><span class="line">gfx - Graphics</span><br><span class="line">input - Input</span><br><span class="line">view - View System</span><br><span class="line">wm - Window Manager</span><br><span class="line">am - Activity Manager</span><br><span class="line">hal - Hardware Modules</span><br><span class="line">res - Resource Loading</span><br><span class="line">dalvik - Dalvik VM</span><br><span class="line">power - Power Management</span><br><span class="line"><span class="built_in">sched</span> - CPU Scheduling</span><br><span class="line">freq - CPU Frequency</span><br><span class="line">idle - CPU Idle</span><br><span class="line"></span><br><span class="line">b. Motion: Click icon of SimpleApplication to open it, click first time to change background as white, click sencond time to change background as black.</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="2-找到点击事件"><a href="#2-找到点击事件" class="headerlink" title="2. 找到点击事件"></a>2. 找到点击事件</h1><p>查看 <code>system_server</code> 的 <code>iq</code> 去定位点击事件发生的时间，如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image1.png" alt="image">                                                        </p><p>查看 InputResponse 确认点击事件，如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image2.png" alt="image"></p><h1 id="3-查看-UI-thread-和-Frames"><a href="#3-查看-UI-thread-和-Frames" class="headerlink" title="3. 查看 UI thread 和 Frames"></a>3. 查看 UI thread 和 Frames</h1><p>粗略看一下 <code>Frames</code>，发现有一个红色的 frame，红色表示 jank， 即卡顿。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image3.png" alt="image"></p><p>上诉红点也就是代表帧率少于了 60 fps，我们需要去点击红色的圆点查看详细信息，并查看下 <code>UI thread</code>，看看是否有无用的耗时或者阻塞发生。此案例中有 11 ms 左右的 sleep，如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image4.png" alt="image"></p><h1 id="4-查看线程状态"><a href="#4-查看线程状态" class="headerlink" title="4. 查看线程状态"></a>4. 查看线程状态</h1><h2 id="4-1-Orange-Uninterruptible-sleep-I-O-Block"><a href="#4-1-Orange-Uninterruptible-sleep-I-O-Block" class="headerlink" title="4.1 Orange: Uninterruptible sleep, I/O Block"></a>4.1 Orange: Uninterruptible sleep, I/O Block</h2><p>此状态表示线程正在等待硬盘 I/O 操作完成，如果有太多的橙色阻塞状态，通常存在低内存的问题。此案例中阻塞状态很短，判断为正常状态，如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image5.png" alt="image"></p><h2 id="4-2-Blue-runnable"><a href="#4-2-Blue-runnable" class="headerlink" title="4.2 Blue: runnable"></a>4.2 Blue: runnable</h2><p>表明线程处于可运行状态，等待 CPU 调度。如果线程处于可运行状态时间太长，通常 CPU 忙于调度，需要查看这些时间 CPU 忙于哪些任务。比较常见的问题场景如下：</p><ul><li>后台任务太多。</li><li>CPU 被限频。</li><li>任务运行于特定的 cpuset，而此 CPU 已经满载。</li></ul><p>此案例中处于可运行状态的时间很短，如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image6.png" alt="image"></p><h2 id="4-3-Green-running"><a href="#4-3-Green-running" class="headerlink" title="4.3 Green: running"></a>4.3 Green: running</h2><p>接下来查看下线程的运行的时间，如果耗时异常，通常需要注意如下场景：</p><ul><li>是否被限制频率。</li><li>线程跑在大核上还是小核上。</li><li>是否频繁切换线程状态。</li><li>此线程是否运行在错误的核上面。</li></ul><p>此案例中线程运行在大核上，即频率最高的 CPU7，亦无其他异常，如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image7.png" alt="image"></p><h2 id="4-4-White-Sleeping"><a href="#4-4-White-Sleeping" class="headerlink" title="4.4 White: Sleeping"></a>4.4 White: Sleeping</h2><p>此状态表示线程无事可做，处于休眠状态，一个概率比较大的情况是被　mutex 阻塞。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image8.png" alt="image"></p><h2 id="4-5-Summary"><a href="#4-5-Summary" class="headerlink" title="4.5 Summary"></a>4.5 Summary</h2><p>如上所示，我们可以看到大部分时间是消耗在运行状态，且没有频繁切换状态，所以这部分问题不是太大，当然如果想要追求更佳的性能，我们可以针对上面说的场景做更深入的调查。</p><h1 id="5-启动时间"><a href="#5-启动时间" class="headerlink" title="5. 启动时间"></a>5. 启动时间</h1><p>从系统角度来看，在 <code>Activity</code> 完成 <code>onCreate/onStart/onResume</code>阶段后，<code>ViewRootImpl</code> 将调用两次 <code>performTraversals</code> 去初始化 Egl、measure、layout、draw等，最后完成界面显示。</p><p>个人认为很难在 systrace 中获得准确的 APP 启动时间，但是我们可以在 activityResume 之后选择一个点来估算相对准确的时间。如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image9.png" alt="image"></p><p>Launcher 调用 startingWindow 去等待第一帧的绘制，如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image10.png" alt="image"></p><p>在如下指定位置，第一帧绘制已经完成。                                        </p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image11.png" alt="image"></p><p>在 SystemSever 中查看绘制流程。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image12.png" alt="image"></p><h1 id="6-systrace-中的-input"><a href="#6-systrace-中的-input" class="headerlink" title="6. systrace 中的 input"></a>6. systrace 中的 input</h1><p>InputReader 获取 input 事件，然后移交给 InputDispatcher. InputDispatcher 再将输入事件传递给对应的 App，然后请求 Vsync 去绘制第一帧。</p><ul><li>InputReader 负责从 EventHub 读取 Input 事件，然后将其移交给 InputDispatcher 进行事件分发。</li><li>InputDispatcher 打包并分发事件。</li><li>OutboundQueue 存有将分派到相应 AppConnection 的事件</li><li>WaitQueue 记录已分派到 AppConnection，但 App 仍在处理尚未返回处理成功的事件。 如果主线程 freezed 而无法处理输入事件，则 WaitQueue 的值将递增。</li><li>PendingInputEventQueue 记录应用程序需要处理的 Input 事件。</li><li>deliveryInputEvent 标识被输入事件唤醒的 App UI 线程。</li></ul><h2 id="6-1-Input-response"><a href="#6-1-Input-response" class="headerlink" title="6.1 Input response"></a>6.1 Input response</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image13.png" alt="image"></p><h2 id="6-2-OutboundQueue-and-WaitQueue"><a href="#6-2-OutboundQueue-and-WaitQueue" class="headerlink" title="6.2 OutboundQueue and WaitQueue"></a>6.2 OutboundQueue and WaitQueue</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image14.png" alt="image"></p><h2 id="6-3-Native-threads-which-Reads-and-dispatchs-input-event"><a href="#6-3-Native-threads-which-Reads-and-dispatchs-input-event" class="headerlink" title="6.3 Native threads which Reads and dispatchs input event"></a>6.3 Native threads which Reads and dispatchs input event</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image15.png" alt="image"></p><h2 id="6-4-PendingInputEventQueue"><a href="#6-4-PendingInputEventQueue" class="headerlink" title="6.4 PendingInputEventQueue"></a>6.4 PendingInputEventQueue</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image16.png" alt="image"><br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image17.png" alt="image"></p><h2 id="7-查看-CPU-信息"><a href="#7-查看-CPU-信息" class="headerlink" title="7. 查看 CPU 信息"></a>7. 查看 CPU 信息</h2><p>主要检查 CPU 使用率、C-stage、时钟频率和时钟频率的限制，以及每个核正在跑什么应用。SimpleApplication 主要运行在大核 cpu7 上，有时运行在中核上， 都是最大频率。所以 CPU 部分没有什么问题。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image18.png" alt="image"></p><h1 id="8-第一次点击事件"><a href="#8-第一次点击事件" class="headerlink" title="8. 第一次点击事件"></a>8. 第一次点击事件</h1><p>前面主要是通过全局视图和启动视图来分析 systrace，下面将分析单击事件。但是我将跳过与前面类似的分析步骤， 只重点查看一些可能会影响 UI 切换速度的差异点。</p><h2 id="8-1-CPU-情况"><a href="#8-1-CPU-情况" class="headerlink" title="8.1 CPU 情况"></a>8.1 CPU 情况</h2><p>SimpleApplication 在现阶段也主要运行在大核 cpu7 上且以最大频率运行，但是部分时间运行在限频状态下的大核和中核，如果需要对其进行优化，这是需要考虑的一点。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image19.png" alt="image"></p><h2 id="8-2-UI-thread"><a href="#8-2-UI-thread" class="headerlink" title="8.2 UI thread"></a>8.2 UI thread</h2><p>第一次单击时睡眠太久，也许这是一个可以优化的点。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image20.png" alt="image"></p><h1 id="9-结论"><a href="#9-结论" class="headerlink" title="9. 结论"></a>9. 结论</h1><h2 id="9-1-启动阶段"><a href="#9-1-启动阶段" class="headerlink" title="9.1  启动阶段"></a>9.1  启动阶段</h2><ul><li>存在卡顿，可能需要查看下是否存在异常的耗时或阻塞的代码。</li><li>UI 线程的状态还不错，如果要提高性能，可以尝试检查下内存状态和后台任务。</li></ul><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image21.png" alt="image"></p><h2 id="9-2-第一次点击事件"><a href="#9-2-第一次点击事件" class="headerlink" title="9.2 第一次点击事件"></a>9.2 第一次点击事件</h2><ul><li>CPU 频率有在某些阶段被限制，我们可以尝试对其进行优化。</li><li>第一次点击时睡眠太久，也许这是一个可以优化的地方。 为了对其进行优化，我们需要检查 SimpleApplication 的代码，是否被互斥锁阻塞，等等。</li></ul><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/Performance/image22.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> OS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Performance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to build intranet gitbook with docker</title>
      <link href="2020/10/10/Git/How-to-build-intranet-gitbook-with-docker/"/>
      <url>2020/10/10/Git/How-to-build-intranet-gitbook-with-docker/</url>
      
        <content type="html"><![CDATA[<p>之前折腾局域网搭建 Gitbook，并写了一篇简易教程：<a href="http://huaqianlee.github.io/2019/05/05/Git/gitlab-jenkins-gitbook-to-create-LAN-gitbook/">Gitbook + Jenkins + Gitlab 搭建内网自动构建的 Gitbook</a>。最近兴趣使然又用 docker 搭建了一套方便部署的内网 Gitbook 镜像，因此也总结一篇简易教程如下。</p><h1 id="Install-Docker"><a href="#Install-Docker" class="headerlink" title="Install Docker"></a>Install Docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker</span><br></pre></td></tr></table></figure><h1 id="Gitbook"><a href="#Gitbook" class="headerlink" title="Gitbook"></a>Gitbook</h1><h2 id="Gitbook-Image"><a href="#Gitbook-Image" class="headerlink" title="Gitbook Image"></a>Gitbook Image</h2><p>下载 Gitbook Docker 镜像，我选择了 <a href="https://hub.docker.com/r/billryan/gitbook">billryan/gitbook 镜像</a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull billryan/gitbook</span><br></pre></td></tr></table></figure><p><code>mkdir gitbook</code> 创建一个 gitbook 路径，我们也可以将启动的镜像存储为另一个镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># init</span></span><br><span class="line">docker run --rm -v <span class="string">&quot;<span class="variable">$PWD</span>/gitbook:/gitbook&quot;</span> -p 4000:4000 billryan/gitbook gitbook init</span><br><span class="line"><span class="comment"># serve</span></span><br><span class="line">docker run --rm -v <span class="string">&quot;<span class="variable">$PWD</span>/gitbook:/gitbook&quot;</span> -p 4000:4000 billryan/gitbook gitbook serve</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker ps <span class="comment"># Get CONTAINER ID of gitbook</span></span><br><span class="line">docker commit &lt;CONTAINER ID&gt; andylee/gitbook:1.0</span><br></pre></td></tr></table></figure><a id="more"></a><p>存储一个本地 docker 镜像，方便迁移到其他机器，存储和加载命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Save docker image</span></span><br><span class="line">docker save -o &lt;path <span class="keyword">for</span> generated tar file&gt; &lt;image name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load docker image</span></span><br><span class="line">docker load -i &lt;path to image tar file&gt; </span><br></pre></td></tr></table></figure><h2 id="Gitbook-build"><a href="#Gitbook-build" class="headerlink" title="Gitbook build"></a>Gitbook build</h2><p>我做了一个脚本 <code>gitbook.sh</code> 给 <code>Jenkins</code> 提供执行脚本，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#GITBOOK_HOME=/home/lee/docker/gitbook/src</span></span><br><span class="line"><span class="comment"># Jenkins gitbook workspace</span></span><br><span class="line">GITBOOK_HOME=/home/lee/docker/jenkins/jenkins_home/workspace/gitbook</span><br><span class="line"><span class="comment"># Nginx static html</span></span><br><span class="line">STATIC_HTML=/home/lee/docker/nginx/static_html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#rm -rf $GITBOOK_HOME/_book</span></span><br><span class="line">docker run --rm  -v <span class="variable">$GITBOOK_HOME</span>:/gitbook -p 4000:4000 andylee/gitbook:1.0 gitbook build</span><br><span class="line"><span class="comment"># docker run as root, so host can&#x27;t rewrite _book, which means gitbook only can be built one times. </span></span><br><span class="line"><span class="comment"># The following are two ways to fix this issue.</span></span><br><span class="line"><span class="comment"># 1. add &#x27;--user &quot;$(id -u):$(id -g)&quot;&#x27; , run docker as current user group, but fails to create /gitbook in docker.  ~Not work.</span></span><br><span class="line"><span class="comment"># 2. chown _book as current user group with root permission. ~Work.</span></span><br><span class="line">sudo -S su - &lt;&lt;EOF</span><br><span class="line">chown -R lee:lee <span class="variable">$GITBOOK_HOME</span>/_book</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#docker run  --rm -v $GITBOOK_HOME:/gitbook -p 4000:4000 andylee/gitbook:1.0 gitbook serve</span></span><br><span class="line"><span class="comment">#echo &quot;Execute docker with &#x27;$GITBOOK_HOME&#x27; successfully!&quot;</span></span><br><span class="line"></span><br><span class="line">rm -rf <span class="variable">$STATIC_HTML</span>/*</span><br><span class="line"><span class="comment"># Copy _book static html to Nginx server.</span></span><br><span class="line">cp -rf <span class="variable">$GITBOOK_HOME</span>/_book/* <span class="variable">$STATIC_HTML</span></span><br></pre></td></tr></table></figure><p>如果我们不用脚本或者想以一种简单的方式执行 docker，可以在 <code>.bashrc</code> 里添加别名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> gitbook=<span class="string">&#x27;docker run --rm  -v $GITBOOK_HOME:/gitbook -p 4000:4000 andylee/gitbook:1.0 gitbook&#x27;</span></span><br><span class="line"><span class="comment"># init</span></span><br><span class="line">gitbook init</span><br><span class="line"><span class="comment"># serve</span></span><br><span class="line">gitbook serve</span><br><span class="line"><span class="comment"># build</span></span><br><span class="line">gitbook build</span><br><span class="line"><span class="comment"># pdf output</span></span><br><span class="line">gitbook pdf .</span><br></pre></td></tr></table></figure><h1 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h1><h2 id="GitLab-Image"><a href="#GitLab-Image" class="headerlink" title="GitLab Image"></a>GitLab Image</h2><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p><code>mkdir gitlab</code> 创建一个 gitlab 路径，为了保证 <code>Clone with HTTP</code> 能正常使用，利用官方镜像做一个指定容器端口的镜像（官方默认为 80 ，一般会被占用），编写 Dockerfile 如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use the official image</span></span><br><span class="line">FROM gitlab/gitlab-ee</span><br><span class="line"><span class="comment"># Add listening port of container</span></span><br><span class="line">EXPOSE 4002</span><br></pre></td></tr></table></figure><h3 id="Build-Docker"><a href="#Build-Docker" class="headerlink" title="Build Docker"></a>Build Docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build --tag andylee/gitlab:1.0 . <span class="comment"># Execute in the folder where Dockerfile is</span></span><br></pre></td></tr></table></figure><h2 id="Run-GitLab-Docker"><a href="#Run-GitLab-Docker" class="headerlink" title="Run GitLab Docker"></a>Run GitLab Docker</h2><p>我做了一个<code>gitlab.sh</code>脚本来运行 GitLab Docker，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">GITLAB_CONFIG=/home/lee/docker/gitlab/config</span><br><span class="line">GITLAB_LOGS=/home/lee/docker/gitlab/logs</span><br><span class="line">GITLAB_DATA=/home/lee/docker/gitlab/data</span><br><span class="line"></span><br><span class="line">docker run -d -p 4043:443 -p 4002:4002 -p 4022:22 --name andylee-gitlab --restart always -v <span class="variable">$GITLAB_CONFIG</span>:/etc/gitlab -v <span class="variable">$GITLAP_LOGS</span>:/var/<span class="built_in">log</span>/gitlab -v <span class="variable">$GITLAB_DATA</span>:/var/opt/gitlab andylee/gitlab:1.0</span><br></pre></td></tr></table></figure><h2 id="Config-GitLab"><a href="#Config-GitLab" class="headerlink" title="Config GitLab"></a>Config GitLab</h2><p>配置 <code>gitlab.rb</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/gitlab.rb</span></span><br><span class="line"><span class="comment"># 端口为容器中的端口</span></span><br><span class="line">external_url <span class="string">&#x27;http://192.168.81.64:4002&#x27;</span>  <span class="comment"># 如果不配置此项，Clone with HTTP 中的链接将有由容器 ID 代替，如 http://e6012f4a2630/gitlab-instance-de9e956b/monitoring.git</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不配置如下内容，Clone with SSH 中链接将由容器 ID 代替，如 ssh://git@5ba03b6cd640/root/document.git</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_ssh_host&#x27;</span>] = <span class="string">&#x27;192.168.81.64&#x27;</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_shell_ssh_port&#x27;</span>] = 4022</span><br><span class="line"><span class="comment"># gitlab_rails[&#x27;gitlab_ssh_user&#x27;] = &#x27;root&#x27; . 可不配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># LDAP， Config LDAP authentication.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Issues"><a href="#Issues" class="headerlink" title="Issues"></a>Issues</h2><p><strong>问题一：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab Import url is blocked: <span class="string">&quot;Requests to the local network are not allowed&quot;</span></span><br></pre></td></tr></table></figure><p><strong>Solution:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Admin -&gt; Settings -&gt; Network -&gt; Outbound Requests -&gt; Allow requests to the <span class="built_in">local</span> network from hooks and services</span><br></pre></td></tr></table></figure><p><strong>问题二：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cloning into &#39;document&#39;...</span><br><span class="line">ssh: connect to host 192.168.81.64 port 2202: Connection refused</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br></pre></td></tr></table></figure><p><strong>Solution:</strong><br>配置的 ssh 访问端口需要与启动容器时的映射端口保持一致，当前问题是由于 <code>gitlab.rb</code> 中错把端口配置为了 2202.</p><h1 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h1><h2 id="Jenkins-Image"><a href="#Jenkins-Image" class="headerlink" title="Jenkins Image"></a>Jenkins Image</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull jenkins/jenkins</span><br><span class="line"></span><br><span class="line">docker ps <span class="comment"># Get CONTAINER ID of jenkins</span></span><br><span class="line">docker commit &lt;CONTAINER ID&gt; andylee/jenkins:1.0</span><br></pre></td></tr></table></figure><h2 id="Run-Jenkins-Docker"><a href="#Run-Jenkins-Docker" class="headerlink" title="Run Jenkins Docker"></a>Run Jenkins Docker</h2><p>我做了一个<code>jenkins.sh</code>脚本来运行 Jenkins Docker，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">JENKINS_HOME=/home/lee/docker/jenkins/jenkins_home</span><br><span class="line"></span><br><span class="line">docker run --name andylee-jenkins -d -v <span class="variable">$JENKINS_HOME</span>:/var/jenkins_home -p 4003:8080 -p 50000:50000 andylee/jenkins:1.0</span><br></pre></td></tr></table></figure><h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h2><p>这里只说一下注意事项和变化点，详细配置方式见<a href="http://huaqianlee.github.io/2019/05/05/Git/gitlab-jenkins-gitbook-to-create-LAN-gitbook/">Gitbook + Jenkins + Gitlab 搭建内网自动构建的 Gitbook</a>。</p><ol><li><p>Configure system -&gt; gitlab, 需要注意<code>Gitlab host URL</code>只需要填 server 地址。</p></li><li><p>Configure of project.  </p></li></ol><ul><li>Build Triggers<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选中如下选项</span></span><br><span class="line">Build when a change is pushed to GitLab. GitLab webhook URL: http://192.168.81.64:4003/project/gitbook</span><br></pre></td></tr></table></figure></li><li>Build-&gt;Execute shell<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先需要将容器中的 ~/.ssh/id_rsa.pub 的内容追加到主机的 ～/.ssh/authorized_keys 中，不然会要求输入 ssh 密码。</span></span><br><span class="line"><span class="comment"># 通过 ssh 在主机中执行 gitbook.sh 脚本</span></span><br><span class="line">ssh -n -l lee 192.168.81.64 <span class="string">&quot;gitbook.sh&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>jenkins_home/jobs/gitbook/config.xml: <code>&lt;command&gt;ssh -n -l lee 192.168.81.64 &amp;quot;gitbook.sh&amp;quot;&lt;/command&gt;</code></p></blockquote></li></ul><ol start="3"><li>因为新版本的 Jenkins(当前使用的是 2.249) 已经不支持 disable CSRF， 我们必须在 Gitlab project 中的 webhook 配置上用户名，详细见如下问题二。</li></ol><h2 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h2><p><strong>问题一：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">An error occurred during installation: No such plugin: cloudbees-folder</span><br></pre></td></tr></table></figure><p><strong>Solution:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. modify https as http <span class="keyword">in</span> /var/lib/docker/volumes/jenkins-data/_data/hudson.model.UpdateCenter.xml </span><br><span class="line">2. http://localhost:4003/restart OR service jenkins restart</span><br></pre></td></tr></table></figure><p><strong>问题二：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTTP ERROR 403 No valid crumb was included <span class="keyword">in</span> the request</span><br></pre></td></tr></table></figure><p><strong>Solution:</strong></p><ol><li>在<code>Jenkins</code> 中，通过<code>USER -&gt; Configure -&gt; API Token</code> 增加并保存 token 值（api key）。</li><li>在 <code>GitLab project</code> 的 <code>Setting -&gt;Webhooks</code>按照如下要求添加 webhook ，按照要求（此处要注意格式，需要第一步 Jenkins 额外创建一个api key ，让 GitLab 能够有权限触发 Jenkins）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">URL:</span><br><span class="line">http://username:apikey@jenkins.url/project/myPullrequest/</span><br><span class="line"></span><br><span class="line">Secret Token: <span class="comment"># 似乎不是必须的</span></span><br><span class="line">apikey</span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line">http://root:1146cb664bbe589fd1a88fe42d24b64315@192.168.81.64:4003/project/gitbook</span><br></pre></td></tr></table></figure></li></ol><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><h2 id="Nginx-Image"><a href="#Nginx-Image" class="headerlink" title="Nginx Image"></a>Nginx Image</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br><span class="line"></span><br><span class="line">docker ps <span class="comment"># Get CONTAINER ID of nginx</span></span><br><span class="line">docker commit &lt;CONTAINER ID&gt; andylee/nginx:1.0</span><br></pre></td></tr></table></figure><h2 id="Run-Nginx-Docker"><a href="#Run-Nginx-Docker" class="headerlink" title="Run Nginx Docker"></a>Run Nginx Docker</h2><p>我做了一个<code>nginx.sh</code>脚本来运行 nginx Docker，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">STATIC_HTML=/home/lee/docker/nginx/static_html</span><br><span class="line"><span class="comment"># NGINX_CONFIG=/home/lee/docker/nginx/nginx.conf</span></span><br><span class="line"></span><br><span class="line">docker run --name andylee-nginx -p 4001:80 -v <span class="variable">$STATIC_HTML</span>:/usr/share/nginx/html:ro -d andylee/nginx:1.0</span><br><span class="line"><span class="comment"># docker run --name nginx -p 4001:80 -v $STATIC_HTML:/usr/share/nginx/html:ro -v $NGINX_CONFIG:/etc/nginx/nginx.conf:ro -d nginx</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Oh, the Git! - detached HEAD</title>
      <link href="2020/03/08/Git/Some-knowledge-about-git-detached-HEAD/"/>
      <url>2020/03/08/Git/Some-knowledge-about-git-detached-HEAD/</url>
      
        <content type="html"><![CDATA[<p><code>detached HEAD</code> is a common situation, sometimes useful, sometimes dangerous. It doesn’t point to any branches, so it will be cleaned by <code>git</code>.</p><p>The current commit history is as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 5ea3cec (HEAD -&gt; master) Modify README.md of src</span><br><span class="line">* 2b6e826 Same file, same blob</span><br><span class="line">* 1ff08f2 Modify README.md.</span><br><span class="line">* 8c19a38 Add Copyright notice.</span><br><span class="line">* 318c11a Copy css to lib.</span><br><span class="line">| * 1134f9e (dev) Make graph more readability</span><br><span class="line">| * 71c40d3 Modify README.md <span class="keyword">in</span> dev branch.</span><br><span class="line">|/</span><br><span class="line">* ce4297f Add image.</span><br><span class="line">| * 2cb23ac (dev-1.0) README <span class="keyword">for</span> dev-1.0 branch.</span><br><span class="line">|/</span><br><span class="line">* 6fc4b44 (tag: kikoff_tag) Copy doc README.md</span><br><span class="line">* 726c6c0 Add <span class="built_in">source</span> README.md</span><br><span class="line">* c8ff9c5 Add README</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Create-detached-HEAD"><a href="#Create-detached-HEAD" class="headerlink" title="Create detached HEAD"></a>Create detached HEAD</h2><p>Create a detached HEAD by <code>git checkout</code> cmd.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout 8c19a38</span><br><span class="line">Note: checking out <span class="string">&#x27;8c19a38&#x27;</span>.</span><br><span class="line"></span><br><span class="line">You are <span class="keyword">in</span> <span class="string">&#x27;detached HEAD&#x27;</span> state. You can look around, make experimental</span><br><span class="line">changes and commit them, and you can discard any commits you make <span class="keyword">in</span> this</span><br><span class="line">state without impacting any branches by performing another checkout.</span><br><span class="line"></span><br><span class="line">If you want to create a new branch to retain commits you create, you may</span><br><span class="line"><span class="keyword">do</span> so (now or later) by using -b with the checkout <span class="built_in">command</span> again. Example:</span><br><span class="line"></span><br><span class="line">  git checkout -b &lt;new-branch-name&gt;</span><br><span class="line"></span><br><span class="line">HEAD is now at 8c19a38 Add Copyright notice.</span><br></pre></td></tr></table></figure><blockquote><p>The note of git is important, it provides a lot information.</p></blockquote><h2 id="Check-the-current-HEAD"><a href="#Check-the-current-HEAD" class="headerlink" title="Check the current HEAD"></a>Check the current <code>HEAD</code></h2><p>We can see the current <code>HEAD</code> pointer points to ‘8c19a38’ by the following.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ cat .git/HEAD</span><br><span class="line">8c19a3856e27ff8e29171e49ccccdc042f1de32e</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 5ea3cec (master) Modify README.md of src</span><br><span class="line">* 2b6e826 Same file, same blob</span><br><span class="line">* 1ff08f2 Modify README.md.</span><br><span class="line">* 8c19a38 (HEAD) Add Copyright notice. <span class="comment"># HEAD pointer, detached HEAD</span></span><br><span class="line">* 318c11a Copy css to lib.</span><br><span class="line">| * 1134f9e (dev) Make graph more readability</span><br><span class="line">| * 71c40d3 Modify README.md <span class="keyword">in</span> dev branch.</span><br><span class="line">|/</span><br><span class="line">* ce4297f Add image.</span><br><span class="line">| * 2cb23ac (dev-1.0) README <span class="keyword">for</span> dev-1.0 branch.</span><br><span class="line">|/</span><br><span class="line">* 6fc4b44 (tag: kikoff_tag) Copy doc README.md</span><br><span class="line">* 726c6c0 Add <span class="built_in">source</span> README.md</span><br><span class="line">* c8ff9c5 Add README</span><br></pre></td></tr></table></figure><h2 id="Add-a-commit"><a href="#Add-a-commit" class="headerlink" title="Add a commit"></a>Add a commit</h2><ul><li>Apply the following patch.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/README.md b/README.md</span><br><span class="line">index a687b4c..16b8b3f 100644</span><br><span class="line">--- a/README.md</span><br><span class="line">+++ b/README.md</span><br><span class="line">@@ -1,3 +1,6 @@</span><br><span class="line"> Demonstration</span><br><span class="line"> ===</span><br><span class="line">+</span><br><span class="line">+detached HEAD.</span><br><span class="line">+</span><br></pre></td></tr></table></figure><ul><li>Generate commit <code>2457088</code> by <code>git add</code> and <code>git commit</code>.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ git add .;git commit -m <span class="string">&quot;detached HEAD&quot;</span></span><br><span class="line">[detached HEAD 2457088] detached HEAD</span><br><span class="line"> 1 file changed, 3 insertions(+)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check new HEAD.</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 2457088 (HEAD) detached HEAD</span><br><span class="line">| * 5ea3cec (master) Modify README.md of src</span><br><span class="line">| * 2b6e826 Same file, same blob</span><br><span class="line">| * 1ff08f2 Modify README.md.</span><br><span class="line">|/</span><br><span class="line">* 8c19a38 Add Copyright notice.</span><br><span class="line">* 318c11a Copy css to lib.</span><br><span class="line">| * 1134f9e (dev) Make graph more readability</span><br><span class="line">| * 71c40d3 Modify README.md <span class="keyword">in</span> dev branch.</span><br><span class="line">|/</span><br><span class="line">* ce4297f Add image.</span><br><span class="line">| * 2cb23ac (dev-1.0) README <span class="keyword">for</span> dev-1.0 branch.</span><br><span class="line">|/</span><br><span class="line">* 6fc4b44 (tag: kikoff_tag) Copy doc README.md</span><br><span class="line">* 726c6c0 Add <span class="built_in">source</span> README.md</span><br><span class="line">* c8ff9c5 Add README</span><br></pre></td></tr></table></figure><h2 id="Switch-branch"><a href="#Switch-branch" class="headerlink" title="Switch branch"></a>Switch branch</h2><p>When we switch to master branch, <code>git</code> prompts us to create a branch for detached HEAD.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br><span class="line">Warning: you are leaving 1 commit behind, not connected to</span><br><span class="line">any of your branches:</span><br><span class="line"></span><br><span class="line">  2457088 detached HEAD</span><br><span class="line"></span><br><span class="line">If you want to keep it by creating a new branch, this may be a good time</span><br><span class="line">to <span class="keyword">do</span> so with:</span><br><span class="line"></span><br><span class="line"> git branch &lt;new-branch-name&gt; 2457088</span><br><span class="line"></span><br><span class="line">Switched to branch <span class="string">&#x27;master&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Check-commit-2457088"><a href="#Check-commit-2457088" class="headerlink" title="Check commit 2457088"></a>Check commit <code>2457088</code></h2><p>When I switch branches, commit <code>2457088</code> is gone, this is the dangerous part.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 5ea3cec (HEAD -&gt; master) Modify README.md of src</span><br><span class="line">* 2b6e826 Same file, same blob</span><br><span class="line">* 1ff08f2 Modify README.md.</span><br><span class="line">* 8c19a38 Add Copyright notice.</span><br><span class="line">* 318c11a Copy css to lib.</span><br><span class="line">| * 1134f9e (dev) Make graph more readability</span><br><span class="line">| * 71c40d3 Modify README.md <span class="keyword">in</span> dev branch.</span><br><span class="line">|/</span><br><span class="line">* ce4297f Add image.</span><br><span class="line">| * 2cb23ac (dev-1.0) README <span class="keyword">for</span> dev-1.0 branch.</span><br><span class="line">|/</span><br><span class="line">* 6fc4b44 (tag: kikoff_tag) Copy doc README.md</span><br><span class="line">* 726c6c0 Add <span class="built_in">source</span> README.md</span><br><span class="line">* c8ff9c5 Add README</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oh, the Git! - local .git</title>
      <link href="2020/03/07/Git/Some-knowledge-about-git-local-git/"/>
      <url>2020/03/07/Git/Some-knowledge-about-git-local-git/</url>
      
        <content type="html"><![CDATA[<p><code>.git</code> directory acts a major role in <code>git</code> VCS. We can do local verson management directly depended on <code>.git</code> directory. I will parse <code>.git</code> in current topic. </p><h1 id="Directory-tree"><a href="#Directory-tree" class="headerlink" title="Directory tree"></a>Directory tree</h1><p>First, I created a project and managed it through <code>git</code>, its directory tree is as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── doc</span><br><span class="line">│   └── README.md</span><br><span class="line">├── .git</span><br><span class="line">│   ├── COMMIT_EDITMSG</span><br><span class="line">│   ├── config</span><br><span class="line">│   ├── description</span><br><span class="line">│   ├── HEAD</span><br><span class="line">│   ├── hooks</span><br><span class="line">│   │   ├── applypatch-msg.sample</span><br><span class="line">│   │   ├── commit-msg.sample</span><br><span class="line">│   │   ├── fsmonitor-watchman.sample</span><br><span class="line">│   │   ├── post-update.sample</span><br><span class="line">│   │   ├── pre-applypatch.sample</span><br><span class="line">│   │   ├── pre-commit.sample</span><br><span class="line">│   │   ├── prepare-commit-msg.sample</span><br><span class="line">│   │   ├── pre-push.sample</span><br><span class="line">│   │   ├── pre-rebase.sample</span><br><span class="line">│   │   ├── pre-receive.sample</span><br><span class="line">│   │   └── update.sample</span><br><span class="line">│   ├── index</span><br><span class="line">│   ├── info</span><br><span class="line">│   │   └── exclude</span><br><span class="line">│   ├── logs</span><br><span class="line">│   │   ├── HEAD</span><br><span class="line">│   │   └── refs</span><br><span class="line">│   │       └── heads</span><br><span class="line">│   │           ├── dev</span><br><span class="line">│   │           ├── dev-1.0</span><br><span class="line">│   │           └── master</span><br><span class="line">│   ├── objects</span><br><span class="line">│   │   ├── 02</span><br><span class="line">│   │   │   ├── 40351d75b3f451e0ec4b399c38c3758f007152</span><br><span class="line">│   │   │   └── d8eae705ebf203142fd2f381d3b216dde2b28f</span><br><span class="line">|   |   |...</span><br><span class="line">│   │   ├── c8</span><br><span class="line">│   │   │   └── ff9c55ce2651d8380a14bee5b43b37e14fa7fc</span><br><span class="line">│   │   ├── f0</span><br><span class="line">│   │   │   └── 45488f3fa9a350ac01f48f2b000fe51a53f5aa</span><br><span class="line">│   │   ├── info</span><br><span class="line">│   │   └── pack</span><br><span class="line">│   ├── ORIG_HEAD</span><br><span class="line">│   └── refs</span><br><span class="line">│       ├── heads</span><br><span class="line">│       │   ├── dev</span><br><span class="line">│       │   ├── dev-1.0</span><br><span class="line">│       │   └── master</span><br><span class="line">│       └── tags</span><br><span class="line">│           └── kikoff_tag</span><br><span class="line">├── img</span><br><span class="line">│   └── check.png</span><br><span class="line">├── lib</span><br><span class="line">│   └── css_practice_1.html</span><br><span class="line">├── README.md</span><br><span class="line">└── src</span><br><span class="line">    └── README.md</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="git-introduction"><a href="#git-introduction" class="headerlink" title=".git introduction"></a>.git introduction</h1><h2 id="git-HEAD"><a href="#git-HEAD" class="headerlink" title=".git/HEAD"></a>.git/HEAD</h2><p>It indicates which branch or commit the project works on. When the project works on a branch, the valuse of <code>.git/HEAD</code> is one reference. The details are as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ cat .git/HEAD</span><br><span class="line">ref: refs/heads/dev-1.0</span><br><span class="line"></span><br><span class="line">$ git checkout master</span><br><span class="line">Switched to branch <span class="string">&#x27;master&#x27;</span></span><br><span class="line"></span><br><span class="line">$ cat .git/HEAD</span><br><span class="line">ref: refs/heads/master</span><br><span class="line"></span><br><span class="line">$ git checkout 8c19a3856 <span class="comment"># detached HEAD, 分离头指针</span></span><br><span class="line">Note: checking out <span class="string">&#x27;8c19a38&#x27;</span>.</span><br><span class="line">...</span><br><span class="line">HEAD is now at 8c19a38 Add Copyright notice.</span><br><span class="line"></span><br><span class="line">$ cat .git/HEAD  <span class="comment"># Point to commit when the project works on detached HEAD</span></span><br><span class="line">8c19a3856e27ff8e29171e49ccccdc042f1de32e</span><br></pre></td></tr></table></figure><h2 id="git-config"><a href="#git-config" class="headerlink" title=".git/config"></a>.git/config</h2><p><code>.git/config</code> is local git configuration,it has the highest priority, it will cover global and system configuration. As follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat .git/config</span><br><span class="line">[core]</span><br><span class="line">        repositoryformatversion = 0</span><br><span class="line">        filemode = <span class="literal">false</span></span><br><span class="line">        bare = <span class="literal">false</span></span><br><span class="line">        logallrefupdates = <span class="literal">true</span></span><br><span class="line">        symlinks = <span class="literal">false</span></span><br><span class="line">        ignorecase = <span class="literal">true</span></span><br><span class="line">[user]</span><br><span class="line">        name = lihq0416</span><br><span class="line">        email = lihq0416@alsa.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>My global configuration is as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">E:\code\Git\Demonstration&gt;git config --global --list</span><br><span class="line">user.name=huaqianlee</span><br><span class="line">user.email=huaqianlee@gmail.com</span><br></pre></td></tr></table></figure><p>The working configuration(user) is as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -n1</span><br><span class="line">commit 8c19a3856e27ff8e29171e49ccccdc042f1de32e (HEAD -&gt; master)</span><br><span class="line">Author: lihq0416 &lt;lihq0416@alsa.com&gt;  <span class="comment"># the local user.</span></span><br><span class="line">Date:   Sun Mar 8 11:14:06 2020 +0800</span><br><span class="line"></span><br><span class="line">    Add Copyright notice.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="git-refs"><a href="#git-refs" class="headerlink" title=".git/refs/"></a>.git/refs/</h2><p><code>.git/refs/</code> saves git reference, it replaces <code>SHA-1</code> with a simple string.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ls .git/refs/</span><br><span class="line">heads/  tags/</span><br><span class="line"></span><br><span class="line">heads - branch HEAD  </span><br><span class="line">tags - milestone, tag reference</span><br></pre></td></tr></table></figure><h2 id="index"><a href="#index" class="headerlink" title="index"></a>index</h2><p>Git puts the file size, creation time, and last modification information in the index. </p><p>Git judges whether the blob has changed by comparing the current status with the content of index.</p><h3 id="git-refs-heads"><a href="#git-refs-heads" class="headerlink" title=".git/refs/heads/"></a>.git/refs/heads/</h3><p><code>.git/refs/heads</code> saves all branch name, as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls .git/refs/heads/</span><br><span class="line">dev  dev-1.0  master</span><br></pre></td></tr></table></figure><p>we can get the original SHA-1 value by <code>cat</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat .git/refs/heads/master</span><br><span class="line">1ff08f245a3eaae8c5404cf3da2977a4637d3d68</span><br><span class="line"></span><br><span class="line">$ git cat-file -t 1ff08f2 <span class="comment"># cat type of object.</span></span><br><span class="line">commit</span><br><span class="line"></span><br><span class="line">$ cat .git/refs/heads/dev</span><br><span class="line">1134f9ee07daf1589ec9cc424dec587d119f8477</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ cat .git/refs/heads/dev-1.0</span><br><span class="line">2cb23acda7fc092152fd63c5c13bda287765d9da</span><br></pre></td></tr></table></figure><p>Check the content <code>.git/refs/heads/master</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ git cat-file -p 1ff08f2 <span class="comment"># cat content of object.</span></span><br><span class="line">tree ccb86ecb23a86d363868ede3f8597dade731aeac</span><br><span class="line">parent 8c19a3856e27ff8e29171e49ccccdc042f1de32e</span><br><span class="line">author lihq0416 &lt;lihq0416@alsa.com&gt; 1583640484 +0800</span><br><span class="line">committer lihq0416 &lt;lihq0416@alsa.com&gt; 1583640484 +0800</span><br><span class="line"></span><br><span class="line">Modify README.md.</span><br><span class="line"></span><br><span class="line">$ git show 1ff08f2 <span class="comment"># show the details.</span></span><br><span class="line">commit 1ff08f245a3eaae8c5404cf3da2977a4637d3d68 (HEAD -&gt; master)</span><br><span class="line">Author: lihq0416 &lt;lihq0416@alsa.com&gt;</span><br><span class="line">Date:   Sun Mar 8 12:08:04 2020 +0800</span><br><span class="line"></span><br><span class="line">    Modify README.md.</span><br><span class="line"></span><br><span class="line">diff --git a/README.md b/README.md</span><br><span class="line">index a687b4c..401b9a8 100644</span><br><span class="line">--- a/README.md</span><br><span class="line">+++ b/README.md</span><br><span class="line">@@ -1,3 +1,3 @@</span><br><span class="line"> Demonstration</span><br><span class="line"> ===</span><br><span class="line">-</span><br><span class="line">+For master.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>The SHA-1 in <code>.git/refs/heads</code> is the HEAD pointer of every branch.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 1134f9e (dev) Make graph more readability <span class="comment"># dev HEAD</span></span><br><span class="line">* 71c40d3 Modify README.md <span class="keyword">in</span> dev branch.</span><br><span class="line">| * 1ff08f2 (HEAD -&gt; master) Modify README.md. <span class="comment"># master HEAD</span></span><br><span class="line">| * 8c19a38 Add Copyright notice.</span><br><span class="line">| * 318c11a Copy css to lib.</span><br><span class="line">|/</span><br><span class="line">* ce4297f Add image.</span><br><span class="line">| * 2cb23ac (dev-1.0) README <span class="keyword">for</span> dev-1.0 branch. <span class="comment"># dev-1.0 HEAD</span></span><br><span class="line">|/</span><br><span class="line">* 6fc4b44 (tag: kikoff_tag) Copy doc README.md</span><br><span class="line">* 726c6c0 Add <span class="built_in">source</span> README.md</span><br><span class="line">* c8ff9c5 Add README</span><br><span class="line"></span><br><span class="line">$ git branch -av</span><br><span class="line">  dev     1134f9e Make graph more readability</span><br><span class="line">  dev-1.0 2cb23ac README <span class="keyword">for</span> dev-1.0 branch.</span><br><span class="line">* master  1ff08f2 Modify README.md.</span><br></pre></td></tr></table></figure><h3 id="git-refs-tags"><a href="#git-refs-tags" class="headerlink" title=".git/refs/tags"></a>.git/refs/tags</h3><p><code>.git/refs/tags</code> save all tags, next, we analyze the <code>tag</code> reference. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat .git/refs/tags/kikoff_tag</span><br><span class="line">6fc4b448eede8b86e0dff1156797a8b76b661c98</span><br></pre></td></tr></table></figure><p>Again, let’s look at the details of the <code>tag</code> object.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git cat-file -t 6fc4b44</span><br><span class="line">commit</span><br><span class="line"></span><br><span class="line">$ git cat-file -p 6fc4b44</span><br><span class="line">tree e38a164f48baba5a6b6251d77926be66e77ae1c0</span><br><span class="line">parent 726c6c01c5bdfee5c477962f69f5313d868398db</span><br><span class="line">author lihq0416 &lt;lihq0416@alsa.com&gt; 1583636454 +0800</span><br><span class="line">committer lihq0416 &lt;lihq0416@alsa.com&gt; 1583636454 +0800</span><br><span class="line"></span><br><span class="line">Copy doc README.md</span><br></pre></td></tr></table></figure><p>it is the SHA-1 of <code>kikoff_tag</code> tag.</p><h2 id="git-objects"><a href="#git-objects" class="headerlink" title=".git/objects"></a>.git/objects</h2><p><code>.git/objects</code> saves all git objects.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l .git/objects/</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x 1 Lee 197121 0 三月    8 11:45 02/</span><br><span class="line">drwxr-xr-x 1 Lee 197121 0 三月    8 12:10 11/</span><br><span class="line">...</span><br><span class="line">drwxr-xr-x 1 Lee 197121 0 三月    7 18:20 c8/</span><br><span class="line">drwxr-xr-x 1 Lee 197121 0 三月    8 11:45 dd/</span><br><span class="line">drwxr-xr-x 1 Lee 197121 0 三月    8 11:00 e3/</span><br><span class="line"><span class="comment"># if `02/,11/ ...` are too much, pack them into pack/, otherwise `info and pack are empty.</span></span><br><span class="line">drwxr-xr-x 1 Lee 197121 0 三月    7 18:16 info/</span><br><span class="line">drwxr-xr-x 1 Lee 197121 0 三月    7 18:16 pack/ </span><br></pre></td></tr></table></figure><p>List the contens of <code>c8/</code> and <code>dd/</code>, the content appends path name to the SHA-1.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l .git/objects/c8/</span><br><span class="line">total 1</span><br><span class="line">-r--r--r-- 1 Lee 197121 132 三月    7 18:20 ff9c55ce2651d8380a14bee5b43b37e14fa7fc</span><br><span class="line"></span><br><span class="line">$ ls .git/objects/dd/</span><br><span class="line">5ab753d33087eb06bd69b3a9317674638e6685  9f4c82726240a5289b5e6e33028bbcee8ac540</span><br></pre></td></tr></table></figure><p>Cat the contents of SHA-1.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1. c8/ directory</span><br><span class="line"><span class="comment"># SHA-1: c8 + ff9c55ce2651d8380a14bee5b43b37e14fa7fc</span></span><br><span class="line">$ git cat-file -t c8ff9c55</span><br><span class="line">commit</span><br><span class="line"></span><br><span class="line">$ git cat-file -p c8ff9c55</span><br><span class="line">tree 567fa4f607ea3685f7957cf42d1569ada65eb53b</span><br><span class="line">author lihq0416 &lt;lihq0416@alsa.com&gt; 1583576427 +0800</span><br><span class="line">committer lihq0416 &lt;lihq0416@alsa.com&gt; 1583576427 +0800</span><br><span class="line"></span><br><span class="line">Add README</span><br><span class="line"></span><br><span class="line">2. dd/ directory</span><br><span class="line"><span class="comment"># SHA-1: dd + 5ab753d33087eb06bd69b3a9317674638e6685</span></span><br><span class="line">$ git cat-file -t dd5ab753</span><br><span class="line">tree </span><br><span class="line"></span><br><span class="line">$ git cat-file -p dd5ab753</span><br><span class="line">100644 blob 9bdec0343dd1dee61d37be2a4d678c1a43c20b69    README.md</span><br><span class="line">$ git cat-file -t 9bdec0343</span><br><span class="line">blob</span><br><span class="line">$ git cat-file -p 9bdec0343</span><br><span class="line">Hello, <span class="built_in">source</span> code!    <span class="comment"># Contents of README.md</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SHA-1: dd + 9f4c82726240a5289b5e6e33028bbcee8ac540</span></span><br><span class="line">$ git cat-file -t dd9f4c82</span><br><span class="line">blob</span><br><span class="line">$ git cat-file -p dd9f4c82</span><br><span class="line">Demonstration</span><br><span class="line">===</span><br><span class="line"></span><br><span class="line">For dev-1.0.</span><br></pre></td></tr></table></figure><p>There are mainly three objects:</p><ul><li>tree : indicates a directory.</li><li>commit : indicates a commit(SHA-1).</li><li>blob: indicates a file, if the contents of two files are same, they saves as a same blob.</li></ul><h1 id="More-in-git"><a href="#More-in-git" class="headerlink" title="More in .git"></a>More in .git</h1><p># Todo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">config       FETCH_HEAD   hooks/       info/        objects/     packed-refs</span><br><span class="line">description  HEAD         index        logs/        ORIG_HEAD    refs/</span><br></pre></td></tr></table></figure><h1 id="commit-tree-and-blob"><a href="#commit-tree-and-blob" class="headerlink" title="commit, tree and blob"></a>commit, tree and blob</h1><p><code>commit</code>, <code>tree</code> and <code>blob</code> are three main components of <code>.git</code>. I will introduce them by two examples.</p><p>The current commit history is as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline</span><br><span class="line">5ea3cec (HEAD -&gt; master) Modify README.md of src</span><br><span class="line">2b6e826 Same file, same blob</span><br><span class="line">1ff08f2 Modify README.md.</span><br><span class="line">8c19a38 Add Copyright notice.</span><br><span class="line">318c11a Copy css to lib.</span><br><span class="line">ce4297f Add image.</span><br><span class="line">6fc4b44 (tag: kikoff_tag) Copy doc README.md</span><br><span class="line">726c6c0 Add <span class="built_in">source</span> README.md</span><br><span class="line">c8ff9c5 Add README</span><br></pre></td></tr></table></figure><h2 id="Simple-one"><a href="#Simple-one" class="headerlink" title="Simple one"></a>Simple one</h2><p>First, list relationship flowchart.</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/commit_tree_blob_first.png" alt="commit_tree_blob_first"></p><ul><li><p>Select the second commit <code>726c6c0</code> as benchmark.</p></li><li><p>Get the type and content of second commit <code>726c6c0</code>.</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git cat-file -t 726c6c0</span><br><span class="line">commit</span><br><span class="line"></span><br><span class="line">$ git cat-file -p 726c6c0</span><br><span class="line">tree c72f3764e2179a8c61f0b948aca0b3720624b818</span><br><span class="line">parent c8ff9c55ce2651d8380a14bee5b43b37e14fa7fc</span><br><span class="line">author lihq0416 &lt;lihq0416@alsa.com&gt; 1583636339 +0800</span><br><span class="line">committer lihq0416 &lt;lihq0416@alsa.com&gt; 1583636339 +0800</span><br><span class="line"></span><br><span class="line">Add <span class="built_in">source</span> README.md</span><br></pre></td></tr></table></figure><ul><li>Get the content of <code>tree</code> object.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git cat-file -p  c72f3764</span><br><span class="line">100644 blob a687b4c895de1b963fd4648cd12d7b1040b406c0    README.md</span><br><span class="line">040000 tree dd5ab753d33087eb06bd69b3a9317674638e6685    src</span><br></pre></td></tr></table></figure><blockquote><p><code>100644</code> - blob; <code>040000</code> - tree</p></blockquote><ul><li>Get the contents of <code>blob</code> and <code>tree</code>.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git cat-file -p a687b4c</span><br><span class="line">Demonstration</span><br><span class="line">===</span><br><span class="line"></span><br><span class="line">$ git cat-file -p dd5ab75 <span class="comment"># tree</span></span><br><span class="line">100644 blob 9bdec0343dd1dee61d37be2a4d678c1a43c20b69    README.md</span><br><span class="line"></span><br><span class="line">$ git cat-file -p 9bdec03 <span class="comment"># Content of new blob.</span></span><br><span class="line">Hello, <span class="built_in">source</span> code!</span><br></pre></td></tr></table></figure><h2 id="Complex-one"><a href="#Complex-one" class="headerlink" title="Complex one"></a>Complex one</h2><p>First, list the relationship flowchart too.<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/commit_tree_blob_second.png" alt="commit_tree_blob_second"></p><ul><li><p>Select a later commit <code>5ea3cec</code> to make the structure a bit more complicated.</p></li><li><p>Get the content of <code>commit</code>.</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git cat-file -p 5ea3cec</span><br><span class="line">tree eda5671a377d2fcd258cfabbe13d0eaaff59a69a</span><br><span class="line">parent 2b6e8269574c910b51492ce4c6731a1820b8b5da</span><br><span class="line">author lihq0416 &lt;lihq0416@alsa.com&gt; 1583652333 +0800</span><br><span class="line">committer lihq0416 &lt;lihq0416@alsa.com&gt; 1583652333 +0800</span><br><span class="line"></span><br><span class="line">Modify README.md of src</span><br></pre></td></tr></table></figure><ul><li>Get the content of <code>tree</code>.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git cat-file -p eda567</span><br><span class="line">100644 blob 401b9a8be1ba5ce77df18d4038a58dbfa29e3122    README.md</span><br><span class="line">040000 tree 04a87dd49ac3c928b872613bb07e8545ba08493a    doc</span><br><span class="line">040000 tree bd5e80e9c3527d86ffdf7669521082ec282043d9    img</span><br><span class="line">040000 tree b2713206c3d2f15dd71b25d124189edd2e8beab8    lib</span><br><span class="line">040000 tree 8a55fe88f7a7129f5467d791e4f077c22c3b3bbd    src</span><br></pre></td></tr></table></figure><ul><li>Get the contents of <code>trees</code> and <code>blob</code>.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">1. README.md</span><br><span class="line">$ git cat-file -p 401b9a8b</span><br><span class="line">Demonstration</span><br><span class="line">===</span><br><span class="line">For master.</span><br><span class="line"></span><br><span class="line">2. doc</span><br><span class="line">$ git cat-file -p  04a87dd4</span><br><span class="line">100644 blob 401b9a8be1ba5ce77df18d4038a58dbfa29e3122    README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># Because `doc/README.md` has the same content as root `README.md`</span></span><br><span class="line"><span class="comment"># Only one `blob` is saved to save space.</span></span><br><span class="line">$ git cat-file -p 401b9a8b</span><br><span class="line">Demonstration</span><br><span class="line">===</span><br><span class="line">For master.</span><br><span class="line"></span><br><span class="line">3. img</span><br><span class="line">$ git cat-file -p bd5e80e9</span><br><span class="line">100644 blob 5d3c270574c1ee7b58851757c7b09b45b0cca460    check.png</span><br><span class="line"></span><br><span class="line"><span class="comment"># The image is a binary</span></span><br><span class="line">$ git cat-file -p 5d3c270</span><br><span class="line">▒PNG</span><br><span class="line"></span><br><span class="line">IHDR&#123;T▒▒▒IDATx▒▒yx▒U▒▒<span class="comment">#k-▒f▒▒7▒8▒(t▒&amp;▒▒Vh▒▒▒▒▒2&quot;(茈▒▒▒▒A\▒.,▒</span></span><br><span class="line"></span><br><span class="line">4. lib</span><br><span class="line">$ git cat-file -p b271320</span><br><span class="line">100644 blob d1cd12a7b5b0fa570662c360a0aa5cacf2c11c85    css_practice_1.html</span><br><span class="line"></span><br><span class="line">$ git cat-file -p d1cd12a</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">        &lt;head&gt;</span><br><span class="line">                &lt;title&gt;Boxes&lt;/title&gt;</span><br><span class="line">                        &lt;p&gt;</span><br><span class="line">                                Copyright by Lee.</span><br><span class="line">                        &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">        &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">5. src</span><br><span class="line">$ git cat-file -p 8a55fe8</span><br><span class="line">100644 blob f045488f3fa9a350ac01f48f2b000fe51a53f5aa    README.md</span><br><span class="line"></span><br><span class="line">$ git cat-file -p f045488</span><br><span class="line">Hello, <span class="built_in">source</span> code!</span><br><span class="line"></span><br><span class="line">This is a demonstration of git.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Consolidating the foundation of Linux, vim</title>
      <link href="2020/02/06/Linux/Consolidating-the-foundation-of-Linux-vim/"/>
      <url>2020/02/06/Linux/Consolidating-the-foundation-of-Linux-vim/</url>
      
        <content type="html"><![CDATA[<h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><p>Global config.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/vimrc</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Mode"><a href="#Mode" class="headerlink" title="Mode"></a>Mode</h2><h3 id="Normal-Mode"><a href="#Normal-Mode" class="headerlink" title="Normal Mode"></a>Normal Mode</h3><h4 id="Enter-insert-mode"><a href="#Enter-insert-mode" class="headerlink" title="Enter insert mode"></a>Enter insert mode</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">I/i</span><br><span class="line">i - Before cursor</span><br><span class="line">I - Beginning of line</span><br><span class="line"></span><br><span class="line">A/a</span><br><span class="line">a - After cursor</span><br><span class="line">A - End of line</span><br><span class="line"></span><br><span class="line">O/o</span><br><span class="line">o - Next line</span><br><span class="line">O - Last line</span><br><span class="line"></span><br><span class="line">cw -  Replace from the cursor to eh end of the word</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Moves"><a href="#Moves" class="headerlink" title="Moves"></a>Moves</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Move around</span></span><br><span class="line">Use the arrow cursor keys , or <span class="string">&quot;h&quot;</span> to go left, <span class="string">&quot;j&quot;</span> to go down, <span class="string">&quot;k&quot;</span> to go up, <span class="string">&quot;l&quot;</span> to go right.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">0 - Go to the first column</span><br><span class="line">^ - Go to the first non-blank character of the line</span><br><span class="line">$ - Go to the last column</span><br><span class="line">g_ - Got to the last non-blank character of line</span><br><span class="line">fa - Go to next occurence of the letter `a` on the line.</span><br><span class="line">    , - Find the next occurrence</span><br><span class="line">    ; - Find the previous occurrence</span><br><span class="line">t, - Go to just before the character `,`</span><br><span class="line">3fa - Find the 3rd occurrence of `a` on this line</span><br><span class="line">F/T - Like `f` and `t` but backward</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">G -  Go last line</span><br><span class="line">gg -  Go first line</span><br><span class="line"></span><br><span class="line"><span class="comment"># Go specified line.</span></span><br><span class="line">NG  - Go to line N</span><br><span class="line">:N  - Go to line N</span><br><span class="line"></span><br><span class="line">w - Go to the start of the following word</span><br><span class="line">e - Go to the end of this word</span><br><span class="line"></span><br><span class="line">% - Go to the corresponding (, &#123;, [</span><br><span class="line"></span><br><span class="line">* - Go to next occurrence of the word under the cursor</span><br><span class="line"><span class="comment"># - Go to previous occurrence of the word under the cursor</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># search for pattern</span></span><br><span class="line">/pattern  </span><br><span class="line">n next </span><br><span class="line">N  above</span><br></pre></td></tr></table></figure><h4 id="Copy-Paste"><a href="#Copy-Paste" class="headerlink" title="Copy/Paste"></a>Copy/Paste</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">y -  Copy the content from the current cursor to next cursor. Controled by arrow keys or `h\j\k\l`</span><br><span class="line">yy -  Copy the current line </span><br><span class="line">3yy - Copy the following three lines.</span><br><span class="line">y$ -  Copy content from cursor to end of line.</span><br><span class="line"></span><br><span class="line">d  -  Delet the content from the current cursor to next cursor. Controled by arrow keys or `h\j\k\l`</span><br><span class="line">dd  -  Delete (and copy) the current line</span><br><span class="line">d$ -  Cut content from cursor to end of line.</span><br><span class="line"></span><br><span class="line">p -  Paste</span><br></pre></td></tr></table></figure><h4 id="Modify"><a href="#Modify" class="headerlink" title="Modify"></a>Modify</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">r -  Replace</span><br><span class="line">R -  Continuous replacement</span><br><span class="line">x  -  Delete one char</span><br><span class="line"></span><br><span class="line">dt<span class="string">&quot; - Remove everything until `&quot;</span>`</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Undo-Redo"><a href="#Undo-Redo" class="headerlink" title="Undo/Redo"></a>Undo/Redo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">u -  Undo</span><br><span class="line">Ctrl + r  -  Redo</span><br></pre></td></tr></table></figure><h4 id="Repeat-commands"><a href="#Repeat-commands" class="headerlink" title="Repeat commands"></a>Repeat commands</h4><ol><li><code>.</code> will repeat the last command.  </li><li><code>N&lt;command&gt;</code> will repeat the command N times  </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># examples</span></span><br><span class="line">2dd  -  will delete 2 lines</span><br><span class="line">3p  -  will paste the text 3 <span class="built_in">times</span></span><br><span class="line">100idesu [ESC]  -  will write “desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu”</span><br><span class="line">.  -  Just after the last <span class="built_in">command</span> will write again the 100 “desu”.</span><br><span class="line">3.  -  Will write 3 “desu” (and not 300, how clever).</span><br></pre></td></tr></table></figure><h4 id="Combination-command"><a href="#Combination-command" class="headerlink" title="Combination command"></a>Combination command</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;start position&gt;&lt;<span class="built_in">command</span>&gt;&lt;end position&gt;</span><br><span class="line">0y$ means</span><br><span class="line"></span><br><span class="line">0  -  go to the beginning of this line</span><br><span class="line">y  -  yank from here</span><br><span class="line">$  -  up to the end of this line</span><br><span class="line"></span><br><span class="line">ye - yank from here to the end of the word</span><br><span class="line">y2/foo - yank up to the second occurrence of “foo”.</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># These command can only be used after an operator in visual mode</span></span><br><span class="line">&lt;action&gt;a&lt;object&gt; </span><br><span class="line">&lt;action&gt;i&lt;object&gt;</span><br><span class="line"></span><br><span class="line">action: d (delete), y (yank), v (select <span class="keyword">in</span> visual mode)</span><br><span class="line">object:  `w` a word, `W` a WORD (extended word), `s` a sentence, `p` a paragraph. But also, natural character such as `<span class="string">&quot;, &#x27;, ), &#125;, ]`.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Suppose the cursor is on the first o of `(map (+) (&quot;</span>foo<span class="string">&quot;))`.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vi&quot;</span> -  will select foo.</span><br><span class="line">va<span class="string">&quot;  -  will select &quot;</span>foo<span class="string">&quot;.</span></span><br><span class="line"><span class="string">vi)  -  will select &quot;</span>foo<span class="string">&quot;.</span></span><br><span class="line"><span class="string">va)  -  will select (&quot;</span>foo<span class="string">&quot;).</span></span><br><span class="line"><span class="string">v2i)  -  will select map (+) (&quot;</span>foo<span class="string">&quot;)</span></span><br><span class="line"><span class="string">v2a)  -  will select (map (+) (&quot;</span>foo<span class="string">&quot;))</span></span><br></pre></td></tr></table></figure><h3 id="Insert-Mode"><a href="#Insert-Mode" class="headerlink" title="Insert Mode"></a>Insert Mode</h3><p><code>Insert Mode</code> is edit mode, there is nothing to write.</p><h3 id="Command-Mode"><a href="#Command-Mode" class="headerlink" title="Command Mode"></a>Command Mode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">help</span></span><br><span class="line">:<span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;</span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> nu (number)</span><br><span class="line">:<span class="built_in">set</span> nonu</span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> mouse=a</span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> hls[earch]    <span class="comment"># highlight seaching result</span></span><br><span class="line">:<span class="built_in">set</span> nohlsearch  <span class="comment"># Cancel highlighting</span></span><br><span class="line"></span><br><span class="line">:e &lt;patch/to/file&gt;  <span class="comment"># Open file.</span></span><br><span class="line">:saveas &lt;patch/to/file&gt; <span class="comment"># Save to/as &lt;patch/to/file&gt;</span></span><br><span class="line">:w filename , save as filename</span><br><span class="line">:q! <span class="comment"># Quit without saving</span></span><br><span class="line">:qa! <span class="comment"># Quit even if there are modified hidden buffers</span></span><br><span class="line">:wq, :x, or ZZ <span class="comment"># Save and quite,(:x only save if necessary)</span></span><br><span class="line">    Vim  写隐藏文件 .swap ，保存时才替换</span><br><span class="line"></span><br><span class="line"><span class="comment"># vi x.file y.file    </span></span><br><span class="line">:bn <span class="comment"># Show next file(buffer)</span></span><br><span class="line">:bp <span class="comment"># Show previous file(buffer)</span></span><br></pre></td></tr></table></figure><h3 id="Use-shell-commands-temporarily-in-Vim"><a href="#Use-shell-commands-temporarily-in-Vim" class="headerlink" title="Use shell commands temporarily in Vim."></a>Use shell commands temporarily in Vim.</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Convenient to copy patch information, etc.</span></span><br><span class="line">:! (eg, :!ifconfig) </span><br><span class="line">:！<span class="built_in">which</span> shutdown</span><br></pre></td></tr></table></figure><h3 id="Replace"><a href="#Replace" class="headerlink" title="Replace"></a>Replace</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:s/old/new      <span class="comment"># Replace first ‘old’ of current line.</span></span><br><span class="line">:s/old/new/g    <span class="comment"># Replace all &#x27;old&#x27; of current line.</span></span><br><span class="line">:%s/old/new     <span class="comment"># Replace first &#x27;old&#x27; of every line of current file.</span></span><br><span class="line">:%s/old/new/g   <span class="comment"># Replace globally all &#x27;old&#x27; of current file.</span></span><br><span class="line">:3,5s/old/new(/g) <span class="comment"># Replace (all) &#x27;old&#x27; between 3 and 5 line.</span></span><br></pre></td></tr></table></figure><h3 id="Visual-Mode"><a href="#Visual-Mode" class="headerlink" title="Visual Mode"></a>Visual Mode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enter visual mode</span></span><br><span class="line">v <span class="comment"># Character visual mode, operate in units of characters.</span></span><br><span class="line">V <span class="comment"># Line visual mode, Operate in uinits of lines.</span></span><br><span class="line">Ctrl + v <span class="comment"># Block visual mode, Operate in uinits of blocks.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># operating cmd</span></span><br><span class="line"><span class="string">&#x27;I&#x27;</span>     <span class="comment"># Insert content in the upper left corner of the block.</span></span><br><span class="line"><span class="string">&#x27;Esc&#x27;</span>   <span class="comment"># Press behind `I` in succession, insert the same content at the beginning of the block line.</span></span><br><span class="line"><span class="string">&#x27;d&#x27;</span>     <span class="comment"># Delete the block.</span></span><br></pre></td></tr></table></figure><h2 id="More"><a href="#More" class="headerlink" title="More"></a>More</h2><p><a href="http://huaqianlee.github.io/2020/11/19/Linux/Consolidating-the-foundation-of-Linux-vim-tips/">Consolidating the foundation of Linux, vim tips</a>.</p><h1 id="CMDs"><a href="#CMDs" class="headerlink" title="CMDs"></a>CMDs</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># fun cmds</span><br><span class="line">:h!</span><br><span class="line">:h 42</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Consolidating the foundation of Linux, basic cmds</title>
      <link href="2020/02/06/Linux/Consolidating-the-foundation-of-Linux-basic-cmds/"/>
      <url>2020/02/06/Linux/Consolidating-the-foundation-of-Linux-basic-cmds/</url>
      
        <content type="html"><![CDATA[<h2 id="Command-Interface"><a href="#Command-Interface" class="headerlink" title="Command Interface"></a>Command Interface</h2><p>We can enter command interface via the following ways.</p><ol><li>Excute <code>init 3</code> with root. <blockquote><p>init run at runlevel 3.  </p></blockquote></li><li>Hotkey: Ctrl + ALt + F1/2/3/…</li></ol><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><p><code>init</code> is the first process, it commonly locates on <code>/sbin/init</code>, if kernel can’t find <code>init</code>, it will try to run <code>/bin/sh</code>, if the operation fails , the OS will fail to start successfully. </p><p><code>init</code> has 7 runlevels, we can check the default runlevel and runlevels in <code>/etc/inittab</code>. As follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Default runlevel. The runlevels used are:</span><br><span class="line">#   0 - halt (Do NOT set initdefault to this)</span><br><span class="line">#   1 - Single user mode(root)</span><br><span class="line">#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</span><br><span class="line">#   3 - Full multiuser mode(standard runlevel)</span><br><span class="line">#   4 - unused(secure mode)</span><br><span class="line">#   5 - X11(user interface)</span><br><span class="line">#   6 - reboot (Do NOT set initdefault to this)</span><br><span class="line">#</span><br><span class="line">id:5:initdefault:</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Command-related-Directoriesran"><a href="#Command-related-Directoriesran" class="headerlink" title="Command-related Directoriesran"></a>Command-related Directoriesran</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc - configuration file directory</span><br><span class="line">&#x2F;bin - command directory</span><br><span class="line">&#x2F;sbin -  management command directory</span><br><span class="line">&#x2F;usr&#x2F;bin &amp; &#x2F;usr&#x2F;sbin Other commands pre-installed on the system</span><br></pre></td></tr></table></figure><h2 id="Help-Commands"><a href="#Help-Commands" class="headerlink" title="Help Commands"></a>Help Commands</h2><p>This part is very important, we can learn all the commands with the following help commands.</p><h3 id="man-manual"><a href="#man-manual" class="headerlink" title="man(manual)"></a>man(manual)</h3><p><code>man</code> has 9 setctions, we can check them via <code>man man</code>, as follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">MANUAL SECTIONS</span><br><span class="line">The standard sections of the manual include:</span><br><span class="line"></span><br><span class="line">       1      User Commands</span><br><span class="line"></span><br><span class="line">       2      System Calls</span><br><span class="line"></span><br><span class="line">       3      C Library Functions</span><br><span class="line"></span><br><span class="line">       4      Devices and Special Files</span><br><span class="line"></span><br><span class="line">       5      File Formats and Conventions</span><br><span class="line"></span><br><span class="line">       6      Games et. Al.</span><br><span class="line"></span><br><span class="line">       7      Miscellanea</span><br><span class="line"></span><br><span class="line">       8      System Administration tools and Daemons</span><br><span class="line"></span><br><span class="line">       9      Kernel routines</span><br></pre></td></tr></table></figure><p>Manual sections are used to distinguish different parameters. For example, when there is a parameter with the same name, that the category is different. we can specify by sections.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man (1) man <span class="comment"># default is 1</span></span><br></pre></td></tr></table></figure><p>When we do not know the classification, all manuals can be got as follows.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man -a passwd</span><br></pre></td></tr></table></figure><h3 id="help"><a href="#help" class="headerlink" title="help"></a>help</h3><p>Before introducing this command, we need to figure out two concepts. As follows:</p><ol><li>Builtin commands : come with shell.</li><li>External commands : the others.</li></ol><p>We can figure out what type a command belongs to depend on the following way:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span> &lt;<span class="built_in">command</span>&gt;  <span class="comment"># print the type of command</span></span><br><span class="line"></span><br><span class="line">example:</span><br><span class="line">[lee@lee-server bin]$ <span class="built_in">type</span> ls</span><br><span class="line">ls is aliased to `ls --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[lee@lee-server bin]$ type cd</span></span><br><span class="line"><span class="string">cd is a shell builtin</span></span><br></pre></td></tr></table></figure><p>Different types of commands have different execution formats, as follows:<br>Builtin commands:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;</span><br><span class="line"><span class="built_in">help</span> <span class="built_in">cd</span></span><br></pre></td></tr></table></figure><p>External commands:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">command</span>&gt; --<span class="built_in">help</span></span><br><span class="line">ls --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="info"><a href="#info" class="headerlink" title="info"></a>info</h3><p><code>info</code> is more detailed command than <code>help.</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">info &lt;<span class="built_in">command</span>&gt;</span><br><span class="line">info ls</span><br></pre></td></tr></table></figure><h2 id="Basic-commands"><a href="#Basic-commands" class="headerlink" title="Basic commands"></a>Basic commands</h2><h3 id="Switch-Account"><a href="#Switch-Account" class="headerlink" title="Switch Account"></a>Switch Account</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - &lt;usr&gt;</span><br></pre></td></tr></table></figure><h3 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h3><p><code>man pwd</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">NAME</span><br><span class="line">       <span class="built_in">pwd</span> - <span class="built_in">print</span> name of current/working directory</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       <span class="built_in">pwd</span> [OPTION]...</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       Print the full filename of the current working directory.</span><br><span class="line"></span><br><span class="line">       -L, --logical</span><br><span class="line">              use PWD from environment, even <span class="keyword">if</span> it contains symlinks</span><br><span class="line"></span><br><span class="line">       -P, --physical</span><br><span class="line">              avoid all symlinks</span><br><span class="line"></span><br><span class="line">       --<span class="built_in">help</span> display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">       --version</span><br><span class="line">              output version information and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">       NOTE:  your  shell may have its own version of <span class="built_in">pwd</span>, <span class="built_in">which</span> Commonly supersedes the version described here.  Please refer to your shell’s</span><br><span class="line">       documentation <span class="keyword">for</span> details about the options it supports.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h3><p>Basic usage:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[lee@lee-server bin]$ ls /home / /home/*</span><br><span class="line">[sudo] password <span class="keyword">for</span> lee: </span><br><span class="line">/:</span><br><span class="line">bin  boot  devetc  home  liblost+found  media  misc  mnt  net  optproc  root  sbin  selinux  srvsys  tmp  usr  var</span><br><span class="line"></span><br><span class="line">/home:</span><br><span class="line">lee  lost+found</span><br><span class="line"></span><br><span class="line">/home/lee:</span><br><span class="line">bin  blog  Desktop  Documents  Downloads  lee  mbr2.bin  mbr.bin  Music  Pictures  Public  script  server  Templates  Videos</span><br><span class="line"></span><br><span class="line">/home/lost+found:</span><br></pre></td></tr></table></figure><p>Common options:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-a, --all</span><br><span class="line">      <span class="keyword">do</span> not ignore entries starting with .</span><br><span class="line">-l    use a long listing format</span><br><span class="line">-r, --reverse</span><br><span class="line">      reverse order <span class="keyword">while</span> sorting</span><br><span class="line">-R, --recursive</span><br><span class="line">      list subdirectories recursively</span><br><span class="line">-t    sort by modification time</span><br></pre></td></tr></table></figure><h3 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> - <span class="comment"># change to $(OLDPWD)</span></span><br></pre></td></tr></table></figure><h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mkdir - Create the DIRECTORY(ies), <span class="keyword">if</span> they <span class="keyword">do</span> not already exist.</span><br><span class="line">rmdir - Remove the DIRECTORY(ies), <span class="keyword">if</span> they are empty.</span><br><span class="line"></span><br><span class="line">Option:</span><br><span class="line">-p, --parents   create/remove DIRECTORY and its ancestors; e.g., `mkdir/rmdir -p a/b/c<span class="string">&#x27; is</span></span><br><span class="line"><span class="string">                    similar to `mkdir/rmdir a/b/c a/b a&#x27;</span></span><br><span class="line"></span><br><span class="line">rm  - Remove (unlink) the FILE(s).</span><br><span class="line"></span><br><span class="line">Option:</span><br><span class="line">  -f, --force           ignore nonexistent files, never prompt</span><br><span class="line">  -r, -R, --recursive   remove directories and their contents recursively</span><br></pre></td></tr></table></figure><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><p>Common options:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-a, --archive</span><br><span class="line">        same as -dR --preserve=all; 保留源文件所有信息</span><br><span class="line">-p     same as --preserve=mode,ownership,timestamps; 保留源文件时间</span><br><span class="line">-R, -r, --recursive</span><br><span class="line">        copy directories recursively</span><br><span class="line">-v, --verbose</span><br><span class="line">        explain what is being <span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat - Concatenate FILE(s), or standard input, to standard output.</span><br><span class="line"></span><br><span class="line">head - output the first part of files</span><br><span class="line">        With no FILE, or when FILE is -, <span class="built_in">read</span> standard input. </span><br><span class="line">    -n   output the fist n lines instead of the first 10(default value)</span><br><span class="line"></span><br><span class="line">tail - output the last part of files</span><br><span class="line">    -n  output the last n lines instead of the last 10(default value)</span><br><span class="line">    -f  output appended data as the file grows, eg, get the logs.</span><br><span class="line"></span><br><span class="line">wc - <span class="built_in">print</span> newline, word, and byte counts <span class="keyword">for</span> each file</span><br><span class="line">    -l, --lines</span><br><span class="line">        <span class="built_in">print</span> the newline counts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">more - More is a filter <span class="keyword">for</span> paging through text one screenful at a time.</span><br><span class="line">less</span><br></pre></td></tr></table></figure><h3 id="Compression-and-decompression"><a href="#Compression-and-decompression" class="headerlink" title="Compression and decompression"></a>Compression and decompression</h3><p>Common commands:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># compression rate increases in turn.</span></span><br><span class="line">tar </span><br><span class="line">gzip</span><br><span class="line">bzip2</span><br></pre></td></tr></table></figure><p>Commond suffix:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.tar.gz </span><br><span class="line">.tar.bz2 </span><br><span class="line">.tgz</span><br></pre></td></tr></table></figure><p>Compress:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -c  </span><br><span class="line">tar czf ，integrate gzip，fast but low compression rate.  common suffix is <span class="string">&#x27;.tar.gz&#x27;</span></span><br><span class="line">tar cjf , integrate bzip2 , slow but high compression rate. Common suffix is <span class="string">&#x27;.tar.bz2&#x27;</span></span><br></pre></td></tr></table></figure><p>Extract:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar xf -C &lt;out_dir&gt; </span><br><span class="line">    zxf</span><br><span class="line">    jxf</span><br></pre></td></tr></table></figure><h3 id="Wildcard"><a href="#Wildcard" class="headerlink" title="Wildcard"></a>Wildcard</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*  any string</span><br><span class="line">？ one char,  file? = filea, fileb  not fileab</span><br><span class="line">[xyz]  one of xyz</span><br><span class="line">[a~z]  range between a and z</span><br><span class="line">[!xyz] or [^xyz] not one of xyz</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 卡死了怎么办？</title>
      <link href="2019/11/25/Linux/How-to-save-dead-ubuntu/"/>
      <url>2019/11/25/Linux/How-to-save-dead-ubuntu/</url>
      
        <content type="html"><![CDATA[<p>在使用 Ubuntu 的时候，有时候会遇到卡死的问题，然后电脑完全不能使用。这时候怎么办呢，我通常是通过如下两种方式进行处理：  </p><h2 id="Kill-process"><a href="#Kill-process" class="headerlink" title="Kill process"></a><code>Kill process</code></h2><p>当我们明确知道什么进程导致系统卡死的时候，譬如文件管理器，我们可以通过如下两种方式进入字符终端找到假死的进程然后 kill 掉。  </p><ol><li><code>Ctrl + Alt + F1</code> 进入，<code>Ctrl + Alt + F7</code>  回到 UI 。</li><li><code>ssh user@ip</code> 远程登入。</li></ol><p>杀死进程的方式，我常用的有三种，如下：</p><ol><li><code>Top</code> 或者 <code>htop</code> 找到造成假死的进程并 <code>kill</code>。</li><li>通过名字或者进程 PID 去杀进程。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ps -A |grep nautilus  <span class="comment"># 查看文件管理器的 PID</span></span><br><span class="line"><span class="built_in">kill</span> PID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以名字的形式杀掉进程</span></span><br><span class="line">killall nautilus </span><br></pre></td></tr></table></figure></li></ol><h2 id="Log-out"><a href="#Log-out" class="headerlink" title="Log out"></a><code>Log out</code></h2><p>注销桌面重新登录：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pkill Xorg</span><br><span class="line">或者</span><br><span class="line">sudo restart lightdm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Issues </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oh, the Git! - Basic</title>
      <link href="2019/11/17/Git/Some-knowledge-about-git/"/>
      <url>2019/11/17/Git/Some-knowledge-about-git/</url>
      
        <content type="html"><![CDATA[<h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>Git has always been a must-have skill for developers, I will submize a series of blogs related to it, although I don’t know too much about git now.</p><p><a href="https://git-scm.com/book/en/v2">Pro Git</a> is the best guide of git, I need to read it when I have plenty of time so that I can check for gaps.</p><h1 id="VCS-Version-Control-System"><a href="#VCS-Version-Control-System" class="headerlink" title="VCS(Version Control System)"></a>VCS(Version Control System)</h1><h2 id="Central-VCS"><a href="#Central-VCS" class="headerlink" title="Central VCS"></a>Central VCS</h2><p>Central VCS mainly includes <code>SVN</code> and <code>CVS</code>, its newwork architecture is client-server.<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/Central%20VCS.jpg" alt="Central VCS"></p><a id="more"></a><p>Advantages:</p><ul><li>Centralized version management.</li><li>Supports file version management and branch management.</li></ul><p>Disadvantages:</p><ul><li>The client must remain connected to the server at all times.</li></ul><h2 id="Distributed-VCS"><a href="#Distributed-VCS" class="headerlink" title="Distributed VCS"></a>Distributed VCS</h2><p>Distributed VCS mainly includes <code>Git</code> and <code>Mercurial</code>,its network architecture is distributied.<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/Distributed%20VCS.jpg" alt="Distributed VCS"></p><p>Advantages:</p><ul><li>Complete repositories on both server and client.</li><li>The client can manage the version independently.</li><li>Most operations without relying on the server.</li></ul><h1 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h1><h2 id="Config-user"><a href="#Config-user" class="headerlink" title="Config user"></a>Config user</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --[ <span class="built_in">local</span> | global | system ] user.name <span class="string">&quot;your_name&quot;</span></span><br><span class="line">git config --[ <span class="built_in">local</span> | global | system ] user.email <span class="string">&quot;your_email@domain.com&quot;</span>   <span class="comment"># email notification</span></span><br><span class="line"></span><br><span class="line">git config --<span class="built_in">local</span> <span class="comment"># Valid for the current repository, if no option defualts to local</span></span><br><span class="line">git config --global <span class="comment"># Valid for the current user.</span></span><br><span class="line">git config --system <span class="comment"># Valid for all user.</span></span><br></pre></td></tr></table></figure><blockquote><p>local - .git/config.<br>global - ~/.gitconfig.<br>system - git installation path.</p></blockquote><h2 id="Check-configuration"><a href="#Check-configuration" class="headerlink" title="Check configuration"></a>Check configuration</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --list --<span class="built_in">local</span> <span class="comment"># Highest priority</span></span><br><span class="line">git config --list --global <span class="comment"># Higher priority</span></span><br><span class="line">git config --list --system <span class="comment"># Low priority</span></span><br></pre></td></tr></table></figure><h2 id="Clean-configuration"><a href="#Clean-configuration" class="headerlink" title="Clean configuration"></a>Clean configuration</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">unset</span> --<span class="built_in">local</span> user.name</span><br><span class="line">git config --<span class="built_in">unset</span> --global user.name</span><br><span class="line">git config --<span class="built_in">unset</span> --system user.name</span><br></pre></td></tr></table></figure><h1 id="Basic-usage"><a href="#Basic-usage" class="headerlink" title="Basic usage"></a>Basic usage</h1><h2 id="Init-git-repository"><a href="#Init-git-repository" class="headerlink" title="Init git repository"></a>Init git repository</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;project&gt;</span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">or </span><br><span class="line"></span><br><span class="line">git init &lt;project&gt;</span><br></pre></td></tr></table></figure><h2 id="Work-flow"><a href="#Work-flow" class="headerlink" title="Work flow"></a>Work flow</h2><p>Basic cmds:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add [&lt;file&gt; | .]  <span class="comment"># . : All unstracked files of current project.</span></span><br><span class="line">git commit [--allow-empty] [-m &lt;msg&gt;]</span><br><span class="line">git commit --amend <span class="comment"># apend the current staging area to last commit.</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>Work flow:</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vcs/vcs_work_flow.jpg" alt="Work flow"></p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>I list some commands I often use as follows.</p><h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">help</span> </span><br><span class="line">git <span class="built_in">help</span> -a/-g </span><br><span class="line">git &lt;<span class="built_in">command</span>&gt; --<span class="built_in">help</span></span><br><span class="line">git <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="Rename"><a href="#Rename" class="headerlink" title="Rename"></a>Rename</h2><p>We can rename one files as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv name new_name</span><br><span class="line">git add new_name</span><br><span class="line">git rm name</span><br></pre></td></tr></table></figure><p>The better way:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git mv name new_name</span><br></pre></td></tr></table></figure><h2 id="log"><a href="#log" class="headerlink" title="log"></a>log</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --oneline -n&lt;number&gt; <span class="comment"># -n : last &lt;number&gt; record </span></span><br><span class="line">git <span class="built_in">log</span> --onelie --all -n5 --graph <span class="comment"># --all: all branches. </span></span><br><span class="line">git <span class="built_in">log</span> &lt;branch&gt; <span class="comment"># check specified branch</span></span><br></pre></td></tr></table></figure><h2 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git diff [-- filename] <span class="comment"># woking directory compares to staging area.</span></span><br><span class="line">git diff HEAD <span class="comment"># woking directory compares to HEAD</span></span><br><span class="line">git diff --cached | --staged  <span class="comment"># staging area compares to HEAD</span></span><br><span class="line"></span><br><span class="line">git diff HEAD  HEAD~1 | HEAD^ / HEAD~2 | HEAD^^ | HEAD^2</span><br><span class="line"><span class="comment"># &#x27;^2&#x27; means the second parent</span></span><br><span class="line"><span class="comment"># &#x27;~2&#x27; means the parent of its parent</span></span><br><span class="line"><span class="comment"># A node can contain multiple sub-nodes (checkout multiple branches)</span></span><br><span class="line"><span class="comment"># A node can have multiple parent nodes (multiple branches merged)</span></span><br></pre></td></tr></table></figure><blockquote><p><code>--</code> of <code>-- filename</code> is to disambiguate. </p></blockquote><h2 id="checkout"><a href="#checkout" class="headerlink" title="checkout"></a>checkout</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch&gt; <span class="comment"># Create and checkout &lt;branch&gt;</span></span><br><span class="line">git checkout <span class="comment"># Switch branches or restore working tree files</span></span><br><span class="line">git checkout . | [--] filename  <span class="comment"># Restore current git or specified files. </span></span><br><span class="line">git checkout SHA-1 <span class="comment"># Switch to SHA-1, detached HEAD situation.</span></span><br><span class="line">git checkout -b new_branch  base_branch_or_commit <span class="comment"># Create and swith new_branch based on branch or commit.</span></span><br></pre></td></tr></table></figure><h2 id="reset"><a href="#reset" class="headerlink" title="reset"></a>reset</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD [-- filename]<span class="comment"># HEAD and Staging area ponit to HEAD, unstage files.</span></span><br><span class="line">git reset --hard <span class="comment"># clean staging area and working dirctory, </span></span><br><span class="line"></span><br><span class="line">git reset --soft|hard|mixed &lt;commit&gt;</span><br><span class="line">--soft: HEAD points to the specified commit, staging area and woking directory keep as they are. </span><br><span class="line">--hard: HEAD, Staging area and woking directory point to the specified commit.</span><br><span class="line">--mixed: default option, HEAD and Staging area point to the specified commit, woking directory keep as it is.</span><br></pre></td></tr></table></figure><h2 id="rebase"><a href="#rebase" class="headerlink" title="rebase"></a>rebase</h2><p>Works with <a href="http://huaqianlee.github.io/2020/03/08/Git/Some-knowledge-about-git-detached-HEAD/">detached HEAD</a>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i start_sha-1  [end_sha-1]</span><br><span class="line"><span class="comment"># sha-1 is the oldest commit&#x27;s parent, whose we want to modify</span></span><br><span class="line"><span class="comment"># If the oldest commit is the first commit, choose the oldest one and add it manully in interactive interface.</span></span><br><span class="line"><span class="comment"># if we specify end_sha-1, one detached HEAD will be created.</span></span><br><span class="line"><span class="comment"># if end_sha-1 is not specified, use the lastest sha-1, all sha-1 from start_sha-1 will change, HEAD and &lt;branch&gt; will point to HEAD of detached HEAD.</span></span><br></pre></td></tr></table></figure><p>An interactive interface will pop up, as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># When we finish the interactive interface, another new interface will pop up.</span></span><br><span class="line"><span class="comment"># The latest commit is at the bottom.</span></span><br><span class="line"></span><br><span class="line">pick 2dc628e modified resume link</span><br><span class="line">pick 0c11aed update resume</span><br><span class="line">pick 375c9df Update <span class="keyword">in</span> 2020.10</span><br><span class="line">pick 585c3e7 update resume.</span><br><span class="line"><span class="comment"># Commands:</span></span><br><span class="line"><span class="comment"># p, pick &lt;commit&gt; = use commit</span></span><br><span class="line"><span class="comment"># r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span><br><span class="line"><span class="comment"># e, edit &lt;commit&gt; = use commit, but stop for amending</span></span><br><span class="line"><span class="comment"># s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span><br><span class="line"><span class="comment"># f, fixup &lt;commit&gt; = like &quot;squash&quot;, but discard this commit&#x27;s log message</span></span><br><span class="line"><span class="comment"># x, exec &lt;command&gt; = run command (the rest of the line) using shell</span></span><br><span class="line"><span class="comment"># b, break = stop here (continue rebase later with &#x27;git rebase --continue&#x27;)</span></span><br><span class="line"><span class="comment"># d, drop &lt;commit&gt; = remove commit</span></span><br><span class="line"><span class="comment"># l, label &lt;label&gt; = label current HEAD with a name</span></span><br><span class="line"><span class="comment"># t, reset &lt;label&gt; = reset HEAD to a label</span></span><br><span class="line"><span class="comment"># m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]</span></span><br><span class="line"><span class="comment"># .       create a merge commit using the original merge commit&#x27;s</span></span><br><span class="line"><span class="comment"># .       message (or the oneline, if no original merge commit was</span></span><br><span class="line"><span class="comment"># .       specified). Use -c &lt;commit&gt; to reword the commit message.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># However, if you remove everything, the rebase will be aborted.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note that empty commits are commented out</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="stash"><a href="#stash" class="headerlink" title="stash"></a>stash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git stash <span class="comment"># Stash the changes in a dirty working directory away.</span></span><br><span class="line">git stash list <span class="comment"># List all stash modifications.</span></span><br><span class="line">git stash pop <span class="comment"># Pop the lateset stashed changes.</span></span><br><span class="line">git stash apply <span class="comment"># Apply the lateset stashed changes, and keep it in list.</span></span><br><span class="line">git stash drop <span class="comment"># Delete stash files.</span></span><br></pre></td></tr></table></figure><h2 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch -v <span class="comment"># Check all local branches.</span></span><br><span class="line">git branch -av <span class="comment"># Check all branch included remote branches.</span></span><br><span class="line">git branch -d | -D brnach </span><br><span class="line">git branch branch_name old_branch | sha1  <span class="comment"># Create branch_name based on sha1</span></span><br><span class="line">git checkout -b new_branch old_branch | sha1</span><br></pre></td></tr></table></figure><h2 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h2><p>We can check the information of repository through UI as long as we install <code>gitk</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitk <span class="comment"># open graphical interface.</span></span><br><span class="line">gitk file</span><br></pre></td></tr></table></figure><h2 id="More"><a href="#More" class="headerlink" title="More"></a>More</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># info from remote repository.</span></span><br><span class="line">author <span class="comment"># who did the first commission, `git cherry-pick` won&#x27;t change it</span></span><br><span class="line">committer <span class="comment"># who did the last commission.</span></span><br><span class="line">tag <span class="comment"># tag for project stage.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cmds</span></span><br><span class="line">git <span class="built_in">help</span> --web cmd  <span class="comment"># View cmd&#x27;s help by web</span></span><br><span class="line">git tag [-d] &lt;tagname&gt; [&lt;commit&gt;] <span class="comment"># Create [delete] a tag reference in refs/tags/.</span></span><br><span class="line">git commit -am <span class="comment"># git add + git commit -m, not suggested.</span></span><br><span class="line">git reflog <span class="comment"># check history version, record when the tips of branches and other references were updated in the local repository.</span></span><br><span class="line"></span><br><span class="line">git show <span class="comment"># Shows one or more objects (blobs, trees, tags and commits).</span></span><br><span class="line">git blame <span class="comment"># Show what revision and author last modified each line of a file.</span></span><br><span class="line"></span><br><span class="line">git cat-file -t <span class="comment"># Check type of object.</span></span><br><span class="line">git cat-file -p <span class="comment"># Check content of object</span></span><br><span class="line">find [dir] -<span class="built_in">type</span> f <span class="comment"># Find all files in current/[dir] directory.</span></span><br></pre></td></tr></table></figure><blockquote><p><code>-</code> : single char options, like -m , -a;<br> <code>--</code>: multi char options, like –web, –hard; </p></blockquote><h1 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h1><p><a href="https://github.com/github/gitignore">github/gitignore</a>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># c.gitignore</span></span><br><span class="line"><span class="comment"># Prerequisites</span></span><br><span class="line">*.d</span><br><span class="line"></span><br><span class="line"><span class="comment"># Object files</span></span><br><span class="line">*.o</span><br><span class="line">*.ko</span><br><span class="line">*.obj</span><br><span class="line">*.elf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Linker output</span></span><br><span class="line">*.ilk</span><br><span class="line">*.map</span><br><span class="line">*.exp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Precompiled Headers</span></span><br><span class="line">*.gch</span><br><span class="line">*.pch</span><br><span class="line"></span><br><span class="line"><span class="comment"># Libraries</span></span><br><span class="line">*.lib</span><br><span class="line">*.a</span><br><span class="line">*.la</span><br><span class="line">*.lo</span><br><span class="line"></span><br><span class="line"><span class="comment"># Shared objects (inc. Windows DLLs)</span></span><br><span class="line">*.dll</span><br><span class="line">*.so</span><br><span class="line">*.so.*</span><br><span class="line">*.dylib</span><br><span class="line"></span><br><span class="line"><span class="comment"># Executables</span></span><br><span class="line">*.exe</span><br><span class="line">*.out</span><br><span class="line">*.app</span><br><span class="line">*.i*86</span><br><span class="line">*.x86_64</span><br><span class="line">*.hex</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debug files</span></span><br><span class="line">*.dSYM/</span><br><span class="line">*.su</span><br><span class="line">*.idb</span><br><span class="line">*.pdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># Kernel Module Compile Results</span></span><br><span class="line">*.mod*</span><br><span class="line">*.cmd</span><br><span class="line">.tmp_versions/</span><br><span class="line">modules.order</span><br><span class="line">Module.symvers</span><br><span class="line">Mkfile.old</span><br><span class="line">dkms.conf</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The ninth week of ARTS</title>
      <link href="2019/10/23/ARTS/Ninth-week-of-ARTS/"/>
      <url>2019/10/23/ARTS/Ninth-week-of-ARTS/</url>
      
        <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>Title: <a href="https://leetcode.com/problems/remove-element/">Remove Element</a>.<br>Solution: <a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/java/RemoveElement.java">Java</a>.</p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p>I found a usage of “repo init … –reference” this week, I want to know more, so I read <a href="https://forum.xda-developers.com/android/software/guide-android-repo-mirroring-t3170869">Android Repo Mirroring</a> this week.</p><p>This article explains “repo mirroring” in a simple and clear way through examples.</p><a id="more"></a><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>Download android code from local mirror(code). As follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u url -b &lt;branch&gt; --reference=&lt;local_dir&gt;</span><br></pre></td></tr></table></figure><p>It could increase download speed and save the storage when we want to keep multiple sets of code.</p><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="http://huaqianlee.github.io/2020/10/10/Git/How-to-build-intranet-gitbook-with-docker/">How to build intranet gitbook with docker</a></p>]]></content>
      
      
      <categories>
          
          <category> Laboratory </category>
          
          <category> ARTS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The eighth week of ARTs</title>
      <link href="2019/10/20/ARTS/Eighth-week-of-ARTs/"/>
      <url>2019/10/20/ARTS/Eighth-week-of-ARTs/</url>
      
        <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>Title: <a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array/">Remove Duplicates from Sorted Array</a><br>Solution: <a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/java/RemoveDuplicatesfromSortedArray.java">Java</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><a id="more"></a><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>Patch the staged and untracked files via <code>git</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached // diff staged (after <span class="string">&#x27;git add&#x27;</span>)</span><br><span class="line">git add -N &lt;unstracked_file_name&gt;; git diff <span class="comment"># diff untracked file</span></span><br></pre></td></tr></table></figure><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="http://huaqianlee.github.io/2020/03/08/Git/Some-knowledge-about-git-detached-HEAD/">Oh, the Git! - detached HEAD</a></p>]]></content>
      
      
      <categories>
          
          <category> Laboratory </category>
          
          <category> ARTS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The seventh week of ARTs</title>
      <link href="2019/10/13/ARTS/Seventh-week-of-ARTs/"/>
      <url>2019/10/13/ARTS/Seventh-week-of-ARTs/</url>
      
        <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>Title: <a href="https://leetcode.com/problems/merge-two-sorted-lists/">Merge Two Sorted Lists</a><br>Solution: <a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/java/MergeTwoSortedLists.java">Java</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><a id="more"></a><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>I forgot the following git cmds when I needed them.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b topic-branch // checkout and branch a new topic branch.</span><br><span class="line">git branch --set-upstream-to=origin/branch topic-branch //  <span class="built_in">set</span> tracking information <span class="keyword">for</span> topic-branch.</span><br></pre></td></tr></table></figure><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="http://huaqianlee.github.io/2020/03/07/Git/Some-knowledge-about-git-local-git/">Oh, the Git! - local .git</a></p>]]></content>
      
      
      <categories>
          
          <category> Laboratory </category>
          
          <category> ARTS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The sixth week of ARTs</title>
      <link href="2019/10/06/ARTS/Sixth-week-of-ARTs/"/>
      <url>2019/10/06/ARTS/Sixth-week-of-ARTs/</url>
      
        <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>Title: <a href="https://leetcode.com/problems/valid-parentheses/">Valid Parentheses</a><br>Solution: <a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/python/ValidParentheses.py">Python</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p>I read <a href="https://organizationsandmarkets.com/2010/08/31/how-to-read-an-academic-article/">How to Read an Academic Article</a> this week. It teaches me to read academic article by sharing handout. It simply summarizes the method of fast reading, a lot of them maybe be a cliche, but the summary is very helpful.</p><a id="more"></a><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>Quickly replace all specified strings under the specified path.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find .&#x2F; -type f -exec sed -i &#39;s&#x2F;old_string&#x2F;new_string&#x2F;g&#39; &#123;&#125; \;</span><br></pre></td></tr></table></figure><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="http://huaqianlee.github.io/2020/02/06/Linux/Consolidating-the-foundation-of-Linux-vim/">Consolidating the foundation of Linux, vim</a></p>]]></content>
      
      
      <categories>
          
          <category> Laboratory </category>
          
          <category> ARTS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The fifth week of ARTS</title>
      <link href="2019/09/29/ARTS/Fifth-week-of-ARTS/"/>
      <url>2019/09/29/ARTS/Fifth-week-of-ARTS/</url>
      
        <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>Title: <a href="https://leetcode.com/problems/longest-common-prefix/">Longest Common Prefix</a><br>Solution: <a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/java/LongestCommonPrefix.java">Java</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p>I always want to change the mind of my loves, but I didn’t use the good way to do it. So I read <a href="https://forge.medium.com/how-to-change-a-mind-1774681b9369">How to Change a Mind</a> this week.</p><p>To be honesty, I can’t get this article well, it is a little hard to me. But I got the following opinions from this topic.</p><ol><li>Firstly we should think or do like the people who we want to change.</li><li>For scams, we should let the people lose the faith in the person not in the scams, it will be a better way. Quote the sentence:  <blockquote><p>“Dylan did not need to lose his faith in what his elders were saying; he needed to lose his faith in them.” </p></blockquote><a id="more"></a><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1>This week I leaned the way to unmount <code>sshfs</code>. <code>sshfs</code> is used to map(mount) a remote server dir to the local pc.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fusermount -u remote_dir // unmount sshfs </span><br></pre></td></tr></table></figure></li></ol><p>BTW, I summarize the sample use of <code>sshfs</code> cmd as follows.</p><h2 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h2><p>mkdir ~/remote_dir<br>sshfs -o idmap=user $USER@far:/dir ~/remote_dir</p><h2 id="unmount"><a href="#unmount" class="headerlink" title="unmount"></a>unmount</h2><p>fusermount -u ~/dir</p><h2 id="To-add-it-to-your-etc-fstab"><a href="#To-add-it-to-your-etc-fstab" class="headerlink" title="To add it to your /etc/fstab"></a>To add it to your <code>/etc/fstab</code></h2><p>sshfs#$USER@<IP>:/dir /home/$USER/remote_dir fuse defaults,idmap=user 0 0</p><blockquote><p>sshfs $USER@<IP>:/dir /home/$USER/remote_dir // mount via terminal</p></blockquote><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="http://huaqianlee.github.io/2020/02/06/Linux/Consolidating-the-foundation-of-Linux-basic-cmds/">Consolidating the foundation of Linux, basic cmds</a></p>]]></content>
      
      
      <categories>
          
          <category> Laboratory </category>
          
          <category> ARTS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The fourth week of ARTS</title>
      <link href="2019/09/22/ARTS/Fourth-week-of-ARTS/"/>
      <url>2019/09/22/ARTS/Fourth-week-of-ARTS/</url>
      
        <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>Title: <a href="https://leetcode.com/problems/roman-to-integer/">Roman to Integer</a><br>Solution: <a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/java/RomantoInteger.java">Java Solution:</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p>Today I access <a href="">Medium</a>,This article called <a href="https://medium.com/free-code-camp/code-comments-the-good-the-bad-and-the-ugly-be9cc65fbf83"><code>Putting comments in code: the good, the bad, and the ugly.</code></a> got into my eyes first. So I choose it as my <code>Review</code>.</p><p>This article mainly says the cliche <code>“Good code is self-documenting.”</code> It tells the good, the bad, and the ugly when it comes to commenting our code. </p><a id="more"></a><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>In my job, I always build the android source code or capture some logs. I just named the logs manually before, forgot to named them automaticly. This week I remember the followsing way.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CMD | tee build-$(date <span class="string">&quot;+%Y%m%d-%H%M%S&quot;</span>).<span class="built_in">log</span> <span class="comment"># Generate build log</span></span><br></pre></td></tr></table></figure><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p>(Oh, the Git! - Basic)[<a href="http://huaqianlee.github.io/2019/11/17/Git/Some-knowledge-about-git/]">http://huaqianlee.github.io/2019/11/17/Git/Some-knowledge-about-git/]</a></p>]]></content>
      
      
      <categories>
          
          <category> Laboratory </category>
          
          <category> ARTS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How does the repo of android source code work ?</title>
      <link href="2019/09/15/Git/How-does-android-repo-work/"/>
      <url>2019/09/15/Git/How-does-android-repo-work/</url>
      
        <content type="html"><![CDATA[<p>在 <code>android</code> 源码中，主要用 <a href="https://android.googlesource.com/tools/repo"><strong>Repo</strong></a> 和 <a href="https://git-scm.com/"><strong>Git</strong></a> 来进行版本管理。<code>Repo</code> 是一个由谷歌构建，运行在 Git 之上的仓库管理工具，其让多项目管理变得更容易，尤其对于基本的网络操作，譬如，下载由上百个项目组成的 Android 源码。</p><h1 id="Repo-的组成和基本使用"><a href="#Repo-的组成和基本使用" class="headerlink" title="Repo 的组成和基本使用"></a>Repo 的组成和基本使用</h1><h2 id="Repo-launcher"><a href="#Repo-launcher" class="headerlink" title="Repo launcher"></a>Repo launcher</h2><p><code>Repo</code> 的第一部分，其是一个 <code>Python</code> 脚本，主要用来获取完整的 <code>Repo</code> 工具并转发接收到的命令 .</p><h2 id="Repo-Tool"><a href="#Repo-Tool" class="headerlink" title="Repo Tool"></a>Repo Tool</h2><p><code>Repo</code> 的第二部分，由 <code>Repo launcher</code> 下载到 <code>$srcDir/.repo/repo</code>，其是主要功能部分，处理 <code>Repo launcher</code> 转发的命令。</p><a id="more"></a><h2 id="官方的获取方式"><a href="#官方的获取方式" class="headerlink" title="官方的获取方式"></a>官方的获取方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/bin</span><br><span class="line">PATH=~/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line">curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo</span><br><span class="line">chmod a+x ~/bin/repo</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">sudo apt-get install repo</span><br></pre></td></tr></table></figure><h2 id="官方源码下载方式"><a href="#官方源码下载方式" class="headerlink" title="官方源码下载方式"></a>官方源码下载方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https://android.googlesource.com/platform/manifest -b android-4.0.1_r1</span><br><span class="line">repo sync [-c --no-tags]</span><br></pre></td></tr></table></figure><h1 id="Repo-怎么工作"><a href="#Repo-怎么工作" class="headerlink" title="Repo 怎么工作"></a>Repo 怎么工作</h1><p>下载代码时 <code>repo</code> 主要工作流程如下：</p><ol><li><code>repo init</code> 在当前路径创建 <code>.repo</code> 文件夹并克隆 <a href="https://android.googlesource.com/tools/repo">repo 的 git 仓库</a>到 <code>.repo/repo</code>（即 <code>Repo Tool</code>）。</li><li>以 <a href="https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server#_getting_git_on_a_server"><code>--bare</code></a> 方式克隆 <code>-u</code> 选项指定的 <code>git</code> 仓库（没有工作空间的仓库）到 <code>.repo/manifests.git</code>。 </li><li>创建 <code>.repo/manifests</code> 目录，创建 <code>.repo/manifests/.git</code> 到 <code>.repo/manifests.git</code> 的符号链接，将 <code>manifests</code> 转换为 Git 仓库。 </li><li><strong>Checkout</strong> <code>-b</code> 选项指定的分支，并创建 <code>.repo/manifests</code> 目录中的指定文件（通过 <code>-m</code> 指定，通常默认为 <code>.repo/manifests/defualt.xml</code>）的符号链接 <code>.repo/manifest.xml</code>。</li><li><code>repo sync</code> 将 <code>manifest.xml</code> 和 <code>local_manifest.xml</code> 中每一个 <code>project</code> 的 <code>git</code> 仓库克隆到 <code>.repo/projects</code>。</li><li>通过链接到相应空仓库的 <code>.git</code> 创建工作路径， <strong>checkout</strong>  <code>manifest</code> 中指定的分支，并更新 <code>.repo/project.list</code>。 <blockquote><p>项目存在的情况下， 一般执行 <code>git pull [--rebase]</code>来下载更新源码。</p></blockquote></li></ol><p><code>repo init</code>的大体流程上如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">repo init -u $URL -b $BRANCH -m $MANIFEST</span><br><span class="line"> --------------------</span><br><span class="line"> mkdir .repo; cd .repo</span><br><span class="line"> git clone https:&#x2F;&#x2F;android.googlesource.com&#x2F;tools&#x2F;repo</span><br><span class="line"> git clone --bare $URL manifests.git</span><br><span class="line"> mkdir -p manifests&#x2F;.git; cd manifests&#x2F;.git</span><br><span class="line"> for i in ..&#x2F;..&#x2F;manifests.git&#x2F;*; do ln -s $i .; done</span><br><span class="line"> cd ..</span><br><span class="line"> git checkout $BRANCH -- .</span><br><span class="line"> cd ..</span><br><span class="line"> ln -s manifests&#x2F;$MANIFEST manifest.xml </span><br></pre></td></tr></table></figure><blockquote><p>我们可以通过 <code>repo --trace init ...</code> 来追踪执行过程  </p></blockquote><h1 id="VCS-Version-Control-System-的使用"><a href="#VCS-Version-Control-System-的使用" class="headerlink" title="VCS(Version Control System) 的使用"></a>VCS(Version Control System) 的使用</h1><h2 id="常见工作流程"><a href="#常见工作流程" class="headerlink" title="常见工作流程"></a>常见工作流程</h2><ol><li>repo start 创建一个新的 topic 分支</li><li>git add</li><li>git commit</li><li>repo upload (or: git push origin HEAD:refs/for/branch)</li></ol><h2 id="常见工作命令"><a href="#常见工作命令" class="headerlink" title="常见工作命令"></a>常见工作命令</h2><table><thead><tr><th align="left">Command</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">repo init</td><td align="left">Initializes a new client.</td></tr><tr><td align="left">repo sync</td><td align="left">Syncs the client to the repositories.</td></tr><tr><td align="left">repo start</td><td align="left">Starts a new branch.</td></tr><tr><td align="left">repo status</td><td align="left">Shows the status of the current branch.</td></tr><tr><td align="left">repo upload</td><td align="left">Uploads changes to the review server.</td></tr><tr><td align="left">git add</td><td align="left">Stages the files.</td></tr><tr><td align="left">git commit</td><td align="left">Commits the staged files.</td></tr><tr><td align="left">git branch</td><td align="left">Shows the current branches.</td></tr><tr><td align="left">git branch [branch]</td><td align="left">Creates a new topic branch.</td></tr><tr><td align="left">git checkout [branch]</td><td align="left">Switches HEAD to the specified branch.</td></tr><tr><td align="left">git merge [branch]</td><td align="left">Merges [branch] into current branch.</td></tr><tr><td align="left">git diff</td><td align="left">Shows diff of the unstaged changes.</td></tr><tr><td align="left">git diff –cached</td><td align="left">Shows diff of the staged changes.</td></tr><tr><td align="left">git log</td><td align="left">Shows the history of the current branch.</td></tr><tr><td align="left">git log m/[codeline]..</td><td align="left">Shows the commits that aren’t pushed.</td></tr></tbody></table><h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">man repo</span><br><span class="line">repo <span class="built_in">help</span></span><br><span class="line">repo <span class="built_in">help</span> &lt;cmd&gt;</span><br><span class="line">repo &lt;<span class="built_in">command</span>&gt; --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h1 id="Topic-Branch"><a href="#Topic-Branch" class="headerlink" title="Topic Branch"></a>Topic Branch</h1><p>一般我会在本地创建不同的 topic 分支来维护不同的修改，</p><h2 id="Creating-topic-branches"><a href="#Creating-topic-branches" class="headerlink" title="Creating topic branches"></a>Creating topic branches</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ repo start branchname .</span><br></pre></td></tr></table></figure><h2 id="To-check-new-branch"><a href="#To-check-new-branch" class="headerlink" title="To check new branch"></a>To check new branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ repo status .</span><br></pre></td></tr></table></figure><h2 id="To-assign-the-branch-to-a-particular-project"><a href="#To-assign-the-branch-to-a-particular-project" class="headerlink" title="To assign the branch to a particular project"></a>To assign the branch to a particular project</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ repo start branchname project</span><br></pre></td></tr></table></figure><h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout branchname</span><br></pre></td></tr></table></figure><h2 id="To-see-a-list-of-existing-branches"><a href="#To-see-a-list-of-existing-branches" class="headerlink" title="To see a list of existing branches"></a>To see a list of existing branches</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">or...</span><br><span class="line">$ repo branches</span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://stackoverflow.com/questions/6149725/how-does-the-android-repo-manifest-repository-work">stack overflow.</a><br><a href="https://source.android.com/setup/develop">Source Control Tools.</a></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> Repo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The third week of ARTS: Repo</title>
      <link href="2019/09/13/ARTS/Third-week-of-ARTS/"/>
      <url>2019/09/13/ARTS/Third-week-of-ARTS/</url>
      
        <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>Title：<a href="https://leetcode.com/problems/palindrome-number/">Palindrome Number</a><br>Solution：<a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/c/isPalindrome.c">C solution</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p>I always don’t kwnow enough about repo, so I read some articles about repo this week. These articles describe the repo Manifest format, usage of repo, repo &amp;&amp; git , etc in detail. It helps me a lot. But I have not absorbed them yet, I need more time.</p><p>The links are as follows:<br><a href="https://android.googlesource.com/tools/repo">repo</a></p><ul><li><a href="https://source.android.com/setup/develop">Source Control Tools</a></li><li><a href="https://source.android.com/setup/create/coding-tasks">Source Control Workflow</a></li><li><a href="https://source.android.com/setup/develop/repo">Repo Command Reference</a></li><li><a href="https://gerrit.googlesource.com/git-repo/+/master/docs/manifest-format.md">Repo Manifest Format</a></li><li><a href="https://android.googlesource.com/tools/repo/+/HEAD/docs/repo-hooks.md">Repo hooks</a></li><li><a href="https://mirrors.edge.kernel.org/pub/software/scm/git/docs/howto/separating-topic-branches.txt">How to separate topic branches</a>  </li></ul><a id="more"></a><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><ul><li><p>Delete Files Using Extended Pattern Matching Operators.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enable extglob</span></span><br><span class="line"><span class="built_in">shopt</span> -s extglob</span><br><span class="line"></span><br><span class="line">rm -v !(<span class="string">&quot;filename&quot;</span>)</span><br><span class="line">rm -v !(<span class="string">&quot;filename1&quot;</span>|<span class="string">&quot;filename2&quot;</span>) </span><br><span class="line"><span class="comment"># such as,</span></span><br><span class="line">rm -i !(*.zip)</span><br><span class="line">rm -v !(*.zip|*.odt)</span><br><span class="line"></span><br><span class="line"><span class="comment"># disable extglob</span></span><br><span class="line"><span class="built_in">shopt</span> -u extglob</span><br></pre></td></tr></table></figure></li><li><p>Delete Files Using Linux find Command</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">find /directory/ -<span class="built_in">type</span> f -not -name <span class="string">&#x27;PATTERN&#x27;</span> -delete</span><br><span class="line">find /directory/ -<span class="built_in">type</span> f -not -name <span class="string">&#x27;PATTERN&#x27;</span> -print0 | xargs -0 -I &#123;&#125; rm &#123;&#125;</span><br><span class="line">find /directory/ -<span class="built_in">type</span> f -not -name <span class="string">&#x27;PATTERN&#x27;</span> -print0 | xargs -0 -I &#123;&#125; rm [options] &#123;&#125;</span><br><span class="line"><span class="comment"># such as,</span></span><br><span class="line">find . -<span class="built_in">type</span> f -not -name <span class="string">&#x27;*.gz&#x27;</span>-delete</span><br><span class="line">find . -<span class="built_in">type</span> f -not -name <span class="string">&#x27;*gz&#x27;</span> -print0 | xargs -0  -I &#123;&#125; rm -v &#123;&#125;</span><br><span class="line">find . -<span class="built_in">type</span> f -not \(-name <span class="string">&#x27;*gz&#x27;</span> -or -name <span class="string">&#x27;*odt&#x27;</span> -or -name <span class="string">&#x27;*.jpg&#x27;</span> \) -delete</span><br></pre></td></tr></table></figure></li></ul><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="http://huaqianlee.github.io/2019/09/15/Git/How-does-android-repo-work/">How does the repo of android source code work ?</a></p>]]></content>
      
      
      <categories>
          
          <category> Laboratory </category>
          
          <category> ARTS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A little basic knowledge of shell</title>
      <link href="2019/09/08/Linux/A-little-basic-knowledge-of-the-shell/"/>
      <url>2019/09/08/Linux/A-little-basic-knowledge-of-the-shell/</url>
      
        <content type="html"><![CDATA[<p>I don’t know what to share for ARTS this week. So I summarize a little knowledge of the shell.</p><h2 id="What-is-a-shell"><a href="#What-is-a-shell" class="headerlink" title="What is a shell"></a>What is a shell</h2><p>A shell is a software interface that is ofthen a command line interface that enables the user to interact with the computer. In linux, we can check all supported shell via the following way.</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lee@lee-server:~$ sudo cat /etc/shells</span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/sbin/nologin</span><br><span class="line">/bin/dash</span><br><span class="line">/bin/tcsh</span><br><span class="line">/bin/csh</span><br></pre></td></tr></table></figure><blockquote><p>bash( Bourne again shell) - rewrited sh, generating more functions.</p></blockquote><h2 id="What-is-the-differnce-between-script-execution"><a href="#What-is-the-differnce-between-script-execution" class="headerlink" title="What is the differnce between script execution"></a>What is the differnce between script execution</h2><h3 id="First-situation"><a href="#First-situation" class="headerlink" title="First situation"></a>First situation</h3><p>Execute as one child process, once the child process exists and back to parent shell, the related envs will disappear. Such as:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash script_name.sh</span><br><span class="line">./script_name.sh <span class="comment"># Need to add execute permission in advance. like, chmod u+x script_name.sh</span></span><br></pre></td></tr></table></figure><blockquote><p>envs: environmental variables.</p></blockquote><h3 id="Second-situation"><a href="#Second-situation" class="headerlink" title="Second situation"></a>Second situation</h3><p>Execute in the current shell. envs will always work before quit. Such as:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> script_name.sh</span><br><span class="line">. script_name.sh</span><br></pre></td></tr></table></figure><h2 id="Pip"><a href="#Pip" class="headerlink" title="Pip"></a>Pip</h2><p>The output of left cmd is used as the input to the right cmd. As follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lee@lee-server:/boot/grub$ cat | ps -f <span class="comment"># Create one new process for every external cmd.</span></span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">lee      21193  4020  2 11:22 pts/3    00:00:00 bash -c <span class="built_in">cd</span> <span class="string">&quot;/boot/grub&quot;</span> &amp;&amp; bash -i -c <span class="string">&quot;cat | ps -f&quot;</span></span><br><span class="line">lee      21596 21193  4 11:22 pts/3    00:00:00 bash -i -c cat | ps -f</span><br><span class="line">lee      21775 21596  0 11:22 pts/3    00:00:00 cat</span><br><span class="line">lee      21776 21596  0 11:22 pts/3    00:00:00 ps -f</span><br></pre></td></tr></table></figure><p>We should avoid to use built-in cmd in pip ,such as , ls , cd ,etc.</p><blockquote><p>built-in cmd: execute in the current shell. <br/>external cmd: create one new process, like top. </p></blockquote><h2 id="Input-and-output-redirection"><a href="#Input-and-output-redirection" class="headerlink" title="Input and output redirection"></a>Input and output redirection</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&lt;&quot;</span>   <span class="comment"># input redirection.</span></span><br><span class="line"><span class="string">&quot;&gt;&quot;</span>   <span class="comment"># output redirection</span></span><br><span class="line"><span class="string">&quot;&gt;&gt;&quot;</span>  <span class="comment"># output append redirection.</span></span><br><span class="line"><span class="string">&quot;2&gt;&quot;</span>  <span class="comment"># error output redirection.</span></span><br><span class="line"><span class="string">&quot;&amp;&gt;&quot;</span>  <span class="comment"># all output redirection.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># input + output redirection, EOF part redirect as input f cat.</span></span><br><span class="line">cat &gt; file.txt &lt;&lt;EOF</span><br><span class="line">Hello, Shell!</span><br><span class="line">EOF </span><br><span class="line"><span class="comment"># EOF can be any strings, it is only a conventional writing (End Of File)</span></span><br></pre></td></tr></table></figure><h2 id="Variable"><a href="#Variable" class="headerlink" title="Variable"></a>Variable</h2><h3 id="Definition-of-variables"><a href="#Definition-of-variables" class="headerlink" title="Definition of variables"></a>Definition of variables</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var=value</span><br><span class="line"><span class="built_in">let</span> var=value</span><br><span class="line">l=ls</span><br><span class="line">var=$(ls -l /etc) </span><br><span class="line">or</span><br><span class="line">var=`ls -l /etc`</span><br></pre></td></tr></table></figure><blockquote><p>Note: ${var}, sometimes we can only use $var, sometimes we can’t, i.e., ${var}test != $vartest.</p></blockquote><h3 id="Scope-of-the-variable"><a href="#Scope-of-the-variable" class="headerlink" title="Scope of the variable"></a>Scope of the variable</h3><p>Variable only works in the current terminal or the current shell script. </p><p>If we want to use it in the child process, we need to export it as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> var(=xxx)</span><br></pre></td></tr></table></figure><p>If we don’t need it anymore, we need to clear it as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> var</span><br></pre></td></tr></table></figure><h3 id="Env-and-others"><a href="#Env-and-others" class="headerlink" title="Env and others"></a>Env and others</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="comment"># display the current shell variable.</span></span><br><span class="line">env <span class="comment"># view all current env.</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$var</span> <span class="comment"># view var.</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PS1</span> <span class="comment"># The current prompt terminal</span></span><br><span class="line">$?  <span class="comment"># The return value of the previous cmd</span></span><br><span class="line">$$  <span class="comment"># the current process&#x27;s PID</span></span><br><span class="line"><span class="variable">$0</span>  <span class="comment"># the current process name </span></span><br><span class="line"><span class="comment"># Get the parameters passed to the current process</span></span><br><span class="line"><span class="variable">$1</span> <span class="variable">$2</span> ... <span class="variable">$&#123;10&#125;</span> ... <span class="variable">$&#123;n&#125;</span></span><br><span class="line"><span class="comment"># Initial for null variable, avoid nothing to display.</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;2&#125;</span>_   <span class="comment"># if [ -n &quot;$2&quot; ],then: display &#x27;_&#x27; else display &#x27;value_&#x27; fi # value --&gt; value of $2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;2-_&#125;</span>  <span class="comment"># if [ -n &quot;$2&quot; ],then:  display &#x27;_&#x27; else display &#x27;value&#x27; fi</span></span><br></pre></td></tr></table></figure><h2 id="Config-of-linux"><a href="#Config-of-linux" class="headerlink" title="Config of linux"></a>Config of linux</h2><h3 id="All-user’s-config"><a href="#All-user’s-config" class="headerlink" title="All user’s config"></a>All user’s config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line">/etc/profile.d/</span><br><span class="line">/etc/bashrc</span><br></pre></td></tr></table></figure><h3 id="Current-user’s-config"><a href="#Current-user’s-config" class="headerlink" title="Current user’s config"></a>Current user’s config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/.bash_profile</span><br><span class="line">~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="Loading-order"><a href="#Loading-order" class="headerlink" title="Loading order"></a>Loading order</h3><p>su - root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line">~/.bash_profile</span><br><span class="line">~/.bashrc</span><br><span class="line">/etc/bashrc</span><br></pre></td></tr></table></figure><blockquote><p>It is a better way to switch account.</p></blockquote><p>su root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/.bashrc</span><br><span class="line">/etc/bashrc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The second week of ARTS: Hurry</title>
      <link href="2019/09/07/ARTS/Second-week-of-ARTS-Hurry/"/>
      <url>2019/09/07/ARTS/Second-week-of-ARTS-Hurry/</url>
      
        <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>Title：<a href="https://leetcode.com/problems/reverse-integer/">Reverse Integer</a><br>Solution：<a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/c/reverseInteger.c">C solution</a></p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p>Because I am learnning python, I was attracted by the <a href="https://medium.com/free-code-camp/learning-python-from-zero-to-hero-120ea540b567">Learning Python: From Zero to Hero</a> article of <a href="http://medium.com/">Medium</a>.  </p><p>This article is very good ,  it almost show all the python-related knowledge in a limited page. Such as , variables, conditional statements, looping, collection/array, key-value collection, iterate , classes and objects, encapsulation, inheritance, etc.</p><a id="more"></a><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><h2 id="Get-the-patch-of-the-specified-commission"><a href="#Get-the-patch-of-the-specified-commission" class="headerlink" title="Get the patch of the specified commission."></a>Get the patch of the specified commission.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git diff origin/master HEAD <span class="comment"># Get patch for all commits which are not merged</span></span><br><span class="line">git diff start_commit_id end_commit_id <span class="comment"># Get patch between start_commit_id and end_commit_id</span></span><br></pre></td></tr></table></figure><h2 id="A-way-to-avoid-that-security-issue-between-vendor-and-system"><a href="#A-way-to-avoid-that-security-issue-between-vendor-and-system" class="headerlink" title="A way to avoid that security issue between vendor and system."></a>A way to avoid that security issue between vendor and system.</h2><p>I am not sure when, if I am correct , there is security issues with file operations between vendor and system from Android O. I found a way to avoid it this week, that is, escape selinux verification in the following file.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">external/selinux/libselinux/src/avc.c</span><br></pre></td></tr></table></figure><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="http://huaqianlee.github.io/2019/09/08/Shell/A-little-basic-knowledge-of-the-shell/">A little basic knowledge of the shell</a></p>]]></content>
      
      
      <categories>
          
          <category> Laboratory </category>
          
          <category> ARTS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Process and thread in linux</title>
      <link href="2019/08/31/Linux/Process-and-thread-in-linux/"/>
      <url>2019/08/31/Linux/Process-and-thread-in-linux/</url>
      
        <content type="html"><![CDATA[<blockquote><p>没有太多时间去查看详细源代码，所以仍然有很多不清晰或者理解不到位的地方，后续将 Linux 相关知识学习得更深入的时候再来更新一次。  </p></blockquote><h1 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h1><p>在 Linux 中，进程和线程几乎没有什么区别，主要的区别就是线程共享同样的虚拟内存地址空间。对于 kernel 来说，进程和线程都是一个可运行的 task 。</p><p>线程创建函数 pthread_create() 会调用 clone(), 而进程创建函数 fork() 最终也是调用 clone()。我们查看<a href="https://linux.die.net/man/2/clone">clone</a>函数的介绍时，可以看到 clone() 的参数 flags 用来指明子‘进程’和父‘进程’共享什么，所以可以说进程就是不共享任何东西的一个典型线程（一个不成熟的观点，不一定正确）。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/process_thread_to_task.jpeg" alt="process_thread_to_task">  </p><blockquote><p>摘录线程库发展史：Linux threading libraries evolution: Linux Threads, NGPT, NPTL. The library is part of gilbc, programmer interface is POSIX pthreads.  </p></blockquote><h1 id="线程模型"><a href="#线程模型" class="headerlink" title="线程模型"></a>线程模型</h1><a id="more"></a><p>Linux 中的线程是 “1-1” 模型, 而不是 “1-N” 或者 “M-N” 模型。下面简单介绍一下线程模型。</p><h2 id="“1-1”-模型"><a href="#“1-1”-模型" class="headerlink" title="“1-1” 模型"></a>“1-1” 模型</h2><p>将每个用户级线程映射到一个内核级线程（即 task）。<br>优点：<br>消耗更少的资源，比如内存（虚拟的和物理的）和 内核对象（object）。并且也会更少地上下文切换，从而提高性能，在理想情况下，当你拥有和运行线程一样多的处理器的时候，将可能几乎没有上下文切换。<br>缺点：<br>可能是延迟更大：如果池中的所有线程都忙，并且您添加了新的短任务，则可能需要等待很长时间才能开始执行。</p><h2 id="“1-N”-模型"><a href="#“1-N”-模型" class="headerlink" title="“1-N” 模型"></a>“1-N” 模型</h2><p>将多个用户级线程映射到一个内核级线程,早期 OS 的线程实现方式。<br>优点:<br>内核不干涉线程的任何生命活动和上下文切换。线程的管理在用户空间进行,因而效率比较高;<br>缺点:<br>一个进程中的多个线程只能调度到一个CPU，这种约束限制了可用的并行总量，并且如果某个线程 block 了，其他线程都只能等着。</p><h2 id="“M-N”-模型"><a href="#“M-N”-模型" class="headerlink" title="“M-N” 模型"></a>“M-N” 模型</h2><p>在线程池里，将 M 个用户线程映射到 N 个内核线程 (M &gt;= N)，可以算结合上面两种方法的优势，但会牺牲一些额外的用户模式调度。</p>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The first week of ARTS: Start</title>
      <link href="2019/08/31/ARTS/First-week-of-ARTS-Start/"/>
      <url>2019/08/31/ARTS/First-week-of-ARTS-Start/</url>
      
        <content type="html"><![CDATA[<h1 id="ARTS-简单介绍"><a href="#ARTS-简单介绍" class="headerlink" title="ARTS 简单介绍"></a>ARTS 简单介绍</h1><p>Algorithm：<br>主要是为了编程训练和学习。每周至少做一个 leetcode 的算法题（先从Easy开始，然后再Medium，最后才Hard）。进行编程训练，如果不训练你看再多的算法书，你依然不会做算法题，看完书后，你需要训练。</p><p>Review：<br>主要是为了学习英文，如果你的英文不行，你基本上无缘技术高手。所以，需要你阅读并点评至少一篇英文技术文章，我个人最喜欢去的地方是 <a href="http://medium.com/">Medium</a>（需要梯子）以及各个公司的技术 blog，如 Netflix 的。</p><p>Tip：<br>主要是为了总结和归纳你在是常工作中所遇到的知识点。学习至少一个技术技巧。你在工作中遇到的问题，踩过的坑，学习的点滴知识。</p><p>Share：<br>主要是为了建立你的影响力，能够输出价值观。分享一篇有观点和思考的技术文章。</p><a id="more"></a><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><p>本周用 c 语言完成了两道算法题。<br>算法题目：<a href="https://leetcode.com/problems/two-sum/">Two Sum</a><br>我的代码：<a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/c/twoSum.c">C Solution</a>  </p><p>算法题目：<a href="https://leetcode.com/problems/add-two-numbers/">Add Two Numbers</a><br>我的代码：<a href="https://github.com/huaqianlee/LeetcodeSolutions/blob/master/algorithms/c/addTwoNumbers.c">C Solution</a>  </p><h1 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h1><p>因为自己想学习一下正则表达式，所以就找了一篇英文教程：<a href="https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285">Regex tutorial — A quick cheatsheet by examples</a> 。 </p><p>这篇文章简单介绍了 topics 及相关实例，十分适合入门学习，而且通过这个网站我发现了一个<a href="https://regex101.com/r/cO8lqs/2">在线 regex 调试器</a> ，通过这个在线调试器我们就能很方便的进行正则表达式学习。</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>这周学到了两个版本管理的技巧。</p><ul><li><p>快速撤销本地的所有修改和提交件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">repo forall -vc <span class="string">&quot;git reset --hard; git clean -fdx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># explanation</span></span><br><span class="line">forall - Execute <span class="keyword">for</span> all repos.</span><br><span class="line">v - Print the output of the <span class="built_in">command</span></span><br><span class="line">c - Command to execute,the actual <span class="built_in">command</span></span><br></pre></td></tr></table></figure></li><li><p>将版本回退到指定时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo forall -c <span class="string">&#x27;git checkout `git rev-list --all -n1 --before=&quot;2019-08-15 15:00&quot;`&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="Share"><a href="#Share" class="headerlink" title="Share"></a>Share</h1><p><a href="http://huaqianlee.github.io/2019/08/31/Linux/Process-and-thread-in-linux/">进程与线程</a></p>]]></content>
      
      
      <categories>
          
          <category> Laboratory </category>
          
          <category> ARTS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UFP was modified as DRP when we unplug OTG</title>
      <link href="2019/08/27/Android/USB-port-error/"/>
      <url>2019/08/27/Android/USB-port-error/</url>
      
        <content type="html"><![CDATA[<h1 id="Term"><a href="#Term" class="headerlink" title="Term"></a>Term</h1><ul><li><p>DFP - Downstream Facing Port<br>下行端口，可以理解为 Host 的 Type-c 端口或者作为 Host 的 hub ，DFP 提供 VBUS，可以提供数据。在协议规范中 DFP 特指数据的下行传输，笼统意义上指的是数据下行和对外提供电源的设备。典型的 DFP 设备是电源适配器。</p></li><li><p>UFP - Upstream Facing port<br>上行端口，可以理解为 Device 上的 Type-c 端口或者连接到 Host/DFP of a hub ，UFP 从 VBUS 中取电，并可提供数据。典型设备是 U 盘，移动硬盘。</p></li><li><p>DRP - DUal Role Port (DFP + UFP)<br>双角色端口，DRP 既可以做 DFP(Host)，也可以做 UFP(Device)，也可以在 DFP 与 UFP 间动态切换。典型的DRP设备是笔记本电脑。</p></li></ul><blockquote><p>引用摘录：A DRP port is a port that can operate as either a sink or source.</p><p>source - takes the data role of a DFP.<br>sink - take the data role of a UFP.</p><p>A current sink is a port or circuit point that accepts negative current, e.g. current into the circuit which it drains to ground.<br>A current source is a port or circuit point that provides positive current. A good example of a current source is a DC power supply</p></blockquote><h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>逻辑：USB 默认为 UFP，不能使用 OTG ；若要使用需要通过 node 将其设为 DRP ， 但是在拔出后需要将其设回 UFP。 </p><p>问题： 当拔掉 OTG 之后，USB 仍然为 DRP ，导致不用设置 node 即可连接 OTG。</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><a id="more"></a><h2 id="初步解析"><a href="#初步解析" class="headerlink" title="初步解析"></a>初步解析</h2><p>通过在 smblib_handle_typec_removal 函数设置 USB 端口模式的地方加日志读取端口状态，发现 DRP 是被成功设置了的，但是短暂时间后又被其他地方修改为 UFP 模式了。</p><p>通过寄存器相关关键字等各种方式皆不能找到其余修改的地方。</p><p>因为老版本（Android N）上是没有问题的，所以尝试在本问题版本（Android Q） one by one 烧写 N 的镜像，最终发现 pmic.elf 分区会让问题得以解决。</p><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>对比代码发现如下两种修改方法可以解决问题：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">--------------------------------------------------------------</span><br><span class="line">diff --git a/QcomPkg/Library/PmicLib/target/sdm660_pm660_pm660l/psi/pm_config_target_pbs_ram.c b/QcomPkg/Library/PmicLib/target/sdm660_pm660_pm660l/psi/pm_config_target_pbs_ram.c</span><br><span class="line">index bfb32ba..cb012b4 <span class="number">100755</span></span><br><span class="line">--- a/QcomPkg/Library/PmicLib/target/sdm660_pm660_pm660l/psi/pm_config_target_pbs_ram.c</span><br><span class="line">+++ b/QcomPkg/Library/PmicLib/target/sdm660_pm660_pm660l/psi/pm_config_target_pbs_ram.c</span><br><span class="line">@@ <span class="number">-58</span>,<span class="number">7</span> +<span class="number">58</span>,<span class="number">7</span> @@ pm_pbs_seq [ ][PBS_RAM_DATA_SIZE] =</span><br><span class="line">      &#123; <span class="number">0x00</span>,  <span class="number">0x1B</span>,   <span class="number">0x01</span>,   <span class="number">0x18</span>&#125;,  <span class="comment">// W#1 -        0x804 Header offset, Header Version, PBS RAM Revision, PBS RAM Branch</span></span><br><span class="line">      &#123; <span class="number">0x2C</span>,  <span class="number">0x08</span>,   <span class="number">0xFF</span>,   <span class="number">0x83</span>&#125;,  <span class="comment">// W#2 -        0x808 Start of trigger jump table:</span></span><br><span class="line">      &#123; <span class="number">0x68</span>,  <span class="number">0x08</span>,   <span class="number">0xFF</span>,   <span class="number">0x83</span>&#125;,  <span class="comment">// W#3 -        0x80C</span></span><br><span class="line"># mothod first.</span><br><span class="line">-      &#123; <span class="number">0xC4</span>,  <span class="number">0x08</span>,   <span class="number">0xFF</span>,   <span class="number">0x83</span>&#125;,  <span class="comment">// W#4 -        0x810</span></span><br><span class="line">+      &#123; <span class="number">0xB8</span>,  <span class="number">0x08</span>,   <span class="number">0xFF</span>,   <span class="number">0x83</span>&#125;,  <span class="comment">// W#4 -        0x810</span></span><br><span class="line">OR </span><br><span class="line"># mothod second.</span><br><span class="line">-      &#123; <span class="number">0x38</span>,  <span class="number">0x09</span>,   <span class="number">0xFF</span>,   <span class="number">0x83</span>&#125;,  <span class="comment">// W#5 -        0x814</span></span><br><span class="line">+      &#123; <span class="number">0x2C</span>,  <span class="number">0x09</span>,   <span class="number">0xFF</span>,   <span class="number">0x83</span>&#125;,  <span class="comment">// W#5 -        0x814</span></span><br><span class="line">      &#123; <span class="number">0xC4</span>,  <span class="number">0x0F</span>,   <span class="number">0xFF</span>,   <span class="number">0x83</span>&#125;,  <span class="comment">// W#6 -        0x818 Fixed Offset = RAM-Base-Addr + 0x18 + 0x00 =&gt; SLEEP-SET</span></span><br><span class="line">      &#123; <span class="number">0xCC</span>,  <span class="number">0x0F</span>,   <span class="number">0xFF</span>,   <span class="number">0x83</span>&#125;,  <span class="comment">// W#7 -        0x81C Fixed Offset = RAM-Base-Addr + 0x18 + 0x04 =&gt; PON X Reasons</span></span><br><span class="line">--------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>但是针对这个问题咨询高通得到的回复是：PSI 模块是不允许修改的，会导致难以预料的问题，所以这种方案作罢。因为没有找到相关资料，不清楚这个差异具体是什么，高通也未给出清晰的答案。</p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>拔掉时延时 5 毫秒才重置 USB 为 UFP 模式，试图在 PSI 之后修改，经过测试此修改方案能解决此问题。如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/drivers/power/supply/qcom/smb-lib.c b/drivers/power/supply/qcom/smb-lib.c</span><br><span class="line">--- a/drivers/power/supply/qcom/smb-lib.c</span><br><span class="line">+++ b/drivers/power/supply/qcom/smb-lib.c</span><br><span class="line">@@ <span class="number">-4378</span>,<span class="number">12</span> +<span class="number">4378</span>,<span class="number">28</span> @@</span><br><span class="line"> <span class="meta">#<span class="meta-keyword">ifdef</span> FEATURE__DET_DRIVER</span></span><br><span class="line"> <span class="comment">/* configure power role for default */</span></span><br><span class="line"> _power_role_val.intval = _det_get_default_power_role();</span><br><span class="line"></span><br><span class="line">+msleep(<span class="number">5</span>);  # 延时等 PSI 修改 USB 为 DRP 完成，然后我们再修改为 UFP</span><br><span class="line">rc = smblib_set_prop_typec_power_role(chg, &amp;_power_role_val);</span><br></pre></td></tr></table></figure><h2 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h2><p>此方案与方案二类似，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/drivers/power/supply/qcom/smb-lib.c b/drivers/power/supply/qcom/smb-lib.c</span><br><span class="line">--- a/drivers/power/supply/qcom/smb-lib.c</span><br><span class="line">+++ b/drivers/power/supply/qcom/smb-lib.c</span><br><span class="line">@@ <span class="number">-4378</span>,<span class="number">12</span> +<span class="number">4378</span>,<span class="number">28</span> @@</span><br><span class="line"> <span class="meta">#<span class="meta-keyword">ifdef</span> FEATURE__DET_DRIVER</span></span><br><span class="line"> <span class="comment">/* configure power role for default */</span></span><br><span class="line"> _power_role_val.intval = _det_get_default_power_role();  <span class="comment">// 获取需要设定端口模式</span></span><br><span class="line">-rc = smblib_set_prop_typec_power_role(chg, &amp;_power_role_val);</span><br><span class="line">-<span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">-smblib_err(chg,</span><br><span class="line">-<span class="string">&quot;Couldn&#x27;t configure power role for %d rc=%d\n&quot;</span>, _power_role_val.intval, rc);</span><br><span class="line">+<span class="keyword">if</span>(_power_role_val.intval == POWER_SUPPLY_TYPEC_PR_SINK)&#123;</span><br><span class="line">+rc = smblib_masked_write(chg, TYPE_C_INTRPT_ENB_SOFTWARE_CTRL_REG, TYPEC_DISABLE_CMD_BIT, TYPEC_DISABLE_CMD_BIT);</span><br><span class="line">+<span class="keyword">if</span>(rc &lt; <span class="number">0</span>)</span><br><span class="line">+smblib_err(chg, <span class="string">&quot;Couldn&#x27;t disable type-c\n&quot;</span>);</span><br><span class="line">+</span><br><span class="line">+msleep(<span class="number">200</span>);  # 延时等 PSI 修改 USB 为 DRP 完成，然后我们再修改为 UFP</span><br><span class="line">+rc = smblib_masked_write(chg, TYPE_C_INTRPT_ENB_SOFTWARE_CTRL_REG, UFP_EN_CMD_BIT | DFP_EN_CMD_BIT, UFP_EN_CMD_BIT);</span><br><span class="line">+<span class="keyword">if</span>(rc &lt; <span class="number">0</span>)</span><br><span class="line">+smblib_err(chg, <span class="string">&quot;Couldn&#x27;t configure power role for %d rc=%d\n&quot;</span>, _power_role_val.intval, rc);</span><br><span class="line">+</span><br><span class="line">+msleep(<span class="number">10</span>);</span><br><span class="line">+rc = smblib_masked_write(chg, TYPE_C_INTRPT_ENB_SOFTWARE_CTRL_REG, TYPEC_DISABLE_CMD_BIT, <span class="number">0</span>);</span><br><span class="line">+<span class="keyword">if</span>(rc &lt; <span class="number">0</span>)</span><br><span class="line">+smblib_err(chg, <span class="string">&quot;Couldn&#x27;t enable type-c\n&quot;</span>);</span><br><span class="line">+&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">+rc = smblib_set_prop_typec_power_role(chg, &amp;_power_role_val); <span class="comment">// write 3 bit， if 中的内容部分算此函数的子集，只是提取出来添加了 TYPEC_DISABLE_CMD_BIT 和延时</span></span><br><span class="line">+<span class="keyword">if</span>(rc &lt; <span class="number">0</span>)</span><br><span class="line">+smblib_err(chg, <span class="string">&quot;Couldn&#x27;t configure power role for %d rc=%d\n&quot;</span>, _power_role_val.intval, rc);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"> <span class="comment">/* enable DRP */</span></span><br><span class="line"> rc = smblib_masked_write(chg, TYPE_C_INTRPT_ENB_SOFTWARE_CTRL_REG,</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bug </tag>
            
            <tag> Qualcomm </tag>
            
            <tag> USB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个 health service 不生效问题引出的一点知识</title>
      <link href="2019/05/16/Android/A-little-knowledge-about-health/"/>
      <url>2019/05/16/Android/A-little-knowledge-about-health/</url>
      
        <content type="html"><![CDATA[<p>从 Android P 开始，Google 开始推荐厂家再定制一个 health 。前不久遇到一个定制 health 中的信息未成功反应到 Framework 的问题，在分析解决问题的过程中，学习到了一点新知识，所以就在这篇文章里根据解决问题的流程做一个小小的记录。</p><blockquote><p>问题：定制 health service 中的一些 health 信息未成功反应到 Framework。</p></blockquote><blockquote><p>已知：定制 health 和 Google healthd 进程都运行于设备中，定制 health 主要重写 healthd_board_battery_update 函数，会通过库文件引用原生代码（system/core/healthd/）中的实现。</p></blockquote><h1 id="初步方案"><a href="#初步方案" class="headerlink" title="初步方案"></a>初步方案</h1><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>服务创建时都编写了一个 x.rc 文件，用来描述 health service 的一些特点，其中就包括其启动时机。如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># system&#x2F;core&#x2F;healthd&#x2F;android.hardware.health@2.0-service.rc</span><br><span class="line">&#x2F;* sevice 类型的 setction 表示一个可执行程序（进程） *&#x2F;</span><br><span class="line">service health-hal-2-0 &#x2F;vendor&#x2F;bin&#x2F;hw&#x2F;android.hardware.health@2.0-service or healthd.rc</span><br><span class="line">class hal </span><br><span class="line">user system</span><br><span class="line">group system</span><br><span class="line">file &#x2F;dev&#x2F;kmsg w</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>启动顺序： hal-&gt; core-&gt; main -&gt; later</p></blockquote><a id="more"></a><h2 id="尝试性修改-health-service-启动时机"><a href="#尝试性修改-health-service-启动时机" class="headerlink" title="尝试性修改 health service 启动时机"></a>尝试性修改 health service 启动时机</h2><p>因为对 Framework 层的处理不熟悉，就根据经验判断定制 health 与 Google healthd 可能有时序冲突，对定制 health 做延迟启动处理，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># device&#x2F;&lt;vendor&gt;&#x2F;health&#x2F;xxx.rc </span><br><span class="line">- class hal </span><br><span class="line">+ class main </span><br></pre></td></tr></table></figure><p>经过测试，此方案可行，但是这种说不出 root cause 的解决方案难以让人接受，所以也就拉通代码继续研究。</p><h1 id="最终方案"><a href="#最终方案" class="headerlink" title="最终方案"></a>最终方案</h1><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><h3 id="Framework-层"><a href="#Framework-层" class="headerlink" title="Framework 层"></a>Framework 层</h3><p>首先最大疑问就是 FW 层怎么判断使用哪一个 health 的内容。因 health 信息最终会更新到 BatteryService.java, 尝试在此文件中寻找答案，最终找到如下关键代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># frameworks/base/services/core/java/com/android/server/BatteryService.java</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">HealthServiceWrapper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">&quot;HealthServiceWrapper&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String INSTANCE_HEALTHD = <span class="string">&quot;backup&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String INSTANCE_VENDOR = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    <span class="comment">// All interesting instances, sorted by priority high -&gt; low.</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; sAllInstances =</span><br><span class="line">            Arrays.asList(INSTANCE_VENDOR, INSTANCE_HEALTHD);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过这段代码知道系统是根据 service 的实例名来决定使用哪一个 health。</p><h3 id="service-的实例名"><a href="#service-的实例名" class="headerlink" title="service 的实例名"></a>service 的实例名</h3><h4 id="定制-health"><a href="#定制-health" class="headerlink" title="定制 health"></a>定制 health</h4><p>通过查看如下代码得知定制 health 的实例名为 “default”。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># device/vendor/health/HealthService.cpp</span></span><br><span class="line"><span class="comment">/*通过库和如下函数引入 Google healthd 部分*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> health_service_main();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"># hardware/interfaces/health/2.0/utils/libhealthservice/HealthServiceCommon.cpp</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">health_service_main</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* instance)</span> </span>&#123;</span><br><span class="line">    gInstanceName = instance;</span><br><span class="line">    <span class="keyword">if</span> (gInstanceName.empty()) &#123;</span><br><span class="line">        gInstanceName = <span class="string">&quot;default&quot;</span>; <span class="comment">// 空白时实例名</span></span><br><span class="line">    &#125;</span><br><span class="line">    healthd_mode_ops = &amp;healthd_mode_service_2_0_ops;</span><br><span class="line">    LOG(INFO) &lt;&lt; LOG_TAG &lt;&lt; gInstanceName &lt;&lt; <span class="string">&quot;: Hal starting main loop...&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> healthd_main();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Google-healthd"><a href="#Google-healthd" class="headerlink" title="Google healthd"></a>Google healthd</h4><p>通过查看如下代码得知 healthd 的实例名与定制 health 相同，所以在 Framework 层面，后加载的 service 生效。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># system&#x2F;core&#x2F;healthd&#x2F;HealthServiceDefault.cpp</span><br><span class="line">&#x2F;* 此 service 实例名为 “default”*&#x2F;</span><br><span class="line">int main(void) &#123;</span><br><span class="line">    return health_service_main();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># system&#x2F;core&#x2F;healthd&#x2F;HealthServiceHealthd.cpp</span><br><span class="line">&#x2F;* 实例名为 “backup”*&#x2F;</span><br><span class="line">int main() &#123;</span><br><span class="line">    return health_service_main(&quot;backup&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># system&#x2F;core&#x2F;healthd&#x2F;Android.bp</span><br><span class="line">&#x2F;* HealthServiceDefault 重写了 HealthServiceHealthd，所以 healthd 使用的实例名为“default”*&#x2F;</span><br><span class="line">cc_binary &#123;</span><br><span class="line">    name: &quot;android.hardware.health@2.0-service.override&quot;,</span><br><span class="line">    defaults: [&quot;android.hardware.health@2.0-service_defaults&quot;],</span><br><span class="line"></span><br><span class="line">    overrides: [</span><br><span class="line">        &quot;healthd&quot;,</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>因为我们需要使用定制的 health，所以将原生的实例名改为“backup”，这样这个问题就得以解决了。</p><h2 id="花絮"><a href="#花絮" class="headerlink" title="花絮"></a>花絮</h2><p>我也尝试给定制 health 新建一个实例名，但是未成功，后发现似乎新添实例名需要按如下方式配置一下。但因为时间和研究的动力不足就没有继续了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;hal format&#x3D;&quot;hidl&quot; optional&#x3D;&quot;true&quot;&gt;</span><br><span class="line">    &lt;name&gt;xxx.xxx&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;version&gt;1.0&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;interface&gt;</span><br><span class="line">        &lt;name&gt;xxx&lt;&#x2F;name&gt;</span><br><span class="line">        &lt;instance&gt;default&lt;&#x2F;instance&gt;</span><br><span class="line">        &lt;instance&gt;backup&lt;&#x2F;instance&gt; # 似乎可以这样添加实例名</span><br><span class="line">    &lt;&#x2F;interface&gt;</span><br><span class="line">&lt;&#x2F;hal&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Native </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bug </tag>
            
            <tag> Qualcomm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pmic voter</title>
      <link href="2019/05/15/Android/pmic-voter/"/>
      <url>2019/05/15/Android/pmic-voter/</url>
      
        <content type="html"><![CDATA[<p>前不久在高通 SDM450 平台接触了 voter 机制（投票机制）。最近终于得空，结合一个问题简单研究了一下。现将研究流程简单记录一下,由于时间有限，所以是实用为目的，没有做详细的分析，不过结合着这篇分析和源码一起参考，应该能快速地应用 voter 做一些事情。</p><h1 id="voter"><a href="#voter" class="headerlink" title="voter"></a>voter</h1><p>第一步是找到 voter 的实现代码，然后分析 voter 的机制。voter 的实现代码主要是为各种 voter 提供接口，我提炼了两个最关键的接口，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"># kernel&#x2F;msm-4.9&#x2F;drivers&#x2F;power&#x2F;supply&#x2F;qcom&#x2F;pmic-voter.c</span><br><span class="line">&#x2F;*</span><br><span class="line">** vote 函数主要用来给 votable 添加投票选项</span><br><span class="line">** votable: 投票的对象</span><br><span class="line">** client_str: 投票者</span><br><span class="line">** enabled: 投票者的内容（val）是否参与投票</span><br><span class="line">** val: 投票内容</span><br><span class="line">**&#x2F;</span><br><span class="line">int vote(struct votable *votable, const char *client_str, bool enabled, int val)</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">    switch (votable-&gt;type) &#123; &#x2F;&#x2F; type 的值来自于 create_votable()</span><br><span class="line">case VOTE_MIN: &#x2F;&#x2F; 取投票对象所有内容的最小值</span><br><span class="line">vote_min(votable, client_id, &amp;effective_result, &amp;effective_id);</span><br><span class="line">break;</span><br><span class="line">case VOTE_MAX:</span><br><span class="line">vote_max(votable, client_id, &amp;effective_result, &amp;effective_id);</span><br><span class="line">break;</span><br><span class="line">case VOTE_SET_ANY:</span><br><span class="line">vote_set_any(votable, client_id,</span><br><span class="line">&amp;effective_result, &amp;effective_id);</span><br><span class="line">break;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* 投票相关参数，可以在此文件中搜索此结构体的成员找到其值从哪儿来*&#x2F;</span><br><span class="line">struct votable &#123;</span><br><span class="line">inttype;</span><br><span class="line">...</span><br><span class="line">int(*callback)(struct votable *votable,</span><br><span class="line">&#125;</span><br><span class="line">---&gt; </span><br><span class="line"></span><br><span class="line">struct votable *create_votable(const char *name,</span><br><span class="line">int votable_type,</span><br><span class="line">int (*callback)(struct votable *votable,..)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 创建 votable, 引入 votable type 和 callback 函数</span><br><span class="line">...</span><br><span class="line">    &#x2F;* 创建 debugfs*&#x2F;</span><br><span class="line">debug_root &#x3D; debugfs_create_dir(&quot;pmic-votable&quot;, NULL);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">eg: 创建流入电池电流的投票对象</span><br><span class="line">chip-&gt;fcc_votable &#x3D; create_votable(&quot;FCC&quot;, VOTE_MIN,</span><br><span class="line">pl_fcc_vote_callback,</span><br><span class="line">chip);</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="pmic-voter-debugfs"><a href="#pmic-voter-debugfs" class="headerlink" title="pmic voter debugfs"></a>pmic voter debugfs</h1><p>通过 voter 的文件节点能够比较清晰的看出 voter 结构。如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># &#x2F;sys&#x2F;kernel&#x2F;debug&#x2F;pmic-votable&#x2F;</span><br><span class="line">cat status</span><br><span class="line">FCC: HW_LIMIT_VOTER:en&#x3D;0 v&#x3D;-22</span><br><span class="line">FCC: BATT_PROFILE_VOTER:en&#x3D;1 v&#x3D;1500000</span><br><span class="line">FCC: SW_ICL_MAX_VOTER:en&#x3D;1 v&#x3D;1500000</span><br><span class="line">FCC: THERMAL_DAEMON_VOTER:en&#x3D;0 v&#x3D;0</span><br><span class="line">FCC: FCC_SOC_VOTER:en&#x3D;1 v&#x3D;1000000</span><br><span class="line">FCC: JEITA_VOTER:en&#x3D;1 v&#x3D;1500000</span><br><span class="line">FCC: STEP_CHG_VOTER:en&#x3D;0 v&#x3D;0</span><br><span class="line">FCC: TAPER_STEPPER_VOTER:en&#x3D;0 v&#x3D;0</span><br><span class="line">FCC: effective&#x3D;FCC_SOC_VOTER type&#x3D;Min v&#x3D;1000000</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="一个问题案例"><a href="#一个问题案例" class="headerlink" title="一个问题案例"></a>一个问题案例</h1><p><strong>[Description]</strong></p><p>设备在不同温度条件下有不同的电流限制，但是在测试设备时发现一个问题：电池温度升温过程中，设备并没有在 cool 零界限改变温度，而是再超过临界线 2~3 ℃ 的时候才做相应动作。</p><p><strong>[Root cause]</strong></p><p>默认的 jeita 标准相关代码有一个温度临界值保护并延迟改变电流值的设定，当达到临界值时并不马上改变电流限制，继续投票上一阶段的电流值，当温度达到定义的延迟温度时，再投票当前阶段的电流值。</p><p><strong>[Solution]</strong><br>如需要修改此问题的话，取消温度临界值保护（即将温度滞后值改为 0）即可。</p><p>详细情况如下：</p><h2 id="每个阶段温度和电流值的定义"><a href="#每个阶段温度和电流值的定义" class="headerlink" title="每个阶段温度和电流值的定义"></a>每个阶段温度和电流值的定义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># kernel&#x2F;msm-4.9&#x2F;arch&#x2F;arm64&#x2F;boot&#x2F;dts&#x2F;qcom&#x2F;vendor&#x2F;qg-batterydata-xxx.dtsi</span><br><span class="line"></span><br><span class="line">qcom,jeita-fcc-ranges &#x3D; &lt;50   150  800000  &#x2F;&#x2F;阶段一  COOL</span><br><span class="line">151  450  1500000 &#x2F;&#x2F; 阶段二 GOOD</span><br><span class="line">451  500  1400000&gt;; &#x2F;&#x2F; 阶段三 Warm</span><br></pre></td></tr></table></figure><h2 id="关键源码"><a href="#关键源码" class="headerlink" title="关键源码"></a>关键源码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># kernel&#x2F;msm-4.9&#x2F;drivers&#x2F;power&#x2F;supply&#x2F;qcom&#x2F;step-chg-jeita.c</span><br><span class="line">&#x2F;* 定义 jeita 标准延迟设定相关参数 *&#x2F;</span><br><span class="line">chip-&gt;jeita_fcc_config-&gt;psy_prop &#x3D; POWER_SUPPLY_PROP_TEMP;</span><br><span class="line">chip-&gt;jeita_fcc_config-&gt;prop_name &#x3D; &quot;BATT_TEMP&quot;;</span><br><span class="line">chip-&gt;jeita_fcc_config-&gt;hysteresis &#x3D; 10;</span><br><span class="line"></span><br><span class="line">&#x2F;* jeita 生效函数 *&#x2F;</span><br><span class="line">static int handle_jeita(struct step_chg_info *chip)</span><br><span class="line">&#123;</span><br><span class="line">rc &#x3D; power_supply_get_property(chip-&gt;batt_psy,</span><br><span class="line">chip-&gt;jeita_fcc_config-&gt;psy_prop, &amp;pval);</span><br><span class="line">rc &#x3D; get_val(chip-&gt;jeita_fcc_config-&gt;fcc_cfg,</span><br><span class="line">chip-&gt;jeita_fcc_config-&gt;,</span><br><span class="line">chip-&gt;jeita_fcc_index,</span><br><span class="line">pval.intval,</span><br><span class="line">&amp;chip-&gt;jeita_fcc_index,</span><br><span class="line">&amp;fcc_ua);</span><br><span class="line"></span><br><span class="line">&#x2F;* 投票获取到的电流值 *&#x2F;</span><br><span class="line">vote(chip-&gt;fcc_votable, JEITA_VOTER, fcc_ua ? true : false, fcc_ua);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* 获取当前应投票的电流值 *&#x2F;</span><br><span class="line">get_val(...) </span><br><span class="line">&#123;</span><br><span class="line">&#x2F;*</span><br><span class="line"> * Check for hysteresis if it in the neighbourhood</span><br><span class="line"> * of our current index.</span><br><span class="line"> *&#x2F;</span><br><span class="line">if (*new_index &#x3D;&#x3D; current_index + 1) &#123;</span><br><span class="line">    &#x2F;* 当温度小于临界值 + 延迟时，继续使用上一阶段的电流值</span><br><span class="line">if (threshold &lt; range[*new_index].low_threshold + hysteresis) &#123;</span><br><span class="line">&#x2F;*</span><br><span class="line"> * Stay in the current index, threshold is not higher</span><br><span class="line"> * by hysteresis amount</span><br><span class="line"> *&#x2F;</span><br><span class="line">*new_index &#x3D; current_index;</span><br><span class="line">*val &#x3D; range[current_index].value;</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if (*new_index &#x3D;&#x3D; current_index - 1) &#123;</span><br><span class="line">if (threshold &gt; range[*new_index].high_threshold - hysteresis) &#123;</span><br><span class="line">&#x2F;*</span><br><span class="line"> * stay in the current index, threshold is not lower</span><br><span class="line"> * by hysteresis amount</span><br><span class="line"> *&#x2F;</span><br><span class="line">*new_index &#x3D; current_index;</span><br><span class="line">*val &#x3D; range[current_index].value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> Power </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitbook + Jenkins + Gitlab 搭建内网自动构建的 Gitbook</title>
      <link href="2019/05/05/Git/gitlab-jenkins-gitbook-to-create-LAN-gitbook/"/>
      <url>2019/05/05/Git/gitlab-jenkins-gitbook-to-create-LAN-gitbook/</url>
      
        <content type="html"><![CDATA[<p>最近在本地搭建了一个 Gitbook ，用于内网访问。总结一下简单流程形成此文，细节设置可以参考官网。</p><h2 id="Gitbook"><a href="#Gitbook" class="headerlink" title="Gitbook"></a>Gitbook</h2><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install Node.js</span><br></pre></td></tr></table></figure><h3 id="Install-npm"><a href="#Install-npm" class="headerlink" title="Install npm"></a>Install npm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install npm</span><br></pre></td></tr></table></figure><h3 id="Install-gitbook"><a href="#Install-gitbook" class="headerlink" title="Install gitbook"></a>Install gitbook</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gitbook-cli -g</span><br><span class="line">gitbook -V</span><br></pre></td></tr></table></figure><h3 id="Test-gitbook-server-web"><a href="#Test-gitbook-server-web" class="headerlink" title="Test gitbook server-web"></a>Test gitbook server-web</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir server</span><br><span class="line">cd server</span><br><span class="line">gitbook init</span><br><span class="line">gitbook build .</span><br><span class="line">gitbook serve .</span><br></pre></td></tr></table></figure><h2 id="Gitlab"><a href="#Gitlab" class="headerlink" title="Gitlab"></a>Gitlab</h2><h3 id="Install-and-configure-the-necessary-dependencies"><a href="#Install-and-configure-the-necessary-dependencies" class="headerlink" title="Install and configure the necessary dependencies"></a>Install and configure the necessary dependencies</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y curl openssh-server ca-certificates</span><br></pre></td></tr></table></figure><h3 id="Install-Postfix-to-send-notification-emails"><a href="#Install-Postfix-to-send-notification-emails" class="headerlink" title="Install Postfix to send notification emails."></a>Install Postfix to send notification emails.</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y postfix</span><br></pre></td></tr></table></figure><h3 id="Add-the-GitLab-package-repository-and-install"><a href="#Add-the-GitLab-package-repository-and-install" class="headerlink" title="Add the GitLab package repository and install ."></a>Add the GitLab package repository and install .</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https:&#x2F;&#x2F;packages.gitlab.com&#x2F;install&#x2F;repositories&#x2F;gitlab&#x2F;gitlab-ee&#x2F;script.deb.sh | sudo bash</span><br><span class="line">sudo EXTERNAL_URL&#x3D;&quot;https:&#x2F;&#x2F;gitlab.example.com&quot; apt-get install gitlab-ee</span><br></pre></td></tr></table></figure><h3 id="Config-gitlab"><a href="#Config-gitlab" class="headerlink" title="Config gitlab"></a>Config gitlab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p &#x2F;etc&#x2F;gitlab</span><br><span class="line">sudo touch &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</span><br><span class="line">sudo chmod 600 &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</span><br><span class="line">sudo vim &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</span><br><span class="line"># external_url &#39;http:&#x2F;&#x2F;164.69.136.23&#39; , config as local ip or url.</span><br><span class="line"># Modification is suggested. If &#39;502 GitLab is not responding...&#39; error exists, modify &#39;unicorn[&#39;port&#39;]&#39; in gitlab.rb. </span><br><span class="line"></span><br><span class="line">sudo gitlab-ctl reconfigure # reconfigure and restart.</span><br><span class="line">sudo gitlab-ctl status</span><br></pre></td></tr></table></figure><h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><h3 id="Install-Java"><a href="#Install-Java" class="headerlink" title="Install Java"></a>Install Java</h3><p>推荐安装 openjdk-7-jre 和 openjdk-7-jdk ，但是其在 Ubuntu 16.04 和更高版本不再有效，可以安装 Java 8 或者 9 代替。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openjdk-7-jre</span><br><span class="line">sudo apt-get install openjdk-7-jdk</span><br></pre></td></tr></table></figure><h3 id="Install-Jenkins"><a href="#Install-Jenkins" class="headerlink" title="Install Jenkins"></a>Install Jenkins</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -q -O - https:&#x2F;&#x2F;pkg.jenkins.io&#x2F;debian&#x2F;jenkins-ci.org.key | sudo apt-key add -</span><br><span class="line">sudo sh -c &#39;echo deb http:&#x2F;&#x2F;pkg.jenkins.io&#x2F;debian-stable binary&#x2F; &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;jenkins.list&#39;</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install jenkins</span><br></pre></td></tr></table></figure><h3 id="Upgrade-Jenkins"><a href="#Upgrade-Jenkins" class="headerlink" title="Upgrade Jenkins"></a>Upgrade Jenkins</h3><p>Jenkins 更新比较快，如若过期，可以按如下命令更新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install jenkins</span><br></pre></td></tr></table></figure><h3 id="Config-Jenkins"><a href="#Config-Jenkins" class="headerlink" title="Config Jenkins"></a>Config Jenkins</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vi &#x2F;etc&#x2F;init.d&#x2F;jenkins</span><br><span class="line"># Modify HTTP_PORT is suggested.</span><br><span class="line">sudo vi &#x2F;etc&#x2F;sudoers</span><br><span class="line"># jenkins ALL&#x3D;(ALL) NOPASSWD:ALL ; 赋予 Jenkins sudo 权限和无密权限</span><br></pre></td></tr></table></figure><h3 id="Install-plugin"><a href="#Install-plugin" class="headerlink" title="Install plugin"></a>Install plugin</h3><p>通过 web(eg:<a href="http://192.168.1.2:8080/">http://192.168.1.2:8080</a>)  访问Jenkins 并安装插件 Git plugin　和　Gitlab Hook Plugin 。 </p><blockquote><p>初次登陆时注意 check web 提示的密码地址。</p></blockquote><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><h3 id="Install-nginx"><a href="#Install-nginx" class="headerlink" title="Install nginx"></a>Install nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br><span class="line"># upgrade</span><br><span class="line">sudo apt-add-repository ppa:nginx&#x2F;stable</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade nginx -y</span><br><span class="line"></span><br><span class="line">sudo service nginx start</span><br></pre></td></tr></table></figure><blockquote><p>nginx 默认使用 80 端口，打开浏览器输入：<a href="http://localhost/">http://localhost/</a></p></blockquote><h3 id="Config-nginx"><a href="#Config-nginx" class="headerlink" title="Config nginx"></a>Config nginx</h3><p>sudo vi /etc/nginx/nginx.conf ， 注释掉不需要的配置文件，并新配 server 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># comment to solve &quot;Welcome to nginx ...&quot; issue.</span><br><span class="line"># include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;</span><br><span class="line"># include &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;*;</span><br><span class="line">server &#123;</span><br><span class="line">        server_name localhost;</span><br><span class="line">        listen 8082; # config port</span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">                root &#x2F;home&#x2F;lee&#x2F;gitbook&#x2F;www&#x2F;mybook; # 自定义，用于存放 gitbook 内容</span><br><span class="line">                #index  index.html index.html;</span><br><span class="line"></span><br><span class="line">                #autoindex</span><br><span class="line">                autoindex on;</span><br><span class="line">                autoindex_exact_size on;</span><br><span class="line">                autoindex_localtime on;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">nginx -t # 检查配置文件是否正常</span><br><span class="line">nginx -s reload # 重启</span><br><span class="line">若出现错误：</span><br><span class="line">nginx:[error] open() &quot;&#x2F;run&#x2F;nginx.pid&quot; failed (2: No such file or directory)</span><br><span class="line"></span><br><span class="line">nginx -c &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</span><br><span class="line">nginx -s reload</span><br><span class="line">nginx -s stop</span><br></pre></td></tr></table></figure><h2 id="Automaticaly-trigger"><a href="#Automaticaly-trigger" class="headerlink" title="Automaticaly trigger"></a>Automaticaly trigger</h2><h3 id="Config-gitlab-1"><a href="#Config-gitlab-1" class="headerlink" title="Config gitlab"></a>Config gitlab</h3><h4 id="Add-access-token"><a href="#Add-access-token" class="headerlink" title="Add access token"></a>Add access token</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user settings ---&gt; Access Tokens</span><br></pre></td></tr></table></figure><blockquote><p><em>记录下 token ，一旦关闭网页，此 token 将不再可见。</em></p></blockquote><h4 id="Create-mybook"><a href="#Create-mybook" class="headerlink" title="Create mybook"></a>Create mybook</h4><p>新建一个项目 <mybook>， 添加 webhooks.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a. Settings ---&gt; Integrations </span><br><span class="line">b. add url: http:&#x2F;&#x2F;192.168.1.2:8082&#x2F;gitlab&#x2F;build_now (jenkins url) .</span><br><span class="line">c. Select push event.</span><br><span class="line">d. Add webhook.</span><br></pre></td></tr></table></figure><p>在本地项目路径执行 ‘gitbook init’ 生成 README.md 和 SUMMARY.md 两个文件， push 到 gitlab.</p><h3 id="Config-Jenkins-1"><a href="#Config-Jenkins-1" class="headerlink" title="Config Jenkins"></a>Config Jenkins</h3><h4 id="Add-tokens"><a href="#Add-tokens" class="headerlink" title="Add tokens"></a>Add tokens</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 系统管理 ---&gt; 系统设置</span><br><span class="line">Gitlab:</span><br><span class="line">Connection name: gitlab</span><br><span class="line">Gitlab host url: gitlab url</span><br><span class="line">credentials: Add token, 填入上面 Access Tokens.</span><br><span class="line">Test connection.</span><br></pre></td></tr></table></figure><h4 id="Config-trigger"><a href="#Config-trigger" class="headerlink" title="Config trigger"></a>Config trigger</h4><p>新建任务 <mybook> —&gt; 构建一个自由风格的软件项目:</p><ol><li><p>源码管理: git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Repository URL:</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;192.168.1.2:8081&#x2F;root&#x2F;mybook.git</span><br><span class="line">Credentials ---&gt; Add , 填入 Gitlab 用户名和密码　</span><br></pre></td></tr></table></figure></li><li><p>构建 —&gt; 执行 shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gitbook build</span><br><span class="line">sudo rm -rf  &#x2F;home&#x2F;lee&#x2F;gitbook&#x2F;www&#x2F;mybook</span><br><span class="line">sudo cp -a    _book  &#x2F;home&#x2F;lee&#x2F;gitbook&#x2F;www&#x2F;mybook</span><br><span class="line">sudo chmod  777  &#x2F;home&#x2F;lee&#x2F;gitbook&#x2F;www&#x2F;mybook</span><br></pre></td></tr></table></figure><p>　</p><h3 id="Preview"><a href="#Preview" class="headerlink" title="Preview"></a>Preview</h3><p>更新本地文件，然后 push 到 Gitlab, 查看 Jenkins 是否会自动触发构建。</p></li></ol><p>如果 OK ， 整个配置流程就完成了，也可以直接预览 Gitbook了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.1.2:8082 (nginx port)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Three ways to dump usb register</title>
      <link href="2018/08/23/Android/Three-ways-to-dump-usb-register/"/>
      <url>2018/08/23/Android/Three-ways-to-dump-usb-register/</url>
      
        <content type="html"><![CDATA[<h3 id="Add-node"><a href="#Add-node" class="headerlink" title="Add node"></a>Add node</h3><p>此方法只为一个示例，有些平台不是使用此文件，如 SDM450（MSM8953）使用的 dwc3-qcom.c 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"># kernel&#x2F;msm-4.9&#x2F;drivers&#x2F;usb&#x2F;phy&#x2F;phy-msm-usb.c</span><br><span class="line">@@ -51,6 +51,11 @@</span><br><span class="line"> </span><br><span class="line"> #include &lt;linux&#x2F;msm-bus.h&gt;</span><br><span class="line"> </span><br><span class="line">+#undef dev_dbg</span><br><span class="line">+#define dev_dbg dev_info</span><br><span class="line">+#undef pr_debug</span><br><span class="line">+#define pr_debug pr_info</span><br><span class="line">+</span><br><span class="line"> &#x2F;**</span><br><span class="line">  * Requested USB votes for BUS bandwidth</span><br><span class="line">  *</span><br><span class="line">@@ -3601,6 +3606,53 @@ static int msm_otg_setup_devices(struct</span><br><span class="line"> return retval;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">+</span><br><span class="line">+#define DUMP_ENTRIES152</span><br><span class="line">+</span><br><span class="line">+static ssize_t usbphy_regs_show(struct device *dev,</span><br><span class="line">+       struct device_attribute *attr, char *buf)</span><br><span class="line">+&#123;</span><br><span class="line">+struct msm_otg *motg &#x3D; the_msm_otg;</span><br><span class="line">+&#x2F;&#x2F;struct msm_otg_platform_data *pdata &#x3D; motg-&gt;pdata;</span><br><span class="line">+struct usb_phy *phy &#x3D; &amp;motg-&gt;phy;</span><br><span class="line">+u32 *dump;</span><br><span class="line">+unsigned int i,  n &#x3D; 0;</span><br><span class="line">+&#x2F;&#x2F;dbg_trace(&quot;[%s] %pK\n&quot;, __func__, buf);</span><br><span class="line">+if (attr &#x3D;&#x3D; NULL || buf &#x3D;&#x3D; NULL) &#123;</span><br><span class="line">+dev_err(dev, &quot;[%s] EINVAL\n&quot;, __func__);</span><br><span class="line">+return 0;</span><br><span class="line">+&#125;</span><br><span class="line">+if (atomic_read(&amp;motg-&gt;in_lpm))&#123;</span><br><span class="line">+        dev_err(dev, &quot;[%s] usb in lpm\n&quot;, __func__);</span><br><span class="line">+return 0;</span><br><span class="line">+        &#125;</span><br><span class="line">+dump &#x3D; kmalloc(sizeof(u8) * DUMP_ENTRIES, GFP_KERNEL);</span><br><span class="line">+if (!dump)</span><br><span class="line">+return 0;</span><br><span class="line">+</span><br><span class="line">+        for(i &#x3D; 0; i &lt; DUMP_ENTRIES -1; i++)</span><br><span class="line">+        dump[i] &#x3D; ulpi_read(phy, i);</span><br><span class="line">+</span><br><span class="line">+for (i &#x3D; 0; i &lt; DUMP_ENTRIES -1; i++) &#123;</span><br><span class="line">+n +&#x3D; scnprintf(buf + n, PAGE_SIZE - n,</span><br><span class="line">+       &quot;reg[0x%04X] &#x3D; 0x%04X\n&quot;,</span><br><span class="line">+       i, dump[i]);</span><br><span class="line">+&#125;</span><br><span class="line">+kfree(dump);</span><br><span class="line">+</span><br><span class="line">+return n;</span><br><span class="line">+&#125;</span><br><span class="line">+</span><br><span class="line">+static ssize_t usbphy_regs_store(struct device *dev,</span><br><span class="line">+struct device_attribute *attr, const char</span><br><span class="line">+*buf, size_t size)</span><br><span class="line">+&#123;</span><br><span class="line">+return size;</span><br><span class="line">+&#125;</span><br><span class="line">+</span><br><span class="line">+static DEVICE_ATTR(usbphy_regs, 0644,</span><br><span class="line">+usbphy_regs_show, usbphy_regs_store);</span><br><span class="line">+</span><br><span class="line"> static ssize_t dpdm_pulldown_enable_show(struct device *dev,</span><br><span class="line">        struct device_attribute *attr, char *buf)</span><br><span class="line"> &#123;</span><br><span class="line">@@ -4426,6 +4478,7 @@ static int msm_otg_probe(struct platform</span><br><span class="line"> motg-&gt;caps |&#x3D; ALLOW_HOST_PHY_RETENTION;</span><br><span class="line"> </span><br><span class="line"> device_create_file(&amp;pdev-&gt;dev, &amp;dev_attr_dpdm_pulldown_enable);</span><br><span class="line">+device_create_file(&amp;pdev-&gt;dev, &amp;dev_attr_usbphy_regs);</span><br><span class="line"> </span><br><span class="line"> if (motg-&gt;pdata-&gt;enable_lpm_on_dev_suspend)</span><br><span class="line"> motg-&gt;caps |&#x3D; ALLOW_LPM_ON_DEV_SUSPEND;</span><br><span class="line">@@ -4527,6 +4580,7 @@ otg_remove_devices:</span><br><span class="line"> remove_cdev:</span><br><span class="line"> pm_runtime_disable(&amp;pdev-&gt;dev);</span><br><span class="line"> device_remove_file(&amp;pdev-&gt;dev, &amp;dev_attr_dpdm_pulldown_enable);</span><br><span class="line">+device_remove_file(&amp;pdev-&gt;dev, &amp;dev_attr_usbphy_regs);</span><br><span class="line"> msm_otg_debugfs_cleanup();</span><br><span class="line"> phy_reg_deinit:</span><br><span class="line"> devm_regulator_unregister(motg-&gt;phy.dev, motg-&gt;dpdm_rdev);</span><br><span class="line">@@ -4619,6 +4673,7 @@ static int msm_otg_remove(struct platfor</span><br><span class="line"> usb_remove_phy(phy);</span><br><span class="line"> </span><br><span class="line"> device_remove_file(&amp;pdev-&gt;dev, &amp;dev_attr_dpdm_pulldown_enable);</span><br><span class="line">+device_remove_file(&amp;pdev-&gt;dev, &amp;dev_attr_usbphy_regs);</span><br><span class="line"> </span><br><span class="line"> &#x2F;*</span><br><span class="line">  * Put PHY in low power mode.</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="trace"><a href="#trace" class="headerlink" title="trace"></a>trace</h3><p>通过如下指令去 crash 设备，然后用 trace32 去读取寄存器值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo c &gt; &#x2F;proc&#x2F;sysrq-triger</span><br></pre></td></tr></table></figure><h3 id="busybox"><a href="#busybox" class="headerlink" title="busybox"></a>busybox</h3><p>dump usb registers via busybox.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;data&#x2F;busybox devmem &lt;address&gt; 32</span><br><span class="line">or </span><br><span class="line">r &lt;address&gt;  # system&#x2F;core&#x2F;toolbox&#x2F;r.c , 比 busybox 轻量化的一个工具</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>17 小结，18 计划!</title>
      <link href="2018/02/12/Life/Bye-2017-Hi-2018/"/>
      <url>2018/02/12/Life/Bye-2017-Hi-2018/</url>
      
        <content type="html"><![CDATA[<p>时光总是匆匆，一转眼 18 年都已经 2 月份了，今天是农历新年前倒数第二天上班了。17 年过得不那么顺畅，自己想做的很多事都没做，很遗憾；18 年自己即将 30 岁，想想还是很惶恐，已到而立之年了。这些时间自己的懒散加上工作上的事情，很久没有写东西了，博客也好久没有更新过了，考虑到今年的状态，和明年一些决定，今天来写个小结，列个计划。</p><h2 id="遗憾的-17-年"><a href="#遗憾的-17-年" class="headerlink" title="遗憾的 17 年"></a>遗憾的 17 年</h2><p>17 年整体来说对自己是有些失望的，生活上遇到了一件让自己痛心的事情，也完成了人生一件最重要的事情，工作上除了薪资的涨幅，自己没有明显的进步，也没有什么成就感。</p><a id="more"></a><h3 id="徘徊"><a href="#徘徊" class="headerlink" title="徘徊"></a>徘徊</h3><p>本来17年就有回成都的计划了，但是受一些事情的牵绊，走不了，所以这一年很多时候自己处于比较迷茫，比较徘徊的心理状态。 在前公司最后一段时间，自己很早就觉得上班没意思应该要辞职的，但是受到私事的牵绊，也考虑到 18 年要回家发展了，自己就一直耗在公司没有辞职。到后面有朋友介绍工作，终于下定决心换个环境，阴差阳错进到了现在的公司，过来后换了新平台，到现在这几个月事情相对还是比较多，才没有时间去徘徊了。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>这一年本来有很多事情要去做的， 最重要的两件：学英语、锻炼。 这两件事没有坚持下来，是对自己失望的主因，业余阅读和写作没坚持下来也比较令人伤心，Android、Python等技术的提升没有坚持下来，考虑到外部环境和自己的时间，尚还能让自己接受。所以总的来说 17 年是有些遗憾和失望的。</p><h2 id="而立的-18-年"><a href="#而立的-18-年" class="headerlink" title="而立的 18 年"></a>而立的 18 年</h2><p>18 年是自己的而立之年了， 除了准备回家发展，应该还会是我真正成长的一年。希望今年不让自己失望，也要担负起整个家庭的责任了。</p><h3 id="习惯养成"><a href="#习惯养成" class="headerlink" title="习惯养成"></a>习惯养成</h3><p>按照如下模式培养一下自己的习惯，坚持下去。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">21天 -&gt; 100天 -&gt; 1 年 -&gt; Until disappear </span><br></pre></td></tr></table></figure><p>18 年按优先级加入如下任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 背单词</span><br><span class="line">- 锻炼</span><br><span class="line">- 冥想</span><br><span class="line">- 阅读</span><br></pre></td></tr></table></figure><p>还有如下以周为单位的坚持：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 博文（每周至少一篇技术 or 阅读 or 生活）</span><br><span class="line">- 陪老婆周边游散心</span><br><span class="line">-</span><br></pre></td></tr></table></figure><h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><h4 id="回成都"><a href="#回成都" class="headerlink" title="回成都"></a>回成都</h4><p>预计4~5月份回成都，开年后首要任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 解决工作问题</span><br><span class="line">- 处理回家相关事宜</span><br></pre></td></tr></table></figure><p>回家稳定后，首要任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 找一家健身房</span><br><span class="line">- 学习游泳</span><br><span class="line">- 买车</span><br></pre></td></tr></table></figure><h4 id="生活安排"><a href="#生活安排" class="headerlink" title="生活安排"></a>生活安排</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 节假日多陪陪家人，常回家看看</span><br><span class="line">- 为家人安排体检</span><br><span class="line">- 给自己（老婆）买保险</span><br><span class="line">- </span><br></pre></td></tr></table></figure><h4 id="几个着重注意点"><a href="#几个着重注意点" class="headerlink" title="几个着重注意点"></a>几个着重注意点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 睡前阅读、冥想</span><br><span class="line">- 碎片时间利用，阅读或背单词</span><br><span class="line">- 早或晚锻炼，至少简单活动一下筋骨（颈椎和腰部是重点部位），尤其自己现在身体太僵硬</span><br></pre></td></tr></table></figure><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><h4 id="新工作"><a href="#新工作" class="headerlink" title="新工作"></a>新工作</h4><p>首要任务就是找到一个合适的新工作，得满足：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 自己的工作有意义，有挑战</span><br><span class="line">- 公司有发展有潜力，或者不错的大公司</span><br><span class="line">- 薪酬福利不比深圳差太多</span><br></pre></td></tr></table></figure><h4 id="工作习惯"><a href="#工作习惯" class="headerlink" title="工作习惯"></a>工作习惯</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 排除干扰、拆分，复杂问题简单化</span><br><span class="line">- 控制变量法，单独提出问题部分，Demo 复现验证及解决</span><br><span class="line">- 知其然知其所以然，总结</span><br></pre></td></tr></table></figure><h4 id="工作计划"><a href="#工作计划" class="headerlink" title="工作计划"></a>工作计划</h4><p>这个得依据工作内容来确定，不过得做到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 每天/周做好工作计划</span><br><span class="line">- 不无谓地浪费时间</span><br></pre></td></tr></table></figure><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><h4 id="阅读内容"><a href="#阅读内容" class="headerlink" title="阅读内容"></a>阅读内容</h4><p>需要加入阅读内容的任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 古诗词</span><br><span class="line">- 医疗、法律相关书籍</span><br><span class="line">- 理财、优秀书籍</span><br><span class="line">- 英文原著</span><br><span class="line">- 技术书籍</span><br></pre></td></tr></table></figure><h4 id="一些计划"><a href="#一些计划" class="headerlink" title="一些计划"></a>一些计划</h4><p>一些需要好好实现的安排计划：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 针对每个时间段拟定合适的计划</span><br><span class="line">- 每周审视自己，做好更新/总结</span><br><span class="line">- 至少完成 20 本书籍的阅读，5 本英文原著 + 8 本技术书籍 + 7 本其他，技术书籍至少 3 本精读</span><br><span class="line">- 每阅读完成一本书籍，至少形成一片博文</span><br><span class="line">- 技术博客的选题和实现质量</span><br></pre></td></tr></table></figure><h4 id="学习的内容"><a href="#学习的内容" class="headerlink" title="学习的内容"></a>学习的内容</h4><h5 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 背诵完成4、6级单词，后续再选扩展单词背诵</span><br><span class="line">- 阅读合适的英文原著，培养语感，熟悉单词</span><br><span class="line">- 平时技术上尽量看英文相关</span><br><span class="line">- 精读 2 本英文原著，看一些英文文章</span><br><span class="line">- 不限范围的泛听，每周精听一篇文章</span><br><span class="line">- 已购英文资料</span><br></pre></td></tr></table></figure><h5 id="技术学习"><a href="#技术学习" class="headerlink" title="技术学习"></a>技术学习</h5><p>考虑到回成都后我或许会小转行一下，这部分需要依据回成都的工作内容来定制，不过如下部分还是安排好时间：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 已购 Linux 书籍，多看精看</span><br><span class="line">- 分析源码（Android、Linux Kernel）</span><br><span class="line">- Android 应用 、 Python（不作高优先级）</span><br><span class="line">- 已购 Android 相关书籍</span><br></pre></td></tr></table></figure><p>18 年对于我来说注定会是忙碌的一年，有太多的事情需要处理，希望自己能都处理好并完成自己的计划。当然上面这些都是比较笼统的计划，所以自己还需要制定一个目标明确、详细的计划，这个计划还得根据实际情况反馈更新。</p>]]></content>
      
      
      <categories>
          
          <category> Balderdash </category>
          
          <category> Life </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android传感器（Sensor）架构简析 (╯_╰)</title>
      <link href="2017/12/17/Android/android-sensor-arch-analysis/"/>
      <url>2017/12/17/Android/android-sensor-arch-analysis/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这真的是一篇简析。。。 (╯_╰)  本来准备详细分析整个 sensor 架构的，实在时间紧张，只能先简析了。</p></blockquote><p><em>Platform information： MTK6797（X20）+ Android 7.0</em></p><h1 id="Android-支持的传感器"><a href="#Android-支持的传感器" class="headerlink" title="Android 支持的传感器"></a>Android 支持的传感器</h1><p>现在 Android 支持多达数十种的各种各样的传感器，支持的类型如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/sensor_type.jpg" alt="Sensor_Type"></p><h1 id="Android-Sensor-架构"><a href="#Android-Sensor-架构" class="headerlink" title="Android Sensor 架构"></a>Android Sensor 架构</h1><a id="more"></a><p>因为功耗和效率等原因，高通后期平台将 sensor 部分放在 aDSP 中，与如下分析十分不同。</p><p>Android 传感器系统架构如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/sensor_arch.jpg" alt="sensor_arch"></p><p>传感器驱动一般会有如下五种数据传输形式：input event设备驱动、MISC驱动、SYS驱动、HWMON设备驱动以及ioctl。如下是一幅网上看到未知来源的图片，更清晰的描述了底层架构，如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/sensor_arch.png" alt="sensor_arch"></p><h1 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h1><p>传感器源码架构大致相同，本文就来分析陀螺仪部分源码。</p><h2 id="Kernel-部分"><a href="#Kernel-部分" class="headerlink" title="Kernel 部分"></a>Kernel 部分</h2><p>传感器几乎都是采用 I2C 总线， 所以先分析一下 I2C 部分。</p><h3 id="I2C-总线配置"><a href="#I2C-总线配置" class="headerlink" title="I2C 总线配置"></a>I2C 总线配置</h3><p>MTK 为GPIO、I2C等配置提供了 DCT 工具， 可以直接在 UI 里面配置好 I2C 相关定义（codegen.dws 文件中），配好后编译会自动生成一些相关的 DTS 文件和头文件（如 cust_i2c.dtsi）。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/i2c_dct.jpg" alt="i2c-dct"></p><blockquote><p>高通是直接在 dts 里面定义。另需要注意：一条 i2c 总线只支持一种速率，不同速率外设需要挂接到不同总线。</p></blockquote><p>MTK 是在 DCT 配好 i2c 相关（lk 和 kernel 都需要配）,如果有兼容 sensor 则配置在 dts 中，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\boot\dts\mt6797.dtsi</span></span><br><span class="line">i2c0:i2c@11007000 &#123;</span><br><span class="line">compatible = <span class="string">&quot;mediatek,mt6797-i2c&quot;</span>;</span><br><span class="line">id = &lt;0&gt;;</span><br><span class="line">reg = &lt;0x11007000 0x1000&gt;,</span><br><span class="line">&lt;0x11000100 0x80&gt;;</span><br><span class="line">interrupts = &lt;GIC_SPI 84 IRQ_TYPE_LEVEL_LOW&gt;;</span><br><span class="line">clocks = &lt;&amp;infrasys INFRA_I2C0&gt;, &lt;&amp;infrasys INFRA_AP_DMA&gt;;</span><br><span class="line">clock-names = <span class="string">&quot;main&quot;</span>, <span class="string">&quot;dma&quot;</span>;</span><br><span class="line">clock-div = &lt;10&gt;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\boot\dts\aeon6797_6m_n.dts</span></span><br><span class="line">/* 兼容 sensor 配置*/</span><br><span class="line">i2c0@11007000 &#123;</span><br><span class="line">  cust_gyro@6b &#123; // name@i2c_address</span><br><span class="line">compatible = <span class="string">&quot;mediatek,xxx_gyro&quot;</span>;</span><br><span class="line">reg = &lt;0x6b&gt;;// i2c 地址</span><br><span class="line">....</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cust_gyro@1 &#123; //name@0  为 first sensor 参数</span><br><span class="line">compatible= <span class="string">&quot;mediatek,bmi160_gyro&quot;</span>; // 驱动解析识别字符</span><br><span class="line">i2c_num= &lt;1&gt;;  // i2c channel，硬件决定</span><br><span class="line">i2c_addr= &lt;0x68 0 0 0&gt;; </span><br><span class="line">direction= &lt;6&gt;; // 映射坐标，见下图</span><br><span class="line">power_id= &lt;0xffff&gt;; // ldo id</span><br><span class="line">power_vol= &lt;0&gt;; // ldo voltage</span><br><span class="line">firlen= &lt;0&gt;; // 数据过滤长度， 通常为0</span><br><span class="line">is_batch_supported= &lt;0&gt;; </span><br><span class="line">&#125;;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>关于上面 dts 中 方向参数 direction 取值依据参考下图：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/mapping_coordinate.jpg" alt="mapping_coordinate"></p><h3 id="Gyro-Driver"><a href="#Gyro-Driver" class="headerlink" title="Gyro Driver"></a>Gyro Driver</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\gyroscope\bmi160_gyro\bmi160_gyro.c</span></span><br><span class="line">bmi160_gyro_init()</span><br><span class="line">    get_gyro_dts_func()  <span class="comment">// 从 dts 获取自定义的参数</span></span><br><span class="line">    gyro_driver_add(bmi160_gyro_init_info)</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">gyro_init_info</span> <span class="title">bmi160_gyro_init_info</span></span></span><br><span class="line"><span class="class">    <span class="title">bmi160_gyro_local_init</span>()</span></span><br><span class="line"><span class="class">        <span class="title">i2c_add_driver</span>(&amp;<span class="title">bmg_i2c_driver</span>)</span></span><br><span class="line"><span class="class">        </span></span><br><span class="line"><span class="class"><span class="title">static</span> <span class="title">struct</span> <span class="title">i2c_driver</span> <span class="title">bmg_i2c_driver</span>  </span></span><br><span class="line"><span class="class">    <span class="title">bmi160_gyro_i2c_probe</span>()</span></span><br><span class="line"><span class="class">        // 初始化结构体</span></span><br><span class="line"><span class="class">        <span class="title">hwmsen_get_convert</span>() // 获得坐标映射转换值</span></span><br><span class="line"><span class="class">        <span class="title">bmg_init_client</span>() // 初始化设备，如 <span class="title">ID</span> ， 范围，数据格式等</span></span><br><span class="line"><span class="class">        <span class="title">misc_register</span>() // <span class="title">bmg_open</span>\<span class="title">bmg_release</span>\<span class="title">bmg_unlocked_ioctl</span>;</span> 注册设备，<span class="keyword">for</span> factory mode , engineer mode , <span class="keyword">and</span> so on</span><br><span class="line">        bmg_create_attr() <span class="comment">// 创建platform_driver attr</span></span><br><span class="line">        gyro_register_control_path()  <span class="comment">// struct gyro_control_path，见下 Common 部分</span></span><br><span class="line">        gyro_register_data_path() <span class="comment">// struct gyro_data_path</span></span><br><span class="line">        device_register()</span><br><span class="line">        device_create_file()</span><br></pre></td></tr></table></figure><h3 id="Gyro-Common"><a href="#Gyro-Common" class="headerlink" title="Gyro Common"></a>Gyro Common</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\gyroscope\inc\gyroscope.h    </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">gyro_control_path</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> (*open_report_data)(<span class="keyword">int</span> open);</span><br><span class="line"><span class="keyword">int</span> (*enable_nodata)(<span class="keyword">int</span> en);</span><br><span class="line"><span class="keyword">int</span> (*set_delay)(u64 delay);</span><br><span class="line"><span class="keyword">bool</span> is_report_input_direct;</span><br><span class="line"><span class="keyword">bool</span> is_support_batch;</span><br><span class="line"><span class="keyword">int</span> (*gyro_calibration)(<span class="keyword">int</span> type, <span class="keyword">int</span> cali[<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">bool</span> is_use_common_factory;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">gyro_data_path</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> (*get_data)(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y, <span class="keyword">int</span> *z, <span class="keyword">int</span> *status);</span><br><span class="line"><span class="keyword">int</span> (*get_raw_data)(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y, <span class="keyword">int</span> *z);</span><br><span class="line"><span class="keyword">int</span> vender_div;</span><br><span class="line">&#125;;    </span><br><span class="line">    </span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\gyroscope\gyroscope.c    </span></span><br><span class="line">gyro_probe()</span><br><span class="line">    gyro_real_driver_init()</span><br><span class="line">    gyro_input_init() <span class="comment">// 初始化 input dev</span></span><br><span class="line">        input_register_device(dev)</span><br><span class="line"></span><br><span class="line">gyro_driver_add()</span><br><span class="line">    platform_driver_register()</span><br><span class="line">    </span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\gyroscope\gyrohub\gyrohub.c  <span class="comment">// sensorhub   </span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\vendor\mediatek\proprietary\hardware\sensor\sensors.c</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sensor_t</span> <span class="title">sSensorList</span>[] =</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    &#123;</span><br><span class="line">        .name       = GYROSCOPE,</span><br><span class="line">        .vendor     = GYROSCOPE_VENDER,</span><br><span class="line">        .version    = <span class="number">3</span>, <span class="comment">// 软件版本</span></span><br><span class="line">        .handle     = ID_GYROSCOPE+ID_OFFSET, <span class="comment">// sensor handle（识别 ID）</span></span><br><span class="line">        .type       = SENSOR_TYPE_GYROSCOPE, <span class="comment">// sensor 类型</span></span><br><span class="line">        .maxRange   = GYROSCOPE_RANGE,<span class="comment">//34.91f, // 数据最大范围</span></span><br><span class="line">        .resolution = GYROSCOPE_RESOLUTION,<span class="comment">//0.0107f, // 数据精度</span></span><br><span class="line">        .power      = GYROSCOPE_POWER,<span class="comment">//6.1f, // 电流消耗（mA）</span></span><br><span class="line">        .minDelay   = GYROSCOPE_MINDELAY,   <span class="comment">// 最小数据上报延迟</span></span><br><span class="line">.maxDelay   = <span class="number">1000000</span>,               <span class="comment">// 最大延迟</span></span><br><span class="line">        .flags      = SENSOR_FLAG_CONTINUOUS_MODE,</span><br><span class="line">        .reserved   = &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">open_sensors()</span><br><span class="line">    init_nusensors()</span><br></pre></td></tr></table></figure><h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shell 文件路径</span></span><br><span class="line">/sys/bus/platform/drivers/xxx</span><br></pre></td></tr></table></figure><p>驱动数据和控制流：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/work_flow.jpg" alt="flow"></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码分析 </tag>
            
            <tag> MTK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android/Linux  I2C 驱动架构分析</title>
      <link href="2017/12/03/Android/Android-Linux-i2c-driver-arch/"/>
      <url>2017/12/03/Android/Android-Linux-i2c-driver-arch/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>分析传感器源码的时候，发现对 I2C 的驱动也有些忘记了，所以就再分析一下并形成这篇博文。</p><h1 id="驱动架构"><a href="#驱动架构" class="headerlink" title="驱动架构"></a>驱动架构</h1><h2 id="I2C-驱动架构"><a href="#I2C-驱动架构" class="headerlink" title="I2C 驱动架构"></a>I2C 驱动架构</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/i2c_arch.jpg" alt="i2c-arch"></p><a id="more"></a><h1 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\drivers\i2c</span></span><br></pre></td></tr></table></figure><h2 id="重要的结构体"><a href="#重要的结构体" class="headerlink" title="重要的结构体"></a>重要的结构体</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\include\linux\i2c.h</span></span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 表示一个 i2c 适配器，即挂接在 i2c 总线上的 i2c 控制器</span><br><span class="line"> * i2c_adapter is the structure used to identify a physical i2c bus along</span><br><span class="line"> * with the access algorithms necessary to access it.</span><br><span class="line"> */</span><br><span class="line">struct i2c_adapter &#123;</span><br><span class="line">struct module *owner;</span><br><span class="line">unsigned int class;  /* classes to allow probing <span class="keyword">for</span> */</span><br><span class="line">const struct i2c_algorithm *algo; /* the algorithm to access the bus */</span><br><span class="line">struct device dev;/* the adapter device */</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 表示一个 i2c 设备驱动</span><br><span class="line"> */</span><br><span class="line">struct i2c_driver &#123;</span><br><span class="line">unsigned int class;</span><br><span class="line"></span><br><span class="line">/* Standard driver model interfaces */</span><br><span class="line">int (*probe)(struct i2c_client *, const struct i2c_device_id *); // 匹配 i2c 设备（i2c_client）</span><br><span class="line">int (*remove)(struct i2c_client *);</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">struct device_driver driver;   </span><br><span class="line">const struct i2c_device_id *id_table; // 此设备驱动服务的设备 ID</span><br><span class="line"></span><br><span class="line">int (*detect)(struct i2c_client *, struct i2c_board_info *);</span><br><span class="line">const unsigned short *address_list; // 此设备驱动支持的设备地址</span><br><span class="line">struct list_head clients;  // 挂接此设备驱动匹配成功 i2c_client</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 表示一个 i2c 设备</span><br><span class="line"> */</span><br><span class="line">struct i2c_client &#123;</span><br><span class="line">unsigned short flags;/* div., see below*/</span><br><span class="line">unsigned short addr;/* chip address - NOTE: 7bit*/</span><br><span class="line">/* addresses are stored <span class="keyword">in</span> the*/</span><br><span class="line">/* _LOWER_ 7 bits*/</span><br><span class="line">char name[I2C_NAME_SIZE];</span><br><span class="line">struct i2c_adapter *adapter;/* the adapter we sit on*/</span><br><span class="line">struct device dev;/* the device structure*/</span><br><span class="line">int irq;/* irq issued by device*/</span><br><span class="line">struct list_head detected;</span><br><span class="line"><span class="comment">#ifdef CONFIG_MTK_I2C_EXTENSION</span></span><br><span class="line">__u32 timing;/* parameters of timings*/</span><br><span class="line">__u32 ext_flag;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 描述 i2c 设备信息</span><br><span class="line"> */</span><br><span class="line">struct i2c_board_info &#123;</span><br><span class="line">char<span class="built_in">type</span>[I2C_NAME_SIZE];</span><br><span class="line">unsigned shortflags;</span><br><span class="line">unsigned shortaddr;</span><br><span class="line">void*platform_data;</span><br><span class="line">struct dev_archdata*archdata;</span><br><span class="line">struct device_node *of_node;</span><br><span class="line">struct acpi_dev_node acpi_node;</span><br><span class="line">intirq;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># alps\kernel-3.18\include\uapi\linux\i2c.h</span></span><br><span class="line">/*</span><br><span class="line"> * 表示一个 i2c 数据包</span><br><span class="line"> */</span><br><span class="line">struct i2c_msg &#123;</span><br><span class="line">__u16 addr;     /* slave address */</span><br><span class="line">__u16 flags;</span><br><span class="line"><span class="comment">#define I2C_M_TEN0x0010/* this is a ten bit chip address */</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">#define I2C_M_RECV_LEN0x0400/* length will be first received byte */</span></span><br><span class="line">__u16 len;/* msg length*/</span><br><span class="line">__u8 *buf;/* pointer to msg data*/</span><br><span class="line"><span class="comment">#ifdef CONFIG_MTK_I2C_EXTENSION</span></span><br><span class="line">__u32 timing;/* parameters of timings*/</span><br><span class="line">__u32 ext_flag;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote></blockquote><h2 id="关键路径"><a href="#关键路径" class="headerlink" title="关键路径"></a>关键路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\boot\dts\mt6797.dtsi</span></span><br><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\boot\dts\aeon6797_6m_n.dts</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># alps\kernel-3.18\drivers\i2c</span></span><br><span class="line">i2c-core.c：i2c核心层，设备驱动和总线驱动的桥梁</span><br><span class="line">i2c-dev.c：通用 i2c 设备驱动</span><br><span class="line">busses：开源的 adapter </span><br><span class="line">algos：i2c 通信算法</span><br><span class="line"></span><br><span class="line"><span class="comment"># alps\kernel-3.18\include\linux\i2c.h</span></span><br><span class="line"><span class="comment"># alps\kernel-3.18\include\uapi\linux\i2c.h</span></span><br></pre></td></tr></table></figure><h2 id="总线驱动层"><a href="#总线驱动层" class="headerlink" title="总线驱动层"></a>总线驱动层</h2><p>总线驱动层主要实现外设驱动部分，初始化硬件（i2c控制器）和提供操作硬件的方法，与 i2c-dev 相对应，其负责的部分通俗点讲就是：知道怎么发数据，但不知道发什么数据。<br>其关键流程如下：</p><ol><li>获取资源</li><li>注册中断、使能时钟等初始化工作</li><li>构建 i2c_adapter</li><li>设置 i2c_adapter</li><li>注册 i2c_adapter<blockquote><p>这部分源码就不在此文分析了，感兴趣的朋友可以参考外设系列</p></blockquote></li></ol><h2 id="核心层（i2c-core）"><a href="#核心层（i2c-core）" class="headerlink" title="核心层（i2c-core）"></a>核心层（i2c-core）</h2><p>构建一个 i2c 总线结构体,并且提供匹配方法和驱动用的结构体 ，如总线驱动层和设备驱动层的注册、注销等方法。此部分存在两个匹配过程：</p><ol><li>i2c 总线下的设备（i2c_client）与设备驱动（i2c_driver）之间的匹配。</li><li>i2c控制器（i2c_adapter）与设备之间的匹配。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\drivers\i2c\i2c-core.c</span></span><br><span class="line">struct bus_type i2c_bus_type = &#123;</span><br><span class="line">.name= <span class="string">&quot;i2c&quot;</span>,  // 总线名</span><br><span class="line">.match= i2c_device_match, // 匹配设备（i2c_client）与设备驱动（i2c_driver）</span><br><span class="line">.probe= i2c_device_probe,  // 注册挂载 i2c</span><br><span class="line">.remove= i2c_device_remove,</span><br><span class="line">.shutdown= i2c_device_shutdown,</span><br><span class="line">.pm= &amp;i2c_device_pm_ops,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"> __init i2c_init() // init 函数</span><br><span class="line">    <span class="comment"># kernel-3.18/drivers/base/bus.c</span></span><br><span class="line">    bus_register(&amp;i2c_bus_type) // 注册i2c总线  <span class="string">&quot;/sys/bus/i2c&quot;</span></span><br><span class="line">    i2c_add_driver(&amp;dummy_driver) // // 注册 i2c 驱动创建“/sys/bus/i2c/driver/dummy” </span><br><span class="line">        i2c_register_driver() // 注册 i2c 驱动</span><br><span class="line">            driver_register(&amp;driver-&gt;driver); // 注册设备驱动，创建上面的“dummy”设备文件</span><br><span class="line">            INIT_LIST_HEAD(&amp;driver-&gt;clients)</span><br><span class="line">        </span><br><span class="line">i2c_device_probe()</span><br><span class="line">    i2c_verify_client(dev) // 获取 i2c_client</span><br><span class="line">    to_i2c_driver(dev-&gt;driver) // 获取 i2c_driver</span><br><span class="line">    driver-&gt;probe(client, i2c_match_id(driver-&gt;id_table,client)) // 调用设备驱动层 probe，查询外设（client）对应的 id</span><br><span class="line">        </span><br><span class="line">i2c_device_match()</span><br><span class="line">client = i2c_verify_client(dev)// 通过 dev 获取 i2c_client</span><br><span class="line">of_driver_match_device(dev, drv) // 通过 of 方式匹配</span><br><span class="line">acpi_driver_match_device(dev, drv) // acpi 方式匹配</span><br><span class="line">/* <span class="keyword">if</span> 上述两种方式皆未成功 */</span><br><span class="line">driver = to_i2c_driver(drv); //通过 drv 获取 i2c_driver</span><br><span class="line">i2c_match_id(driver-&gt;id_table, client) // 通过查询 id_table 匹配</span><br><span class="line"></span><br><span class="line">i2c_master_send() // 发送一个 i2c 数据包</span><br><span class="line">    // 构建 i2c_msg</span><br><span class="line">    i2c_transfer()</span><br><span class="line">        __i2c_transfer()  // 发送数据包到总线驱动层</span><br><span class="line">i2c_master_recv()        </span><br><span class="line"></span><br><span class="line">/* 通过动态获取|指定 bus number 注册 i2c 控制器 */</span><br><span class="line">i2c_add_adapter()|i2c_add_numbered_adapter() </span><br><span class="line">    i2c_register_adapter(adapter)</span><br><span class="line">    dev_set_name(&amp;adap-&gt;dev, <span class="string">&quot;i2c-%d&quot;</span>, adap-&gt;nr); // 设置 adapter 名字 “i2c-%d”</span><br><span class="line">    adap-&gt;dev.bus = &amp;i2c_bus_type;</span><br><span class="line">    adap-&gt;dev.type = &amp;i2c_adapter_type;</span><br><span class="line">    /*</span><br><span class="line">     * 注册设备,  默认创建的设备文件是: /sys/devices/i2c-%d </span><br><span class="line">     * 若注册 adapter 时指定了父设备，则为：/sys/devices/platform/xxx/i2c-%d </span><br><span class="line">     */</span><br><span class="line">    device_register(&amp;adap-&gt;dev);</span><br><span class="line">    /*</span><br><span class="line">     * 扫描 __i2c_board_list 匹配 adapter 与 i2c 次设备信息，匹配成功则创建 i2c 设备 （i2c_client）</span><br><span class="line">     */</span><br><span class="line">    i2c_scan_static_board_info() </span><br><span class="line">        i2c_new_device() // 注册 i2c 设备</span><br><span class="line">            i2c_dev_set_name(adap, client) //  设置次设备名<span class="string">&quot; %d-%04x&quot;</span></span><br><span class="line">            device_register(&amp;client-&gt;dev) //  注册次设备<span class="string">&quot;/sys/devices/platform/xxx/i2c-%d/%d-%04x“ </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"># alps\kernel-3.18\include\linux\i2c.h</span></span><br><span class="line"><span class="string">i2c_add_driver(driver) </span></span><br><span class="line"><span class="string">    i2c_register_driver(THIS_MODULE, driver)</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><blockquote><p>注：主设备表示特定的驱动程序；次设备表示使用该设备驱动的设备  </p></blockquote></li></ol><h2 id="设备驱动层（i2c-dev）"><a href="#设备驱动层（i2c-dev）" class="headerlink" title="设备驱动层（i2c-dev）"></a>设备驱动层（i2c-dev）</h2><p>设备驱动层主要是封装主机 i2c 的基本操作，给上层提供接口，与总线驱动层相对应，其：知道发什么数据，但不知道怎么发。   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\drivers\i2c\i2c-dev.c （也可以是其他设备驱动文件，如：ov9650.c等。）</span></span><br><span class="line">static const struct file_operations i2cdev_fops = &#123;</span><br><span class="line">.owner= THIS_MODULE,</span><br><span class="line">.llseek= no_llseek,</span><br><span class="line">.<span class="built_in">read</span>= i2cdev_read,</span><br><span class="line">.write= i2cdev_write,</span><br><span class="line">.unlocked_ioctl= i2cdev_ioctl,</span><br><span class="line">.open= i2cdev_open,</span><br><span class="line">.release= i2cdev_release,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i2cdev_read()</span><br><span class="line">    i2c_master_recv()</span><br><span class="line">    copy_to_user()</span><br><span class="line">i2cdev_write()</span><br><span class="line">    memdup_user()  // 分配内核空间，用户态到内核态的拷贝</span><br><span class="line">        copy_from_user()</span><br><span class="line">    i2c_master_send()</span><br><span class="line">...</span><br><span class="line">i2cdev_open()</span><br><span class="line">    i2c_dev_get_by_minor()</span><br><span class="line">    i2c_get_adapter()</span><br><span class="line">    // 设置 i2c client</span><br><span class="line"></span><br><span class="line">i2c_dev_init()</span><br><span class="line">    register_chrdev(I2C_MAJOR, <span class="string">&quot;i2c&quot;</span>, &amp;i2cdev_fops)</span><br><span class="line">    i2cdev_attach_adapter() // 绑定存在的 i2c 控制器（adapter）</span><br><span class="line">        adap = to_i2c_adapter(dev);</span><br><span class="line">    i2c_dev = get_free_i2c_dev(adap);</span><br><span class="line">    /* register this i2c device with the driver core */</span><br><span class="line">    i2c_dev-&gt;dev = device_create(...<span class="string">&quot;i2c-%d&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="用户空间"><a href="#用户空间" class="headerlink" title="用户空间"></a>用户空间</h1><p>这里只看一种通用的通过 JNI 操作 i2c 设备的方案，i2c-dev 提供的接口通过 JNI 给 APP 使用，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jni</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line">JNIEXPORT jint JNICALL Java_xxxxxx_xxx_I2c_open()</span><br><span class="line">JNIEXPORT jint JNICALL Java_xxxxxx_xxx_I2c_read()</span><br><span class="line">JNIEXPORT jint JNICALL Java_xxxxxx_xxx_I2c_write()</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># app</span></span><br><span class="line">I2c.open(“/dev/i2c-x”)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">public static class I2c &#123;  </span><br><span class="line">        ...</span><br><span class="line">        public native int open(); </span><br><span class="line">        public native int <span class="built_in">read</span>(); </span><br><span class="line">        public native int write();  </span><br><span class="line">        ...</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码分析 </tag>
            
            <tag> MTK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android(Linux) 输入子系统解析</title>
      <link href="2017/11/23/Android/Android-Linux-input-system-analysis/"/>
      <url>2017/11/23/Android/Android-Linux-input-system-analysis/</url>
      
        <content type="html"><![CDATA[<p>Android 源码分析系列综述博文： <a href="http://huaqianlee.github.io/2100/11/21/Android/A-summary-of-Android-source-analysis/">Android 系统源码分析综述</a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Android/Linux 输入设备总类繁杂，常见的有按键、键盘、触摸屏、鼠标、摇杆等，之前其驱动都是采用字符设备、misc 设备处理的，但是如此多的设备就导致驱动混乱，所以 Linux 引入了输入子系统在字符设备等上抽象出一层来统一输入设备的驱动。本文就基于 MTK Android 7.0 源码来分析一下输入子系统。</p><h1 id="输入子系统架构"><a href="#输入子系统架构" class="headerlink" title="输入子系统架构"></a>输入子系统架构</h1><p>输入子系统的系统架构如下图所示：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.png" alt="input_system_arch"></p><blockquote><p>Framework 层以上只是简单跟了一下源码，没有深入查看</p></blockquote><a id="more"></a><h1 id="输入子系统分层解析"><a href="#输入子系统分层解析" class="headerlink" title="输入子系统分层解析"></a>输入子系统分层解析</h1><h2 id="Hardware层"><a href="#Hardware层" class="headerlink" title="Hardware层"></a>Hardware层</h2><p>硬件层主要就是按键、触摸屏、Sensor等各种输入设备。</p><h2 id="Kernel层"><a href="#Kernel层" class="headerlink" title="Kernel层"></a>Kernel层</h2><p>Kernel 层主要分为三层，如下：</p><ol><li>Input 设备驱动层: 采集输入设备的数据信息，通过 Input Core 的 API 上报数据。</li><li>Input Core（核心层）：为事件处理层和设备驱动层提供接口API。</li><li>Event Handler（事件处理层）：通过核心层的API获取输入事件上报的数据，定义API与应用层交互。</li></ol><p>Kernel 层重要的数据结构如下：</p><table><thead><tr><th>数据结构</th><th>定义位置</th><th>简述</th></tr></thead><tbody><tr><td>struct input_dev</td><td>input.h</td><td>Input 设备驱动中实例化</td></tr><tr><td>struct evdev<br>struct mousedev<br>struct keybdev</td><td>evdev.c<br>mousedev.c<br>keybdev.c</td><td>Event Handler 层逻辑 input 设备的数据结构</td></tr><tr><td>struct input_handler</td><td>Input.h</td><td>Event handler 的结构，handler 层实例化</td></tr><tr><td>Struct input_handle</td><td>Input.h</td><td>用于创建驱动层 input_dev 和 handler 链表的链表项结构</td></tr></tbody></table><h3 id="数据结构部分"><a href="#数据结构部分" class="headerlink" title="数据结构部分"></a>数据结构部分</h3><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\kernel-3.18\<span class="meta-keyword">include</span>\linux\input.h</span></span><br><span class="line"><span class="comment">/* 输入设备的语言描述 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">input_dev</span> &#123;</span>  <span class="comment">// 代表一个输入设备</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *name;  <span class="comment">// 设备名字，sys 文件名</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">input_id</span> <span class="title">id</span>;</span> <span class="comment">// 与 handler 匹配，总线类型、厂商、版本等信息</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 输入设备支持事件的位图（bitmap）*/</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> evbit[BITS_TO_LONGS(EV_CNT)]; <span class="comment">// 所有事件</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> keybit[BITS_TO_LONGS(KEY_CNT)]; <span class="comment">// 按键事件</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> relbit[BITS_TO_LONGS(REL_CNT)]; <span class="comment">// 相对位移事件</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> keycodemax;  <span class="comment">// 支持按键值个数</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> repeat_key; <span class="comment">// 最近一次按键值，用于连击</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> (*setkeycode)()   <span class="comment">// 修改当前 keymap</span></span><br><span class="line">    <span class="keyword">int</span> (*getkeycode)()   <span class="comment">// 检索keymap</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> key[BITS_TO_LONGS(KEY_CNT)];<span class="comment">// 设备当前按键状态</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">int</span> (*open)()</span><br><span class="line"><span class="keyword">int</span> (*flush)();<span class="comment">// 处理传递给设备的事件，如：LED事件和声音事件</span></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">input_handle</span> __<span class="title">rcu</span> *<span class="title">grab</span>;</span> <span class="comment">// 当前占用该设备的 input_handle</span></span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list_head</span><span class="title">h_list</span>;</span> <span class="comment">// handle 链表，链接此input_dev</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list_head</span><span class="title">node</span>;</span> <span class="comment">//  链入 input_dev_list</span></span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 事件处理，类似于中断处理函数 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">input_handler</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> *<span class="keyword">private</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> (*event)(); <span class="comment">// 处理设备驱动报告的事件</span></span><br><span class="line"><span class="keyword">int</span> (*connect)();  <span class="comment">// 连接 handler 和 input_dev</span></span><br><span class="line"><span class="keyword">void</span> (*disconnect)(); <span class="comment">// 断开连接</span></span><br><span class="line"><span class="keyword">void</span> (*start)();  <span class="comment">// 启动指定 handle 的 handler 函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *name; <span class="comment">// handler 名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">input_device_id</span> *<span class="title">id_table</span>;</span> <span class="comment">// 输入设备id列表，匹配 input_dev</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list_head</span><span class="title">h_list</span>;</span> <span class="comment">// 链入handle 链表</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list_head</span><span class="title">node</span>;</span>  <span class="comment">// 链入 input_handler_list</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * 连接 input_dev 和 handler 的桥梁</span></span><br><span class="line"><span class="comment"> * 一个 input_dev 可以对应多个 handler ， 一个 handler 也可以对应多个dev</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">input_handle</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> open; <span class="comment">// 设备打开次数（上层访问次数）</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *name;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">input_dev</span> *<span class="title">dev</span>;</span>  <span class="comment">// 所属 input_dev</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">input_handler</span> *<span class="title">handler</span>;</span> <span class="comment">// 所属 handler</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list_head</span><span class="title">d_node</span>;</span> <span class="comment">// 链入对应 input_dev 的 h_list</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list_head</span><span class="title">h_node</span>;</span> <span class="comment">// 链入对应 handler de h_list</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta"># alps/kernel-3.18/<span class="meta-keyword">include</span>/uapi/linux/input.h</span></span><br><span class="line"><span class="comment">/* 事件载体，输入子系统的事件包装为 input_event 上传到 Framework*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">input_event</span> &#123;</span></span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">time</span>;</span> <span class="comment">// 时间戳</span></span><br><span class="line"> __u16 type;  <span class="comment">// 事件类型</span></span><br><span class="line"> __u16 code;  <span class="comment">// 事件代码</span></span><br><span class="line"> __s32 value;  <span class="comment">// 事件值，如坐标的偏移值</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Input-设备驱动层"><a href="#Input-设备驱动层" class="headerlink" title="Input 设备驱动层"></a>Input 设备驱动层</h3><p>这部分主要实现各种输入设备的自己硬件相关的驱动并上报事件，这部分驱动基本遵循如下流程：</p><ol><li>声明实例化input_dev 对象</li><li>注册 input_dev<ul><li>input_allocate_device() 给设备分配空间，设置dev （实现于 input.c）</li><li>通过 input_register_device() 注册 （实现于 input.c）</li></ul></li><li>硬件初始化，中断初始化，定义中断处理程序</li><li>设置input_dev对象</li><li>定义中断处理程序，上报事件</li></ol><p>由于我自己有个外设系列源码分析，这里就不详细查看相关源码了，主要分析输入子系统的通用部分。设备驱动路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alps\kernel-3.18\drivers\input</span><br></pre></td></tr></table></figure><h3 id="Input-Core"><a href="#Input-Core" class="headerlink" title="Input Core"></a>Input Core</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\kernel-3.18\drivers\input\input.c</span></span><br><span class="line">input_init()</span><br><span class="line">    class_register(&amp;input_class); <span class="comment">// 注册为输入设备类，创建 input_class</span></span><br><span class="line">    input_proc_init(); <span class="comment">// 创建 proc/bus/input 路径下设备文件</span></span><br><span class="line">        proc_mkdir(<span class="string">&quot;bus/input&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">        proc_create(<span class="string">&quot;devices&quot;</span>..&amp;input_devices_fileops);  <span class="comment">// </span></span><br><span class="line">proc_create(<span class="string">&quot;handlers&quot;</span>..&amp;input_handlers_fileops);    </span><br><span class="line">    register_chrdev_region(MKDEV(INPUT_MAJOR, <span class="number">0</span>),INPUT_MAX_CHAR_DEVICES, <span class="string">&quot;input&quot;</span>);</span><br><span class="line"></span><br><span class="line">input_register_device() <span class="comment">// 通过 input core 注册 input_dev ，为设备驱动所调用 </span></span><br><span class="line">    __set_bit(EV_SYN, dev-&gt;evbit); <span class="comment">// 设为 EV_SYN/SYN_REPORT 事件，所有设备默认支持</span></span><br><span class="line">    __clear_bit(KEY_RESERVED, dev-&gt;keybit); <span class="comment">// KEY_RESERVED 事件不支持上传到用户空间</span></span><br><span class="line">    ... <span class="comment">// 设置 input_dev </span></span><br><span class="line">    device_add(&amp;dev-&gt;dev); <span class="comment">// 将 input_dev 注册到 sysfs</span></span><br><span class="line">    list_add_tail(&amp;dev-&gt;node, &amp;input_dev_list); <span class="comment">// 将 input_dev 加入input_dev_list</span></span><br><span class="line">list_for_each_entry(handler, &amp;input_handler_list, node)</span><br><span class="line">input_attach_handler(dev, handler);   <span class="comment">// 配对并 connect handler 和 input_dev</span></span><br><span class="line"></span><br><span class="line">input_attach_handler()</span><br><span class="line">    input_match_device(handler, dev) <span class="comment">// 配对handler 和 input_dev</span></span><br><span class="line">    handler-&gt;connect(handler, dev, id); <span class="comment">// connect</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">input_register_handler  <span class="comment">// 注册一个 input_handler </span></span><br><span class="line">INIT_LIST_HEAD(&amp;handler-&gt;h_list);</span><br><span class="line">list_add_tail(&amp;handler-&gt;node, &amp;input_handler_list);</span><br><span class="line">list_for_each_entry(dev, &amp;input_dev_list, node)</span><br><span class="line">input_attach_handler(dev, handler);  <span class="comment">// 同上</span></span><br><span class="line"></span><br><span class="line">input_event() <span class="comment">// 上报新事件</span></span><br><span class="line">    input_handle_event()/input_repeat_key()</span><br><span class="line">      input_get_disposition <span class="comment">// 处理事件类型</span></span><br><span class="line">        input_pass_values()</span><br><span class="line">            input_to_handler()</span><br><span class="line">                handler-&gt;events() <span class="comment">// 对应 evdev.c 中 evdev_event()</span></span><br><span class="line">            input_start_autorepeat() <span class="comment">// 根据需要启动或停止自动重复上报</span></span><br><span class="line">            input_stop_autorepeat(dev)</span><br><span class="line">      input_handle_abs_event()      </span><br><span class="line">        input_abs_set_val(dev, ABS_MT_SLOT, mt-&gt;slot) <span class="comment">// 刷新等待槽事件</span></span><br><span class="line">input_start_autorepeat() <span class="comment">// 启动定时器，自动重复上报</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 类似于 input_event() , 不过忽略已经被捕获的事件和非拥有 dev 注入事件 */</span></span><br><span class="line">input_inject_event() </span><br><span class="line">    input_handle_event()</span><br><span class="line"></span><br><span class="line">input_open_device</span><br><span class="line">    handle-&gt;open++</span><br><span class="line">    dev-&gt;open(dev) <span class="comment">// 设备 open</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">input_dev_suspend()    </span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\<span class="meta-keyword">include</span>\linux\input.h</span></span><br><span class="line">input_report_xx() <span class="comment">// 上报事件，如键值</span></span><br><span class="line">input_event()</span><br><span class="line">input_sync <span class="comment">// 同步事件</span></span><br><span class="line">input_event()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * 基于 input system 封装了一层轮询设备，为需要轮询的设备驱动提供支持</span></span><br><span class="line"><span class="comment"> *********************************************************************/</span></span><br><span class="line"><span class="meta"># alps\kernel-3.18\<span class="meta-keyword">include</span>\linux\input-polldev.h</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">input_polled_dev</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"># <span class="title">alps</span>\<span class="title">kernel</span>-3.18\<span class="title">drivers</span>\<span class="title">input</span>\<span class="title">input</span>-<span class="title">polldev</span>.<span class="title">c</span></span></span><br><span class="line"><span class="class"><span class="title">input_register_polled_device</span>()</span></span><br><span class="line"><span class="class">    <span class="title">NIT_DELAYED_WORK</span>(&amp;<span class="title">dev</span>-&gt;<span class="title">work</span>, <span class="title">input_polled_device_work</span>);</span></span><br><span class="line">input_open_polled_device()</span><br><span class="line">input_polldev_set_poll()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Event-Handler"><a href="#Event-Handler" class="headerlink" title="Event Handler"></a>Event Handler</h3><p>Event Handler 层以通用的 evdev.c 为例来解析，上层和 Kernel 层的交互在此文件完成。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\kernel-3.18\drivers\input\evdev.c</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">input_handler</span> <span class="title">evdev_handler</span> = &#123;</span>   <span class="comment">// input_handler</span></span><br><span class="line">.event= evdev_event,</span><br><span class="line">.events= evdev_events,</span><br><span class="line">.connect= evdev_connect,</span><br><span class="line">.disconnect= evdev_disconnect,</span><br><span class="line">.legacy_minors= <span class="literal">true</span>,</span><br><span class="line">.minor= EVDEV_MINOR_BASE,</span><br><span class="line">.name= <span class="string">&quot;evdev&quot;</span>,</span><br><span class="line">.id_table= evdev_ids,</span><br><span class="line">&#125;;</span><br><span class="line">truct file_operations evdev_fops = &#123;  <span class="comment">// 对应于上层的操作函数</span></span><br><span class="line">.owner= THIS_MODULE,</span><br><span class="line">.read= evdev_read,</span><br><span class="line">.write= evdev_write,</span><br><span class="line">.poll= evdev_poll,</span><br><span class="line">.open= evdev_open,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">struct evdev_client &#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> head;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> tail;</span><br><span class="line">    ....</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">wake_lock</span> <span class="title">wake_lock</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list_head</span> <span class="title">node</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">input_event</span> <span class="title">buffer</span>[];</span>  <span class="comment">// 事件存储 buffer</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">evdev_init()</span><br><span class="line">    input_register_handler(&amp;evdev_handler) <span class="comment">// 定义于 input.c</span></span><br><span class="line">    </span><br><span class="line">evdev_connect()    </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">evdev</span> *<span class="title">evdev</span>;</span></span><br><span class="line">    <span class="comment">/* 设置evdev */</span></span><br><span class="line">    dev_set_name(&amp;evdev-&gt;dev, <span class="string">&quot;event%d&quot;</span>, dev_no); <span class="comment">// 根据设备号命名handler</span></span><br><span class="line">    <span class="comment">/* 完成dev 和 handler 的连接关系*/</span></span><br><span class="line">    evdev-&gt;handle.dev = input_get_device(dev);</span><br><span class="line">    evdev-&gt;handle.handler = handler;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    cdev_init(&amp;evdev-&gt;cdev, &amp;evdev_fops); <span class="comment">//绑定 File 操作函数 </span></span><br><span class="line">    device_add(&amp;evdev-&gt;dev);<span class="comment">//注册设备到内核，会在 /dev/input 生成设备</span></span><br><span class="line">    </span><br><span class="line">evdev_event()</span><br><span class="line">    evdev_events()</span><br><span class="line">        evdev_pass_values()</span><br><span class="line">            __pass_event() <span class="comment">// 将事件加入 evdev_client， 并加入EV_SYN</span></span><br><span class="line">            wake_up_interruptible(&amp;evdev-&gt;wait) <span class="comment">// 唤醒，让上层读取事件数据（存于 evdev buffer）</span></span><br><span class="line">            </span><br><span class="line">evdev_flush()</span><br><span class="line">    input_flush_device() <span class="comment">// input.c</span></span><br><span class="line">    </span><br><span class="line">evdev_write()   <span class="comment">// 上层写入数据</span></span><br><span class="line">    input_event_from_user()</span><br><span class="line">    input_inject_event()</span><br><span class="line">evdev_read()   <span class="comment">//  上层读取数据</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">/* 内核与用户空间交互函数实现 */</span>    </span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\input\input-compat.c </span></span><br><span class="line">input_event_from_user()</span><br><span class="line">    copy_from_user()  </span><br><span class="line">input_event_to_user()    </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="Framework-层"><a href="#Framework-层" class="headerlink" title="Framework 层"></a>Framework 层</h2><p>Framework 层涉及面太广，内容也多，我现在阅读这部分上层源码也有些吃力，再加上时间原因，只简单跟读了几个关键文件。以后抽时间再跟读一下源码，产出一篇博客。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* native 部分关键路径*/</span></span><br><span class="line"># alps\frameworks\native\services\inputflinger</span><br><span class="line"># alps\frameworks\native\libs\input</span><br><span class="line"><span class="comment">/* 从设备文件（/dev/input）获取信息）*/</span></span><br><span class="line"># alps\frameworks\native\services\inputflinger\EventHub.cpp</span><br><span class="line"># alps\frameworks\native\services\inputflinger\InputManager.cpp</span><br><span class="line"><span class="comment">/* 从 EventHub 获取事件信息*/</span></span><br><span class="line"># alps\frameworks\native\services\inputflinger\InputReader.cpp</span><br><span class="line"><span class="comment">/* 分发事件信息*/</span></span><br><span class="line"># alps\frameworks\native\services\inputflinger\InputDispatcher.cpp</span><br><span class="line"># alps\frameworks\native\services\inputflinger\InputListener.cpp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* framework 部分关键路径*/</span></span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\input</span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\wm</span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\input\InputManagerService.java</span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\wm\WindowManagerService.java</span><br></pre></td></tr></table></figure><h1 id="附-Shell-操作路径"><a href="#附-Shell-操作路径" class="headerlink" title="附 Shell 操作路径"></a>附 Shell 操作路径</h1><p>在 Kernel 层生成三个路径及相关设备文件，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /sys/class/input/</span></span><br><span class="line">event0  event11 event4 event7 input0  input11 input4 input7</span><br><span class="line">event1  event2  event5 event8 input1  input2  input5 input8</span><br><span class="line">event10 event3  event6 event9 input10 input3  input6 input9</span><br><span class="line"></span><br><span class="line"><span class="comment"># /dev/input </span></span><br><span class="line">event0 event10 event2 event4 event6 event8</span><br><span class="line">event1 event11 event3 event5 event7 event9</span><br><span class="line"></span><br><span class="line"><span class="comment"># /proc/bus/input  </span></span><br><span class="line">devices handlers</span><br><span class="line"><span class="comment"># cat devices  查看总线上的已经注册上的输入设备</span></span><br><span class="line">I: Bus=0019 Vendor=0000 Product=0000 Version=0000</span><br><span class="line">N: Name=<span class="string">&quot;ACCDET&quot;</span></span><br><span class="line">P: Phys=</span><br><span class="line">S: Sysfs=/devices/virtual/input/input0</span><br><span class="line">U: Uniq=</span><br><span class="line">H: Handlers=gpufreq_ib event0</span><br><span class="line">B: PROP=0</span><br><span class="line">B: EV=3</span><br><span class="line">B: KEY=40 0 0 0 0 0 0 1000000000 c000001800000 0</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">I: Bus=0019 Vendor=0000 Product=0000 Version=0001</span><br><span class="line">N: Name=<span class="string">&quot;fingerprint_key&quot;</span></span><br><span class="line">P: Phys=</span><br><span class="line">S: Sysfs=/devices/virtual/input/input2</span><br><span class="line">U: Uniq=</span><br><span class="line">H: Handlers=gpufreq_ib event2</span><br><span class="line">B: PROP=0</span><br><span class="line">B: EV=3</span><br><span class="line">B: KEY=2000100000000000 180001f 8000000000000000</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">cat handlers // 查看注册的handler</span><br><span class="line">N: Number=0 Name=gpufreq_ib</span><br><span class="line">N: Number=1 Name=evdev Minor=64</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码分析 </tag>
            
            <tag> MTK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 电源管理之电池管理系统(BMS)</title>
      <link href="2017/11/21/Android/BMS-of-Android-Power-Management/"/>
      <url>2017/11/21/Android/BMS-of-Android-Power-Management/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Android 源码分析系列综述博文： <a href="http://huaqianlee.github.io/2100/11/21/Android/A-summary-of-Android-source-analysis/">Android 系统源码分析综述</a></p></blockquote><p><em>Platform information： MTK6797（X20）+ Android 7.0</em></p><p>之前做高通的时候，对高通此部分做过粗略的分析，不过当时胡乱做的些笔记，只简单整理了几篇博客，感兴趣可以参考如下路径：</p><p><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/">高通平台Android源码bootloader分析之sbl1(一)</a></p><p><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/">高通平台Android源码bootloader分析之sbl1(二)</a></p><p><a href="http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/">高通平台Android源码bootloader分析之sbl1(三)</a></p><p><a href="http://huaqianlee.github.io/2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/">Android不带电量计的电量计算</a></p><p><a href="http://huaqianlee.github.io/2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/">Android 电源管理架构</a></p><p><a href="http://huaqianlee.github.io/2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/">Android电池监控系统-BMS-之电池系统架构 (有坑未填)</a></p><p><a href="http://huaqianlee.github.io/2015/06/24/Android/qaulcomm-bms-driver-analysis/">高通电池管理系统（BMS）驱动分析</a></p><p><a href="http://huaqianlee.github.io/2015/06/24/Android/smb135x-charger-driver/">高通 smb135x charger 驱动分析</a></p><p><a href="http://huaqianlee.github.io/2015/06/24/Android/qcom-pmic-driver/">高通 PMIC 架构简析</a></p><p><a href="http://huaqianlee.github.io/2015/06/24/Android/linear-charger-driver/">高通 linear charger 驱动分析</a></p><h1 id="充电简析"><a href="#充电简析" class="headerlink" title="充电简析"></a>充电简析</h1><h2 id="充电状态机"><a href="#充电状态机" class="headerlink" title="充电状态机"></a>充电状态机</h2><p>电池充电过程分为预充、恒流充电（CC模式）、恒压充电（CV模式）、涓流充电四个流程，MTK的状态机如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/chargind_state.jpg" alt="state"></p><a id="more"></a><h2 id="充电简要流程框图"><a href="#充电简要流程框图" class="headerlink" title="充电简要流程框图"></a>充电简要流程框图</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtkGauge_arch.jpg" alt="flow"></p><h1 id="BMS-架构"><a href="#BMS-架构" class="headerlink" title="BMS 架构"></a>BMS 架构</h1><p>MTK 的 BMS 架构如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/battery%20introduction.jpg" alt="bms"></p><p>我准备将BMS从硬件到APP分为不同的架构层来分析。接下来分别分析下不同的架构层。</p><h2 id="硬件层"><a href="#硬件层" class="headerlink" title="硬件层"></a>硬件层</h2><p>硬件层主要分为三个部分：PMIC，Fuel Gauge 和 ADC。本文主要分析软件，所以硬件就不准备深入研究了。</p><h3 id="1-1-1-PMIC"><a href="#1-1-1-PMIC" class="headerlink" title="1.1.1 PMIC"></a>1.1.1 PMIC</h3><p>智能手机方案一般都会有一个PMIC芯片，有些也还会采用外接充电IC，使不使用外接IC，软件驱动会有一些区别。</p><h3 id="Fuel-Gauge"><a href="#Fuel-Gauge" class="headerlink" title="Fuel Gauge"></a>Fuel Gauge</h3><p>Fuel Gauge 是 MTK 为充放电、电量算法提供服务的一个硬件电路，电路中的电阻比较重要。</p><h3 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h3><p>FGADC 和 AUXADC 分别采样电池的电流、电压（还会采样电池温度）。</p><h2 id="BootLoader层"><a href="#BootLoader层" class="headerlink" title="BootLoader层"></a>BootLoader层</h2><p>BootLoader部分没有在上图表现出来，也可以将其归为driver部分。</p><h3 id="1-2-1-Preloader层"><a href="#1-2-1-Preloader层" class="headerlink" title="1.2.1 Preloader层"></a>1.2.1 Preloader层</h3><p>此部分会对充电做一些初始设置，比如设置手机尽早开始充电以避免电池低电压不能进入接下来的充电状态，关键路径如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alps\vendor\mediatek\proprietary\bootable\bootloader\preloader\platform\mt6797\src\drivers\platform.c</span><br></pre></td></tr></table></figure><h3 id="LK层"><a href="#LK层" class="headerlink" title="LK层"></a>LK层</h3><p>此部分主要针对充电主要做三件事：1. 启动方式、充电状态监测；2. 初始化充电IC；3. 充电器状态监测处理。</p><h4 id="启动方式、充电状态监测"><a href="#启动方式、充电状态监测" class="headerlink" title="启动方式、充电状态监测"></a>启动方式、充电状态监测</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\<span class="meta-keyword">include</span>\platform\boot_mode.h</span></span><br><span class="line"><span class="meta"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\boot_mode.c</span></span><br><span class="line">boot_mode_select() <span class="comment">// 启动方式判断及处理</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\platform.c</span></span><br><span class="line">platform_init() &#123;</span><br><span class="line">    upmu_is_chr_det() <span class="comment">// 充电检测，Unplugged则关机</span></span><br><span class="line">    <span class="keyword">if</span> (kernel_charging_boot() == <span class="number">1</span>) &#123; <span class="comment">// 充电启动，显示关机充电信息</span></span><br><span class="line">        <span class="comment">/*判断充电设备和状态，显示充电图标和点亮充电指示灯*/</span></span><br><span class="line">        mt_disp_power(TRUE);</span><br><span class="line">mt_disp_show_low_battery();</span><br><span class="line">mt65xx_leds_brightness_set(<span class="number">6</span>, <span class="number">110</span>);</span><br><span class="line">    &#125;<span class="comment">// 否则，闹钟启动灯其他方式启动，显示开机界面</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">boot_mode_select(); <span class="comment">// 区分开机过程</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\mt_kernel_power_off_charging.c</span></span><br><span class="line">set_off_mode_charge_status()</span><br><span class="line">kernel_power_off_charging_detection(<span class="keyword">void</span>) &#123; <span class="comment">// 充电状态监测</span></span><br><span class="line">    get_off_mode_charge_status()</span><br><span class="line"><span class="keyword">if</span> (upmu_is_chr_det() == KAL_TRUE) &#123;</span><br><span class="line"><span class="keyword">if</span> (off_mode_status) &#123;</span><br><span class="line">g_boot_mode = KERNEL_POWER_OFF_CHARGING_BOOT;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">g_boot_mode = NORMAL_BOOT;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">mt6575_power_off();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="初始化充电IC"><a href="#初始化充电IC" class="headerlink" title="初始化充电IC"></a>初始化充电IC</h4><p>充电IC的初始化工作，有些可以被kernel驱动覆盖，有些不能，所以有时候一些修改记得在LK和kernel里面都得完成。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\mt_battery.c</span></span><br><span class="line">pchr_turn_on_charging() &#123; <span class="comment">//打开充电</span></span><br><span class="line">bq25890_hw_init();</span><br><span class="line">bq25890_charging_enable(bEnable);</span><br><span class="line">bq25890_dump_register();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\rules.mk</span></span><br><span class="line">    ifeq ($(MTK_BQ25896_SUPPORT),yes)</span><br><span class="line">      OBJS +=$(LOCAL_DIR)/bq25890.o</span><br><span class="line">      DEFINES += MTK_BQ25896_SUPPORT</span><br><span class="line">      DEFINES += SWCHR_POWER_PATH</span><br><span class="line"></span><br><span class="line"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\include\platform\bq25890.h</span><br><span class="line"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\bq25890.c</span><br><span class="line"><span class="keyword">void</span> bq25890_hw_init(<span class="keyword">void</span>)</span><br><span class="line"># 充电IC初始化及电流电压等相关设置</span><br></pre></td></tr></table></figure><h4 id="1-2-2-3-充电器状态监测处理"><a href="#1-2-2-3-充电器状态监测处理" class="headerlink" title="1.2.2.3 充电器状态监测处理"></a>1.2.2.3 充电器状态监测处理</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\app\mt_boot\mt_boot.c</span></span><br><span class="line">boot_linux_fdt() &#123;</span><br><span class="line">    <span class="keyword">if</span> (kernel_charging_boot() == <span class="number">-1</span>) </span><br><span class="line">    mt6575_power_off(); <span class="comment">// if Unplugged, 关机</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (kernel_charging_boot() == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (pmic_detect_powerkey()) &#123;</span><br><span class="line">mtk_arch_reset(<span class="number">1</span>); <span class="comment">// 跳转kernel前如果按键，重启</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="充电图标"><a href="#充电图标" class="headerlink" title="充电图标"></a>充电图标</h4><p>MTK之前很多方案是在lk里面绘制关机充电图标，然后采样IPO协议实现关机充电。不过现在已采取高通类似方案在Health部分绘制关机充电图标了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6755\mt_logo.c</span></span><br></pre></td></tr></table></figure><p>IPO方式流程图如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/power%20off%20charging.jpg" alt="IPO"></p><blockquote><p>由于初次接触MTK，又没有深入研究此部分，此部分如有错误，敬请谅解和指出。</p></blockquote><h2 id="Kernel层"><a href="#Kernel层" class="headerlink" title="Kernel层"></a>Kernel层</h2><p>Kernel 部分软件流程框图，不过此图是我从MTK文档上截取没有做修改，所以图片中外部充电IC代码为Fan5405，对应于我的代码应该为bq24290（bq24296）。如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/kernel_cod_arch.jpg" alt="arch"></p><h3 id="1-3-1-ADC部分"><a href="#1-3-1-ADC部分" class="headerlink" title="1.3.1 ADC部分"></a>1.3.1 ADC部分</h3><p>电流电压采样部分代码没有深入查看，主要看了如下一个文件：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\pmic_auxadc.c</span></span><br><span class="line">pmic_auxadc_init()</span><br><span class="line">PMIC_IMM_GetCurrent <span class="comment">// 算出电流</span></span><br></pre></td></tr></table></figure><h3 id="HAL部分"><a href="#HAL部分" class="headerlink" title="HAL部分"></a>HAL部分</h3><p>此 HAL 并不是真正的 HAL 层，实际是驱动部分，实现部分结构体，针对 MTK 不同充电方案提供支持，读取各项参数。我所阅读的代码使用了外接充电 IC BQ24296（switch charger），驱动不会走 linear_charging.c，走 switch_charging.c + bq25896 驱动部分。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\charging_hw_pmic.c</span></span><br><span class="line">charging_value_to_parameter()</span><br><span class="line">charging_parameter_to_value()</span><br><span class="line">charging_hw_init() <span class="comment">// PMIC初始化</span></span><br><span class="line">charging_get/set_current()</span><br><span class="line">charging_sw_init()</span><br><span class="line">chr_control_interface()</span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\<span class="meta-keyword">include</span>\mt-plat\battery_meter_hal.h</span></span><br><span class="line">BATTERY_METER_CTRL_CMD</span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\battery_meter_hal.c</span></span><br><span class="line">get_hw_ocv</span><br><span class="line">read_adc_v_bat_sense()  <span class="comment">// 读取电池电压，根据宏判断 batsense 还是 isense</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\bq25890.h</span></span><br><span class="line"><span class="comment">// 硬件定义及接口</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\bq25890.c</span></span><br><span class="line">bq25890_driver_probe() <span class="comment">// 注册驱动</span></span><br><span class="line">bq25890_get_xx() <span class="comment">// get 接口</span></span><br><span class="line">bq25890_set_xx() <span class="comment">// set 接口</span></span><br><span class="line">bq25890_hw_init() </span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\charging_hw_bq25890.c</span></span><br><span class="line">is_chr_det() <span class="comment">// 充电器检测</span></span><br><span class="line">    val = pmic_get_register_value(MT6351_PMIC_RGS_CHRDET);</span><br><span class="line">charging_hw_init() <span class="comment">// 充电IC初始化     </span></span><br><span class="line">charging_sw_init() <span class="comment">// 充电IC初始化</span></span><br><span class="line">charging_get_xx() <span class="comment">// 封装后的 get 接口</span></span><br><span class="line">charging_get_charger_type() <span class="comment">// 获取充电器类型</span></span><br><span class="line">charging_set_xx() <span class="comment">// 封装后的 set 接口</span></span><br><span class="line">charging_set_current() <span class="comment">// 设置充电电流</span></span><br></pre></td></tr></table></figure><h3 id="Common部分"><a href="#Common部分" class="headerlink" title="Common部分"></a>Common部分</h3><p>PMIC充电控制、充电控制主线程、SW FG算法等内容在此部分实现。battery_common*.c 是一个关键文件，其是充电控制的主线程，battery 设备也由此文件注册。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\<span class="meta-keyword">include</span>\mt-plat\charging.h</span></span><br><span class="line">CHARGING_CTRL_CMD</span><br><span class="line">CHARGER_TYPE</span><br><span class="line">BATTERY_VOLTAGE_ENUM</span><br><span class="line">CHR_CURRENT_ENUM</span><br><span class="line"><span class="comment">// 如上等电池相关宏定义</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\<span class="meta-keyword">include</span>\mt-plat\battery_common.h</span></span><br><span class="line"><span class="comment">// 充电等相关参数定义</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps/kernel-3.18/drivers/power/mediatek/battery_common_fg_20.c </span></span><br><span class="line"><span class="comment">// 充电控制主线程</span></span><br><span class="line">power_supply_property xx <span class="comment">// 定义电池相关文件节点，后面接口函数对其更新</span></span><br><span class="line">upmu_is_chr_det() <span class="comment">// 充电状态监测</span></span><br><span class="line">wireless/ac/usb_get_get_property() <span class="comment">// 更新 charger</span></span><br><span class="line">battery_update() </span><br><span class="line">bat_routine_thread()</span><br><span class="line">    hrtimer_start() <span class="comment">// 开始定时器，定时更新数据</span></span><br><span class="line">battery_init() <span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\<span class="meta-keyword">include</span>\mt-plat\battery_meter.h</span></span><br><span class="line"><span class="comment">// SW FG 算法相关定义</span></span><br><span class="line"><span class="meta"># alps/kernel-3.18/drivers/power/mediatek/battery_meter_fg_20.c </span></span><br><span class="line"><span class="comment">// SW FG算法,也即是OAM</span></span><br><span class="line">SW FG的原理：</span><br><span class="line">a.PMIC adc来获取raw vbat电压。</span><br><span class="line">b.通过ZCV表格，将vbat转换成OCV</span><br><span class="line">c.ocv-vbat/r 来获取电流I</span><br><span class="line">d.对电流i 进行积分，获取电量。</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * MTK vendor 封装了 FG2.0 算法，计算soc，然后通过netlink发送到Kernel</span></span><br><span class="line"><span class="comment"> * 算法部分可以参考FG1.0的代码（battery_meter.c）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">BMT_status.SOC = battery_meter_get_battery_percentage()</span><br><span class="line">  gFG_capacity_by_c <span class="comment">//库仑计计算的电量值</span></span><br><span class="line">    bmd_ctrl_cmd_from_user（）<span class="comment">// meter  数据</span></span><br><span class="line">      <span class="built_in">memcpy</span>(&amp;gFG_capacity_by_c,...)</span><br><span class="line">        nl_data_handler（）-&gt;data = NLMSG_DATA(nlh)</span><br><span class="line"></span><br><span class="line">D0值：读取电池电压，将电池电压按对应电池的ZCV表查找对应的百分比，根据一定算法运算出的初始电量。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># alps\kernel<span class="number">-3.18</span>\drivers\power\mediatek\linear_charging.c</span><br><span class="line"><span class="comment">// PMIC充电控制， CC模式CV模式切换</span></span><br><span class="line">mtk_tuning_voltage()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*linear_charging.c 和 switch_charging.c二选一*/</span></span><br><span class="line"># alps\kernel<span class="number">-3.18</span>\drivers\power\mediatek\switch_charging.c</span><br><span class="line"><span class="comment">// SW charger充电控制， CC模式CV模式切换</span></span><br><span class="line">set_chr_input_current_limit()</span><br><span class="line">set_bat_sw_cv_charging_current_limit()</span><br><span class="line">...</span><br><span class="line">charging_full_check()</span><br><span class="line"></span><br><span class="line"># alps\kernel<span class="number">-3.18</span>\drivers\misc\mediatek\power\mt6797\pmic_chr_type_det.c</span><br></pre></td></tr></table></figure><p>Fuel Gauge Control 和 Charging Control 框图如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/charging_control.jpg" alt="FG&amp;Charging Control"></p><h3 id="客制化部分"><a href="#客制化部分" class="headerlink" title="客制化部分"></a>客制化部分</h3><p>不同于高通将电池曲线合入DTS，MTK是以头文件的形式合入电池曲线（好像也有DTS方式）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\<span class="meta-keyword">include</span>\mt-plat\mt6797\<span class="meta-keyword">include</span>\mach\mt_battery_meter_table.h</span></span><br><span class="line"><span class="comment">// 充电IC温度检测上拉电阻配置</span></span><br><span class="line">BATTERY_PROFILE_STRUCT battery_profile_tx[] <span class="comment">// 合入不同温度下电池曲线的 DOD OCV</span></span><br><span class="line">R_PROFILE_STRUCT r_profile_t1[] <span class="comment">// 合入不同温度下电池曲线的电池内阻和OCV</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\<span class="meta-keyword">include</span>\mt-plat\mt6797\<span class="meta-keyword">include</span>\mach\mt_battery_meter.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SOC_BY_HW_FG  <span class="comment">// 定义默认使用 Fuel Gauge， FG算法</span></span></span><br><span class="line"><span class="comment">/*#define HW_FG_FORCE_USE_SW_OCV*/</span></span><br><span class="line"><span class="comment">/*#define SOC_BY_SW_FG*/</span></span><br><span class="line"><span class="comment">// 电池参数配置，部分值来源于电池曲线表</span></span><br><span class="line">CUST_POWERON_DELTA_CAPACITY_TOLRANCE <span class="comment">// 重启电量记录范围</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\misc\mediatek\<span class="meta-keyword">include</span>\mt-plat\mt6797\<span class="meta-keyword">include</span>\mach\mt_charging.h</span></span><br><span class="line"><span class="comment">// 充电控制，充电电流、温度等宏定义</span></span><br></pre></td></tr></table></figure><h3 id="文件节点"><a href="#文件节点" class="headerlink" title="文件节点"></a>文件节点</h3><p>电池状态、充电状态等文件节点的创建路径：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Power Supply Class Node </span></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\power\power_supply.h</span></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\power\power_supply_core.c</span></span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\power\power_supply_sysfs.c</span></span><br><span class="line">power_supply_show_property()</span><br><span class="line">power_supply_attrs</span><br><span class="line"><span class="meta"># alps\kernel-3.18\drivers\power\power_supply_leds.c</span></span><br></pre></td></tr></table></figure><h3 id="Healthd模块"><a href="#Healthd模块" class="headerlink" title="Healthd模块"></a>Healthd模块</h3><p>Healtdh模块是一个单独的进程，这部分主要做两件事：1. 读取电池数据，上报（BatteryService.java）； 2. 绘制关机图标。</p><h4 id="Main函数"><a href="#Main函数" class="headerlink" title="Main函数"></a>Main函数</h4><p>healthd.cpp是Healthd模块的入口，也就是Main函数，如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\system\core\healthd\healthd.cpp</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 针对不同方式定义执行函数</span></span><br><span class="line"><span class="comment"> * android_ops  正常开机</span></span><br><span class="line"><span class="comment"> * charger_ops  关机充电</span></span><br><span class="line"><span class="comment"> * recovery_ops Recovery模式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">healthd_mode_ops</span> <span class="title">android_ops</span> = &#123;</span></span><br><span class="line">    .init = healthd_mode_android_init,</span><br><span class="line">    .preparetowait = healthd_mode_android_preparetowait,</span><br><span class="line">    .heartbeat = healthd_mode_nop_heartbeat,</span><br><span class="line">    .battery_update = healthd_mode_android_battery_update,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">uevent_event() <span class="comment">// uevent 事件处理</span></span><br><span class="line">    uevent_kernel_multicast_recv(uevent_fd, msg, UEVENT_MSG_LEN) <span class="comment">// 接收底层事件，并返回事件数量</span></span><br><span class="line">    <span class="comment">/*遍历事件，POWER_SUPPLY_SUBSYSTEM*/</span></span><br><span class="line">    healthd_battery_update() <span class="comment">// 电池信息更新入口，此处根据返回 Charging ？，设置 poll 唤醒周期</span></span><br><span class="line">        gBatteryMonitor-&gt;update()   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main() <span class="comment">// main函数,单独的进程</span></span><br><span class="line">    healthd_mode_ops = &amp;android_ops/&amp;charger_ops/&amp;recovery_ops; <span class="comment">// 选择执行函数体</span></span><br><span class="line">    healthd_init</span><br><span class="line">        epoll_create(MAX_EPOLL_EVENTS); <span class="comment">// 使用epoll进行IO复用, 在一个线程管理所以 fd</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 创建、注册监听三个事件，加入 epoll fd，每个事件都有其句柄函数</span></span><br><span class="line"><span class="comment">         * gBinderfd ：监听Binder通信事件，句柄：binder_event（healthd_mode_android.cpp）</span></span><br><span class="line"><span class="comment">         * uevent_fd： 监听底层电池 event，句柄:uevent_event()</span></span><br><span class="line"><span class="comment">         * wakealarm_fd：监听wakealarm事件，句柄：wakealarm_event</span></span><br><span class="line"><span class="comment">         * 在监听到事件后，epoll 就会在句柄函数里面做相应的更新操作，如上 uevent_event()</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        healthd_mode_ops-&gt;init(&amp;healthd_config)<span class="comment">// healthd_mode_android_init()</span></span><br><span class="line">        uevent_init()</span><br><span class="line">        wakealarm_init()</span><br><span class="line">        <span class="keyword">new</span> BatteryMonitor();</span><br><span class="line">    healthd_mainloop(); <span class="comment">// main函数，while(1) </span></span><br><span class="line">        <span class="keyword">if</span> (events[n].data.ptr) <span class="comment">// epoll遍历事件fd，调用处理函数</span></span><br><span class="line">                (*(<span class="keyword">void</span> (*)(<span class="keyword">int</span>))events[n].data.ptr)(events[n].events);</span><br><span class="line">        healthd_mode_ops-&gt;heartbeat();</span><br></pre></td></tr></table></figure><h4 id="正常开机"><a href="#正常开机" class="headerlink" title="正常开机"></a>正常开机</h4><p>正常开机时电池信息更新：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/bat_update_func.jpg" alt="update_battery"></p><p>正常开机部分源码分析：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\system\core\healthd\BatteryPropertiesRegistrar.cpp</span></span><br><span class="line">BatteryPropertiesRegistrar::publish()<span class="comment">//将&quot;batteryproperties&quot;这个Service加入ServiceManager</span></span><br><span class="line">BatteryPropertiesRegistrar::notifyListeners() <span class="comment">// 遍历 listener ，通知上层监听者，如 BatteryService</span></span><br><span class="line">BatteryPropertiesRegistrar::registerListener() <span class="comment">// 上层通过Binder注册回调</span></span><br><span class="line">     healthd_battery_update();<span class="comment">// healthd.cpp</span></span><br><span class="line">BatteryPropertiesRegistrar::getProperty() <span class="comment">//BatteryManager.java主动查询时的对应接口</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\system\core\healthd\healthd_mode_android.cpp</span></span><br><span class="line">healthd_mode_android_battery_update</span><br><span class="line">    gBatteryPropertiesRegistrar-&gt;notifyListeners(*props) </span><br><span class="line">    </span><br><span class="line">healthd_mode_android_init()</span><br><span class="line">    ProcessState::self()-&gt;setThreadPoolMaxThreadCount(<span class="number">0</span>);<span class="comment">// 线程池里最大线程数</span></span><br><span class="line">    IPCThreadState::self()-&gt;disableBackgroundScheduling(<span class="literal">true</span>);<span class="comment">// 禁用后台调度</span></span><br><span class="line">    IPCThreadState::self()-&gt;setupPolling(&amp;gBinderFd); <span class="comment">// 将Binder通信fd加入epoll</span></span><br><span class="line">    <span class="keyword">if</span> (healthd_register_event(gBinderFd, binder_event)) <span class="comment">//binder_event注册到gBinderFd</span></span><br><span class="line">    <span class="comment">/* 将&quot;batteryproperties&quot;加入ServiceManager */</span></span><br><span class="line">    gBatteryPropertiesRegistrar-&gt;publish(gBatteryPropertiesRegistrar);</span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\system\core\healthd\BatteryMonitor.cpp </span></span><br><span class="line">BatteryMonitor::update(<span class="keyword">void</span>)</span><br><span class="line">    initBatteryProperties() <span class="comment">// 电池参数初始化</span></span><br><span class="line">    <span class="comment">/*获取文件节点数据封装于 BatteryProperties */</span></span><br><span class="line">    path.appendFormat(<span class="string">&quot;%s/%s/online&quot;</span>, POWER_SUPPLY_SYSFS_PATH, mChargerNames[i].<span class="built_in">string</span>());</span><br><span class="line">    ireadFromFile(path, buf, SIZE)</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * alps\system\core\healthd\healthd_board_default.cpp</span></span><br><span class="line"><span class="comment">     * 将电池实时信息记录到 kernel log 中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    healthd_board_battery_update(&amp;props);</span><br><span class="line">    healthd_mode_ops-&gt;battery_update(&amp;props) <span class="comment">// healthd_mode_android.cpp中update</span></span><br><span class="line">    </span><br><span class="line">BatteryMonitor::getXX  <span class="comment">// 获取电池状态和Health状况等</span></span><br><span class="line">BatteryMonitor::dumpState()</span><br><span class="line">BatteryMonitor::init() <span class="comment">//获取文件节点值，初始化（譬如加上节点路径： /sys/class/power_supply）写入mHealthdConfig</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="关机充电"><a href="#关机充电" class="headerlink" title="关机充电"></a>关机充电</h4><p>关机充电部分主要就是更新电量、充电状态，更新UI。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\system\core\healthd\healthd_mode_charger.cpp</span></span><br><span class="line">dump_last_kmsg() // dump前记录最后一份<span class="built_in">log</span></span><br><span class="line">/*绘制关机充电图标*/</span><br><span class="line">draw_xx()</span><br><span class="line">redraw_screen()</span><br><span class="line">healthd_mode_charger_heartbeat() // 获取最新电池状态，更新</span><br><span class="line">    handle_input_state(charger, now);</span><br><span class="line">    handle_power_supply_state(charger, now);</span><br><span class="line">    update_screen_state()  // 更新屏幕显示</span><br><span class="line">healthd_mode_charger_init()</span><br><span class="line">healthd_mode_charger_battery_update()</span><br></pre></td></tr></table></figure><h2 id="Framework层"><a href="#Framework层" class="headerlink" title="Framework层"></a>Framework层</h2><h3 id="Native层"><a href="#Native层" class="headerlink" title="Native层"></a>Native层</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># alps\frameworks\native\services\sensorservice\BatteryService.cpp</span></span><br><span class="line"><span class="comment">// 定义BatteryService.h中创建的BatteryService类的成员函数</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\frameworks\native\services\batteryservice\BatteryProperties.cpp</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 容器Parcel读写电池相关信息</span></span><br><span class="line"><span class="comment"> * 必须与frameworks/base/core/java/android/os/BatteryProperties.java 同步</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">BatteryProperties::readFromParcel()</span><br><span class="line">BatteryProperties::writeToParcel()</span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\frameworks\native\services\batteryservice\BatteryProperty.cpp</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Parcel read/write code must be kept in sync with</span></span><br><span class="line"><span class="comment"> * frameworks/base/core/java/android/os/BatteryProperty.java</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">BatteryProperty::readFromParcel()</span><br><span class="line">BatteryProperty::writeToParcel()</span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\frameworks\native\services\batteryservice\IBatteryPropertiesListener.cpp</span></span><br><span class="line"><span class="comment">// BatteryService.java中BatteryListener的父类</span></span><br><span class="line">batteryPropertiesChanged()</span><br><span class="line"></span><br><span class="line"><span class="meta"># alps\frameworks\native\services\batteryservice\IBatteryPropertiesRegistrar.cpp</span></span><br><span class="line"><span class="comment">// BatteryManager.java和BatteryService.java通过其获取 batteryproperties ，与healthd中同步</span></span><br></pre></td></tr></table></figure><h3 id="Framework部分"><a href="#Framework部分" class="headerlink" title="Framework部分"></a>Framework部分</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># alps\frameworks\base\services\core\java\com\android\server\BatteryService.java</span><br><span class="line">onStart() &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 通过ServiceManager获取batteryproperties Service，</span></span><br><span class="line"><span class="comment">     * 然后将BatteryListener注册到batteryproperties中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    IBinder b = ServiceManager.getService(<span class="string">&quot;batteryproperties&quot;</span>); </span><br><span class="line">    batteryPropertiesRegistrar.registerListener(<span class="keyword">new</span> BatteryListener());</span><br><span class="line">    publishBinderService(<span class="string">&quot;battery&quot;</span>, mBinderService);</span><br><span class="line">    publishLocalService(BatteryManagerInternal.class, <span class="keyword">new</span> LocalService());</span><br><span class="line">processValuesLocked     </span><br><span class="line">    shutdownIfNoPowerLocked() <span class="comment">// 低电 Unplugged 关机广播</span></span><br><span class="line">    shutdownIfOverTempLocked() <span class="comment">// 温度超出，关机广播</span></span><br><span class="line">    sendIntentLocked() <span class="comment">// 电池信息改变，信息广播</span></span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BatteryListener</span></span></span><br><span class="line"><span class="class">    <span class="title">batteryPropertiesChanged</span> // 监听到电池信息改变，更新信息</span></span><br><span class="line"><span class="class">        <span class="title">atteryService</span>.<span class="title">this</span>.<span class="title">update</span>(<span class="title">props</span>)</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Led</span> // 开机充电 <span class="title">LED</span> 控制类</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"># <span class="title">alps</span>\<span class="title">frameworks</span>\<span class="title">base</span>\<span class="title">core</span>\<span class="title">java</span>\<span class="title">android</span>\<span class="title">os</span>\<span class="title">BatteryManager</span>.<span class="title">java</span></span></span><br><span class="line"><span class="class"><span class="title">queryProperty</span>() // 主动到 <span class="title">healthd</span> 查询电池信息</span></span><br><span class="line"><span class="class">    <span class="title">IBinder</span> <span class="title">b</span> </span>= ServiceManager.getService(<span class="string">&quot;batteryproperties&quot;</span>);<span class="comment">//获取batteryproperties Service  </span></span><br><span class="line">    mBatteryPropertiesRegistrar = IBatteryPropertiesRegistrar.Stub.asInterface(b);<span class="comment">//接口转化</span></span><br><span class="line">    mBatteryPropertiesRegistrar.getProperty(id, prop) <span class="comment">// 调用到Healthd BatteryPropertiesRegistrar.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************</span></span><br><span class="line"><span class="comment"> * 还有很多其他文件为上面两个文件提供服务，没有去详细分析了</span></span><br><span class="line"><span class="comment"> * 如下简单介绍一下。</span></span><br><span class="line"><span class="comment"> *****************************************************************/</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\am\BatteryStatsService.java</span><br><span class="line"><span class="comment">// 电池信息广播Intent（ACTION_BATTERY_CHANGED）用到的字符串和常量</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryManagerInternal.java</span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperties.aidl</span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperties.java</span><br><span class="line"><span class="comment">// 电池信息读写代码，与BatteryProperties.cpp同步</span></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperty.aidl</span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperty.java</span><br><span class="line"><span class="comment">// 电池信息读写代码，与BatteryProperties.cpp同步</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryStats.java</span><br><span class="line"> <span class="comment">// 存取电池使用情况统计，包括wakelocks, processes, packages, and services等</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatteryStatsImpl.aidl</span><br><span class="line"><span class="comment">// .aidl为接口定义文件， 定义电池状态信息及相关操作方法。</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatteryStatsImpl.java</span><br><span class="line"><span class="comment">// 影响电池的所有信息及操作，时间以ms为单位</span></span><br></pre></td></tr></table></figure><h3 id="APP部分"><a href="#APP部分" class="headerlink" title="APP部分"></a>APP部分</h3><p>系统UI处理电流的部分路径主要如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatterySipper.java</span><br><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatteryStatsHelper.java</span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\BatteryMeterDrawable.java</span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\BatteryMeterView.java</span><br><span class="line"><span class="comment">// 创建系统广播接收器，接收电池信息广播，绘制电池状态图标</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\statusbar\policy\BatteryController.java</span><br><span class="line"><span class="comment">// 定义一个广播接收器并在构造器里注册接收电池信息广播，收到自己广播后回调修改pluged、level</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\power\PowerUI.java</span><br><span class="line"><span class="comment">// 创建系统广播接收器，接收电池信息广播，弹出低电警告等</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\qs\tiles\BatteryTile.java</span><br><span class="line"><span class="comment">// 定义电量百分比显示TextView类</span></span><br></pre></td></tr></table></figure><h1 id="关机充电流程"><a href="#关机充电流程" class="headerlink" title="关机充电流程"></a>关机充电流程</h1><p>关机充电也是在kernel里面充电，充电控制流程与开机是一致的，前面也分析到了。这里补充一个MTK软件流程图。如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/power%20off%20charging2.jpg" alt="charging flow"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>先留一个坑，等有时间了，再来绘制一个清晰易懂的流程框图。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码分析 </tag>
            
            <tag> MTK </tag>
            
            <tag> Power </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Selinux 权限及问题</title>
      <link href="2017/11/14/Android/Android-SELinux-Permison-and-Question/"/>
      <url>2017/11/14/Android/Android-SELinux-Permison-and-Question/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于现做的是MTK平台，源码路径基于MTK， 不过高通大同小异</p></blockquote><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>Android 5.0以后完全引入了 SEAndroid/SELinux 安全机制，这样即使拥有 root 权限或 chmod 777 ，仍然无法再JNI以上访问内核节点。</p><blockquote><p>其实在 Android 4.4 就有限制的启用此安全机制了。后面内容都按照 5.0  以后介绍，4.4 会有些许差异。</p></blockquote><h2 id="SELinux-Mode"><a href="#SELinux-Mode" class="headerlink" title="SELinux Mode"></a>SELinux Mode</h2><p>SELinux 分为两种模式，Android 5.0 后所有进程都使用 enforcing mode。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enforcing mode: 限制访问</span><br><span class="line">permissive mode: 只审查权限，不限制</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="SELinux-Policy文件路径"><a href="#SELinux-Policy文件路径" class="headerlink" title="SELinux Policy文件路径"></a>SELinux Policy文件路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Google 原生目录 </span></span><br><span class="line">external/sepolicy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 厂家目录，高通将 mediatek 换为 qcom</span></span><br><span class="line">alps\device\mediatek\common\sepolicy</span><br><span class="line">alps\device\mediatek\&lt;platform&gt;\sepolicy</span><br></pre></td></tr></table></figure><blockquote><p>编译时将以合并的方式将厂家policy追加到Google原生。</p></blockquote><h2 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h2><p>没有权限时可以在内核找到如下 log ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># avc: denied  &#123; 操作权限  &#125;  for pid=7201  comm=“进程名”  scontext=u:r:源类型:s0  tcontext=u:r:目标类型:s0  tclass=访问类型 permissive=0</span></span><br><span class="line"></span><br><span class="line">avc: denied &#123;getattr <span class="built_in">read</span>&#125; <span class="keyword">for</span> pid=7201 comm=<span class="string">&quot;xxx.xxx&quot;</span> scontext=u:r:system_app:s0 tcontext=u:r:shell_data_file:s0 tclass=dir permissive=0</span><br></pre></td></tr></table></figure><h2 id="权限修改"><a href="#权限修改" class="headerlink" title="权限修改"></a>权限修改</h2><p>主要有三种方式，前两种只能用来测试，第三种是推荐的正式处理方式。</p><h3 id="adb在线修改seLinux"><a href="#adb在线修改seLinux" class="headerlink" title="adb在线修改seLinux"></a>adb在线修改seLinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Enforcing - 表示已打开 ，Permissive - 表示已关闭</span></span><br><span class="line">getenforce;     //获取当前seLinux状态</span><br><span class="line">setenforce 1;   //打开seLinux</span><br><span class="line">setenforce 0;   //关闭seLinux</span><br></pre></td></tr></table></figure><h3 id="kernel中关闭"><a href="#kernel中关闭" class="headerlink" title="kernel中关闭"></a>kernel中关闭</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\configs\xxx_defconfig</span></span><br><span class="line">CONFIG_SECURITY_SELINUX=y // 屏蔽此配置项</span><br></pre></td></tr></table></figure><h3 id="SELinux-Sepolicy中添加权限"><a href="#SELinux-Sepolicy中添加权限" class="headerlink" title="SELinux Sepolicy中添加权限"></a>SELinux Sepolicy中添加权限</h3><p>修改相应源类型.te文件（基本以源进程名命名），添加如下一行语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式</span></span><br><span class="line">allow  源类型 目标类型:访问类型 &#123;操作权限&#125;; // 注意分号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例，具体写法参考源码</span></span><br><span class="line">allow system_app shell_data_file:dir&#123;getattr <span class="built_in">read</span> write&#125;;</span><br><span class="line">allow mediaserver tfa9897_device:chr_file &#123; open <span class="built_in">read</span> write &#125;; </span><br><span class="line">allow system_server tfa9897_device:chr_file rw_file_perms; </span><br><span class="line"></span><br><span class="line">chr_file - 字符设备  file - 普通文件 dir - 目录</span><br></pre></td></tr></table></figure><blockquote><p>通常很少修改Google default 的policy, 推荐更新mediatek 下面的相关的policy. </p></blockquote><h3 id="新建节点"><a href="#新建节点" class="headerlink" title="新建节点"></a>新建节点</h3><p>如果是自己新建的节点，需要在 sepolicy 路径下的 file_contexts 文件中做如下添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参考已有的格式</span></span><br><span class="line">/dev/goodix_fp                 u:object_r:goodixfp_device:s0</span><br></pre></td></tr></table></figure><blockquote><p>Android 5.0 修改的文件为device.te 和 file_contexts.be，而且device/mediatek/common/BoardConfig.mk 中的 BROAD_SEPOLICY_UNION 增加对应的xxxx.te。</p></blockquote><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><pre><code class="bash"># 模块编译mmm external/sepolicymake -j24 ramdisk-nodeps &amp; make -j24 bootimage-nodeps# 整编make -j24</code></pre>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MTK </tag>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的快充技术简介</title>
      <link href="2017/11/13/Android/What-is-fast-charge-now/"/>
      <url>2017/11/13/Android/What-is-fast-charge-now/</url>
      
        <content type="html"><![CDATA[<p>技术发展越来越快，快充技术也一样，那现在怎么样才能算快充，有哪些快充技术呢？</p><h2 id="高通方案"><a href="#高通方案" class="headerlink" title="高通方案"></a>高通方案</h2><h3 id="高通-Quick-Charge-方案"><a href="#高通-Quick-Charge-方案" class="headerlink" title="高通 Quick Charge 方案"></a>高通 Quick Charge 方案</h3><h4 id="QC-1-0"><a href="#QC-1-0" class="headerlink" title="QC 1.0"></a>QC 1.0</h4><p>最高支持 5V/2A 充电功率(目前已经被划分为慢充)，基本都是骁龙 600 平台。</p><a id="more"></a><h4 id="QC-2-0"><a href="#QC-2-0" class="headerlink" title="QC 2.0"></a>QC 2.0</h4><p>分为A版和B版，</p><ul><li><p>A版：包含 5V、9V 和 12V 三档，最大电流3A，适用于智能手机、平板电脑以及其它便携式电子设备，支持的平台包括了骁龙 200/400 /410/615/800/801/805/810，另外也授权给其他厂商使用，例如 Intel 的 Boost Master 快速充电技术其实也属于高通 QC2.0;</p></li><li><p>B版：支持20V电压，最大可以输出40w功率，应用于对充电速度要求更高的设备。</p></li></ul><h4 id="QC-3-0"><a href="#QC-3-0" class="headerlink" title="QC 3.0"></a>QC 3.0</h4><p>为了保证不出现过度发热的问题，QC3.0标准主要是比QC2.0标准增加了一个“最佳电压智能调节”算法，以200mV增量为一档，提供从 3.6V 到 20V 电压的灵活选择，让手机厂商能够根据自身需求调整最佳电压，达到预期电流，提供充电效率同时降低功耗和发热。QC3.0 兼容的平台包括了高通骁龙 820、620、618、 617 和 430，并且向下兼容 QC2.0 和 QC1.0 的设备。</p><h4 id="QC-4-0"><a href="#QC-4-0" class="headerlink" title="QC 4.0"></a>QC 4.0</h4><p>充电仅 15 分钟即可获得 50% 的电池电量。同时，QC4.0 还加入了对 USB Type-C 和 USB-PD 的支持。按照高通的说法来看，QC4.0 比 QC3.0 多了一项 Dual Charge 的技术。它能使充电速度提升20%，效率提升30%。除了以上这些，QC4.0 还优化了“最佳电压智能调节”的算法(INOV)，将电压继续细分，以 20mV 为一档;取消了 12V 的电压，5V 最大可输出 5.6A ，9V 最大可输出 3A。QC 4.0 兼容的平台包括了高通骁龙 835、660、630 和 635(635暂未发布) ，并且向下兼容 QC2.0 和 QC1.0 的设备.</p><p>在网上一张出自【电子发烧友】比较清晰明了的图，引用如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/fastcharge.png" alt="fastcharge"></p><h2 id="MTK方案"><a href="#MTK方案" class="headerlink" title="MTK方案"></a>MTK方案</h2><h3 id="MTP-Pump-Express"><a href="#MTP-Pump-Express" class="headerlink" title="MTP Pump Express"></a>MTP Pump Express</h3><ul><li>带Plus（Pump Express2.0）：可以支持到9V/12V，可以达到12V/3A,输出功率&gt;15W。</li><li>不带Plus：充电电流不超过2A，输出功率&lt;10W(目前已经被划分为慢充)。</li><li>Pump Express 3.0：开始使用低压直流的快速充电方式，如5.8V/6A的输出标准，最大输出功率可达34.8W。是全球首款采用USB Type-C接口进行充电的快充方案，可直接绕过手机充电电路，电流直接流入电池，降低充电时的发热。</li></ul><h2 id="厂家快充"><a href="#厂家快充" class="headerlink" title="厂家快充"></a>厂家快充</h2><p>现在市面上各厂家的快充基本都是基于上述高通和MTK快充技术演变而来，套了个壳，换了个名。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> MTK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Getting Started With RecyclerView and CardView on Android</title>
      <link href="2017/11/08/Android/Getting-Started-With-RecyclerView-and-CardView-on-Android/"/>
      <url>2017/11/08/Android/Getting-Started-With-RecyclerView-and-CardView-on-Android/</url>
      
        <content type="html"><![CDATA[<blockquote><p>偶然看到这篇文章，觉得写得很好，简单明了，所以尝试将其翻译一下。</p></blockquote><p>如果你想创作一个用列表显示数据的Android应用，Android L提供了两个让你更容易实现的新特性：RecyclerView和CardView。通过用这些控件，可以很容易让你的app符合Google的Material Design规范。</p><p>创作APP时一个模板参考的好地方：<a href="https://go.redirectingat.com/?id=1342X589339&site=code.tutsplus.com&xs=1&isjs=1&url=https://codecanyon.net/category/mobile/android?_ga=2.255032513.873197305.1503543294-826134730.1503543294&xguid=6c32060c165aa0d81cc926f785d03c1a&xuuid=40b87ed972cd06dc4bfc1a62b8c59465&xsessid=e18f51adda215e4913eb634122cf8895&xcreo=0&xed=0&sref=https://code.tutsplus.com/tutorials/getting-started-with-recyclerview-and-cardview-on-android--cms-23465&xtz=-480">Envato market</a>。你可以找到成千上万的APP模板，从<a href="https://go.redirectingat.com/?id=1342X589339&site=code.tutsplus.com&xs=1&isjs=1&url=https://codecanyon.net/item/layar-tancep-youtube-app-for-android/5190062?_ga=2.248270926.873197305.1503543294-826134730.1503543294&xguid=6c32060c165aa0d81cc926f785d03c1a&xuuid=40b87ed972cd06dc4bfc1a62b8c59465&xsessid=e18f51adda215e4913eb634122cf8895&xcreo=0&xed=0&sref=https://code.tutsplus.com/tutorials/getting-started-with-recyclerview-and-cardview-on-android--cms-23465&xtz=-480">Youtube</a>到<a href="https://go.redirectingat.com/?id=1342X589339&site=code.tutsplus.com&xs=1&isjs=1&url=https://codecanyon.net/item/flappybot-an-obstacle-avoidance-game/6827330?_ga=2.248270926.873197305.1503543294-826134730.1503543294&xguid=6c32060c165aa0d81cc926f785d03c1a&xuuid=40b87ed972cd06dc4bfc1a62b8c59465&xsessid=e18f51adda215e4913eb634122cf8895&xcreo=0&xed=0&sref=https://code.tutsplus.com/tutorials/getting-started-with-recyclerview-and-cardview-on-android--cms-23465&xtz=-480">obstacleavoidance game</a>。</p><p>或者你可以尝试一下<a href="https://codecanyon.net/item/universal-full-multipurpose-android-app/6512720?_ga=2.217207135.873197305.1503543294-826134730.1503543294">通用的Android app模板</a>,它能为你创作任何种类app提供一个坚实的基础。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/recyclerview_cardview/Universal-Android-app.png" alt="Universal-Android-app"></p><a id="more"></a><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>为了继续，你应该使用最新版本Android Studio。你可以从<a href="http://developer.android.com/sdk/index.html">Android 开发者官网</a>获得它。</p><h2 id="支持老版本"><a href="#支持老版本" class="headerlink" title="支持老版本"></a>支持老版本</h2><p>在写这篇文章时，只有少于2%的Android设备运行在Android L上。无论怎样，多亏v7 Support Library，你能使用RecyclerView和CardView控件运行在老版本的安卓设备上面，通过在你工程中build.grade文件添加如下依赖片段实现：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">&#x27;com.android.support:cardview-v7:21.0.+&#x27;</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">&#x27;com.android.support:recyclerview-v7:21.0.+&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="创建CardView"><a href="#创建CardView" class="headerlink" title="创建CardView"></a>创建CardView</h2><p><em>CardView</em>是一个<em>ViewGroup</em>，像其他<em>ViewGroup</em>一样，它能通过Layout xml文件添加到你的 <em>Activity</em> 或者 <em>Fragment</em>。</p><p>为了创建一个空<em>CardView</em>，你应该添加如下代码片段到你的layout XML文件中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:card_view</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最为一个更实际的例子，咱们创建一个<em>LinearLayout</em>并将<em>CardView</em>作为子控件放在里面。<em>CardView</em>可以代表一个人，包含如下信息：</p><ul><li><em>TextView</em> - 显示人名</li><li><em>TextView</em> - 显示年纪</li><li><em>ImageView</em> - 显示照片</li></ul><p>xml内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:padding</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/cv&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/person_photo&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_alignParentLeft</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_alignParentTop</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/person_name&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_toRightOf</span>=<span class="string">&quot;@+id/person_photo&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_alignParentTop</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/person_age&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_toRightOf</span>=<span class="string">&quot;@+id/person_photo&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_below</span>=<span class="string">&quot;@+id/person_name&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果这个xml文件被用作<em>Activity</em>的layout，并且给<em>TextView</em>和ImageView*设置有意义的值，那么在Android设备上面它看起来应该像这个样子：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/recyclerview_cardview/device_2015.png" alt="device"></p><h2 id="创建RecyclerView"><a href="#创建RecyclerView" class="headerlink" title="创建RecyclerView"></a>创建RecyclerView</h2><h3 id="在Layout中定义它"><a href="#在Layout中定义它" class="headerlink" title="在Layout中定义它"></a>在Layout中定义它</h3><p>使用一个<em>RecyclerView</em>实例有一些复杂，但是在layout xml中定义它十分简单。可以定义如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/rv&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br></pre></td></tr></table></figure><p>通过如下代码片段在你的<em>Activity</em>中去获得句柄：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RecyclerView rv = (RecyclerView)findViewById(R.id.rv);</span><br></pre></td></tr></table></figure><p>如果你确定<em>RecyclerView</em>的大小不会改变，你可以添加如下语句：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rv.setHasFixedSize(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure><h3 id="使用LayoutManager"><a href="#使用LayoutManager" class="headerlink" title="使用LayoutManager"></a>使用LayoutManager</h3><p>和<em>ListView</em>不一样，<em>RecyclerView</em>需要一个<em>LayoutManger</em>去管理其子项的位置。你可以通过继承<em>RecyclerView.LayoutManager</em>类定义自己的<em>LayoutManager</em>。不过，大多数案子里面，你直接使用如下预定义的<em>LayoutManager</em>子类就可以了：</p><ul><li>LinearLayoutManager</li><li>GridLayoutManager</li><li>StaggeredGridLayoutManager<br>在这篇教程里，我将使用<em>LinearLayoutManager</em>，它默认将让你的<em>RecyclerView</em>看起来像一个<em>ListView</em>。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LinearLayoutManager llm = <span class="keyword">new</span> LinearLayoutManager(context);</span><br><span class="line">rv.setLayoutManager(llm);</span><br></pre></td></tr></table></figure><h3 id="定义内容"><a href="#定义内容" class="headerlink" title="定义内容"></a>定义内容</h3>和<em>ListView</em>一样，<em>RecyclerView</em>也需要一个适配器去接入数据。但是在创建适配器前，我们先创建我们需要的数据。创建一个简单的类来代表一个人然后写一个方法来初始化一个<em>Person</em>对象集：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    String age;</span><br><span class="line">    <span class="keyword">int</span> photoId;</span><br><span class="line"> </span><br><span class="line">    Person(String name, String age, <span class="keyword">int</span> photoId) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.photoId = photoId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">private</span> List&lt;Person&gt; persons;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// This method creates an ArrayList that has three Person objects</span></span><br><span class="line"><span class="comment">// Checkout the project associated with this tutorial on Github if</span></span><br><span class="line"><span class="comment">// you want to use the same images.</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initializeData</span><span class="params">()</span></span>&#123;</span><br><span class="line">    persons = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">&quot;Emma Wilson&quot;</span>, <span class="string">&quot;23 years old&quot;</span>, R.drawable.emma));</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">&quot;Lavery Maiss&quot;</span>, <span class="string">&quot;25 years old&quot;</span>, R.drawable.lavery));</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">&quot;Lillie Watts&quot;</span>, <span class="string">&quot;35 years old&quot;</span>, R.drawable.lillie));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建适配器"><a href="#创建适配器" class="headerlink" title="创建适配器"></a>创建适配器</h3>要创建一个<em>RecyclerView</em>可以使用的适配器，你必须继承<em>RecyclerView.Adapter</em>。这个适配器遵循<strong>View holder</strong>设计模式，也就意味着你需要定义一个类继承与<em>RecyclerView.ViewHolder</em>。这种模式最大限度减少调用<em>findViewByIdea</em>方法。</li></ul><p>前面我们已经在 XML Layout中定义了一个<em>CardView</em>代表一个人。我们将重复利用此布局文件。在我们自定义<em>ViewHolder</em>的构造方法中，初始化此视图属于<em>RecyclerView</em>的子项。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RVAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RVAdapter</span>.<span class="title">PersonViewHolder</span>&gt;</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;      </span><br><span class="line">        CardView cv;</span><br><span class="line">        TextView personName;</span><br><span class="line">        TextView personAge;</span><br><span class="line">        ImageView personPhoto;</span><br><span class="line"> </span><br><span class="line">        PersonViewHolder(View itemView) &#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cv = (CardView)itemView.findViewById(R.id.cv);</span><br><span class="line">            personName = (TextView)itemView.findViewById(R.id.person_name);</span><br><span class="line">            personAge = (TextView)itemView.findViewById(R.id.person_age);</span><br><span class="line">            personPhoto = (ImageView)itemView.findViewById(R.id.person_photo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，为自定义适配器增加一个构造方法来处理<em>RecyclerView</em>显示的数据。我们的数据有<em>Person</em>对象集组成，添加如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; persons;</span><br><span class="line"> </span><br><span class="line">RVAdapter(List&lt;Person&gt; persons)&#123;</span><br><span class="line">    <span class="keyword">this</span>.persons = persons;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>RecyclerView.Adapter</em>有三个抽象方法必须被重写。咱们从<em>getItemCount</em>方法开始。这个方法返回子项存在数据的数量。对于我们由<em>List</em>形成的数据，我们只需要调用<em>List</em>对象的*size()*方法即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> persons.size();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，重写<em>onCreateViewHolder</em>方法。正如方法名所展示，当自定义<em>ViewHolder</em>需要被初始化时调用。我们指明<em>RecyclerView</em>每个子项使用的布局。通过使用<em>LayoutInflater</em>完成，传递着结果到自定义的<em>ViewHolder</em>的构造方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PersonViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup viewGroup, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    View v = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.item, viewGroup, <span class="keyword">false</span>);</span><br><span class="line">    PersonViewHolder pvh = <span class="keyword">new</span> PersonViewHolder(v);</span><br><span class="line">    <span class="keyword">return</span> pvh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重写<em>onBindViewHolder</em>方法去指明每一个<em>RecyclerView</em>子项的内容。这个反复与<em>ListView</em>的适配器的<em>getView</em>方法十分相似。在我们的例子中，你必须设置<em>CardView</em>中的名字、年纪以及照片。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(PersonViewHolder personViewHolder, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    personViewHolder.personName.setText(persons.get(i).name);</span><br><span class="line">    personViewHolder.personAge.setText(persons.get(i).age);</span><br><span class="line">    personViewHolder.personPhoto.setImageResource(persons.get(i).photoId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最好，你需要重写<em>onAttachedToRecyclerView</em>方法。我们就简单实用地直接调用父类的实现。</p><blockquote><p>注：新版本已经不需要重写此方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttachedToRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onAttachedToRecyclerView(recyclerView);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实用适配器"><a href="#实用适配器" class="headerlink" title="实用适配器"></a>实用适配器</h3><p>现在适配器准备好了，接下来就是让<em>Activity</em>通过适配器构造函数和<em>RecyclerView</em>的<em>setAdapter</em>去初始化和使用这个适配器了。添加如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RVAdapter adapter = <span class="keyword">new</span> RVAdapter(persons);</span><br><span class="line">rv.setAdapter(adapter);</span><br></pre></td></tr></table></figure><h3 id="编译及运行"><a href="#编译及运行" class="headerlink" title="编译及运行"></a>编译及运行</h3><p>当你在你的Android设备上运行这个例程时，你将会看类似如下图片的结果：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/recyclerview_cardview/device-2015-02.png" alt="device"></p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>在这篇教程，你已经学会了怎么去使用在Android L中引入的<em>CardView</em>和<em>RecyclerView</em>控件。你也明白了在Material Design应用中怎么去使用这些控件。注意：通过<em>RecyclerView</em>可以做几乎所有<em>ListView</em>所做的事，不过为了更少的代码，使用<em>ListView</em>仍然是一个比较好的选择。</p><p>你可以参考Android Developers reference去获得更多关于<em>CardView</em>和<em>RecyclerView</em>类的信息。</p><p>最好，如果你想更快速地开发你的app，不要忘记在Envato Market查看Android app templates。</p><blockquote><p><a href="https://code.tutsplus.com/tutorials/getting-started-with-recyclerview-and-cardview-on-android--cms-23465">原文章地址。</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Application </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纸币器和MDB协议</title>
      <link href="2017/11/08/Discovery/MDB-ICP-protocol/"/>
      <url>2017/11/08/Discovery/MDB-ICP-protocol/</url>
      
        <content type="html"><![CDATA[<h2 id="MDB协议"><a href="#MDB协议" class="headerlink" title="MDB协议"></a>MDB协议</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>MDB/ICP协议为一个主从接口的串口通信标准的协议， 规定波特率为9600bps，总线有唯一主机（vending machine controller, VMC）和最多32个从机外设，每个外设设有唯一的地址和命令，且由主机初始化。</p><p>电源上电、总线复位或外设收到一个复位命令，所对应的外设都被禁止。在顺序初始化外设期间，VMC通过外设的应答来选择被外设所支持的特征。</p><blockquote><p>协议推荐所以主控制器VMC和外设都需支持所有低等级标准</p></blockquote><a id="more"></a><h3 id="通信格式"><a href="#通信格式" class="headerlink" title="通信格式"></a>通信格式</h3><h4 id="字节格式"><a href="#字节格式" class="headerlink" title="字节格式"></a>字节格式</h4><p>一个字节定义为11位：1个起始位+8个数据位+1个模式位+1个停止位。</p><ul><li>VMC发送数据到外设：模式位 = 1 表示为地址字节， = 0 表示为数据字节</li><li>外设发送数据到VMC：模式位 = 1 表示所有字节发送完成</li></ul><h4 id="块格式"><a href="#块格式" class="headerlink" title="块格式"></a>块格式</h4><h5 id="主到从"><a href="#主到从" class="headerlink" title="主到从"></a>主到从</h5><p>主控制器VMC发送给从机的数据格式：1个地址字节+n个数据字节+1个校验和节（最大不超过36个字节）。地址字节由 高5位外设地址+低三位外设命令组成。</p><p>主控制器响应外设时发送 ：ACK（应答）、NAK（不应答）、RET（重发）。5ms超时不响应相当于NAK。如从机5ms无响应，VMC应重发相同或不同命令， 知道从机响应或达到最大响应时间（硬币器2S、纸币器5S）。在此期间VMC应该同时访问其他外设。</p><p><strong>主控器VMC可以通过拉低发送线100ms以上对总线进行复位。</strong></p><h4 id="从到主"><a href="#从到主" class="headerlink" title="从到主"></a>从到主</h4><p>从机发送到主控制器的数据格式：1数据块+1字节校验和（最大不超过36字节）。</p><p>从机外设响应主控制器发送数据时，主控制器VMC在5ms无响应时间内必须响应ACK、NAK或RET。否则外设需要重发数据或者在下一次会话时附加上数据。</p><h4 id="校验和"><a href="#校验和" class="headerlink" title="校验和"></a>校验和</h4><p>校验和为所有地址及数据字节的累加和（不包含校验和字节）。</p><h4 id="总线复位"><a href="#总线复位" class="headerlink" title="总线复位"></a>总线复位</h4><p>主控器VMC可以通过上拉激活发送线100ms以上对所有外设进行复位，复位后外设处于上电复位状态。</p><h4 id="一些标准"><a href="#一些标准" class="headerlink" title="一些标准"></a>一些标准</h4><p>响应码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ACK - 00H   RET - AAH   NAK -  FFH</span><br></pre></td></tr></table></figure><p>外设地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Address             Definition  </span><br><span class="line">-------------------------------------------------</span><br><span class="line">00000xxxB    (00H)  Reserved <span class="keyword">for</span> VMC </span><br><span class="line">00001xxxB    (08H)  Changer  </span><br><span class="line">00010xxxB    (10H)  Cashless Device <span class="comment">#1  </span></span><br><span class="line">00011xxxB    (18H)  Communications Gateway </span><br><span class="line">00100xxxB    (20H)  Display  </span><br><span class="line">00101xxxB    (28H)  Energy Management System </span><br><span class="line">00110xxxB    (30H)  Bill Validator  </span><br><span class="line">00111xxxB    (38H)  Reserved <span class="keyword">for</span> Future Standard Peripheral</span><br><span class="line">01000xxxB    (40H)  Universal Satellite Device <span class="comment">#1 </span></span><br><span class="line">01001xxxB    (48H)  Universal Satellite Device <span class="comment">#2 </span></span><br><span class="line">01010xxxB    (50H)  Universal Satellite Device <span class="comment">#3 </span></span><br><span class="line">01011xxxB    (58H)  Coin Hopper or Tube - Dispenser </span><br><span class="line">01100xxxB    (60H)  Cashless Device <span class="comment">#2</span></span><br><span class="line">01101xxxB    (68H)  Reserved <span class="keyword">for</span> Future Standard Peripherals</span><br><span class="line">...</span><br><span class="line">11011xxxB    (D8H)  Reserved <span class="keyword">for</span> Future Standard Peripherals</span><br><span class="line">11100xxxB    (E0H)  Experimental Peripheral <span class="comment">#1</span></span><br><span class="line">11101xxxB    (E8H)  Experimental Peripheral <span class="comment">#2 </span></span><br><span class="line">11110xxxB    (F0H)  Vending Machine Specific Peripheral <span class="comment">#1 </span></span><br><span class="line">11111xxxB    (F8H)  Vending Machine Specific Peripheral <span class="comment">#2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Protocol </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Four years</title>
      <link href="2017/09/19/Life/four-years/"/>
      <url>2017/09/19/Life/four-years/</url>
      
        <content type="html"><![CDATA[<p>  ……</p><a id="more"></a><p>亲爱的领导老婆大人，</p><p>我不浪漫，而且除了长得帅点，现在勉强能赚点钱外，满身都是缺点。</p><p>但我爱你，爱到了血液里！</p><p>老婆大人你是我最信任的人，所以我把以前害怕隐藏得很深的毛病全暴露在了你的面前，可能现在离你刚爱上我时形象已经一落千丈了（[无奈]，[允悲] - 这是两个表情）。感谢老婆大人。</p><p>然后，希望老婆大人能继续包容我， 监督我，促进我进步。</p><p>老婆，我爱你。 我们继续一起进步，一起变得越来越幸福，一起走到白头！</p><p>在这四周年之际，我用我的心和血做了这么一个电子礼物，喜欢老婆大人喜欢。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/life/ForYou.jpg" alt="ForYou"></p><blockquote><p>等以后回家了， 我们去打印一张大大的海报贴在家里</p></blockquote><p>– 写于 2017-09-19</p>]]></content>
      
      
      <categories>
          
          <category> Balderdash </category>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过自定义侧边导航栏的RecyclerView动态加载布局</title>
      <link href="2017/08/18/Android/Dynamic-loading-layout-by-recyclerview-item/"/>
      <url>2017/08/18/Android/Dynamic-loading-layout-by-recyclerview-item/</url>
      
        <content type="html"><![CDATA[<h2 id="准备布局文件"><a href="#准备布局文件" class="headerlink" title="准备布局文件"></a>准备布局文件</h2><p>布局一：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:context</span>=<span class="string">&quot;me.huaqianlee.forme.ToDoFragment&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">android:textSize</span>=<span class="string">&quot;15sp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;This is Todo main view layout!&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>布局二：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:context</span>=<span class="string">&quot;me.huaqianlee.forme.ToDoFragment&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span> <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">android:scaleType</span>=<span class="string">&quot;fitCenter&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:src</span>=<span class="string">&quot;@drawable/lee&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="准备Fragment，加载布局"><a href="#准备Fragment，加载布局" class="headerlink" title="准备Fragment，加载布局"></a>准备Fragment，加载布局</h2><p>布局一：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateEventFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, <span class="meta">@Nullable</span> ViewGroup container, <span class="meta">@Nullable</span> Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_date_event, container, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>布局二：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ToDoFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, <span class="meta">@Nullable</span> ViewGroup container, <span class="meta">@Nullable</span> Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_todo, container, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现切换布局方法"><a href="#实现切换布局方法" class="headerlink" title="实现切换布局方法"></a>实现切换布局方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 切换主界面视图工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainViewSwitch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchMainView</span><span class="params">(BaseActivity activity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (SelectedNavItem.getSlectedNavItem()) &#123;</span><br><span class="line">            <span class="keyword">case</span> SelectedNavItem.TODO:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> ToDoFragment(),activity);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SelectedNavItem.DATEEVENT:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> DateEventFragment(), activity);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">replaceFragment</span><span class="params">(Fragment fragment, BaseActivity activity)</span> </span>&#123;</span><br><span class="line">        FragmentManager fragmentManager = activity.getSupportFragmentManager();</span><br><span class="line">        FragmentTransaction transaction = fragmentManager.beginTransaction();</span><br><span class="line">        transaction.replace(R.id.main_view_layout, fragment);</span><br><span class="line">        transaction.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="切换布局"><a href="#切换布局" class="headerlink" title="切换布局"></a>切换布局</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">adapter.setOnItemClickListener(<span class="keyword">new</span> NavFuncAdapter.OnItemClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MainViewSwitch().switchMainView(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这篇博文只是一个简单粗糙的总结， RecyclerView点击事件的实现可以查看博客：<a href="">RecyclerView选中效果、Item点击事件的实现</a>。</p><h2 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h2><p><a href="https://github.com/huaqianlee/ForMe">ForMe</a></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/app/dynamic_layout_effect.gif" alt="effect"></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Application </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>按返回键只关闭DrawerLayout侧边栏不退出Activity的实现方案</title>
      <link href="2017/08/18/Android/hides-navigation-in-drawerlayou/"/>
      <url>2017/08/18/Android/hides-navigation-in-drawerlayou/</url>
      
        <content type="html"><![CDATA[<p>今天写自己的练习APP时，发现侧边导航栏可见时，我按返回键，Activity直接退出了， 可是我想要的是只是关闭侧边栏，研究了一下，其实解决办法挺简单。</p><p>只需要在Activity中重写onBackPressed()即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">private DrawerLayout mlayout; </span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void <span class="function"><span class="title">onBackPressed</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> (mlayout.isDrawerOpen(findViewById(R.id.nav_left_layout)))</span><br><span class="line">        mlayout.closeDrawers();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        super.onBackPressed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># R.id.nav_left_layout为侧边栏显示部分顶层Layout</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Application </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RecyclerView Item选中效果及点击事件的实现</title>
      <link href="2017/08/17/Android/the-selected-effect-of-recyclerview-item/"/>
      <url>2017/08/17/Android/the-selected-effect-of-recyclerview-item/</url>
      
        <content type="html"><![CDATA[<p>最近需要对RecyclerView的Item实现选中效果和Item点击事件，尝试了两种方式。</p><h1 id="受限的简易实现方案"><a href="#受限的简易实现方案" class="headerlink" title="受限的简易实现方案"></a>受限的简易实现方案</h1><h2 id="布局文件"><a href="#布局文件" class="headerlink" title="布局文件"></a>布局文件</h2><p>首先在Item的布局文件中加入如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">android:clickable=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:focusable=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:background=<span class="string">&quot;@drawable/selector_item_selected&quot;</span></span><br></pre></td></tr></table></figure><p>完成selector_item_selected.xml：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;selector xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span><br><span class="line">    &lt;item android:state_focused=<span class="string">&quot;true&quot;</span> android:drawable=<span class="string">&quot;@drawable/select&quot;</span>/&gt;</span><br><span class="line">    &lt;item android:state_focused=<span class="string">&quot;false&quot;</span> android:drawable=<span class="string">&quot;@drawable/un_select&quot;</span>/&gt;</span><br><span class="line">&lt;/selector&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p>实现select和unselect资源（也可以直接找两张图片）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unselect.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span><br><span class="line">    &lt;gradient</span><br><span class="line">            android:startColor=<span class="string">&quot;#FFF&quot;</span></span><br><span class="line">            android:endColor=<span class="string">&quot;#FFF&quot;</span></span><br><span class="line">            android:centerColor=<span class="string">&quot;#FFF&quot;</span></span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/shape&gt;</span><br><span class="line"><span class="comment"># select.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span> &gt;</span><br><span class="line">    &lt;gradient</span><br><span class="line">            android:startColor=<span class="string">&quot;@color/colorPrimary&quot;</span></span><br><span class="line">            android:endColor=<span class="string">&quot;@color/colorPrimary&quot;</span></span><br><span class="line">            android:centerColor=<span class="string">&quot;@color/colorPrimary&quot;</span></span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/shape&gt;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>只需要onBindViewHolder方法中添加如下代码即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    holder.itemView.setSelected(position == SelectedNavItem.getSlectedNavItem()); </span><br><span class="line">    <span class="comment">/*item点击事件的一种实现方式*/</span></span><br><span class="line">    holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    holder.cardView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="更实用的实现方案"><a href="#更实用的实现方案" class="headerlink" title="更实用的实现方案"></a>更实用的实现方案</h1><p>上面的方案有挺多局限性， 这个方案主要通过注册按键事件来实现。</p><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>删掉上一种方案加入属性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">android:clickable=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:focusable=<span class="string">&quot;true&quot;</span></span><br><span class="line">android:background=<span class="string">&quot;@drawable/selector_item_selected&quot;</span></span><br></pre></td></tr></table></figure><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>在adpter中定义可在其他地方使用的OnItemClickListener接口，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> OnItemClickListener onItemClickListener = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*暴露给外部的方法*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickListener</span><span class="params">(OnItemClickListener listener)</span> </span>&#123;</span><br><span class="line">    onItemClickListener = listener;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现选中效果，然后为每个itemview添加并注册点击事件，并将点击事件传给外面的调用者，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="keyword">final</span> <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置选中状态*/</span></span><br><span class="line">    <span class="keyword">if</span> (position == SelectedNavItem.getSlectedNavItem()) &#123;</span><br><span class="line">        holder.itemView.setBackground(mContext.getResources().getDrawable(R.drawable.selected));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        holder.itemView.setBackground(mContext.getResources().getDrawable(R.drawable.un_select));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            onItemClickListener.onItemClick(holder.itemView, position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Activity中的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adapter.setOnItemClickListener(<span class="keyword">new</span> NavFuncAdapter.OnItemClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        SelectedNavItem.setSlectedNavItem(position);<span class="comment">//自定义的方法，告诉adpter被点击item</span></span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h1><p><a href="https://github.com/huaqianlee/ForMe">ForMe</a></p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/forme/select_item_effct.gif" alt="nav_item_selected"></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Application </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于DrawerLayout打造卡片式Navigation</title>
      <link href="2017/08/17/Android/the-card-navigation-base-on-drawerlayout/"/>
      <url>2017/08/17/Android/the-card-navigation-base-on-drawerlayout/</url>
      
        <content type="html"><![CDATA[<p>前段时间开始了利用空闲时间做一个练习APP <a href="https://github.com/huaqianlee/ForMe">ForMe</a>。根据设计APP需要通过左边导航栏切换主界面功能，自己平时在使用Google的NewsTab，觉得很不错，就准备参考其界面来设计。</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/app/newstab_view.jpg" alt="newsTab"></p><a id="more"></a><h2 id="尝试通过NavigationView实现"><a href="#尝试通过NavigationView实现" class="headerlink" title="尝试通过NavigationView实现"></a>尝试通过NavigationView实现</h2><p>首选的是通过DrawerLayout和NavigationView来实现，首先引入依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">&#x27;com.android.support:design:25.3.1&#x27;</span></span><br><span class="line">compile <span class="string">&#x27;de.hdodenhof:circleimageview:2.1.0&#x27;</span>  // 对头布局头像处理提供支持</span><br></pre></td></tr></table></figure><p>然后实现侧边栏头布局：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">                android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                android:layout_height=<span class="string">&quot;180dp&quot;</span></span><br><span class="line">                android:padding=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">                android:background=<span class="string">&quot;?attr/colorPrimary&quot;</span>&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;de.hdodenhof.circleimageview.CircleImageView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/nav_icon&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;70dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;70dp&quot;</span></span><br><span class="line">            android:layout_centerInParent=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:src=<span class="string">&quot;@drawable/lee&quot;</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;TextView android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">              android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">              android:textColor=<span class="string">&quot;#fff&quot;</span></span><br><span class="line">              android:layout_above=<span class="string">&quot;@+id/mail&quot;</span></span><br><span class="line">              android:id=<span class="string">&quot;@+id/usr&quot;</span></span><br><span class="line">              android:textSize=<span class="string">&quot;15sp&quot;</span></span><br><span class="line">              android:text=<span class="string">&quot;@string/me&quot;</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;TextView android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">              android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">              android:id=<span class="string">&quot;@+id/mail&quot;</span></span><br><span class="line">              android:text=<span class="string">&quot;huaqianlee@gmail.com&quot;</span></span><br><span class="line">              android:layout_alignParentBottom=<span class="string">&quot;true&quot;</span></span><br><span class="line">              android:textSize=<span class="string">&quot;15sp&quot;</span></span><br><span class="line">              android:textColor=<span class="string">&quot;#fff&quot;</span></span><br><span class="line">              /&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure><p>实现菜单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;menu xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span><br><span class="line">    &lt;group android:checkableBehavior=<span class="string">&quot;single&quot;</span>&gt; //指定这一组菜单项单选 , group可以添加横线</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">&quot;@+id/nav_call&quot;</span></span><br><span class="line">                android:icon=<span class="string">&quot;@drawable/nav_call&quot;</span></span><br><span class="line">                android:title=<span class="string">&quot;Call&quot;</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">&quot;@+id/nav_friends&quot;</span></span><br><span class="line">                android:icon=<span class="string">&quot;@drawable/nav_friends&quot;</span></span><br><span class="line">                android:title=<span class="string">&quot;Friends&quot;</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">&quot;@+id/nav_location&quot;</span></span><br><span class="line">                android:icon=<span class="string">&quot;@drawable/nav_location&quot;</span></span><br><span class="line">                android:title=<span class="string">&quot;Location&quot;</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">&quot;@+id/nav_mail&quot;</span></span><br><span class="line">                android:icon=<span class="string">&quot;@drawable/nav_mail&quot;</span></span><br><span class="line">                android:title=<span class="string">&quot;Mail&quot;</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">&quot;@+id/nav_task&quot;</span></span><br><span class="line">                android:icon=<span class="string">&quot;@drawable/nav_task&quot;</span></span><br><span class="line">                android:title=<span class="string">&quot;Tasks&quot;</span>/&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure><p>引入布局：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;android.support.v4.widget.DrawerLayout</span><br><span class="line">        xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">        xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">        xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">        android:id=<span class="string">&quot;@+id/drawer_layout&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        tools:context=<span class="string">&quot;me.huaqianlee.forme.MainActivity&quot;</span>&gt;</span><br><span class="line">    &lt;!--xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/me.huaqianlee.forme&quot;</span>--&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">            android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">                android:id=<span class="string">&quot;@+id/tool_bar&quot;</span></span><br><span class="line">                android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                android:layout_height=<span class="string">&quot;?attr/actionBarSize&quot;</span></span><br><span class="line">                android:background=<span class="string">&quot;@color/colorPrimary&quot;</span></span><br><span class="line">                android:theme=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;</span></span><br><span class="line">                app:popupTheme=<span class="string">&quot;@style/Theme.AppCompat.Light&quot;</span></span><br><span class="line">                app:layout_scrollFlags=<span class="string">&quot;enterAlways|snap|scroll&quot;</span></span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/android.support.v7.widget.Toolbar&gt;</span><br><span class="line">    &lt;/android.support.design.widget.CoordinatorLayout&gt;        </span><br><span class="line">    &lt;android.support.design.widget.NavigationView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/nav_view&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        app:headerLayout=<span class="string">&quot;@layout/nav_header&quot;</span></span><br><span class="line">        app:menu=<span class="string">&quot;@menu/nav_menu&quot;</span></span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p>使能侧边栏提示图标：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DrawerLayout mlayout = (DrawerLayout) findViewById(R.id.drawer_layout);</span><br><span class="line">ActionBar actionBar = getSupportActionBar();//获得ToolBar</span><br><span class="line"><span class="keyword">if</span> (actionBar != null) &#123;</span><br><span class="line">    actionBar.setDisplayHomeAsUpEnabled(<span class="literal">true</span>);</span><br><span class="line">    actionBar.setHomeAsUpIndicator(R.drawable.ic_menu); //设置图标，默认是一个箭头</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，这样子效果就出来了：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/app/navigation_view.jpg" alt="nav_view"></p><p>可是这样子只能做到菜单式的侧边栏，不能实现我的需求。我尝试着找到一种方式来实现卡片式显示，但是最终没能找到。</p><h2 id="自定义卡片式侧边栏"><a href="#自定义卡片式侧边栏" class="headerlink" title="自定义卡片式侧边栏"></a>自定义卡片式侧边栏</h2><p>既然用google提供库文件不能实现，就只好选择自定义来实现了.</p><p>在DrawerLayout中自己定义布局，将侧边栏头布局引入，然后通过RecyclerView来实现卡片式显示.<br>在开始前，首先得引入相应的依赖，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">&#x27;com.android.support:recyclerview-v7:25.3.1&#x27;</span></span><br><span class="line">compile <span class="string">&#x27;com.android.support:cardview-v7:25.3.1&#x27;</span></span><br></pre></td></tr></table></figure><p>实现侧边栏的布局：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;android.support.v4.widget.DrawerLayout</span><br><span class="line">        xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">        xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">        xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">        android:id=<span class="string">&quot;@+id/drawer_layout&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        tools:context=<span class="string">&quot;me.huaqianlee.forme.MainActivity&quot;</span>&gt;</span><br><span class="line">    &lt;!--xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/me.huaqianlee.forme&quot;</span>--&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">            android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">                android:id=<span class="string">&quot;@+id/tool_bar&quot;</span></span><br><span class="line">                android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                android:layout_height=<span class="string">&quot;?attr/actionBarSize&quot;</span></span><br><span class="line">                android:background=<span class="string">&quot;@color/colorPrimary&quot;</span></span><br><span class="line">                android:theme=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;</span></span><br><span class="line">                app:popupTheme=<span class="string">&quot;@style/Theme.AppCompat.Light&quot;</span></span><br><span class="line">                app:layout_scrollFlags=<span class="string">&quot;enterAlways|snap|scroll&quot;</span></span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/android.support.v7.widget.Toolbar&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;FrameLayout</span><br><span class="line">                android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        &gt;</span><br><span class="line">            </span><br><span class="line">            &lt;ImageView</span><br><span class="line">                    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                    android:src=<span class="string">&quot;@drawable/lee&quot;</span>/&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/FrameLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;RelativeLayout android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                    android:layout_gravity=<span class="string">&quot;start&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;RelativeLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">                        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                        android:layout_height=<span class="string">&quot;180dp&quot;</span></span><br><span class="line">                        android:id=<span class="string">&quot;@+id/nav_layout&quot;</span></span><br><span class="line">                        android:padding=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">                        android:background=<span class="string">&quot;?attr/colorPrimary&quot;</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;de.hdodenhof.circleimageview.CircleImageView</span><br><span class="line">                    android:id=<span class="string">&quot;@+id/nav_icon&quot;</span></span><br><span class="line">                    android:layout_width=<span class="string">&quot;70dp&quot;</span></span><br><span class="line">                    android:layout_height=<span class="string">&quot;70dp&quot;</span></span><br><span class="line">                    android:layout_centerInParent=<span class="string">&quot;true&quot;</span></span><br><span class="line">                    android:src=<span class="string">&quot;@drawable/lee&quot;</span>/&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;TextView android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">                      android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">                      android:textColor=<span class="string">&quot;#fff&quot;</span></span><br><span class="line">                      android:layout_above=<span class="string">&quot;@+id/mail&quot;</span></span><br><span class="line">                      android:id=<span class="string">&quot;@+id/usr&quot;</span></span><br><span class="line">                      android:textSize=<span class="string">&quot;15sp&quot;</span></span><br><span class="line">                      android:text=<span class="string">&quot;@string/me&quot;</span>/&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;TextView android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">                      android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">                      android:id=<span class="string">&quot;@+id/mail&quot;</span></span><br><span class="line">                      android:text=<span class="string">&quot;huaqianlee@gmail.com&quot;</span></span><br><span class="line">                      android:layout_alignParentBottom=<span class="string">&quot;true&quot;</span></span><br><span class="line">                      android:textSize=<span class="string">&quot;15sp&quot;</span></span><br><span class="line">                      android:textColor=<span class="string">&quot;#fff&quot;</span></span><br><span class="line">            /&gt;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        &lt;/RelativeLayout&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;FrameLayout</span><br><span class="line">                android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                android:background=<span class="string">&quot;#fff&quot;</span></span><br><span class="line">                android:layout_below=<span class="string">&quot;@+id/nav_layout&quot;</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">                    android:id=<span class="string">&quot;@+id/nav_recycler_view&quot;</span></span><br><span class="line">                    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                    android:layout_height=<span class="string">&quot;match_parent&quot;</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;/android.support.v7.widget.RecyclerView&gt;</span><br><span class="line">        &lt;/FrameLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/RelativeLayout&gt;</span><br><span class="line">&lt;/android.support.v4.widget.DrawerLayout&gt;</span><br></pre></td></tr></table></figure><p>在写相关代码之前，先写好卡片的布局文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;android.support.v7.widget.CardView</span><br><span class="line">        xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">        xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_margin=<span class="string">&quot;2dp&quot;</span></span><br><span class="line">        app:cardCornerRadius=<span class="string">&quot;4dp&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">            android:id=<span class="string">&quot;@+id/nav_func_layout&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:background=<span class="string">&quot;#fff&quot;</span></span><br><span class="line">            android:orientation=<span class="string">&quot;vertical&quot;</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;ImageView</span><br><span class="line">                android:id=<span class="string">&quot;@+id/nav_func_image&quot;</span> android:layout_margin=<span class="string">&quot;10dp&quot;</span> android:layout_width=<span class="string">&quot;match_parent&quot;</span> android:layout_height=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">                android:background=<span class="string">&quot;@color/colorPrimary&quot;</span></span><br><span class="line">                android:scaleType=<span class="string">&quot;centerCrop&quot;</span>/&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">                android:id=<span class="string">&quot;@+id/nav_func_name&quot;</span></span><br><span class="line">                android:layout_margin=<span class="string">&quot;5dp&quot;</span></span><br><span class="line">                android:textSize=<span class="string">&quot;16sp&quot;</span></span><br><span class="line">                android:layout_gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">                android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">                android:layout_height=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/android.support.v7.widget.CardView&gt;</span><br></pre></td></tr></table></figure><p>接下来就该卡片显示（RecylerView）的代码了。<br>首先实现卡片bean：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package me.huaqianlee.forme.bean;</span><br><span class="line"></span><br><span class="line">public class Func &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private int imageId;</span><br><span class="line"></span><br><span class="line">    public <span class="function"><span class="title">Func</span></span>()&#123;&#125;</span><br><span class="line">    public Func (String name, int imageId) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String <span class="function"><span class="title">getName</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int <span class="function"><span class="title">getImageId</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setImageId(int imageId) &#123;</span><br><span class="line">        this.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现Adapter：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">public class NavFuncAdapter extends RecyclerView.Adapter&lt;NavFuncAdapter.ViewHolder&gt; &#123;</span><br><span class="line">    private Context mContext;</span><br><span class="line">    private List&lt;Func&gt; mLists;</span><br><span class="line"></span><br><span class="line">    public NavFuncAdapter(List&lt;Func&gt; lists) &#123;</span><br><span class="line">        mLists = lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mContext == null) &#123;</span><br><span class="line">            mContext = parent.getContext();</span><br><span class="line">        &#125;</span><br><span class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.func_item, parent, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">return</span> new ViewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onBindViewHolder(ViewHolder holder, int position) &#123;</span><br><span class="line">        Func func = mLists.get(position);</span><br><span class="line">        holder.funcName.setText(func.getName());</span><br><span class="line">        Glide.with(mContext).load(func.getImageId()).into(holder.funcImage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int <span class="function"><span class="title">getItemCount</span></span>() &#123;</span><br><span class="line">          <span class="built_in">return</span> mLists.size();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public class ViewHolder extends RecyclerView.ViewHolder &#123;</span><br><span class="line">        CardView cardView;</span><br><span class="line">        ImageView funcImage;</span><br><span class="line">        TextView funcName;</span><br><span class="line"></span><br><span class="line">        public ViewHolder(View itemView) &#123;</span><br><span class="line">            super(itemView);</span><br><span class="line">            cardView = (CardView) itemView;</span><br><span class="line">            funcImage = (ImageView) itemView.findViewById(R.id.nav_func_image);</span><br><span class="line">            funcName = (TextView) itemView.findViewById(R.id.nav_func_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加卡片显示代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化卡片</span></span><br><span class="line">private Func [] funcs = &#123;new Func (<span class="string">&quot;Call&quot;</span>,R.drawable.nav_call),new Func(<span class="string">&quot;Friends&quot;</span>,R.drawable.nav_friends),new Func(<span class="string">&quot;Location&quot;</span>,R.drawable.nav_location),</span><br><span class="line">new Func(<span class="string">&quot;Mail&quot;</span>, R.drawable.nav_mail), new Func(<span class="string">&quot;Tasks&quot;</span>,R.drawable.nav_task)&#125;;</span><br><span class="line">private void <span class="function"><span class="title">initFunc</span></span>() &#123;</span><br><span class="line">    funcList.clear();</span><br><span class="line">    Func toDoFunc = new Func();</span><br><span class="line">    toDoFunc.setImageId(R.drawable.todo_icon);</span><br><span class="line">    toDoFunc.setName(<span class="string">&quot;ToDO&quot;</span>);</span><br><span class="line">    funcList.add(toDoFunc);</span><br><span class="line"></span><br><span class="line">    Func toDoFunc2 = new Func(<span class="string">&quot;Lee&quot;</span>, R.drawable.lee);</span><br><span class="line">    funcList.add(toDoFunc2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (int i = 0; i&lt;funcs.length;i++) &#123;</span><br><span class="line">        funcList.add(funcs[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># RecyclerView显示</span></span><br><span class="line">initFunc();</span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(R.id.nav_recycler_view);</span><br><span class="line">GridLayoutManager layoutManager = new GridLayoutManager(this,2);</span><br><span class="line">recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">NavFuncAdapter adapter = new NavFuncAdapter(funcList);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br></pre></td></tr></table></figure><p>这样子就实现了卡片式侧边栏了，效果如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/nav_card_p.jpg" alt="nav_custom"></p><p>Item选中效果的实现方式见：<a href="http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/">RecyclerView选中效果的实现</a> .</p><p>今天先这样子粗糙地写这篇博客，后续完善了有时间再更新一下。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Application </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>no no no, go go go</title>
      <link href="2017/07/20/Life/no-no-no-go-go-go/"/>
      <url>2017/07/20/Life/no-no-no-go-go-go/</url>
      
        <content type="html"><![CDATA[<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/life/bing.jpg" alt="bing"></p><p>最近工作一忙起来，自己又懈怠了， 回家啥都不想做，大多数时候都是锻炼一下，然后撸两把王者，就睡觉了。 好忧伤，人越来越没有以前的激情了， 有时候都在想接受现状，拿着不算太差的工资，好好上班，不用花时间去折腾学习了。这种想法好可怕！</p><p>调整调整！</p>]]></content>
      
      
      <categories>
          
          <category> Balderdash </category>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MTK Modem 问题集</title>
      <link href="2017/07/12/Android/MTK-Modem-%E9%97%AE%E9%A2%98%E9%9B%86/"/>
      <url>2017/07/12/Android/MTK-Modem-%E9%97%AE%E9%A2%98%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>最近开始做MTK相关的工作，在第一步编译Modem时就遇到了挺多问题。特在此文整理和Modem相关的问题。</p><h1 id="编译相关问题"><a href="#编译相关问题" class="headerlink" title="编译相关问题"></a>编译相关问题</h1><a id="more"></a><h2 id="编译权限问题"><a href="#编译权限问题" class="headerlink" title="编译权限问题"></a>编译权限问题</h2><p>编译时提示如下权限问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">*******************************************</span><br><span class="line">* [OS]                : Linux</span><br><span class="line">* [PERL]              : v5.10.1 or v5.14.2</span><br><span class="line">* [MAKE]              : GNU Make v3.81</span><br><span class="line">* [SHELL]             : GNU bash v4.1.5</span><br><span class="line">* [GCC-ARM-NONE-EABI] : v4.6.2 or above</span><br><span class="line">* [NATIVE GCC(UBUNTU)]: v4.5 or above</span><br><span class="line"></span><br><span class="line">*******************************************</span><br><span class="line"> Start checking current Build Environment  </span><br><span class="line">*******************************************</span><br><span class="line">* [PERL]              : v5.14.2            [OK] !!!</span><br><span class="line">* [MAKE]              : GNU Make v3.81     [OK] !!!</span><br><span class="line">* [SHELL]             : GNU bash v4.2.25    [HIGHER THAN RECOMMENDED] !!!</span><br><span class="line">sh: 1: tools/GCC/4.6.2/linux/bin/arm-none-eabi-gcc: Permission denied</span><br><span class="line">* [GCC-ARM-NONE-EABI] : [UNKNOWN VERSION] !!!</span><br><span class="line">* [NATIVE GCC(UBUNTU)]: gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3  [OK] !!!</span><br><span class="line"></span><br><span class="line">current Build Env. is not recommendation </span><br><span class="line">To avoid unexpected errors , please install the recommended Tool Chain.</span><br><span class="line">*******************************************</span><br><span class="line">  Build Environment is NOT RECOMMENDED!</span><br><span class="line">*******************************************</span><br><span class="line"></span><br><span class="line">makefile check is <span class="keyword">done</span></span><br><span class="line">/bin/bash: tools/init/strcmpex_linux.exe: Permission denied</span><br><span class="line">make: *** [getoptions] Error 126</span><br></pre></td></tr></table></figure><p>这种问题很好解决， 通过chmod对其提供执行权限即可。</p><h2 id="不能定位数据库问题"><a href="#不能定位数据库问题" class="headerlink" title="不能定位数据库问题"></a>不能定位数据库问题</h2><p>提示不能定位原始codegen 数据库，错误log如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ERROR] Cannot determine the original codegen database: BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P1 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P10 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P11 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P12 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P13 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P14 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P15 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P16 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P17 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P18 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P19 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P2 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P20 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P21 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P3 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P4 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P5 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P6 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P7 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P8 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P9</span><br><span class="line">make[1]: *** [build/ZECHIN6737T_65_M0/LWG_DSDS_COTSX/bin/dep/codegen_dep/cgen_cfg_Modem.det] Error 2</span><br><span class="line">make: *** [cgen] Error 2</span><br></pre></td></tr></table></figure><p>此问题是因为[mt6735m_all_modem\mtk_rel\ZECHIN6737T_65_M0\LTG_DSDS\dhl\database]路径下面太多的数据库文件，只需要将多余的删除掉即可。</p><h2 id="编译工具链问题"><a href="#编译工具链问题" class="headerlink" title="编译工具链问题"></a>编译工具链问题</h2><p>提示某些工具不能找到，log如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tools/GCC/4.6.2/linux/bin/arm-none-eabi-ld: cannot find -lnosys</span><br><span class="line">tools/GCC/4.6.2/linux/bin/arm-none-eabi-ld: cannot find -lm</span><br><span class="line">tools/GCC/4.6.2/linux/bin/arm-none-eabi-ld: cannot find -lc</span><br><span class="line">tools/GCC/4.6.2/linux/bin/arm-none-eabi-ld: cannot find -lgcc</span><br></pre></td></tr></table></figure><p>此问题是因为代码里面的gcc工具链有问题，需要重新安装正确的工具链，由于十分不好找，所以我上传了百度云：<a href="http://pan.baidu.com/s/1pLblCkN">GCC地址</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MTK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现真正意义上的第一个APP之启程</title>
      <link href="2017/07/11/Android/%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E6%84%8F%E4%B9%89%E4%B8%8A%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAAPP%E4%B9%8B%E5%90%AF%E7%A8%8B/"/>
      <url>2017/07/11/Android/%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E6%84%8F%E4%B9%89%E4%B8%8A%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAAPP%E4%B9%8B%E5%90%AF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>自学了这么久的Android，各种例程和Demo敲了不少，但是还未自己从头设计实现过一个完整的APP，今天准备根据自己的需求定制一款APP：ForMe（暂定此名）。第一次完全自己设计实现，可能会有很多问题，自己边学边优化。</p><a id="more"></a><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>根据自己平时的生活，目前暂时拟定如下功能：<br>0. 可自由选择默认显示界面</p><ol><li>TODOLIST - 足够使用的精简模块</li><li>读取通讯录生日信息，查看提醒</li><li>英语学习，录入和复习</li><li>引入讯飞语音识别，思考所有功能与其结合</li><li>公交查询，自动播报还有几个站多少时间</li><li>支持MarkDown录入随笔博客，并可以导出</li><li>支持NFC读取卡片信息</li></ol><p>目前想到需要这些功能，一步步实现。</p><h2 id="UI设计"><a href="#UI设计" class="headerlink" title="UI设计"></a>UI设计</h2><p>虽然没有多少审美细胞，但是也想自己来设计UI。本想先设计出UI效果，但这方面接触太少，短时间内难以做出来，所以就先放一放，后期再来完整设计。</p><h2 id="TODOLIST"><a href="#TODOLIST" class="headerlink" title="TODOLIST"></a>TODOLIST</h2><p>一直需要一个TODOLIST来提醒自己，所以先实现此部分，做一个精简版的模块，使用Material Design语言来设计。碰巧在Github上面有看到一个类似项目<a href="https://github.com/avjinder/Minimal-Todo">Minimal-Todo</a>，UI风格我挺喜欢的，这部分的UI就准备直接借用此项目的图片了。</p><p>好的就这样了， 开始一步一步地做。</p><blockquote><p>在公司完成这个计划，现在公司空调有问题，热死了，感觉都要虚脱了的感觉。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Application </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Kotlin之曲折HelloWord</title>
      <link href="2017/05/23/Android/Kotlin-HElloWorld/"/>
      <url>2017/05/23/Android/Kotlin-HElloWorld/</url>
      
        <content type="html"><![CDATA[<p>最近工作业余时间一直在自学Android，Google I/O 2017 惊闻Kotlin成为Google支持的官方语言，当然得紧跟“中央”的脚步，开始程序入门必备之HelloWord，殊不知这个HelloWord充满了曲折。</p><h2 id="了解Kotlin"><a href="#了解Kotlin" class="headerlink" title="了解Kotlin"></a>了解Kotlin</h2><p>知道了Kotlin之后就开始在网上搜集相关资料，发现了如下个人觉得比较好的资料：<br><a href="https://kotlinlang.org/docs/tutorials/kotlin-android.html">Getting started with Android and Kotlin</a><br><a href="https://github.com/JetBrains/kotlin">kotlin项目</a><br><a href="https://github.com/JetBrains/kotlin-examples">kotlin配置及与java的互操作</a><br><a href="https://github.com/Kotlin/kotlin-koans">kotlin语法练习</a><br><a href="doc/kotlin-docs.pdf">Kotlin1.1手册</a><br><a href="http://tanfujun.com/kotlin-web-site-cn/docs/reference/">kotlin中文网</a><br><a href="https://kotlinlang.org/">kotlin官网</a><br><a href="https://github.com/huanglizhuo/kotlin-in-chinese">中文kotlin项目</a></p><a id="more"></a><h2 id="曲折之路"><a href="#曲折之路" class="headerlink" title="曲折之路"></a>曲折之路</h2><h3 id="安装插件-HelloWorld"><a href="#安装插件-HelloWorld" class="headerlink" title="安装插件+HelloWorld"></a>安装插件+HelloWorld</h3><p>自己一直是使用的Android Studio的稳定版，通过<strong>File-&gt;setting-&gt;Install JetBrains Plugins</strong>安装了Kotlin插件。安装完成后会发现<strong>Tools-&gt;Kotlin</strong>工具，可以进行相关Kotlin操作。</p><p>插件装好后，新建HelloWord项目，新建完成后打开MainActivity.java，然后通过<strong>Code-&gt;Convert Java File to Kotlin File</strong>或者<strong>Ctrl+Alt+Shift+K</strong>将其转换为kt文件，Android Studio将自动在build.gradle文件添加依赖，如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ext.kotlin_version = <span class="string">&#x27;1.1.2-4&#x27;</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">classpath</span> <span class="string">&quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version&quot;</span></span><br></pre></td></tr></table></figure><p>本以为马上就是见证奇迹的时刻了，可惜各种错误纷至沓来，主要就集中在Android Studio不能成功自动下载kotlin的相关依赖，翻墙下载也不能成功，所以就通过错误log和Task手动下载相关包，这样解决了大部分问题，但是仍然不能成功编译。</p><h3 id="Android-Studio-3-0"><a href="#Android-Studio-3-0" class="headerlink" title="Android Studio 3.0"></a>Android Studio 3.0</h3><p>折腾良久不能成功， 就决定下载Google新发布的自带Kotlin的3.0。下载安装完成后，导入HellowWorld项目，又出现了一大堆翻墙不能解决的gradle和kotlin依赖下载问题，所以又通过手动下载的方式解决了问题。3.0自动对项目的一些依赖进行了更新，kotlin更新为如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ext.kotlin_version = <span class="string">&#x27;1.1.3-eap-34&#x27;</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">classpath</span> <span class="string">&quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>自带Kotlin的IDE，新建项目的时候就能选择kotin或者java</p></blockquote><p>本以为终于可以开心的见证奇迹了，3.0 和我的Ubuntu16.1又出现了兼容性问题，由于之前不小心把系统升级后已经多次遇到和软件不够兼容的问题，所以这次就放弃继续折腾，就准备再切换回Android Studio2.3.2再试试，实在不行就只有备份重装系统了。</p><blockquote><p>血的教训：Linux开发机千万要用之前的稳定版本，不要升级到最新系统。</p></blockquote><h3 id="终见证奇迹"><a href="#终见证奇迹" class="headerlink" title="终见证奇迹"></a>终见证奇迹</h3><p>Android3.0+ubuntu16.01 不成功，最终用回2.3.2+kotlin插件，老天总算没让继续折腾，通过3.0更新了Kotlin版本后，在2.3.2中一下就编译过了，赶紧如下添加一点代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class KotlinActivity : AppCompatActivity() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> lateinit <span class="keyword">var</span> hello_view:android.widget.TextView</span><br><span class="line">    <span class="comment">//private lateinit var hello_anko:android.widget.TextView</span></span><br><span class="line"></span><br><span class="line">    <span class="function">override fun <span class="title">onCreate</span><span class="params">(savedInstanceState: Bundle?)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_kotlin)</span><br><span class="line"></span><br><span class="line">        hello_view = findViewById(R.id.hello_view) as android.widget.TextView</span><br><span class="line">        hello_view.text = <span class="string">&quot;Hello, Kotlin! &quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译下载，终于在手机里面看到了：Hello，Kotlin！。</p><p>不过仍然有一个小瑕疵，由于兼容性有些问题，总会有IDE Error和Plugin Error提示，不过就这样子将就用了，不准备耗掉大量时间来折腾系统了，相信随着Google的更新和系统补丁，这些问题终将解决。</p><h2 id="Anko项目"><a href="#Anko项目" class="headerlink" title="Anko项目"></a>Anko项目</h2><p>尝试了一下比较火的开源项目<a href="https://github.com/Kotlin/anko">Anko</a>，通过Anko实现HelloWord。<br>引入依赖，我这里选择了自己能用到的部分依赖，如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ext.anko_version = <span class="string">&quot;0.10&quot;</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">compile</span> <span class="string">&quot;org.jetbrains.anko:anko-sdk25:$anko_version&quot;</span> <span class="comment">// sdk15, sdk19, sdk21, sdk23 are also available</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">&quot;org.jetbrains.anko:anko-appcompat-v7:$anko_version&quot;</span></span><br></pre></td></tr></table></figure><p>实现代码：</p><figure class="highlight kt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 常规用法</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> hello_anko:android.widget.TextView</span><br><span class="line">hello_anko = find&lt;TextView&gt;(R.id.hello_anko) <span class="comment">//可以省略泛型</span></span><br><span class="line"></span><br><span class="line"># 直接将TextView的id当作示例</span><br><span class="line">hello_anko.text = <span class="string">&quot;Hello, Anko!&quot;</span></span><br><span class="line"></span><br><span class="line"># 动态加载布局</span><br><span class="line">verticalLayout &#123;</span><br><span class="line">    <span class="keyword">val</span> name = editText()</span><br><span class="line">    button(<span class="string">&quot;Say Hello&quot;</span>) &#123;</span><br><span class="line">        onClick &#123; toast(<span class="string">&quot;Hello, <span class="subst">$&#123;name.text&#125;</span>!&quot;</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Kotlin学习项目"><a href="#Kotlin学习项目" class="headerlink" title="Kotlin学习项目"></a>Kotlin学习项目</h2><p><a href="https://github.com/huaqianlee/KotlinDemo">Github地址</a></p><h2 id="附上一点经验"><a href="#附上一点经验" class="headerlink" title="附上一点经验"></a>附上一点经验</h2><ol><li><p>依赖包总是下载失败时，通过log和Task确定链接，手动下载然后放到相应路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 依赖包路徑，可以通过ExternalLibraries-&gt;&lt;PackegName&gt;-&gt;Library Properties查看</span></span><br><span class="line">/home/lee/.gradle/caches/modules-2/files-2.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># gradle路徑</span></span><br><span class="line">/home/lee/.gradle/wrapper/dists</span><br><span class="line"></span><br><span class="line"><span class="comment"># gradle下载路径</span></span><br><span class="line">http://services.gradle.org/distributions/</span><br></pre></td></tr></table></figure></li><li><p>图形界面查看和添加依赖</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看</span></span><br><span class="line">Project Structure-&gt;app-&gt;Dependencies</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加, 这样添加后会自动在build.gradle中添加语句</span></span><br><span class="line">Project Structure-&gt;app-&gt;Dependencies-&gt;+-&gt;Library/Jar/Module Dependency</span><br></pre></td></tr></table></figure><p>看log耐心一些，做一些分析尝试，再加上Google会找到原因的。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Application </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> Android Studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之高级技巧</title>
      <link href="2017/05/13/FirstCode/FirstCode-advanced-skills/"/>
      <url>2017/05/13/FirstCode/FirstCode-advanced-skills/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><h2 id="全局获取Context"><a href="#全局获取Context" class="headerlink" title="全局获取Context"></a>全局获取Context</h2><p>新建一个自己Application，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Context context;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        context = getApplicationContext();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Context <span class="title">getContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> context;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>指定程序启动时初始化的Application，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;com.example.networknest.MyApplication&quot;</span> //完整的包名</span></span><br><span class="line"><span class="tag">    <span class="attr">...</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span>    </span><br></pre></td></tr></table></figure><p>需要Context时而没有，即可调用如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Toast.makeText(MyApplication.getContext(),...).show();</span><br></pre></td></tr></table></figure><p>不过LItePal要正常工作也需要配置起自己的Application，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:name=&quot;org.litepal.LitePalApplication&quot;</span><br></pre></td></tr></table></figure><p>其也是为了能在内部自动获取Context，遇到这种冲突，类似如下方式解决：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Context context;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        context = getApplicationContext();</span><br><span class="line">        LitePalApplication.initialize(context);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用Intent传递对象"><a href="#使用Intent传递对象" class="headerlink" title="使用Intent传递对象"></a>使用Intent传递对象</h2><h3 id="Serializable方式"><a href="#Serializable方式" class="headerlink" title="Serializable方式"></a>Serializable方式</h3><p>将对象实现Serializable接口，让对象成为序列化可存储传输状态，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 对象实现接口</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"># 传输</span><br><span class="line">intent.putExtra(<span class="string">&quot;person_data&quot;</span>,person);</span><br><span class="line"></span><br><span class="line"># 接收</span><br><span class="line">Person person = (Person)getIntent().getSerializableExtra(<span class="string">&quot;person_data&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="Parcelable方式"><a href="#Parcelable方式" class="headerlink" title="Parcelable方式"></a>Parcelable方式</h3><blockquote><p><strong>推荐此方式，效率更高</strong></p></blockquote><p>Parcelable方式是将对象分解为Intent支持的数据类型，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># 对象实现接口</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Parcelable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">        dest.writeString(name); <span class="comment">// 写出name</span></span><br><span class="line">        dest.writeInt(age);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Parcelable.Creator&lt;Person&gt; CREATOR = <span class="keyword">new</span> Parecelable.Creator&lt;Person&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Person <span class="title">createFromParcel</span><span class="params">(Parcel source)</span> </span>&#123;</span><br><span class="line">            Person person = <span class="keyword">new</span> Person();</span><br><span class="line">            <span class="comment">/*必须与上面写出的顺序一致*/</span></span><br><span class="line">            person.name = source.readString();<span class="comment">// 读取name</span></span><br><span class="line">            person.age = source.readInt();</span><br><span class="line">            <span class="keyword">return</span> person;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Person[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Person[size];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 传输</span><br><span class="line">intent.putExtra(<span class="string">&quot;person_data&quot;</span>,person);</span><br><span class="line"></span><br><span class="line"># 接收</span><br><span class="line">Person person = (Person)getIntent().getParcelableExtra(<span class="string">&quot;person_data&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="定制日志工具"><a href="#定制日志工具" class="headerlink" title="定制日志工具"></a>定制日志工具</h2><p>为了方便控制开关日志，一般会定义一个日志工具类，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VERBOSE = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEBUG = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INFO = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WARN = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ERROR = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NOTHING = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> level = VERBOSE;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">v</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= VERBOSE) &#123;</span><br><span class="line">            Log.v(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">d</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= DEBUG) &#123;</span><br><span class="line">            Log.d(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">i</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= INFO) &#123;</span><br><span class="line">            Log.i(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">w</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= WARN) &#123;</span><br><span class="line">            Log.w(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">e</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= ERROR) &#123;</span><br><span class="line">            Log.e(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 调用</span><br><span class="line">LogUtil.v() ...</span><br><span class="line"></span><br><span class="line"># 关闭所有日志</span><br><span class="line">LogUtil.level = NOTHING;</span><br></pre></td></tr></table></figure><h2 id="创建定时任务"><a href="#创建定时任务" class="headerlink" title="创建定时任务"></a>创建定时任务</h2><h3 id="Alarm机制"><a href="#Alarm机制" class="headerlink" title="Alarm机制"></a>Alarm机制</h3><p>简单用法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);</span><br><span class="line"><span class="keyword">long</span> triggerAtTime = SystemClock.elapsedRealtime() + <span class="number">10</span>*<span class="number">1000</span>;</span><br><span class="line"><span class="comment">/*开机至今时间（ms）+定时时间*/</span></span><br><span class="line">manager.set(AlarmManager.ELAPSED_REALTIME_WAKE_UP, triggerAtTime, pendingIntent);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">** arg1: 指定AlarmManager工作类型，即时间计算方式与是否唤醒CPU。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> triggerAtTime = System.currentTimeMillis() + <span class="number">10</span>*<span class="number">1000</span>;</span><br><span class="line"><span class="comment">/*1970.1.1 0点至今时间（ms）+定时时间*/</span></span><br><span class="line">manager.set(AlarmManager.RTC_WAKEUP, triggerAtTime, pendingIntent);</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>一个后台定时服务示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongRunningService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    onBind()&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent , <span class="keyword">int</span> flags , <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                    <span class="comment">// 执行具体逻辑操作， 新开线程，为了定时准确性</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);</span><br><span class="line">        <span class="keyword">long</span> triggerAtTime = SystemClock.elapsedRealtime() + <span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>;<span class="comment">// 定时一小时</span></span><br><span class="line">        Intent i = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, LongRunningService.class);</span><br><span class="line">        PenddingIntent pi = PendingIntent.getService(<span class="keyword">this</span>, <span class="number">0</span>, i, <span class="number">0</span>);</span><br><span class="line">        manager.set(AlarmManager.ELAPSED_REALTIME_WAKE_UP, triggerAtTime, pendingIntent);   </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要定时服务时启动服务：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, LongRunningService.class);</span><br><span class="line">context.startService(intent);</span><br></pre></td></tr></table></figure><blockquote><p>不过为了功耗，Android限制减少了cpu唤醒次数，set()可能不十分准确，若准确性要求高，可使用setExact()方法。</p></blockquote><h3 id="Doze模式"><a href="#Doze模式" class="headerlink" title="Doze模式"></a>Doze模式</h3><p>Android6.0及以上为了省电新加入了Doze模式，满足未插电、屏幕关闭等一段时间将进入doze模式，对cpu、网络、Alarm等进行限制，如下为Android7.0进入Doze模式的两个阶段：<br>阶段一：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/doze_first_level.png" alt="First Level"><br>阶段二：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/doze_second_level.png" alt="Second Level"></p><p>如若想Alarm在Doze模式也能正常执行，则需要使用AlarmManager的如下两个方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setAndAllowWhileIdle()        </span><br><span class="line">setExactAndAllowWhileIdle()  </span><br></pre></td></tr></table></figure><blockquote><p>区别同上set()与setExact()</p></blockquote><h2 id="多窗口模式编程"><a href="#多窗口模式编程" class="headerlink" title="多窗口模式编程"></a>多窗口模式编程</h2><p>进入多窗口模式活动会重建，可以通过如下方式改变：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:configChanges</span>=<span class="string">&quot;orientation|keyboardHidden|screenSize|screenLayout&quot;</span>&gt;</span></span><br><span class="line">    // 多窗口、横竖屏切换，活动皆不会被重建</span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span>    </span><br></pre></td></tr></table></figure><p>屏幕的变化将通知到Acitvity的onConfigurationChanged()方法，可以重写此方法进行逻辑处理。</p><p>禁用多窗口模式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="tag">&lt;<span class="name">application</span>&gt;</span>或<span class="tag">&lt;<span class="name">activity</span>&gt;</span>标签加入</span><br><span class="line">android:resizeableActivity=&quot;false&quot;  // 默认为true，支持</span><br></pre></td></tr></table></figure><p>不过targetSDKVersion低于24的，上述属性将不会生效，这就得通过另一种方案：制定不支持横竖屏切换，因为android规定24以下不允许横竖屏切换的亦不知多窗口，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:screenOrientation=[&quot;portrait&quot;|&quot;landscape&quot;]</span><br></pre></td></tr></table></figure><h2 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h2><p>使用Java8新特性，需先在app/build.gradle添加如下配置：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">    ...</span><br><span class="line">    jackOptions.enabled = <span class="keyword">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">compileOptions &#123;</span><br><span class="line">    <span class="keyword">sourceCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class="line">    <span class="keyword">targetCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只有一个待实现方法的接口，都可使用Lambda表达式，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br><span class="line"># Lambda 方式</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">    <span class="comment">// 实现run()逻辑</span></span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure><p>带参数的书写方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(String a, <span class="keyword">int</span> b) -&gt; &#123;<span class="comment">// 还可以省略掉参数类型，Java根据上下文推断    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之Material Design</title>
      <link href="2017/05/10/FirstCode/FirstCode-Material-Design/"/>
      <url>2017/05/10/FirstCode/FirstCode-Material-Design/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><h2 id="Toolbar控件"><a href="#Toolbar控件" class="headerlink" title="Toolbar控件"></a>Toolbar控件</h2><h3 id="主题定义"><a href="#主题定义" class="headerlink" title="主题定义"></a>主题定义</h3><p>对应于ActionBar，由于ActionBar被限定于活动顶部，不能实现一些Material Design效果，因此已不推荐使用了。</p><p>ActionBar来自项目指定的主题定义的显示，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line">android:theme=&quot;@style/AppTheme&quot;</span><br></pre></td></tr></table></figure><a id="more"></a><p>主题的定义：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># res/values/styles.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;AppTheme&quot;</span> <span class="attr">parent</span> = <span class="string">&quot;Theme.AppCompat.Light.DarkActionBar&quot;</span>&gt;</span> # 定义指定父主题</span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- Customize your theme here. --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimary&quot;</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimaryDark&quot;</span>&gt;</span>@color/colorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorAccent&quot;</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>父主题Theme.AppCompat.Light.DarkActionBar自带了ActionBar，使用Toolbar则需要将父主题替换，主要有如下两种可选主题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Theme.AppCompat.Light.NoActionBar : 淡色主题，主题颜色设为淡色，陪衬颜色设为深色</span><br><span class="line">Theme.AppCompat.NoActionBar: 深色主题，界面主题颜色设为深色，陪衬颜色设为淡色</span><br></pre></td></tr></table></figure><p>为了使用Toolbar修改主题定义：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;AppTheme&quot;</span> <span class="attr">parent</span> = <span class="string">&quot;Theme.AppCompat.Light.NoActionBar&quot;</span>&gt;</span> # 定义指定父主题</span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- Customize your theme here. --&gt;</span></span></span><br><span class="line">    ...</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>主题中的颜色控制属性，主要如下几种：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">colorPrimary       指定标题栏背影色</span><br><span class="line">colorPrimaryDrak   指定状态栏颜色</span><br><span class="line">textColorPrimary   指定标题文字颜色</span><br><span class="line">windowBackground   背景色</span><br><span class="line">navigationBarColor 指定状态导航条颜色</span><br><span class="line">colorAccent        指定浮动按钮颜色以及一些控件选择状态</span><br></pre></td></tr></table></figure><p>每个属性指定颜色的位置如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/firstcode/toolbar_anay.jpg" alt="各属性指定颜色位置"></p><h3 id="引入Toolbar"><a href="#引入Toolbar" class="headerlink" title="引入Toolbar"></a>引入Toolbar</h3><p>Toolbar控件是由appcompat-v7库提供，引入布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">...</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag"> //引入<span class="attr">app</span>命名空间，因为<span class="attr">android:attribute</span>之类属性只支持<span class="attr">5.0</span>及以上系统，<span class="attr">5.0</span>以下需要使用<span class="attr">app:xx</span>来兼容</span></span><br><span class="line"><span class="tag"> </span></span><br><span class="line"> &lt;android.support.v7.widget.Toolbar</span><br><span class="line">    android:id=&quot;@+id/toolbar&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;?attr/actionBarSize&quot; // 高度设置为actionBar的高度</span><br><span class="line">    android:background=&quot;?attr/colorPrimary&quot;</span><br><span class="line">    android:theme=&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;</span><br><span class="line">    // 为了Toolbar单独使用深色主题让效果更好，通过此属性设置，如不设置这使用默认的浅色主题效果</span><br><span class="line">    app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot;</span><br><span class="line">    // 将Toolbar中菜单按钮弹出的菜单项设为浅色主题</span><br><span class="line">    app:layout_scrollFlags=&quot;enterAlways|snap|scroll&quot;</span><br><span class="line">    /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span>    </span><br></pre></td></tr></table></figure><p>加入代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">setSupportActionBar(toolbar);</span><br></pre></td></tr></table></figure><h3 id="美化Toolbar"><a href="#美化Toolbar" class="headerlink" title="美化Toolbar"></a>美化Toolbar</h3><p>修改标题栏显示内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">  <span class="attr">...</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:label</span>=<span class="string">&quot;Fruits&quot;</span>&gt;</span></span><br><span class="line">  // 未指定的话，则显示application中android:label指定的内容</span><br><span class="line"> <span class="tag">&lt;/<span class="name">activity</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>添加action按钮：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"># 引入布局</span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;menu xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span>&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=<span class="string">&quot;@+id/backup&quot;</span></span><br><span class="line">        android:icon=<span class="string">&quot;@drawable/ic_backup&quot;</span></span><br><span class="line">        android:title=<span class="string">&quot;Backup&quot;</span></span><br><span class="line">        app:showAsAction=<span class="string">&quot;always&quot;</span>/&gt; </span><br><span class="line">        <span class="comment">//指定显示位置,永远显示在Toolbar中，屏幕不够则隐藏</span></span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=<span class="string">&quot;@+id/del&quot;</span></span><br><span class="line">        android:icon=<span class="string">&quot;@drawable/ic_delete&quot;</span></span><br><span class="line">        android:title=<span class="string">&quot;Delete&quot;</span></span><br><span class="line">        app:showAsAction=<span class="string">&quot;ifRoom&quot;</span>/&gt;</span><br><span class="line">        <span class="comment">//如果屏幕空间足够则显示，不够则显示在菜单中</span></span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=<span class="string">&quot;@+id/setting&quot;</span></span><br><span class="line">        android:icon=<span class="string">&quot;@drawable/ic_settings&quot;</span></span><br><span class="line">        android:title=<span class="string">&quot;Setting&quot;</span></span><br><span class="line">        app:showAsAction=<span class="string">&quot;never&quot;</span>/&gt;</span><br><span class="line">        <span class="comment">//永远隐藏，显示在菜单中</span></span><br><span class="line">&lt;/menu&gt;</span><br><span class="line"></span><br><span class="line"># 加入代码</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        <span class="comment">// 加载toolbal.xml</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.backup:</span><br><span class="line">                <span class="comment">//Toolbar上按钮响应逻辑</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.del:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.setting:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/firstcode/toolbar_xiaoguo.jpg" alt="带action按钮的Toolbar"></p><h2 id="滑动菜单"><a href="#滑动菜单" class="headerlink" title="滑动菜单"></a>滑动菜单</h2><h3 id="DrawerLayout"><a href="#DrawerLayout" class="headerlink" title="DrawerLayout"></a>DrawerLayout</h3><p>DrawerLayout是一个布局，允许放入两个子控件，第一个控件是主屏幕中显示的内容，第二个子控件是滑动菜单中显示的内容。<br>引入布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/drawer_layout&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span>    </span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">...</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">                </span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;start&quot;</span> </span></span><br><span class="line"><span class="tag">        //表示根据系统语言判断第二界面隐藏在左边还是右边，比如英语和中文从左边开始，就为左边，也可指定“<span class="attr">right</span>&quot; &quot;<span class="attr">left</span>&quot; &quot;<span class="attr">end</span>&quot;</span></span><br><span class="line"><span class="tag">        <span class="attr">...</span>/&gt;</span> //滑动界面先加载一个TextView</span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span>    </span><br></pre></td></tr></table></figure><p>加入导航按钮：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> DrawerLayout mlayout;</span><br><span class="line"></span><br><span class="line">mlayout = (DrawerLayout) findViewById(R.id.drawer_layout);</span><br><span class="line">ActionBar actionBar = getSupportActionBar();<span class="comment">//获得ActionBar(其实是Toolbar)</span></span><br><span class="line"><span class="keyword">if</span> (actionBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">    actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>); <span class="comment">// 显示导航按钮(HomeAsUp按钮)，默认是一个返回箭头</span></span><br><span class="line">    actionBar.setHomeAsUpIndicator(R.drawable.ic_menu);<span class="comment">//设置图标</span></span><br><span class="line">&#125;</span><br><span class="line"># 也可以直接在布局文件中加入：</span><br><span class="line">app:navigationIcon=<span class="string">&quot;@drawable/ic_menu&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">        mlayout.openDrawer(GravityCompat.START);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h3 id="NavigationView"><a href="#NavigationView" class="headerlink" title="NavigationView"></a>NavigationView</h3><p>NavigationView是Design Support提供的一个空间，可以让滑动菜单设计好看又简单，首先需要加入依赖：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">&#x27;com.android.support:design:24.2.1&#x27;</span> <span class="comment">//Design Support库</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">&#x27;de.hdodenhof:circleimageview:2.1.0&#x27;</span> <span class="comment">// Circleimageview，实现图片圆形化功能，用于头像</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/hdodenhof/Circleimageview">Circleimageview项目主页地址</a></p></blockquote><p>准备滑动菜单页面布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"># menu  </span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">group</span> <span class="attr">android:checkableBehavior</span>=<span class="string">&quot;single&quot;</span>&gt;</span> //指定这一组菜单项单选</span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/nav_call&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/nav_call&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">&quot;Call&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/nav_friends&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/nav_friends&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">&quot;Friends&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/nav_location&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/nav_location&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">&quot;Location&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/nav_mail&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/nav_mail&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">&quot;Mail&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/nav_task&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">&quot;@drawable/nav_task&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">&quot;Tasks&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># headerLayout</span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;180dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:padding</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">de.hdodenhof.circleimageview.CircleImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/icon_image&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;70dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;70dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/nav_icon&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/mail&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;huaqinalee@gmail.com&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#FFF&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/usr_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_above</span>=<span class="string">&quot;@+id/mail&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Andy Lee&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#fff&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引入滑动菜单页面布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 将前面的TextView换为NavigationView</span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.NavigationView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/nav_view&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">&quot;start&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:menu</span>=<span class="string">&quot;@menu/nav_menu&quot;</span>  // 引入<span class="attr">menu</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:headerLayout</span>=<span class="string">&quot;@layout/nav_header&quot;</span> // 引入<span class="attr">headerLayout</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br></pre></td></tr></table></figure><p>加入响应代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">NavigationView navView = (NavigationView) findViewById(R.id.nav_view);</span><br><span class="line"><span class="comment">//navView.setCheckedItem(R.id.nav_call); //设置菜单默认选中项</span></span><br><span class="line">navView.setNavigationItemSelectedListener(<span class="keyword">new</span> NavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNavigationItemSelected</span><span class="params">(<span class="meta">@NonNull</span> MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//添加菜单项响应逻辑</span></span><br><span class="line">        <span class="comment">//mlayout.closeDrawers(); 关闭滑动菜单</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/app/navigation_view.jpg" alt="NavigationView滑动菜单界面"></p><h2 id="悬浮按钮和可交互提示"><a href="#悬浮按钮和可交互提示" class="headerlink" title="悬浮按钮和可交互提示"></a>悬浮按钮和可交互提示</h2><h3 id="FloatingActionButton"><a href="#FloatingActionButton" class="headerlink" title="FloatingActionButton"></a>FloatingActionButton</h3><p>引入悬浮按钮布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">...</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">            </span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/fab&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;bottom|end&quot;</span> //对于中英文，右下角</span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_margin</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_done&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:elevation</span>=<span class="string">&quot;8dp&quot;</span> //悬浮高度</span></span><br><span class="line"><span class="tag">            /&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>加入响应代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);</span><br><span class="line">fab.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 实现响应逻辑</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="Snackbar"><a href="#Snackbar" class="headerlink" title="Snackbar"></a>Snackbar</h3><p>提供交互的提示，与Toast类似，加入代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">**arg1：一个View，当前界面的任意view，会自动找到最外层布局</span></span><br><span class="line"><span class="comment">**arg2：显示的内容</span></span><br><span class="line"><span class="comment">**arg3：时长</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Snackbar.make(v, <span class="string">&quot;Data deleted&quot;</span>, Snackbar.LENGTH_SHORT).setAction(<span class="string">&quot;Undo&quot;</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">&quot;Del undo!&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).show();</span><br></pre></td></tr></table></figure><h3 id="CoordinatorLayout"><a href="#CoordinatorLayout" class="headerlink" title="CoordinatorLayout"></a>CoordinatorLayout</h3><p>直接如上加入Snackbar，提示的内容直接弹出会覆盖悬浮按钮，体验不好，所以就需要引入加强版FrameLayout：CoordinatorLayout。此布局可以监听子控件，并且做出响应调整。<br>引入布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 替换掉FrameLayout</span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span>    </span><br></pre></td></tr></table></figure><p>这样替换布局后，悬浮按钮会自动上移以避免覆盖，效果如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/firstcode/coorlayout.jpg" alt="效果图"></p><blockquote><p>Snackbar.make时传入的view是Snackbar本身，包含在CoordinatorLayout中，所以能响应，如若传入的是外面的View，则不能响应。</p></blockquote><h2 id="卡片式布局"><a href="#卡片式布局" class="headerlink" title="卡片式布局"></a>卡片式布局</h2><h3 id="CardView"><a href="#CardView" class="headerlink" title="CardView"></a>CardView</h3><p>CardView也是appcompat-v7库提供的一个FrameLayout，不过增加了圆角阴影等立体效果。</p><h4 id="基本用法："><a href="#基本用法：" class="headerlink" title="基本用法："></a>基本用法：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:cardCornerRadius</span>=<span class="string">&quot;4dp&quot;</span> // 圆角弧度</span></span><br><span class="line"><span class="tag">    <span class="attr">app:elevation</span>=<span class="string">&quot;5dp&quot;</span>/&gt;</span>// 投影高度</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="RecyclerView和CardView等控件实现水果列表效果"><a href="#RecyclerView和CardView等控件实现水果列表效果" class="headerlink" title="RecyclerView和CardView等控件实现水果列表效果"></a>RecyclerView和CardView等控件实现水果列表效果</h4><p>添加依赖：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">&#x27;com.android.support:recyclerview-v7:24.2.1&#x27;</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">&#x27;com.android.support:cardview-v7:24.2.1&#x27;</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">&#x27;com.github.bumptech.glide:glide:3.7.0&#x27;</span> </span><br><span class="line"><span class="comment">//一个强大的图片加载库，可加载（网络）图片、GIF、本地视频。</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/bumptech/glide">Glide项目主页地址</a></p></blockquote><p>引入RecyclerView布局：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">    &lt;android.support.v7.widget.Toolbar</span><br><span class="line">        ..../&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/recycler_view&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;match_parent&quot;</span>/&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br></pre></td></tr></table></figure><blockquote><p>这样子RecyclerView会将Toolbar给遮住，因为CoordinatorLayout(类似FrameLayout)布局默认置于左上角，后面通过APPBarLayout解决此问题</p></blockquote><p>定义一个Fruit实体类（只有name和imageId两个字段）。接下来需要为RecyclerView的子项指定自定义布局fruit_item.xml。</p><p>引入CardView布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span>     <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;4dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/fruit_image&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:scaleType</span>=<span class="string">&quot;centerCrop&quot;</span> //指定图片缩放方式</span></span><br><span class="line"><span class="tag">            <span class="attr">...</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/fruit_name&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加RecyclerView适配器FruitAdapter，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">FruitAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; mLists;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(List&lt;Fruit&gt; lists)</span> </span>&#123;</span><br><span class="line">        mLists = lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FruitAdapter.<span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mContext = parent.getContext();</span><br><span class="line">        &#125;</span><br><span class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> viewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(FruitAdapter.ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Fruit fruit = mLists.get(position);</span><br><span class="line">        holder.fruitName.setText(fruit.getName());</span><br><span class="line">        Glide.with(mContext).load(fruit.getImageId()).into(holder.fruitImage);</span><br><span class="line">        <span class="comment">// 使用Glide加载图片</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mLists.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        CardView cardView;</span><br><span class="line">        ImageView fruitImage;</span><br><span class="line">        TextView fruitName;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cardView = (CardView) itemView;</span><br><span class="line">            fruitImage = (ImageView) itemView.findViewById(R.id.fruit_image);</span><br><span class="line">            fruitName = (TextView) itemView.findViewById(R.id.fruit_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加加载RecyclerView代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(...);</span><br><span class="line">GridLayoutManager layoutManager = <span class="keyword">new</span> GridLayoutManager(<span class="keyword">this</span>, <span class="number">2</span>);</span><br><span class="line">recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">adapter = <span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br></pre></td></tr></table></figure><h3 id="AppBarLayout"><a href="#AppBarLayout" class="headerlink" title="AppBarLayout"></a>AppBarLayout</h3><p>APPBarLayout也是Design Support提供，解决RecyclerView遮挡Toolbar问题只需两步：</p><ol><li>将Toolbar嵌套到APPBarLayout中。</li><li>给RecyclerView指定一个布局行为。</li></ol><p>修改布局如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_scrollFlags</span>=<span class="string">&quot;enterAlways|snap|scroll&quot;</span></span></span><br><span class="line"><span class="tag">    /*  </span></span><br><span class="line"><span class="tag">    ** <span class="attr">enterAlways</span> <span class="attr">-</span> <span class="attr">Toolbar</span>跟随向下滚动并重新显示</span></span><br><span class="line"><span class="tag">    ** <span class="attr">snap</span> <span class="attr">-</span> <span class="attr">Toolbar</span>还未完全隐藏或显示时，根据滚动距离自动选择</span></span><br><span class="line"><span class="tag">    ** <span class="attr">scroll</span> <span class="attr">-</span> <span class="attr">Toolbar</span>跟着向上滚动并隐藏</span></span><br><span class="line"><span class="tag">    */</span></span><br><span class="line"><span class="tag">        <span class="attr">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_behavior</span>=<span class="string">&quot;@string/appbar_scrolling_view_behavior&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h2><p>support-v4提供的SwipeRefreshLayout可以很简单的实现刷新功能。<br>引入布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.SwipeRefreshLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/swipe_refresg&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_behavior</span>=<span class="string">&quot;@string/appbar_scrolling_view_behavior&quot;</span>&gt;</span></span><br><span class="line">    // 需要将上述的布局行为移到其父控件了</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SwipeRefreshLayout swipeRefresh;</span><br><span class="line">swipeRefresh = (SwipeRefreshLayout)findViewById(R.id.swipe_refresg);</span><br><span class="line">swipeRefresh.setColorSchemeResources(R.color.colorPrimary); <span class="comment">// 设置下拉进度条颜色</span></span><br><span class="line">swipeRefresh.setOnRefreshListener(<span class="keyword">new</span> SwipeRefreshLayout.OnRefreshListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        refreshFruits();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshFruits</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">2000</span>); <span class="comment">//获取数据，这里模拟时间</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;<span class="comment">//切回主线程更新UI</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                initFruits();</span><br><span class="line">                adapter.notifyDataSetChanged();</span><br><span class="line">                swipeRefresh.setRefreshing(<span class="keyword">false</span>);<span class="comment">//刷新结束，隐藏进度条</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure><h2 id="可折叠式标题栏"><a href="#可折叠式标题栏" class="headerlink" title="可折叠式标题栏"></a>可折叠式标题栏</h2><h3 id="CollapsingToolbarLayout"><a href="#CollapsingToolbarLayout" class="headerlink" title="CollapsingToolbarLayout"></a>CollapsingToolbarLayout</h3><p>如下所示，左边必须作为右边的子控件才能存在：</p><p><strong>CollapsingToolbarLayout -&gt; AppBarLayout -&gt; CoordinatorLayout.</strong></p><p>新建一个水果详情展示页面布局（activity_fruit.xml）来应用可折叠式标题栏。</p><p>引入布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    # 标题部分</span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">...</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.CollapsingToolbarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">...</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Dark.ActionBar&quot;</span> // <span class="attr">Toolbar</span>主题，移到此父控件</span></span><br><span class="line"><span class="tag">            <span class="attr">app:contentScrim</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span> //折叠背景色,折叠后就变成一个普通<span class="attr">Toolbar</span>了</span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_scrollFlags</span>=<span class="string">&quot;scroll|exitUntilCollapsed&quot;</span></span></span><br><span class="line"><span class="tag">            /*</span></span><br><span class="line"><span class="tag">            ** <span class="attr">Toolbar</span>属性，移到父控件了</span></span><br><span class="line"><span class="tag">            ** <span class="attr">exitUntilCollapsed</span> <span class="attr">-</span> 表示折叠后保留不隐藏</span></span><br><span class="line"><span class="tag">            */</span></span><br><span class="line"><span class="tag">            <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            /*标题栏内容：图片+普通标题栏*/</span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">...</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:scaleType</span>=<span class="string">&quot;centerCrop&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_collapseMode</span>=<span class="string">&quot;parallax&quot;</span> // 指定折叠模式，<span class="attr">parallax-</span>折叠时错位偏移</span></span><br><span class="line"><span class="tag">                <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_collapseMode</span>=<span class="string">&quot;pin&quot;</span> // 表示折叠过程中<span class="attr">Toolbar</span>位置不变</span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.design.widget.CollapsingToolbarLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span>    </span><br><span class="line">    </span><br><span class="line">    # 详情页部分</span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v4.widget.NestedScrollView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">...</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_behavior</span>=<span class="string">&quot;@string/appbar_scrolling_view_behavior&quot;</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">        ** 同ScrollView，允许滚动查看，不过多了响应滚动事件</span><br><span class="line">        ** 因为外使用CoordinatorLayout，需要用此控件或RecyclerView，用法同上RecyclerView一样</span><br><span class="line">        ** 只允许存在一个直接子布局</span><br><span class="line">        */</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.v4.widget.NestedScrollView</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    # 增加一个悬浮按钮</span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">...</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_anchor</span>=<span class="string">&quot;@id/appBar&quot;</span> //指定描点，这里写<span class="attr">APPBarLayout</span>的<span class="attr">id</span>，这样按钮就出现在标题栏区域</span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_anchorGravity</span>=<span class="string">&quot;bottom|end&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span>    </span><br></pre></td></tr></table></figure><p>加入代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"># Adapter中添加RecyclerView子项响应代码</span><br><span class="line"><span class="keyword">public</span> FruitAdapter.<span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mContext = parent.getContext();</span><br><span class="line">    &#125;</span><br><span class="line">    View view = LayoutInflater.from(mContext).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">final</span> ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">    holder.cardView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> position = holder.getAdapterPosition();</span><br><span class="line">            Fruit fruit = mLists.get(position);</span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(mContext,FruitActivity.class);</span><br><span class="line">            intent.putExtra(FruitActivity.FRUIT_NAME,fruit.getName());</span><br><span class="line">            intent.putExtra(FruitActivity.FRUIT_IMAGE_ID,fruit.getImageId());</span><br><span class="line">            mContext.startActivity(intent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> holder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 详情页面代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_NAME = <span class="string">&quot;fruit_name&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_IMAGE_ID = <span class="string">&quot;fruit_image_id&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_fruit);</span><br><span class="line"></span><br><span class="line">        Intent intent = getIntent();</span><br><span class="line">        String  fruitName = intent.getStringExtra(FRUIT_NAME);</span><br><span class="line">        <span class="keyword">int</span> fruitImageId = intent.getIntExtra(FRUIT_IMAGE_ID,<span class="number">0</span>);</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">//显示默认HomeAsUp按钮，一个返回箭头</span></span><br><span class="line">        setSupportActionBar(toolbar); </span><br><span class="line">        ActionBar actionBar = getSupportActionBar();</span><br><span class="line">        <span class="keyword">if</span> (actionBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        collapsingToolbar.setTitle(fruitName);</span><br><span class="line">        Glide.with(<span class="keyword">this</span>).load(fruitImageId).into(fruitImageView);</span><br><span class="line">        fruitText.setText(fruitContent); <span class="comment">//设置详情页内容</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:  <span class="comment">// HomeAsUp按钮返回上一活动</span></span><br><span class="line">                finish();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="背景图片和系统状态栏融合"><a href="#背景图片和系统状态栏融合" class="headerlink" title="背景图片和系统状态栏融合"></a>背景图片和系统状态栏融合</h3><p>对ImageView及其所有父布局属性设定，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag"> <span class="attr">...</span></span></span><br><span class="line"><span class="tag"> <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">...</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.CollapsingToolbarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">...</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">...</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">...                </span><br></pre></td></tr></table></figure><p>接下来需要将状态栏指定撑透明，但是android:statusBarColor属性是API21开始支持的（即Android5.0）。先为5.0以上新建一个values-21/styles.xml，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;FruitActivityTheme&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;AppTheme&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:statusBarColor&quot;</span>&gt;</span>@android:color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span>    </span><br></pre></td></tr></table></figure><p>为了支持5.0以前，对values/styles.xml进行修改，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;FruitActivityTheme&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;AppTheme&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"># 因为5.0以前不能指定状态栏颜色，所以留空即可了。</span><br></pre></td></tr></table></figure><p>最后让activity调用此主题，如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@style/FruitActivityTheme&quot;</span></span></span><br><span class="line">&lt;/activiy&gt;</span><br></pre></td></tr></table></figure><p>android5.0以上的版本还有一种融合及透明状态栏的方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 参考coolweather融合必应图片，及头布局间隔设置</span><br><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">21</span>) &#123;</span><br><span class="line">    View decorView = getWindow().getDecorView();</span><br><span class="line">    decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);</span><br><span class="line">    getWindow().setStatusBarColor(Color.TRANSPARENT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/fruit_effct.gif" alt="fruit_effect"></p><h2 id="示例源码"><a href="#示例源码" class="headerlink" title="示例源码"></a>示例源码</h2><p>整个Material Design示例源码的地址如下：</p><p><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter12">Material Design示例源码</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之碎片</title>
      <link href="2017/05/10/FirstCode/FirstCode-Fragment/"/>
      <url>2017/05/10/FirstCode/FirstCode-Fragment/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><h2 id="碎片的使用"><a href="#碎片的使用" class="headerlink" title="碎片的使用"></a>碎片的使用</h2><h3 id="碎片的简单用法"><a href="#碎片的简单用法" class="headerlink" title="碎片的简单用法"></a>碎片的简单用法</h3><p>新建一个示例包含两个碎片，平分活动空间，新建左侧碎片布局，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Button...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>新建右侧碎片布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextView...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>新建LeftFragment类，继承于Fragment（选择来自support-v4库的类，做到向下兼容）。如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">leftFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">onCreateView() &#123;</span><br><span class="line">View view = inflater.inflate(R.layout.left_fragment, container, <span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> view;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建RightFragment类，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">leftFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">onCreateView() &#123;</span><br><span class="line">View view = inflater.inflate(R.layout.right_fragment, container, <span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> view;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改主活动布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">&quot;com.example.lee.fragmentdemo.LeftFragment&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">&quot;com.example.lee.fragmentdemo.RightFragment&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="动态添加碎片"><a href="#动态添加碎片" class="headerlink" title="动态添加碎片"></a>动态添加碎片</h3><p>新建another_right_fragment.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextView...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>新建AnotherRightFragment类，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnotherRightFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">onCreateView() &#123;</span><br><span class="line">inflater.inflate(R.another_right_fragment, container, <span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> view;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主活动添加布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FrameLaout</span> <span class="attr">...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改主活动代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">replaceFragment(new AnotherRightFragment());</span><br><span class="line">...</span><br><span class="line">private void replaceFragment(Fragment fragment) &#123;</span><br><span class="line">FragmentManager fragmentManager &#x3D; getSupportFragmentManager();</span><br><span class="line">FragmentTransaction transaction &#x3D; fragmentManager.beginTransaction();</span><br><span class="line">transaction.replace(R.id.right, fagment);</span><br><span class="line">transaction.commit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="碎片中模拟返回栈"><a href="#碎片中模拟返回栈" class="headerlink" title="碎片中模拟返回栈"></a>碎片中模拟返回栈</h3><p>修改代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">replaceFragment()&#123;</span><br><span class="line">...</span><br><span class="line">transaction.addToBackStack(<span class="keyword">null</span>);<span class="comment">//按下返回键后，则回退碎片</span></span><br><span class="line">transaction.commmit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="碎片与活动通信"><a href="#碎片与活动通信" class="headerlink" title="碎片与活动通信"></a>碎片与活动通信</h3><p>活动中获取碎片实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RightFragment rightFragment = (RightFragment) getFragmentManager()</span><br><span class="line">.findFragmentById(R.id.right_fragment);</span><br></pre></td></tr></table></figure><p>碎片中获取活动：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MainActivity activity = (MainActivity)getActivity();<span class="comment">//获取碎片相关联的活动实例</span></span><br></pre></td></tr></table></figure><h2 id="碎片的生命周期"><a href="#碎片的生命周期" class="headerlink" title="碎片的生命周期"></a>碎片的生命周期</h2><p>碎片生命周期中的状态有：</p><ol><li>运行状态：碎片可见，关联活动处于运行状态，碎片也处于运行状态。</li><li>暂停状态：活动进入暂停状态（另一非占全屏的活动加到栈顶），关联碎片也就进入暂停状态。</li><li>停止状态：活动进入停止状态，或调用FragmentTransaction.remove()、replace()，事务提交前有调用addToBackStack()。进入停止状态不可见，可能会被系统回收。</li><li>销毁状态：活动被销毁，或调用FragmentTransaction.remove()、replace()，事务提交前未调用addToBackStack()。</li></ol><p>碎片生命周期如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/fragment_lifecycle.png" alt="碎片的生命周期"></p><p>几个关键回调：</p><ul><li>onAttach()：碎片和活动建立关联时调用。</li><li>onCreateView()：为碎片创建视图（加载布局）时调用。</li><li>onActivityCreated()：确保与碎片相关联的活动创建完毕时调用。</li><li>onDestroyView()：与碎片关联的视图被移除时调用。</li><li>onDetach()：碎片与活动解除关联时调用。</li></ul><h2 id="动态加载布局"><a href="#动态加载布局" class="headerlink" title="动态加载布局"></a>动态加载布局</h2><h3 id="使用限定符"><a href="#使用限定符" class="headerlink" title="使用限定符"></a>使用限定符</h3><p>修改主活动布局：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">&quot;com.example.lee.fragmentdemo.LeftFragment&quot;</span></span></span><br><span class="line"><span class="tag">//满屏显示</span></span><br><span class="line"><span class="tag"><span class="attr">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>新建新的主布局res/layout-large/activity_main.xml，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">&quot;com.example.lee.fragmentdemo.LeftFragment&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">&quot;com.example.lee.fragmentdemo.RightFragment&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样布局后，手机就会默认加载第一个布局，平板则加载large布局。</p><p>Android中场景限定符（Qualifiers）如下：</p><table><thead><tr><th align="center">限定符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">small</td><td align="center">小屏设备的资源</td></tr><tr><td align="center">normal</td><td align="center">中等屏设备的资源</td></tr><tr><td align="center">large</td><td align="center">大屏设备的资源</td></tr><tr><td align="center">xlarge</td><td align="center">超大屏设备的资源</td></tr><tr><td align="center">ldpi</td><td align="center">低分辨率设备的资源（120dpi以下）</td></tr><tr><td align="center">mdpi</td><td align="center">中分辨率设备的资源（120～160dpi）</td></tr><tr><td align="center">hdpi</td><td align="center">高分辨率设备的资源（160～240dpi）</td></tr><tr><td align="center">xhdpi</td><td align="center">超高分辨率设备的资源（240～320dpi）</td></tr><tr><td align="center">xxhdpi</td><td align="center">超超高分辨率设备的资源（320～480dpi）</td></tr><tr><td align="center">land</td><td align="center">横屏设备的资源</td></tr><tr><td align="center">port</td><td align="center">竖屏设备的资源</td></tr></tbody></table><h3 id="使用最小宽度限定符"><a href="#使用最小宽度限定符" class="headerlink" title="使用最小宽度限定符"></a>使用最小宽度限定符</h3><p>不用large，新建res/layout-sw600dp/activity_main.xml。这样在屏幕宽度大于600dp时，则会自动调此布局。</p><h2 id="示例源码"><a href="#示例源码" class="headerlink" title="示例源码"></a>示例源码</h2><p>示例源码地址： <a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter4/FragmentBestPractice">一个简易新闻应用示例源码地址</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之网络</title>
      <link href="2017/05/09/FirstCode/FirstCode-Network/"/>
      <url>2017/05/09/FirstCode/FirstCode-Network/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><h2 id="WebView"><a href="#WebView" class="headerlink" title="WebView"></a>WebView</h2><p>WebView控件使用十分简单：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 布局</span><br><span class="line">&lt;WebView /&gt;</span><br><span class="line"></span><br><span class="line"># 应用</span><br><span class="line">webView.getSettings().setJavaScriptEnabled(<span class="keyword">true</span>); <span class="comment">// 设置浏览器属性，支持JavaScript脚本</span></span><br><span class="line">webView.setWebViewClient(<span class="keyword">new</span> WebViewClient());<span class="comment">//目标网页在当前WebView中显示，而不打开系统浏览器</span></span><br><span class="line">webView.loadUrl(<span class="string">&quot;http://huaqianlee.github.io&quot;</span>);</span><br><span class="line"></span><br><span class="line"># 权限</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><h3 id="HttpURLConnection"><a href="#HttpURLConnection" class="headerlink" title="HttpURLConnection"></a>HttpURLConnection</h3><p>获取实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">&quot;http://huaqianlee.github.io&quot;</span>);</span><br><span class="line">HttpURLConnection connection = (HttpURLConnection) url.openConnection();</span><br></pre></td></tr></table></figure><p>设置HTTP请求所使用的方法：GET或POST。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br></pre></td></tr></table></figure><p>其它定制：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">connection.setReadTimeout(<span class="number">8000</span>);<span class="comment">// ms</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>读取服务器返回的输入流：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream in = connection.getInputStream();</span><br></pre></td></tr></table></figure><p>关闭HTTP连接：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.disconnect();</span><br></pre></td></tr></table></figure><p>提交数据：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conneciton.setRequestMethod(<span class="string">&quot;POST&quot;</span>);</span><br><span class="line">DataOutputStream out = <span class="keyword">new</span> DataOutputStream(connection.getOutputStream());</span><br><span class="line">out.writeBytes(<span class="string">&quot;username=admin&amp;password=123456&quot;</span>);</span><br><span class="line"><span class="comment">//数据之间用“&amp;”隔开</span></span><br></pre></td></tr></table></figure><h3 id="OkHttp"><a href="#OkHttp" class="headerlink" title="OkHttp"></a>OkHttp</h3><p>OkHttp项目地址：<a href="https://github.com/square/okhttp">https://github.com/square/okhttp</a>。</p><p>下载：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Gradle: app/build.gradle</span><br><span class="line">compile &#x27;com.squareup.okhttp3:okhttp:3.7.0&#x27;</span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 创建实例</span><br><span class="line">OKHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line"></span><br><span class="line"># 创建Request对象,build()之前可以定制Request对象</span><br><span class="line">Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">    .url(<span class="string">&quot;http://huaqianlee.github.io&quot;</span>)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"># 创建Call对象,response为服务器返回的数据</span><br><span class="line">Response response  = client.newCall(request).execute();</span><br><span class="line"></span><br><span class="line"># 获取具体内容</span><br><span class="line">String responseData = response.body().string();</span><br><span class="line"></span><br><span class="line"># 如果发起POST请求，需先构建Body对象存储提交的参数</span><br><span class="line">RequestBody requestBOdy = <span class="keyword">new</span> FormBody.Builder()</span><br><span class="line">    .add(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">    .add(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>)</span><br><span class="line">    .build();</span><br><span class="line">    </span><br><span class="line"># 创建Request对象</span><br><span class="line">Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">    .url(<span class="string">&quot;http://huaqianlee.github.io&quot;</span>)</span><br><span class="line">    .post(requestBody)</span><br><span class="line">    .build();</span><br><span class="line"># 其余就和上面GET请求一样了    </span><br></pre></td></tr></table></figure><h2 id="解析XML格式数据"><a href="#解析XML格式数据" class="headerlink" title="解析XML格式数据"></a>解析XML格式数据</h2><p>假设服务器有如下一段xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">apps</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>1<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Google Maps<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">app</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">apps</span>&gt;</span>    </span><br></pre></td></tr></table></figure><h3 id="Pull解析方式"><a href="#Pull解析方式" class="headerlink" title="Pull解析方式"></a>Pull解析方式</h3><p>获取到网页字符数据后，解析方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">XmlPullParserFactory factory = XmlPullParserFactory.newInstance();</span><br><span class="line">XmlPullParser xmlPullParser = factory.newPullParser();</span><br><span class="line"><span class="comment">/*设入需要解析的服务器数据*/</span></span><br><span class="line">xmlPullParser.setInput(<span class="keyword">new</span> StringReader(xmlData));</span><br><span class="line"><span class="keyword">int</span> eventType = xmlPullParser.getEventType();</span><br><span class="line"><span class="keyword">while</span> (eventType != XmlPullParser.END_DOCUMENT) &#123;</span><br><span class="line">    String nodeName = xmlPullParser.getName(); <span class="comment">//获取当前节点名</span></span><br><span class="line">    <span class="keyword">switch</span> (eventType) &#123;</span><br><span class="line">        <span class="comment">// 开始解析某个结点</span></span><br><span class="line">        <span class="keyword">case</span> XmlPullParser.START_TAG: &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;id&quot;</span>.equals(nodeName)) &#123;</span><br><span class="line">                id = xmlPullParser.nextText();</span><br><span class="line">            &#125; ...</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 完成解析某个结点</span></span><br><span class="line">        <span class="keyword">case</span> XmlPullParser.END_TAG: &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;app&quot;</span>.equals(nodeName)) &#123;</span><br><span class="line">                <span class="comment">// 完成一个节点解析，要做什么代码写在这</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    eventType = xmlPullParser.next();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SAX解析方式"><a href="#SAX解析方式" class="headerlink" title="SAX解析方式"></a>SAX解析方式</h3><p>新建一个继承于DefaultHandler的子类，并重写5个方法，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContentHandler</span> <span class="keyword">extends</span> <span class="title">DefaultHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String nodeName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder version;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDocument</span><span class="params">()</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        id = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        name = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        version = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="comment">// 记录当前结点名</span></span><br><span class="line">        nodeName = localName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">characters</span><span class="params">(<span class="keyword">char</span>[] ch, <span class="keyword">int</span> start, <span class="keyword">int</span> length)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="comment">// 根据当前的结点名判断将内容添加到哪一个StringBuilder对象中</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;id&quot;</span>.equals(nodeName)) &#123;</span><br><span class="line">            id.append(ch, start, length);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;name&quot;</span>.equals(nodeName)) &#123;</span><br><span class="line">            name.append(ch, start, length);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;version&quot;</span>.equals(nodeName)) &#123;</span><br><span class="line">            version.append(ch, start, length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endElement</span><span class="params">(String uri, String localName, String qName)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;app&quot;</span>.equals(localName)) &#123;</span><br><span class="line">            <span class="comment">/*解析出来带换行符，所以调用trim()去掉*/</span></span><br><span class="line">            Log.d(<span class="string">&quot;ContentHandler&quot;</span>, <span class="string">&quot;id is &quot;</span> + id.toString().trim());</span><br><span class="line">            ...</span><br><span class="line">            <span class="comment">// 最后要将StringBuilder清空掉</span></span><br><span class="line">            id.setLength(<span class="number">0</span>);</span><br><span class="line">            name.setLength(<span class="number">0</span>);</span><br><span class="line">            version.setLength(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endDocument</span><span class="params">()</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.endDocument();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    SAXParserFactory factory = SAXParserFactory.newInstance();</span><br><span class="line">    XMLReader xmlReader = factory.newSAXParser().getXMLReader();</span><br><span class="line">    ContentHandler handler = <span class="keyword">new</span> ContentHandler();</span><br><span class="line">    <span class="comment">// 将ContentHandler的实例设置到XMLReader中</span></span><br><span class="line">    xmlReader.setContentHandler(handler);</span><br><span class="line">    <span class="comment">// 开始执行解析</span></span><br><span class="line">    xmlReader.parse(<span class="keyword">new</span> InputSource(<span class="keyword">new</span> StringReader(xmlData)));</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解析JSON格式数据"><a href="#解析JSON格式数据" class="headerlink" title="解析JSON格式数据"></a>解析JSON格式数据</h2><p>假设服务器有如下JSON数据：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;<span class="attr">&quot;id&quot;</span>:<span class="string">&quot;5&quot;</span>,<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;Google Map&quot;</span>,<span class="attr">&quot;version&quot;</span>:<span class="string">&quot;1.0&quot;</span>&#125;,...]</span><br></pre></td></tr></table></figure><h3 id="使用JSONObject"><a href="#使用JSONObject" class="headerlink" title="使用JSONObject"></a>使用JSONObject</h3><p>获取到字符数据后，解析方式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将服务器的JSON数组传入JSONArray*/</span></span><br><span class="line">JSONArray jsonArray = <span class="keyword">new</span> JSONArray(jsonData);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jsonArray.length(); i++) &#123;</span><br><span class="line">    JSONObject jsonObject = jsonArray.getJSONObject(i);</span><br><span class="line">    String id = jsonObject.getString(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    String name = jsonObject.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    String version = jsonObject.getString(<span class="string">&quot;version&quot;</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用GSON"><a href="#使用GSON" class="headerlink" title="使用GSON"></a>使用GSON</h3><p>加入依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile &#x27;com.google.code.gson:gson:2.7&#x27;</span><br></pre></td></tr></table></figure><p>基本用法：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># json 数据</span><br><span class="line">&#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;Tom&quot;</span>,<span class="attr">&quot;age&quot;</span>:<span class="string">&quot;20&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"># 解析</span><br><span class="line">Gson gson = new Gson();</span><br><span class="line">Person person = gson.fromJson(jsonData, Person.class);</span><br><span class="line"></span><br><span class="line"># 数组内容解析：</span><br><span class="line">List&lt;Person&gt; people = gson.fromJson(jsonData, new TypeToken&lt;List&lt;Person&gt;&gt;()&#123;&#125;.getType());</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 首先需要新建个App类</span><br><span class="line"></span><br><span class="line"># 解析</span><br><span class="line">Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">List&lt;App&gt; appList = gson.fromJson(jsonData, <span class="keyword">new</span> TypeToken&lt;List&lt;App&gt;&gt;() &#123;&#125;.getType());</span><br><span class="line"><span class="keyword">for</span> (App app : appList) &#123;</span><br><span class="line">    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;id is &quot;</span> + app.getId());</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="封装网络请求"><a href="#封装网络请求" class="headerlink" title="封装网络请求"></a>封装网络请求</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"># HTTP方式首先得新建一个回调接口</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">HttpCallbackListener</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onFinish</span><span class="params">(String s)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Exception e)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 封装</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendHttpRequest</span><span class="params">(<span class="keyword">final</span> String address, <span class="keyword">final</span> HttpCallbackListener listener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                HttpURLConnection connection = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    URL url = <span class="keyword">new</span> URL(address);</span><br><span class="line">                    connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">                    connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">                    connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">                    connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">                    InputStream in = connection.getInputStream();</span><br><span class="line">                    BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">                    StringBuilder response = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    String line;</span><br><span class="line">                    <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        response.append(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 回调onFinish()方法</span></span><br><span class="line">                        listener.onFinish(response.toString());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 回调onError()方法</span></span><br><span class="line">                        listener.onError(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        connection.disconnect();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendOkHttpRequest</span><span class="params">(<span class="keyword">final</span> String address, <span class="keyword">final</span> okhttp3.Callback callback)</span> </span>&#123;</span><br><span class="line">        OkHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(address)</span><br><span class="line">                .build();</span><br><span class="line">        client.newCall(request).enqueue(callback);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 调用</span><br><span class="line">HttpUtil.sendHttpRequest(<span class="string">&quot;http://huaqianlee.github.io&quot;</span>, <span class="keyword">new</span> HttpCallbackListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinish</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Exception e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">HttpUtil.sendOkHttprequest(<span class="string">&quot;http://huaqinalee.github.io&quot;</span>, <span class="keyword">new</span> Callback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String data = response.body().string();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="示例源码"><a href="#示例源码" class="headerlink" title="示例源码"></a>示例源码</h2><p>整个示例源码的地址：<br><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter9/NetworkTest">示例源码地址</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美式音标与英式音标</title>
      <link href="2017/05/08/English/Americal-and-english-phonetic/"/>
      <url>2017/05/08/English/Americal-and-english-phonetic/</url>
      
        <content type="html"><![CDATA[<p>由于自己现在自学的是美音，与学生时代学的国际音标有很大不同，查单词的时候时不时就会被音标搞困惑。因此特意搜索整理了一份美式音标表(K.k音标)以及与英式音标的区别。</p><h2 id="美式音标"><a href="#美式音标" class="headerlink" title="美式音标"></a>美式音标</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/english/America_ph.png" alt="美式音标"></p><blockquote><p><strong>[m] [n] [ŋ] [l] [r] - 母音前母音后发音不同</strong></p></blockquote><a id="more"></a><h2 id="美式音标与英式音标的区别"><a href="#美式音标与英式音标的区别" class="headerlink" title="美式音标与英式音标的区别"></a>美式音标与英式音标的区别</h2><p>两种音标有很大的区别容易混淆，需要注意。如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/english/yuying_dif.jpg" alt="元音"></p><p>辅音没什么区别，也在此列出：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/english/fuying_dif.jpg" alt="辅音"></p><blockquote><p>国际音标还有如下四个音标：[tr] [dr] [ts] [dz]</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之服务</title>
      <link href="2017/05/06/FirstCode/FirstCode-Service/"/>
      <url>2017/05/06/FirstCode/FirstCode-Service/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><h2 id="多线程编程"><a href="#多线程编程" class="headerlink" title="多线程编程"></a>多线程编程</h2><h3 id="线程基本用法"><a href="#线程基本用法" class="headerlink" title="线程基本用法"></a>线程基本用法</h3><p>方式一：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> MyThread().start();</span><br></pre></td></tr></table></figure><a id="more"></a><p>方式二：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread()).start();</span><br></pre></td></tr></table></figure><p>方式三：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure><h3 id="在子线程中更新UI"><a href="#在子线程中更新UI" class="headerlink" title="在子线程中更新UI"></a>在子线程中更新UI</h3><p>直接在子线程中更新UI将导致APP崩溃，所以正确做法是通过异步消息处理机制来实现。譬如按键实现更新UI：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UPDATE_TEXT = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">onClick() &#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span> <span class="params">()</span> </span>&#123; <span class="comment">// 这里不能更新UI</span></span><br><span class="line">            Message message = <span class="keyword">new</span> Message();</span><br><span class="line">            message.what = UPDATE_TEXT;</span><br><span class="line">            handler.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Handler handler = <span class="keyword">new</span> Handler() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(msg.what) &#123;</span><br><span class="line">            <span class="keyword">case</span> UPDATE_TEXT:</span><br><span class="line">            <span class="comment">// 进行更新UI操作</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另一种在子线程更新UI的快捷方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">runOnUiThread(<span class="keyword">new</span> RUnnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> run &#123;</span><br><span class="line">        <span class="comment">// UI操作逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="异步消息处理机制"><a href="#异步消息处理机制" class="headerlink" title="异步消息处理机制"></a>异步消息处理机制</h3><p>Android的异步消息处理主要由四个部分组成：</p><ol><li>Message<br> 可以携带少量信息，用于在线程之间传递。</li><li>Handler<br> 处理者，用于发送与处理消息。</li><li>MessageQueue<br> 消息队列，存放所有Handler发送的消息，等待处理，每个线程只有一个。</li><li>Looper<br> MessageQueue的管家，其loop()方法循环取出消息传递到handleMessage()方法中处理。每个线程只有一个。</li></ol><p>流程示意图如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/firstcode/yibu_flow.png" alt="异步消息机制处理流程图"></p><h3 id="AsyncTask"><a href="#AsyncTask" class="headerlink" title="AsyncTask"></a>AsyncTask</h3><p>AsyncTask的一个简单示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">** Void - 不需传入参数给后台任务</span></span><br><span class="line"><span class="comment">** Integer - 用整型数据作为后台任务进度显示单位</span></span><br><span class="line"><span class="comment">** Boolean - 布尔型数据返回执行结果</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadTask</span> <span class="keyword">extends</span> <span class="title">AsyncTask</span>&lt;<span class="title">Void</span>, <span class="title">Integer</span>, <span class="title">Boolean</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/*后台任务开始前调用*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPreExecute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        progressDialog.show();<span class="comment">//显示进度对话框</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*执行在子线程，耗时任务应在此方法执行*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Boolean <span class="title">doInBackground</span><span class="params">(Void... params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> downloadPercent = doDownload();</span><br><span class="line">                publishProgress(downloadPercent); <span class="comment">// 反馈当前执行进度</span></span><br><span class="line">                <span class="keyword">if</span> (donwloadPercent &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*publishProgress触发*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onProgressUpdate</span><span class="params">(Integer... values)</span> </span>&#123;</span><br><span class="line">        progressDialog.setMessage(<span class="string">&quot;Downloaded&quot;</span> + values[<span class="number">0</span>]+<span class="string">&quot;%&quot;</span>);</span><br><span class="line">        <span class="comment">// 更新下载进度</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*doInBackground返回触发*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPostExecute</span> <span class="params">( Boolean result)</span> </span>&#123;</span><br><span class="line">        progressDialog.dismiss();<span class="comment">//关闭进度对话框</span></span><br><span class="line">        <span class="keyword">if</span>(result) &#123;&#125; <span class="keyword">else</span>&#123;&#125;  <span class="comment">// 提示下载结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动此任务</span></span><br><span class="line"><span class="keyword">new</span> DownloadTask().execute();</span><br></pre></td></tr></table></figure><h2 id="服务基本用法"><a href="#服务基本用法" class="headerlink" title="服务基本用法"></a>服务基本用法</h2><h3 id="定义服务"><a href="#定义服务" class="headerlink" title="定义服务"></a>定义服务</h3><p>创建服务时两个属性：Exported - 是否允许其他程序访问，Enabled - 启用服务。示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*第一次创建时调用，创建一个实例后不再调用*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*每次启动服务时调用*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*必须实现的抽象方法*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动和停止服务"><a href="#启动和停止服务" class="headerlink" title="启动和停止服务"></a>启动和停止服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务</span><br><span class="line">Intent startIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class);</span><br><span class="line">startService(startIntent);</span><br><span class="line"></span><br><span class="line"># 停止服务</span><br><span class="line">Intent stopIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class);</span><br><span class="line">stopService(stopIntent);</span><br></pre></td></tr></table></figure><h3 id="活动与服务通信"><a href="#活动与服务通信" class="headerlink" title="活动与服务通信"></a>活动与服务通信</h3><p>让MyService提供下载功能，并活动可以决定下载时间和查看进度，添加通信代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># 服务部分</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DownloadBinder mBinder = <span class="keyword">new</span> DownloadBinder();</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DownloadBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDownload</span> <span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getProgress</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 活动部分</span><br><span class="line">实现匿名类：</span><br><span class="line">    <span class="keyword">private</span> MyService.DownloadBinder downloadBinder;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ServiceConnection connection= <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">            <span class="comment">/*service向下转型得到DownloadBinder，进行交互*/</span></span><br><span class="line">            downloadBinder= (MyService.DownloadBinder) service;</span><br><span class="line">            downloadBinder.startDownload();</span><br><span class="line">            downloadBinder.getProgress();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">绑定服务：</span><br><span class="line">    Intent bindIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.class);</span><br><span class="line">    bindService(bindIntent,connection,BIND_AUTO_CREATE); <span class="comment">//arg3:绑定后自动创建服务，onCreate()执行，onStartCommand()不执行</span></span><br><span class="line">    </span><br><span class="line">解绑服务：</span><br><span class="line">    unbindService(connection);</span><br></pre></td></tr></table></figure><h3 id="前台服务"><a href="#前台服务" class="headerlink" title="前台服务"></a>前台服务</h3><p>前台服务可以一直处于运行状态，而不会被垃圾回收，并且会在系统状态栏显示。一个简单的示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate();</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,MainActivity.class);</span><br><span class="line">    PendingIntent pendingIntent = PendingIntent.getActivity(<span class="keyword">this</span>,<span class="number">0</span>,intent,<span class="number">0</span>);</span><br><span class="line">    Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>)</span><br><span class="line">            .setContentTitle(<span class="string">&quot;This is a content title!&quot;</span>)</span><br><span class="line">            .setContentText(<span class="string">&quot;this is a content text!&quot;</span>)</span><br><span class="line">            .setWhen(System.currentTimeMillis())</span><br><span class="line">            .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class="line">            .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher))</span><br><span class="line">            .setContentIntent(pendingIntent)</span><br><span class="line">            .build();</span><br><span class="line">    startForeground(<span class="number">1</span>,notification);<span class="comment">// 将服务变为前台服务</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用IntentService"><a href="#使用IntentService" class="headerlink" title="使用IntentService"></a>使用IntentService</h3><p><strong>服务默认运行于主线程</strong>，所以耗时逻辑得通过多线程技术处理。IntentService的好处就是新开线程来处理耗时操作。<br>标准写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">onStartCommand()&#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 处理具体逻辑</span></span><br><span class="line">            stopSelf();<span class="comment">//执行完毕后自动停止服务</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IntentService方式：</p><blockquote><p>AS自动创建IntentService会生成一大堆用不到的代码，因此手动创建</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyIntentService</span> <span class="keyword">extends</span> <span class="title">IntentService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyIntentService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">&quot;MyIntentService&quot;</span>);<span class="comment">// 调用父类有参构造函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onHandleIntent</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 处理具体逻辑，已经运行于子线程</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 启动IntentService</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, MyIntentService.class);</span><br><span class="line">startService(intent);</span><br><span class="line"></span><br><span class="line"># 注册</span><br><span class="line">&lt;service android:name=<span class="string">&quot;.MyIntentService&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之手机多媒体</title>
      <link href="2017/05/06/FirstCode/FirstCode-media/"/>
      <url>2017/05/06/FirstCode/FirstCode-media/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><h2 id="使用通知"><a href="#使用通知" class="headerlink" title="使用通知"></a>使用通知</h2><h3 id="通知基本用法"><a href="#通知基本用法" class="headerlink" title="通知基本用法"></a>通知基本用法</h3><p>获取通知:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);</span><br></pre></td></tr></table></figure><a id="more"></a><p>构建Notification对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(context)</span><br><span class="line">.setContentTitle(..)</span><br><span class="line">.setContentText(..)</span><br><span class="line">...</span><br><span class="line">.build();</span><br></pre></td></tr></table></figure><p>显示通知：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager.notify(<span class="number">1</span>, notification);</span><br></pre></td></tr></table></figure><p>一个实例写法：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, NotificationActivity.class);</span><br><span class="line">PendingIntent pi = PendingIntent.getActivity(MainActivity.<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>);</span><br><span class="line">NotificationManager manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(MainActivity.<span class="keyword">this</span>)</span><br><span class="line">        .setContentTitle(<span class="string">&quot;This is content title&quot;</span>)</span><br><span class="line">        .setContentText(<span class="string">&quot;this is content text&quot;</span>)</span><br><span class="line">        .setWhen(System.currentTimeMillis())</span><br><span class="line">        .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class="line">        .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher))</span><br><span class="line">        .setContentIntent(pi)  <span class="comment">// 设置点击跳转</span></span><br><span class="line">        .setAutoCancel(<span class="keyword">true</span>)</span><br><span class="line">        .setDefaults(Notification.DEFAULT_ALL)</span><br><span class="line">        .setContentText(<span class="string">&quot;This is a notification test,  this Builder has many func, but do not test all of them &quot;</span>)</span><br><span class="line">        .setPriority(NotificationCompat.PRIORITY_MAX)</span><br><span class="line">        .build();</span><br><span class="line">manager.notify(<span class="number">1</span>,notification);</span><br><span class="line"><span class="comment">//manager.cancel(1);  // 同上面autocancel()，取消通知，这样通知点击后才能从通知栏消失</span></span><br><span class="line"></span><br><span class="line"># Intent - 立即执行某个动作， PendingIntent - 合适的时机去执行某个动作</span><br></pre></td></tr></table></figure><h3 id="通知的进阶功能"><a href="#通知的进阶功能" class="headerlink" title="通知的进阶功能"></a>通知的进阶功能</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.setSound(Uri.fromFile(<span class="keyword">new</span> File(<span class="string">&quot;/system/media/audio/ringtones/Luna.ogg&quot;</span>))</span><br><span class="line">.setVibrate(<span class="keyword">new</span> <span class="keyword">long</span>[](<span class="number">0</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>)) <span class="comment">// 下标偶数包括0静止时长，奇数-振动时长</span></span><br><span class="line">.setLights(Color.GREE, <span class="number">1000</span>,<span class="number">1000</span>)</span><br><span class="line">.setDefaults(NotificationCompat.DEFAULT_ALL)<span class="comment">//默认方式实现上述三种功能</span></span><br><span class="line">.setStyle(<span class="keyword">new</span> NotificationCompat.BigTextStyle().bigText(<span class="string">&quot;&quot;</span>)) <span class="comment">//完整显示一大段文字</span></span><br><span class="line">.setStyle(<span class="keyword">new</span> NotificationCompat.BigPictureStyle().bigPicture(BitmapFactory.decodeResource(getResources(),R.drawable.big_image))<span class="comment">//显示大图片</span></span><br><span class="line">.setPriority(NotificationCompat.PRIORITY_MAX) <span class="comment">// 设置通知重要程度</span></span><br><span class="line"></span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.VIBRATE&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="摄像头、相册和音视频"><a href="#摄像头、相册和音视频" class="headerlink" title="摄像头、相册和音视频"></a>摄像头、相册和音视频</h2><p>这部分不想搞笔记了，留下个实例地址吧：<br><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter8">摄像头、相册和音视频简例</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之跨程序共享数据-内容提供器</title>
      <link href="2017/05/03/FirstCode/FirstCode-Content-Provider/"/>
      <url>2017/05/03/FirstCode/FirstCode-Content-Provider/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><p>内容提供器(Content Provider)是Android实现跨程序共享数据的标准方式。</p><h2 id="运行时权限"><a href="#运行时权限" class="headerlink" title="运行时权限"></a>运行时权限</h2><h3 id="Android权限机制"><a href="#Android权限机制" class="headerlink" title="Android权限机制"></a>Android权限机制</h3><p>为了安全，Android6.0后引入了新特性，让APP申请的权限用户可控，Android的权限分为了两类：1. 普通权限，2.危险权限。危险权限一共有9组24个权限。</p><a id="more"></a><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/firstcode/android_permission.jpg" alt="Android danger permission"></p><p>权限详情参考：<a href="http://developer.android.com/reference/android/Manifest.permission.html">官网权限介绍</a>。</p><h3 id="程序运行时申请权限"><a href="#程序运行时申请权限" class="headerlink" title="程序运行时申请权限"></a>程序运行时申请权限</h3><p>以CALL_PHONE为例来说明。定义触发打电话的逻辑：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_CALL);</span><br><span class="line">intent.setData(Uri.parse(<span class="string">&quot;tel:10086&quot;</span>));</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><p>在AndroidMainifest.xml中声明权限：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CALL_PHONE&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>这样声明的APP运行在6.0及以上的版本则会报错，要求在使用危险权限是都必须进行运行时权限处理。所以就得对触发打电话的逻辑进行修改：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 申请权限，处理打电话逻辑 &#123;</span><br><span class="line"><span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">    ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;Manifest.permission.CALL_PHONE&#125;,<span class="number">1</span>); <span class="comment">// 申请授权</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    call(); <span class="comment">// 已授权，CALL</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_CALL);</span><br><span class="line">        intent.setData(Uri.parse(<span class="string">&quot;tel:911&quot;</span>));</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SecurityException e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="meta">@NonNull</span> String[] permissions, <span class="meta">@NonNull</span> <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//super.onRequestPermissionsResult(requestCode, permissions, grantResults);</span></span><br><span class="line">    <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                call();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;You denied the permission!&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="访问其他程序中数据"><a href="#访问其他程序中数据" class="headerlink" title="访问其他程序中数据"></a>访问其他程序中数据</h2><h3 id="ContentResolver基本用法"><a href="#ContentResolver基本用法" class="headerlink" title="ContentResolver基本用法"></a>ContentResolver基本用法</h3><p>ContentResolver类的实例可以通过Context的getContentResolver()获取。其提供了一系列方法用CRUD操作。ContentResolver中的增删改查方法接收一个Uri参数，其唯一标识符有两部分组成：authority和path。为了避免冲突一般用authority用包名，path对应用程序中的表进行区分。如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># content://authority/path</span></span><br><span class="line">content://com.example.app.provider/table1</span><br><span class="line">content://com.example.app.provider/table2</span><br></pre></td></tr></table></figure><p>解析：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uri uri = Uri.parse(<span class="string">&quot;content://authority/path&quot;</span>)</span><br></pre></td></tr></table></figure><p>查询：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询</span><br><span class="line">Cursor cursor = getContentResolver().query(uri,projection,selecton,selectionArgs,sortOrder);</span><br></pre></td></tr></table></figure><p>ContentResolver的查询方法参数解释如下：</p><table><thead><tr><th align="center">参数</th><th align="center">对应SQL部分</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">uri</td><td align="center">from table_name</td><td align="center">指定查询某应用程序下一张表</td></tr><tr><td align="center">projection</td><td align="center">select column1,column2</td><td align="center">指定查询的列名</td></tr><tr><td align="center">selection</td><td align="center">where column=value</td><td align="center">指定where条件</td></tr><tr><td align="center">selectionArgs</td><td align="center">-</td><td align="center">为where重占位符提供值</td></tr><tr><td align="center">orderBy</td><td align="center">order by column1,column2</td><td align="center">指定查询结果排序方式</td></tr></tbody></table><p>获取到Cursor对象后，就能方便取出数据了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(cursor=!<span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span>(cursor.moveToNext()) &#123;</span><br><span class="line">        String column1 = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;column1&quot;</span>));</span><br><span class="line">        <span class="keyword">int</span> column2 = cursor.geteInt(...);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>增改删：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 增加</span><br><span class="line">ContentValues value = newContentValues();</span><br><span class="line">values.put(<span class="string">&quot;column1&quot;</span>,<span class="string">&quot;text&quot;</span>);</span><br><span class="line">values.put(<span class="string">&quot;column2&quot;</span>,<span class="number">1</span>);</span><br><span class="line">getContentResolver().insert(uri, values);</span><br><span class="line"></span><br><span class="line">#更新</span><br><span class="line">values.put(<span class="string">&quot;column1&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">getContentResolver().update(uri, values,<span class="string">&quot;column1 = ? and column2 = ?&quot;</span>,<span class="keyword">new</span> String [] &#123;<span class="string">&quot;text&quot;</span>, <span class="string">&quot;1&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line">#删除</span><br><span class="line"></span><br><span class="line">getContentResolver().delete(uri, <span class="string">&quot;column2 = ?&quot;</span>,<span class="keyword">new</span> String [] &#123;<span class="string">&quot;1&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><h3 id="读取系统联系人"><a href="#读取系统联系人" class="headerlink" title="读取系统联系人"></a>读取系统联系人</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 判断权限</span><br><span class="line"><span class="keyword">if</span>(ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.READ_CONTACTS）!= PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">    ActivityCompat.requestPermisssions(<span class="keyword">this</span>,<span class="keyword">new</span> String []&#123;Mainest.permission.READ_CONTACTS&#125;,<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    readContacts();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onRequestPermissionsResult&#123;</span><br><span class="line">    <span class="keyword">switch</span>(requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">         <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">             readContacts();</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">         <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 读取共享数据</span><br><span class="line">Cursor cursor = getContentResolver().qurey(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">if</span> (cursor != <span class="keyword">null</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">        String name = cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));</span><br><span class="line">        String number = cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));</span><br><span class="line">        contactLists.add(name+<span class="string">&quot;\n&quot;</span>+number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后需要加上读取联系人权限，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_CONTACTS&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建内容提供器"><a href="#创建内容提供器" class="headerlink" title="创建内容提供器"></a>创建内容提供器</h2><h3 id="创建步骤"><a href="#创建步骤" class="headerlink" title="创建步骤"></a>创建步骤</h3><p>首先需要实现一个类继承ContentProvider，重写6个抽象方法，一个重要参数就是Uri，URI还可以在前面所描述的组成后面加上一个id，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">content://authority/path/id // 访问指定表中指定id的数据，不指定id时就访问所以数据</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以用通配符来匹配id</span></span><br><span class="line">* - 匹配任意长度字符</span><br><span class="line"><span class="comment"># - 匹配任意长度数字 </span></span><br></pre></td></tr></table></figure><p>另外，其中比较特殊的getType()用于获取uri对象对应的MIME类型，其格式要求如下：</p><ul><li>内容以路径结尾：vnd.android.cursor.dir/vnd.<authority>.<path></li><li>内容以id结尾：vnd.android.cursor.item/vnd.<authority>.<path></li></ul><p>一个完整的内容提供器实例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatabaseProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOOK_DIR = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOOT_ITEM = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CATEGORY_DIR = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CATEGORY_ITEM = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY = <span class="string">&quot;com.lee.databasetest.provider&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> UriMatcher uriMatcher;</span><br><span class="line">    <span class="keyword">private</span> MyDataBaseHelper helper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        uriMatcher = <span class="keyword">new</span> UriMatcher(UriMatcher.NO_MATCH);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">&quot;book&quot;</span>,BOOK_DIR);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">&quot;book/#&quot;</span>,BOOT_ITEM);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">&quot;category&quot;</span>,CATEGORY_DIR);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">&quot;category/#&quot;</span>,CATEGORY_ITEM);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DatabaseProvider</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Implement this to handle requests to delete one or more rows.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">&quot;Not yet implemented&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests for the MIME type of the data</span></span><br><span class="line">        <span class="comment">// at the given URI.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">&quot;Not yet implemented&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Uri <span class="title">insert</span><span class="params">(Uri uri, ContentValues values)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = helper.getWritableDatabase();</span><br><span class="line">        Uri uriReturn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">            <span class="keyword">case</span> BOOT_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newBookId = db.insert(<span class="string">&quot;Book&quot;</span>, <span class="keyword">null</span>, values);</span><br><span class="line">                uri = Uri.parse(<span class="string">&quot;content://&quot;</span>+AUTHORITY+<span class="string">&quot;/book/&quot;</span>+newBookId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newCategoryId = db.insert(<span class="string">&quot;Category&quot;</span>, <span class="keyword">null</span>, values);</span><br><span class="line">                uri = Uri.parse(<span class="string">&quot;content://&quot;</span>+AUTHORITY+<span class="string">&quot;/category&quot;</span>+newCategoryId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to initialize your content provider on startup.</span></span><br><span class="line">        helper = <span class="keyword">new</span> MyDataBaseHelper(getContext(),<span class="string">&quot;book.db&quot;</span>,<span class="keyword">null</span>,<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cursor <span class="title">query</span><span class="params">(Uri uri, String[] projection, String selection,</span></span></span><br><span class="line"><span class="function"><span class="params">                        String[] selectionArgs, String sortOrder)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = helper.getReadableDatabase();</span><br><span class="line">        Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span>  BOOK_DIR:</span><br><span class="line">                cursor = db.query(<span class="string">&quot;Book&quot;</span>, projection,selection,selectionArgs,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOT_ITEM:</span><br><span class="line">                String bookId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                cursor = db.query(<span class="string">&quot;Book&quot;</span>, projection,<span class="string">&quot;id = ?&quot;</span>,<span class="keyword">new</span> String[]&#123;bookId&#125;,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                cursor = db.query(<span class="string">&quot;Category&quot;</span>, projection,selection,selectionArgs,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                String categoryId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                cursor = db.query(<span class="string">&quot;Category&quot;</span>,projection,<span class="string">&quot;id = ?&quot;</span>, <span class="keyword">new</span> String[]&#123;categoryId&#125;,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cursor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Uri uri, ContentValues values, String selection,</span></span></span><br><span class="line"><span class="function"><span class="params">                      String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests to update one or more rows.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">&quot;Not yet implemented&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多代码见：<a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter7/DataBaseTest/app/src/main/java/com/example/lee/databasetest">跨程序数据共享实例</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之数据存储</title>
      <link href="2017/04/29/FirstCode/FirstCode-data-storage/"/>
      <url>2017/04/29/FirstCode/FirstCode-data-storage/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><h2 id="文件存储"><a href="#文件存储" class="headerlink" title="文件存储"></a>文件存储</h2><h3 id="数据存到文件"><a href="#数据存到文件" class="headerlink" title="数据存到文件"></a>数据存到文件</h3><p>Context类提供了一个openFileOutput()方法，可以用于文件存储，此方法有两个参数：</p><ul><li>arg1 - 文件名，不包括路径，全默认存储于/data/data/<packagename>/files/</li><li>arg2 - 文件操作模式， MODE_PRIVATE（覆盖式）和 MODE_APPEND（追加式）<a id="more"></a> </li></ul><p>如下是一个简短示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    FileOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">    BufferedWriter writer = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        out = openFileOutput(<span class="string">&quot;data&quot;</span>, Context.MODE_PRIVATE);</span><br><span class="line">        writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(out));</span><br><span class="line">        writer.write(<span class="string">&quot;the content&quot;</span>);</span><br><span class="line">    &#125; ... <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(wirter != <span class="keyword">null</span>)</span><br><span class="line">            writer.close();</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="从文件中读取数据"><a href="#从文件中读取数据" class="headerlink" title="从文件中读取数据"></a>从文件中读取数据</h3><p>Context类提供了一个openFileInput()方法，用于从文件读取数据，简例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public String <span class="function"><span class="title">load</span></span>() &#123;</span><br><span class="line">    FileInputStream <span class="keyword">in</span> = null;</span><br><span class="line">    BufferedReader reader = null;</span><br><span class="line">    StringBuilder content = new StringBuilder();</span><br><span class="line">    try &#123;</span><br><span class="line">        <span class="keyword">in</span> = openFileInput(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">        reader = new BufferedReader(new InputStreamReader(<span class="keyword">in</span>));</span><br><span class="line">        String line = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>((line = reader.readLine()) != null) &#123;</span><br><span class="line">            content.append(line);</span><br><span class="line">        &#125;...finally &#123;</span><br><span class="line">            <span class="keyword">if</span>(reader != null) &#123;</span><br><span class="line">                reader.close();</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> content.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断字符是否为空的一个方式</span></span><br><span class="line">TextUtils.isEmpty(string)</span><br></pre></td></tr></table></figure><h2 id="SharedPreferences存储"><a href="#SharedPreferences存储" class="headerlink" title="SharedPreferences存储"></a>SharedPreferences存储</h2><h3 id="将数据存储到SharedPreferences中"><a href="#将数据存储到SharedPreferences中" class="headerlink" title="将数据存储到SharedPreferences中"></a>将数据存储到SharedPreferences中</h3><p>SharedPreferences是通过键值对的方式存储，Android中获取SharedPreferences对象的三种方法：</p><ol><li><p>Context类中的getSharedPreferences()方法。</p><ul><li>arg1: SharedPreferences文件名，<strong>存于：/data/data/<package_name>/shared_prefs/</strong></li><li>arg2: 操作模式，只有MODE_PRIVATE一种方式，传入0也一样的效果，其余皆被废弃</li></ul></li><li><p>Activity中的getPreferences()方法。</p><ul><li>一个参数：操作模式，自动以类名命名文件</li></ul></li><li><p>PreferenceManager类中的getDefaultSharedPreferences()静态方法，</p><ul><li>接收Context参数，自动用包名为前缀命名文件 </li></ul></li></ol><p>获取了SharedPreferences对象后， 就可以存储数据了，主要分三步实现：</p><ul><li><p><strong>step1</strong>：通过SharedPreferences对象的edit()方法获取SharedPreferences.Editor对象</p></li><li><p><strong>step2</strong>：通过putXxx()方法向SharedPreferences.Editor对象添加数据</p></li><li><p><strong>step3</strong>：调用apply()方法提交数据，完成数据存储。</p></li></ul><p>一个存储的简单书写方式：    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences.Editor editor = getSharedPreferences(<span class="string">&quot;data&quot;</span>,MODE_PRIVATE).edit();</span><br><span class="line">editor.putString(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;andy&quot;</span>);</span><br><span class="line">editor.putInt(<span class="string">&quot;age&quot;</span>,)</span><br><span class="line">editor.putBoolean(<span class="string">&quot;married&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">editor.apply();</span><br></pre></td></tr></table></figure><h3 id="从SharedPreferences中读取数据"><a href="#从SharedPreferences中读取数据" class="headerlink" title="从SharedPreferences中读取数据"></a>从SharedPreferences中读取数据</h3><p>读取数据的方式十分简单，得到SharedPreferences对象后通过getX()方法即可获取到数据。getX()方法有两个参数：</p><ul><li>arg1：key值</li><li>arg2：当通过key值找不到内容时的默认值</li></ul><h2 id="SQLite数据库存储"><a href="#SQLite数据库存储" class="headerlink" title="SQLite数据库存储"></a>SQLite数据库存储</h2><p>SQL的数据类型：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">integer：整型</span><br><span class="line">real：浮点型</span><br><span class="line">text：文本类型</span><br><span class="line">blob：二进制</span><br><span class="line"><span class="comment"># 一些其他关键字</span></span><br><span class="line">primary key：设为主键</span><br><span class="line">autoincrement：自增长</span><br></pre></td></tr></table></figure><p>一个关键的抽象类SQLiteOpenHelper及其两个实例方法：<br><strong>getReadableDatabase()</strong> 和 **getWritableDatabase()**。两个方法都能创建或打开数据库，不过当数据不可写入是，getWritableDatabase()将报异常。</p><h3 id="创建数据库及CRUD操作"><a href="#创建数据库及CRUD操作" class="headerlink" title="创建数据库及CRUD操作"></a>创建数据库及CRUD操作</h3><p>要使用SQLite，首先需要实现SQLiteOpenHelper抽象类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_BOOK = <span class="string">&quot;create table Book (&quot;</span> +</span><br><span class="line">            <span class="string">&quot;id integer primary key autoincrement,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;author text,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;price real,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;pages integer,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;name text)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_CATEGORY = <span class="string">&quot;create table Category (&quot;</span> +</span><br><span class="line">            <span class="string">&quot;id integer primary key autoincrement,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;category_name text,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;category_code integer)&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context mcontext;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDataBaseHelper</span><span class="params">(Context context, String name, SQLiteDatabase.CursorFactory factory, <span class="keyword">int</span> version)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, name, factory, version);</span><br><span class="line">        mcontext = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">/*创建数据库*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class="line">        db.execSQL(CREATE_BOOK);</span><br><span class="line">        db.execSQL(CREATE_CATEGORY);</span><br><span class="line">        Toast.makeText(mcontext, <span class="string">&quot; Created succeeded!&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*升级数据库*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line">        db.execSQL(<span class="string">&quot;drop table if exists Book&quot;</span>);</span><br><span class="line">        db.execSQL(<span class="string">&quot;drop table if exists Category&quot;</span>);</span><br><span class="line">        onCreate(db);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了这类之后，就可以进行CRUD操作了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#c-create r-retrieve(查询) u-update d-delete</span><br><span class="line"><span class="keyword">final</span> MyDataBaseHelper helper = <span class="keyword">new</span> MyDataBaseHelper(<span class="keyword">this</span>, <span class="string">&quot;BookStore.db&quot;</span>, <span class="keyword">null</span>, <span class="number">1</span>); <span class="comment">// 1 为数据库版本号， 当升级数据库的时候需更新</span></span><br><span class="line"><span class="comment">// 创建数据库</span></span><br><span class="line">SQLiteDatabase db = helper.getWritableDatabase();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加数据</span></span><br><span class="line">ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">values.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Just for fun&quot;</span>);</span><br><span class="line">...</span><br><span class="line">db.insert(<span class="string">&quot;Book&quot;</span>, <span class="keyword">null</span>, values);</span><br><span class="line"><span class="comment">// 更新数据</span></span><br><span class="line">values.put(<span class="string">&quot;price&quot;</span>,<span class="number">1000</span>);</span><br><span class="line">db.update(<span class="string">&quot;Book&quot;</span>, values,<span class="string">&quot;name=?&quot;</span>,<span class="keyword">new</span> String[]&#123;<span class="string">&quot;Just for fun&quot;</span>&#125;);</span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line">db.delete(<span class="string">&quot;Book&quot;</span>,<span class="string">&quot;price &lt; ?&quot;</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;100&quot;</span>&#125;);</span><br><span class="line"><span class="comment">// 查询数据</span></span><br><span class="line">Cursor cursor = db.query(<span class="string">&quot;Book&quot;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">if</span> (cursor.moveToFirst()) &#123;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        String name = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">while</span> (cursor.moveToNext());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="直接使用SQL操作数据库"><a href="#直接使用SQL操作数据库" class="headerlink" title="直接使用SQL操作数据库"></a>直接使用SQL操作数据库</h3><p>直接使用SQL来完成CRUD操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加数据</span></span><br><span class="line">db.execSQL(<span class="string">&quot;insert into Book(name,author,pages,price) values(?,?,?,?)&quot;</span>, new String&#123;<span class="string">&quot;Just for fun&quot;</span>,<span class="string">&quot;Linus&quot;</span>,<span class="string">&quot;355&quot;</span>,<span class="string">&quot;99&quot;</span>&#125;);</span><br><span class="line"><span class="comment"># 更新数据</span></span><br><span class="line">de.execSQL(<span class="string">&quot;update Book set price =? where name = ?&quot;</span>,new String[]&#123;<span class="string">&quot;88&quot;</span>,<span class="string">&quot;Just for fun&quot;</span>);</span><br><span class="line"><span class="comment"># 删除数据</span></span><br><span class="line">db.execSQL(<span class="string">&quot;delete from Book where pages &gt; ?&quot;</span>, new String[]&#123;<span class="string">&quot;300&quot;</span>&#125;);</span><br><span class="line"><span class="comment"># 查询数据</span></span><br><span class="line">db.rawQuery(<span class="string">&quot;select * from Book&quot;</span>,null);</span><br></pre></td></tr></table></figure><h3 id="命令查看数据库"><a href="#命令查看数据库" class="headerlink" title="命令查看数据库"></a>命令查看数据库</h3><p>连接上手机，adb shell进入终端：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看数据库中的表</span></span><br><span class="line">.table   </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看建表语句</span></span><br><span class="line">.schema</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询语句</span></span><br><span class="line">select * from Book</span><br></pre></td></tr></table></figure><h2 id="使用开源LitePal操作数据库"><a href="#使用开源LitePal操作数据库" class="headerlink" title="使用开源LitePal操作数据库"></a>使用开源LitePal操作数据库</h2><p>Litepal采用了对象关系映射(ORM)的模式，其地址：<a href="https://github.com/LitePalFramework/LitePal">https://github.com/LitePalFramework/LitePal</a>。</p><h3 id="配置LitePal"><a href="#配置LitePal" class="headerlink" title="配置LitePal"></a>配置LitePal</h3><p>要使用LitePal首先需要再app/build.gradle文件里添加依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile <span class="string">&#x27;org.litepal.android:core:1.3.2&#x27;</span> <span class="comment"># 目前最新已经俩到1.5.1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来需要配置litepal.xml文件。需在app/src/main下新建assets/litepal.xml。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;litepal&gt;</span><br><span class="line">    &lt;dbname value&#x3D;&quot;BookStore&quot;&gt;&lt;&#x2F;dbname&gt; # 指定数据库名</span><br><span class="line">    &lt;version value&#x3D;&quot;1&quot;&gt;&lt;&#x2F;version&gt; # 指定数据库版本号</span><br><span class="line">    &lt;list&gt;&lt;&#x2F;list&gt;  # 指定映射模型</span><br><span class="line">&lt;&#x2F;litepal&gt;</span><br></pre></td></tr></table></figure><p>最后需要再AndroidMannifest.xml中做如下配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;org.litepal.LitePalApplication&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">...</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果已经有了自己的application，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.example.MyOwnApplication&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">...</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以通过如下方式实现让LitePal成功运行：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyOwnApplication</span> <span class="keyword">extends</span> <span class="title">AnotherApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        LitePal.initialize(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建和升级数据库"><a href="#创建和升级数据库" class="headerlink" title="创建和升级数据库"></a>创建和升级数据库</h3><p>为了创建一个Book表，先定义一个Book类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> <span class="keyword">extends</span> <span class="title">DataSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// generated getters and setters.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来将Book类添加到litepal.xml的映射模型列表中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">class</span>=<span class="string">&quot;com.example.litepaltest.Book&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br></pre></td></tr></table></figure><p>现在进行任意一次数据库操作，BookStore.db就会自动被创建出来：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Connector.getDataBase(); <span class="comment">// LitePal 的一个最简单数据库操作方法</span></span><br></pre></td></tr></table></figure><p>现在如若要向表中添加列等数据，只需要在Book类中添加一个字段即可。</p><h3 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加数据</span></span><br><span class="line">Book book = <span class="keyword">new</span> Book();</span><br><span class="line">book.setXx();</span><br><span class="line">book.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以存储对象更新数据</span></span><br><span class="line">book.setXx();</span><br><span class="line">book.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通用方式更新数据</span></span><br><span class="line">book.setPrice(<span class="number">14.95</span>);</span><br><span class="line">book.setPress(<span class="string">&quot;Anchor&quot;</span>);</span><br><span class="line">book.updateAll(<span class="string">&quot;name=? and author = ?&quot;</span>,<span class="string">&quot;Just for fun&quot;</span>,<span class="string">&quot;Linus&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定数据更新为默认值</span></span><br><span class="line">book.setToDefault(<span class="string">&quot;pages&quot;</span>);</span><br><span class="line">book.updateAll();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line">DataSupport.deleteAll(Book.class, <span class="string">&quot;price &lt; ?&quot;</span>,<span class="string">&quot;15&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询数据</span></span><br><span class="line">List&lt;Book&gt; books = DataSupport.findAll(Book.class);</span><br></pre></td></tr></table></figure><h3 id="更多方法"><a href="#更多方法" class="headerlink" title="更多方法"></a>更多方法</h3><p><a href="https://github.com/LitePalFramework/LitePal">https://github.com/LitePalFramework/LitePal</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PX4之外设代码结构及流程-IMU</title>
      <link href="2017/03/29/Uav/px4-imu-mpu9250-code-structure/"/>
      <url>2017/03/29/Uav/px4-imu-mpu9250-code-structure/</url>
      
        <content type="html"><![CDATA[<p>最新PX4的代码库有很大的改变，使用了一个轻量级的、统一的驱动抽象层：DriverFramework。 POSIX和 QuRT的驱动都写入这个驱动框架当中。</p><p>本文以MPU9250为例简单分析一下外设的相关代码，其余外设亦相似的。</p><h2 id="代码结构及流程"><a href="#代码结构及流程" class="headerlink" title="代码结构及流程"></a>代码结构及流程</h2><p>最新代码库中，MPU9250的代码结构及流程如下：</p><p> <img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/uav/px4/IMU_CODE_STR.png" alt="流程图"></p><a id="more"></a><p> sensor.cpp文件比较重要，Sensor数据的应用都要在此文件中实现，其中的主要方法如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/uav/px4/sensorcpp.jpg" alt="Sensor方法"></p><h2 id="附"><a href="#附" class="headerlink" title="附"></a>附</h2><p>以前px4是可以直接通过外部的库访问外设，新版本保留了原代码架构，但不清楚是否应用，怎么应用，路径如下：</p><pre><code class="bash">-&gt; src\platforms\qurt\fc_addon\-&gt; xxx_lib.so</code></pre><h2 id="经验之谈"><a href="#经验之谈" class="headerlink" title="经验之谈"></a>经验之谈</h2><p>通过search搜关键字搜出内容太多时， 通过px4.config、mainapp.config等文件来筛选源代码。</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Uav </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PX4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之广播机制</title>
      <link href="2017/03/25/FirstCode/FirstCode-Broadcast-Receiver/"/>
      <url>2017/03/25/FirstCode/FirstCode-Broadcast-Receiver/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><h2 id="广播机制"><a href="#广播机制" class="headerlink" title="广播机制"></a>广播机制</h2><h3 id="标准广播"><a href="#标准广播" class="headerlink" title="标准广播"></a>标准广播</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/firstcode/normal_broadcasts.png" alt="normal_broadcast"></p><a id="more"></a><h3 id="有序广播"><a href="#有序广播" class="headerlink" title="有序广播"></a>有序广播</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/firstcode/ordered_broadcast.png" alt="ordered_broadcast"></p><h2 id="接收系统广播"><a href="#接收系统广播" class="headerlink" title="接收系统广播"></a>接收系统广播</h2><h3 id="动态注册监听网络变化"><a href="#动态注册监听网络变化" class="headerlink" title="动态注册监听网络变化"></a>动态注册监听网络变化</h3><p>通过内部类创建广播接收器，实现动态监听网络广播的代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IntentFilter intentFilter;</span><br><span class="line">    <span class="keyword">private</span> NetworkChangeReceiver networkChangeReceiver;</span><br><span class="line">    </span><br><span class="line">    oncreate() &#123;</span><br><span class="line">        ...</span><br><span class="line">        intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        intetFilter.addAction(<span class="string">&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;</span>);</span><br><span class="line">        networkChangeReceiver = <span class="keyword">new</span> NetworkChangeReceiver();</span><br><span class="line">        registerReceiver(newworkChangeReceiver, intentFilter);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    onDestory() &#123;</span><br><span class="line">        ...</span><br><span class="line">        unregisterReceiver(networkChangeReceiver);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    clss NetworkChangeReceiver extends BroadcastReceiver &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span></span>&#123;</span><br><span class="line">            ConnectivityManager manager =(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);</span><br><span class="line">            NetworkInfo networkInfo = manager.getActiveNetworkInfo();</span><br><span class="line">            <span class="keyword">if</span>(networkInfo != <span class="keyword">null</span> &amp;&amp; networkInfo.isAvailable())&#123;&#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AndroidManifest.xml中添加权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCES_NETWORK_STATE&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h3 id="静态注册实现开机启动"><a href="#静态注册实现开机启动" class="headerlink" title="静态注册实现开机启动"></a>静态注册实现开机启动</h3><p>新建BootCompletReceiver来作为广播接收器，通过AS自动创建时两个注意选项：Enable-启用，Exported-接收本程序外的广播。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Public <span class="class"><span class="keyword">class</span> <span class="title">BootCompletReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>AndroidManiest.xml自动完成注册， 四大组件皆需要注册</p></blockquote><p>AndroidManiest.xml中静态注册。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;receiver</span><br><span class="line">    ...</span><br><span class="line">    &lt;intent-filter&gt;</span><br><span class="line">        &lt;action android:name=<span class="string">&quot;android.intent.action.BOOT_COMPLETED&quot;</span>/&gt;</span><br><span class="line">    &lt;/intent-filter&gt;</span><br><span class="line">&lt;/receiver&gt;</span><br></pre></td></tr></table></figure><h2 id="自定义广播"><a href="#自定义广播" class="headerlink" title="自定义广播"></a>自定义广播</h2><h3 id="标准广播-1"><a href="#标准广播-1" class="headerlink" title="标准广播"></a>标准广播</h3><p>新建广播接收器MyBroadcastReceiver。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Public <span class="class"><span class="keyword">class</span> <span class="title">MyBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册修改接收器信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;receiver</span><br><span class="line">    ...</span><br><span class="line">    &lt;intent-filter&gt;</span><br><span class="line">        &lt;action android:name=<span class="string">&quot;com.lee.broadcasttest.MY_BROADCAST&quot;</span>/&gt;</span><br><span class="line">    &lt;/intent-filter&gt;</span><br><span class="line">&lt;/receiver&gt;</span><br></pre></td></tr></table></figure><p>发送广播：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">&quot;com.lee.broadcasttest.MY_BROADCAST&quot;</span>);</span><br><span class="line">sendBroadcast(intent);</span><br></pre></td></tr></table></figure><h3 id="有序广播-1"><a href="#有序广播-1" class="headerlink" title="有序广播"></a>有序广播</h3><p>发送有序广播：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">&quot;com.lee.broadcasttest.MY_BROADCAST&quot;</span>);</span><br><span class="line">sendOrderedBroadcast(intent, <span class="keyword">null</span>); <span class="comment">// arg2:权限相关</span></span><br></pre></td></tr></table></figure><p>广播接收器优先级设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter android:priority=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>优先级高的接收器截断广播：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onReceive() &#123;</span><br><span class="line">    ...</span><br><span class="line">    abortBroadcast();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用本地广播"><a href="#使用本地广播" class="headerlink" title="使用本地广播"></a>使用本地广播</h2><p>前面的广播方式属于全局广播，存在安全问题，使用本地广播就能避免安全问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">MainActivity &#123;</span><br><span class="line">    <span class="keyword">private</span> LocalReceiver localReceiver;</span><br><span class="line">    <span class="keyword">private</span> LocalBroadcastReceiver localBroadcastReceiver;</span><br><span class="line">    </span><br><span class="line">    onCreate()&#123;</span><br><span class="line">        localBroadcastManager = LocalBroadcastManager.getInstance(<span class="keyword">this</span>);<span class="comment">//获取实例</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 按键发送广播</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="string">&quot;com.lee.broadcasttest.LOCAL_BROADCAST&quot;</span>);</span><br><span class="line">        localBroadcastManager.sendBroadcast(intent);<span class="comment">// 发送本地广播</span></span><br><span class="line">        </span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;com.lee.broadcasttest.LOCAL_BROADCAST&quot;</span>);</span><br><span class="line">        localReceiver = <span class="keyword">new</span> LocalReceiver();</span><br><span class="line">        localBroadcastManager.registerReceiver(localReceiver, intentFilter); <span class="comment">//注册本地广播监听器</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    onDestory() &#123;</span><br><span class="line">        localBroadcastManager.unregisterReceiver(localReceiver, intentFilter); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">LocalReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">        onReceiver()&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>本地广播除了安全还有一个优势，效率更高。</p></blockquote><h2 id="实现强制下线功能"><a href="#实现强制下线功能" class="headerlink" title="实现强制下线功能"></a>实现强制下线功能</h2><p>实现关闭所有活动的功能，创建管理所有活动的类ActivityCollector。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActivityCollector</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Activity&gt; activities = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">addActivity</span><span class="params">(Activity activity)</span></span>&#123;</span><br><span class="line">        activities.add(activity);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">removeActivity</span><span class="params">(Activity activity)</span></span>&#123;</span><br><span class="line">        activities.remove(activity);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">finishAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(Activity activity: activities) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!activity.isFinishing()) &#123;</span><br><span class="line">                activity.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建所有活动的父类BaseActivity：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    oncreate()&#123;</span><br><span class="line">        ActivityCollector.addActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    onDestory()&#123;</span><br><span class="line">        ActivityCollector.removeActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建LoginActivity，设计布局文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout</span><br><span class="line">    &lt;LinearLayout &lt;TextView/&gt; &lt;EditText/&gt; &lt;/LinearLayout&gt;    </span><br><span class="line">    &lt;LinearLayout &lt;TextView/&gt; &lt;EditText/&gt; &lt;/LinearLayout&gt;  </span><br><span class="line">    &lt;Button <span class="string">&quot;Login&quot;</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>LonginAcitivty中实现登录代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(account.equals(<span class="string">&quot;xxx&quot;</span>) &amp;&amp; password.equarls(<span class="string">&quot;xxx&quot;</span>)) &#123;</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(LoginActivity.<span class="keyword">this</span>, MainActivity.class);</span><br><span class="line">    startActivity(intent);</span><br><span class="line">    finish();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现强制下线活动，简单设计一个Button触发强制下线。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span> </span>&#123;</span><br><span class="line">    onClick()&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="string">&quot;com.lee.demo.FORCE_OFFLINE&quot;</span>);</span><br><span class="line">        startBroadcast(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于广播接收器需要弹出一个对话框阻止用户继续操作(不能静态注册方式)，然后接收器也得在所有活动中生效，所以在BaseActivity中动态注册广播接收器。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">BaseActivity &#123;</span><br><span class="line">    <span class="keyword">private</span> ForceOfflineReceiver reicerver;</span><br><span class="line">    </span><br><span class="line">    onResume()&#123;</span><br><span class="line">        IntentFilter intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        intentFilter.addAction(<span class="string">&quot;com.lee.demo.FORCE_OFFLINE&quot;</span>);</span><br><span class="line">        receiver = <span class="keyword">new</span> ForceOfflineReciever();</span><br><span class="line">        registerReceiver(receiver, IntentFilter);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    onPause()&#123;</span><br><span class="line">        <span class="keyword">if</span>(receiver != <span class="keyword">null</span>)&#123;</span><br><span class="line">            unregisterReceiver(receiver);</span><br><span class="line">            receiver = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ForceOfflineReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">        onReceive(<span class="keyword">final</span> Context context, Intent intent)&#123;</span><br><span class="line">            AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(context);</span><br><span class="line">            builder.setTiltle(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            builder.setMessage(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            builder.setCancelable(<span class="keyword">false</span>); <span class="comment">// 对话框设置为不可取消，否则用户按一下返回键又可继续使用程序了</span></span><br><span class="line">            builder.setPositiveButton(<span class="string">&quot;ok&quot;</span>,<span class="keyword">new</span> DialogInterface.OnclickListener()&#123;</span><br><span class="line">                onclick()&#123;</span><br><span class="line">                    ActivityCollector.finishAll();</span><br><span class="line">                    Intent intent = <span class="keyword">new</span> Intent(context, LoginActivity.class);</span><br><span class="line">                    context.startActivity(intent);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            builder.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过，还有一个遗漏需要处理，即将LoginActivity设为主活动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;action android:name=<span class="string">&quot;android.intent.action.MAIN&quot;</span>/&gt;</span><br><span class="line">    &lt;category android:name=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span>/&gt;</span><br><span class="line">&lt;/intent-filter&gt;    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PX4 for Snapdragon Flight</title>
      <link href="2017/03/25/Uav/PX4-for-Snapdragon-Flight/"/>
      <url>2017/03/25/Uav/PX4-for-Snapdragon-Flight/</url>
      
        <content type="html"><![CDATA[<blockquote><p>公司刚好有基于8074的无人机主板,虽然与官方snapdragon board有些差异,但也差不多,本文就是自己在此板上跑px4的阶段笔记,写的比较简单粗糙. </p></blockquote><h1 id="快速驱动无人机升空"><a href="#快速驱动无人机升空" class="headerlink" title="快速驱动无人机升空"></a>快速驱动无人机升空</h1><p>主要通过PX4+QGroundcontrol+DX9的方式，手机APP+Qgroundcontrol+DX9也类似,只是将遥控器换成了APP(Android版地址: <a href="https://github.com/ATLFlight/drone-controller">DroneControl</a>)，准备好环境，有问题主要参考如下三个地址：</p><p><a href="https://github.com/ATLFlight/ATLFlightDocs/blob/master/PX4.md#stable-releases">PX4编译和执行</a></p><p><a href="https://dev.px4.io/">PX4开发手册</a></p><p><a href="https://donlakeflyer.gitbooks.io/qgroundcontrol-developers-guide/content/">QGroundcontrol开发手册</a></p><h2 id="连接无人机"><a href="#连接无人机" class="headerlink" title="连接无人机"></a>连接无人机</h2><p>首先PC通过WiFi连上无人机，通过xshell或者putty ssh远程登录无人机。</p><a id="more"></a><h2 id="运行PX4"><a href="#运行PX4" class="headerlink" title="运行PX4"></a>运行PX4</h2><p>执行命令./px4 mainapp.config ，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@linaro-developer:/home/linaro<span class="comment"># ./px4 mainapp.config </span></span><br><span class="line">sh: 1: cannot create /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor: Directory nonexistent</span><br><span class="line">commands file: mainapp.config</span><br><span class="line"></span><br><span class="line">______  __   __    ___ </span><br><span class="line">| ___ \ \ \ / /   /   |</span><br><span class="line">| |_/ /  \ V /   / /| |</span><br><span class="line">|  __/   /   \  / /_| |</span><br><span class="line">| |     / /^\ \ \___  |</span><br><span class="line">\_|     \/   \/     |_/</span><br><span class="line"></span><br><span class="line">px4 starting.</span><br><span class="line"></span><br><span class="line">INFO  [sdlog2] [blackbox] /root/<span class="built_in">log</span>/sess018</span><br><span class="line">INFO  [sdlog2] [blackbox] recording: log001.px4log</span><br><span class="line">INFO  [dataman] Unkown restart, data manager file <span class="string">&#x27;/home/linaro/dataman&#x27;</span> size is 47640 bytes</span><br><span class="line">INFO  [mavlink] mode: Normal, data rate: 1000000 B/s on udp port 14556 remote port 14550</span><br><span class="line">Sleeping <span class="keyword">for</span> 1 s; (1000000 us).</span><br><span class="line">pxh&gt; INFO  [mavlink] using network interface wlan0, IP: 192.168.1.1</span><br><span class="line">INFO  [mavlink] with broadcast IP: 192.168.1.255</span><br><span class="line"></span><br><span class="line">pxh&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行QGroundcontrol"><a href="#运行QGroundcontrol" class="headerlink" title="运行QGroundcontrol"></a>运行QGroundcontrol</h2><h3 id="启动QGroundcontrol"><a href="#启动QGroundcontrol" class="headerlink" title="启动QGroundcontrol"></a>启动QGroundcontrol</h3><p>我们使用的Snapdragon板好像只能支持QGroundControl V2.7.1 （<a href="http://pan.baidu.com/s/1sl2fXhF">QGroundControl-V2.7.1下载</a>），启动QGroundcontrol。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/start_qground.jpg" alt="lanuch"></p><h3 id="连接无人机-1"><a href="#连接无人机-1" class="headerlink" title="连接无人机"></a>连接无人机</h3><ol><li><p>File &gt; Settings &gt; CommLinks<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/com_link1.jpg"></p></li><li><p>点击ADD 添加新的远端连接<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/com_link2.jpg"></p></li><li><p>点击ADD 添加目标主机<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/com_link3.jpg"></p></li><li><p>完成，如下<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/com_link.jpg"></p></li><li><p>连接无人机，就在上一界面点击connect或者到主界面右上角点击connect连接<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/connect.jpg"></p></li></ol><h3 id="连接遥控器"><a href="#连接遥控器" class="headerlink" title="连接遥控器"></a>连接遥控器</h3><ol><li><p>File &gt; Settings &gt; Controllers<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/controller.jpg"></p></li><li><p>Enable controllers, 选择相应遥控器，设为Manual，并进行校准，如下<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/controller1.jpg"></p></li></ol><h3 id="机身设置及校准"><a href="#机身设置及校准" class="headerlink" title="机身设置及校准"></a>机身设置及校准</h3><p>进入setup界面，根据提示进行设置校准，完成后项目将显示绿色小圆点或者边框，我使用的板子POWER部分不能校准成功，如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/setup_ok.jpg"></p><h3 id="控制起飞"><a href="#控制起飞" class="headerlink" title="控制起飞"></a>控制起飞</h3><ol><li><p>点击 ARM SYSTEM 起桨，可通过遥控器控制<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/fly.jpg" alt="take_off"></p></li><li><p>点击 DISARM SYSTEM 停桨<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/fly_end.png" alt="land"></p></li></ol><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>Analyze界面可以实时挂载mavilink数据包等信息</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/analyze.jpg" alt="data"></p><h3 id="打开自己想要的窗口"><a href="#打开自己想要的窗口" class="headerlink" title="打开自己想要的窗口"></a>打开自己想要的窗口</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/tool_qg.jpg" alt="window"></p><h1 id="快速支持MPU6500"><a href="#快速支持MPU6500" class="headerlink" title="快速支持MPU6500"></a>快速支持MPU6500</h1><p>PX4代码默认支持mpu9250，如若想直接支持行空所使用的mpu6500,可对MPU9250.hpp文件做如下修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路径：Firmware\src\lib\DriverFramework\drivers\mpu9250\MPU9250.hpp</span></span><br><span class="line"><span class="comment">#define MPU_WHOAMI_92500x70 //0x71   modified by lihuaqian</span></span><br></pre></td></tr></table></figure><blockquote><p>不过这样修改的话需要自己重新移植地磁驱动</p></blockquote><p>如若出现温度异常，需要临时修改可以测试的话，可以做如下类似修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">if</span> (fabsf(temp_c - _last_temp_c) &gt; 2.0f) &#123;</span><br><span class="line"><span class="keyword">if</span> (fabsf(temp_c - _last_temp_c) &gt; 30.0f) &#123; //modified by lihuaqian <span class="keyword">for</span> debug</span><br></pre></td></tr></table></figure><h1 id="测试马达"><a href="#测试马达" class="headerlink" title="测试马达"></a>测试马达</h1><h2 id="修改CODE"><a href="#修改CODE" class="headerlink" title="修改CODE"></a>修改CODE</h2><p>PX4代码中有测试马达的代码，不过需要做如下小小修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#路径： Firmware\src\examples\hwtest\hwtest.c</span></span><br><span class="line">...</span><br><span class="line">actuators.timestamp = hrt_absolute_time();</span><br><span class="line">+ orb_publish(ORB_ID(actuator_armed), arm_pub_ptr, &amp;arm); //added by lihuaqian</span><br><span class="line">orb_publish(ORB_ID(actuator_controls_0), actuator_pub_ptr, &amp;actuators);</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p>注：同路径下的CMakeLists.txt，添加模块和执行命令</p></blockquote><h2 id="修改CMAKE文件"><a href="#修改CMAKE文件" class="headerlink" title="修改CMAKE文件"></a>修改CMAKE文件</h2><p>需要做如下修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Firmware\cmake\configs\posix_eagle_legacy_driver_default.cmake</span></span><br><span class="line">...</span><br><span class="line">platforms/posix/work_queue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># added start by lihuaqian</span></span><br><span class="line">examples/px4_simple_app</span><br><span class="line">examples/hwtest  // 添加马达测试module</span><br><span class="line">)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">#Firmware\cmake\configs\qurt_eagle_legacy_driver_default.cmake</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># FC_ADDON drivers</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">platforms/qurt/fc_addon/rc_receiver</span><br><span class="line">platforms/qurt/fc_addon/uart_esc // 若没有，需加上</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行马达测试程序"><a href="#运行马达测试程序" class="headerlink" title="运行马达测试程序"></a>运行马达测试程序</h2><p>首先运行px4，然后输入ex_hwtest，则测试程序开始循环控制马达工作，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">pxh&gt; ex_hwtest</span><br><span class="line">WARN  [ex_hwtest] DO NOT FORGET TO STOP THE DEFAULT CONTROL APPS!</span><br><span class="line">WARN  [ex_hwtest] (run &lt;commander stop&gt;,)</span><br><span class="line">WARN  [ex_hwtest] (    &lt;mc_att_control stop&gt; and)</span><br><span class="line">WARN  [ex_hwtest] (    &lt;fw_att_control stop&gt; to do so)</span><br><span class="line">WARN  [ex_hwtest] usage: http:&#x2F;&#x2F;px4.io&#x2F;dev&#x2F;examples&#x2F;write_output</span><br><span class="line">WARN  [ex_hwtest] Actuator armed</span><br><span class="line">WARN  [ex_hwtest] count 0</span><br><span class="line">WARN  [ex_hwtest] count 1</span><br><span class="line">WARN  [ex_hwtest] count 2</span><br><span class="line">WARN  [ex_hwtest] count 3</span><br><span class="line">WARN  [ex_hwtest] count 4</span><br><span class="line">WARN  [ex_hwtest] count 5</span><br><span class="line">WARN  [ex_hwtest] count 6</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p>通过输入“help”， 可以查看支持哪些命令。</p></blockquote><h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><p>参考路径：</p><p><a href="https://github.com/ATLFlight">PX4 Github</a></p><p><a href="https://github.com/ATLFlight/ATLFlightDocs/blob/master/PX4.md#stable-releases">PX4编译和执行</a></p><p><a href="https://dev.px4.io/">PX4开发手册</a></p><p><a href="https://donlakeflyer.gitbooks.io/qgroundcontrol-developers-guide/content/">QGroundcontrol开发手册</a></p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Uav </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PX4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之UI</title>
      <link href="2017/03/25/FirstCode/firstcode-note-UI/"/>
      <url>2017/03/25/FirstCode/firstcode-note-UI/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><p>本部分思维导图如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/UI.png" alt="UI"></p><a id="more"></a><h2 id="常用控件"><a href="#常用控件" class="headerlink" title="常用控件"></a>常用控件</h2><p>如下总结一些常用的参数配置或者方法，某些参数可能对于其它控件也适用。</p><h3 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:gravity - 指定文字对齐方式，用指定控件内容的位置。</span><br><span class="line">android:layout_gravity -  指定控件相对于父布局的位置。</span><br></pre></td></tr></table></figure><h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:textAllCaps=<span class="string">&quot;false&quot;</span> - 禁用Button字母自动大写转换</span><br></pre></td></tr></table></figure><h3 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:hint=<span class="string">&quot;&quot;</span>    <span class="comment"># 提示内容</span></span><br><span class="line">android:maxLines=<span class="string">&quot;&quot;</span> <span class="comment"># 输入框拉伸最大行数</span></span><br></pre></td></tr></table></figure><h3 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:src=<span class="string">&quot;&quot;</span>  <span class="comment"># 参数配置图片资源</span></span><br><span class="line">imageView.setImageResource()  <span class="comment"># 动态设置图片资源</span></span><br></pre></td></tr></table></figure><h3 id="ProgressBar"><a href="#ProgressBar" class="headerlink" title="ProgressBar"></a>ProgressBar</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数</span></span><br><span class="line">android:visibility=<span class="string">&quot;&quot;</span>  <span class="comment"># 控件可见设置，不设的都默认可见</span></span><br><span class="line">android:max=<span class="string">&quot;&quot;</span>  <span class="comment">#进度条最大值</span></span><br><span class="line">style=<span class="string">&quot;?android:attr/progressBarStyleHorizontal&quot;</span> <span class="comment"># 设置为水平进度条，默认是圆形进度条</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法</span></span><br><span class="line">progressBar.getvisibility()  <span class="comment"># 获取可见状态</span></span><br><span class="line">progressBar.setVisibility(View.VISIBLE/View.GONE) <span class="comment"># 动态设置可见状态</span></span><br><span class="line">progressBar.getProgress(); <span class="comment"># 获取进度</span></span><br><span class="line">progressBar.setProgress(int); <span class="comment"># 设置进度</span></span><br></pre></td></tr></table></figure><h3 id="AlertDialog"><a href="#AlertDialog" class="headerlink" title="AlertDialog"></a>AlertDialog</h3><p>在当前界面弹出一个对话框，置于所有界面之上，能屏蔽其他控件的交互能力。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 弹出一个确认框</span><br><span class="line">AlertDialog.Builder dialog = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">dialog.setTile(<span class="string">&quot;&quot;</span>);</span><br><span class="line">dialog.setMessage(<span class="string">&quot;&quot;</span>);</span><br><span class="line">dialog.setCancelable(false); # 不可通过Back键取消</span><br><span class="line">dialog.setPositiveButton(<span class="string">&quot;OK&quot;</span>,<span class="keyword">new</span> DialogInterface.onClickListener()&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;&#125;;</span><br><span class="line">&#125;);</span><br><span class="line">dialog.setNegativeButton(<span class="string">&quot;Cancel&quot;</span>,<span class="keyword">new</span> DialogInterface.onClickListener()&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;&#125;;</span><br><span class="line">&#125;);</span><br><span class="line">dialog.show();</span><br></pre></td></tr></table></figure><h3 id="ProgressDialog"><a href="#ProgressDialog" class="headerlink" title="ProgressDialog"></a>ProgressDialog</h3><p>与AlertDialog类似，不过多一个进度条。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ProgressDialog dialog = <span class="keyword">new</span> ProgressDialog(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">dialog.setTitle(<span class="string">&quot;&quot;</span>);</span><br><span class="line">dialog.setMessage(<span class="string">&quot;&quot;</span>);</span><br><span class="line">dialog.setCancelable(true);  # 可通过Back键取消</span><br><span class="line"># 如若传入false，则需要再加载完成后调用ProgressDialog的dismiss()方法关闭对话框，否则对话框会一直存在</span><br><span class="line">dialog.show();</span><br></pre></td></tr></table></figure><h2 id="4种基本布局"><a href="#4种基本布局" class="headerlink" title="4种基本布局"></a>4种基本布局</h2><p>布局与控件嵌套结构如下：</p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/firstcode/layout_tool.jpg" alt="布局与控件"></p><h3 id="线性布局"><a href="#线性布局" class="headerlink" title="线性布局"></a>线性布局</h3><p>只有LinearLayout支持 android:layout_weight属性，指定了此属性后控件大小即由其来决定，举个简单例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># widget1   </span></span><br><span class="line">android:layout_width = <span class="string">&quot;0dp&quot;</span></span><br><span class="line">android:layout_weight = 1   <span class="comment"># 此控件占用1/3空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#widget2</span></span><br><span class="line">android:layout_width = <span class="string">&quot;0dp&quot;</span></span><br><span class="line">android:layout_weight = 2  <span class="comment"># 此控件占用2/3空间</span></span><br></pre></td></tr></table></figure><h3 id="百分比布局"><a href="#百分比布局" class="headerlink" title="百分比布局"></a>百分比布局</h3><blockquote><p>前不久好像看到文章讲此布局被弃用了</p></blockquote><p>此布局要使用需先引入依赖库，然后直接指定百分比。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/build.gradle</span></span><br><span class="line">compile  <span class="string">&#x27;com.android.support:percent:24.2.1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  xxx.xml</span></span><br><span class="line">&lt;android.support.percent.PercentFrameLayout</span><br><span class="line">xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line"></span><br><span class="line">app:layout_widthPercent=<span class="string">&quot;50%&quot;</span>  <span class="comment"># 指定宽度为布局的50%</span></span><br><span class="line">app:layout_heightPercent=<span class="string">&quot;50%&quot;</span> <span class="comment"># 指定高度为布局的50%</span></span><br></pre></td></tr></table></figure><p>还存在PercentRelativeLayout，除了可以如上使用百分比布局外，继承了RelativeLayout的属性。</p><h2 id="自定义控件"><a href="#自定义控件" class="headerlink" title="自定义控件"></a>自定义控件</h2><p>所有控件和布局都是直接或间接继承自View，如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/firstcode/view_extends_struc.png"></p><h3 id="引入布局"><a href="#引入布局" class="headerlink" title="引入布局"></a>引入布局</h3><p>自定义标题栏控件，针对自定义控件新建一布局文件title.xml。然后在主布局文件中引入title.xml。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;include layout=<span class="string">&quot;@layout/title&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h3 id="创建自定义控件"><a href="#创建自定义控件" class="headerlink" title="创建自定义控件"></a>创建自定义控件</h3><p>针对布局实现控件响应类。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class TitleLayout extends LinearLayout &#123;</span><br><span class="line">    public TitleLayout(Context context, AttributeSet attrs)&#123;</span><br><span class="line">        super(context,attrs);</span><br><span class="line">        LayoutInflater.from(context).inflate(R.layout.title,this);</span><br><span class="line">        // 通过LayoutInflater.from(context)构建LayoutInflater对象，然后inflate()动态加载布局文件    </span><br><span class="line">        // 参数：布局ID， 父布局</span><br><span class="line">        ... //实现控件响应功能</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了通过include引入布局外，亦可以在布局文件中直接添加控件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;com.lee.TitleLayout</span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h2 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h2><h3 id="简单用法"><a href="#简单用法" class="headerlink" title="简单用法"></a>简单用法</h3><p>适配ListView，将数据通过适配器传递给ListView。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示字符串</span></span><br><span class="line">ArrayAdapter &lt;String&gt; adapter = new ArraAdapter&lt;String&gt;(MainActivity.this, android.R.layout.simple_list_item_1, String[]);</span><br><span class="line">listView.setAdapter(adapter);</span><br></pre></td></tr></table></figure><h3 id="定制ListView"><a href="#定制ListView" class="headerlink" title="定制ListView"></a>定制ListView</h3><p>定制一个水果名+图片的ListView。<br>首先定义一个实体类，作为ListView适配器的适配类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fruit</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> imageId;  <span class="comment">// 图片ID，R.drawable.xx</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fruit</span><span class="params">(String name, <span class="keyword">int</span> imageId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getImageId</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> imageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后需要为ListView的子项指定一个布局fruit_item.xml。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout ....&gt;</span><br><span class="line">    &lt;ImageView ..../&gt;</span><br><span class="line">    &lt;TextView ..../&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>接下来需要继承ArrayAdapter创建一个自定义适配器FruitAdapter。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">ArrayAdapter</span>&lt;<span class="title">Fruit</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> resourceId; <span class="comment">// 子项布局的ID</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(Context context, <span class="keyword">int</span> Id, List&lt;Fruit&gt; objects)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(...);</span><br><span class="line">        resourceId = Id;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*getView()在每个子项滚入屏幕时被调用*/</span></span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line">        Fruit fruit = getItem(position); <span class="comment">// 获取当前子项Fruit实例</span></span><br><span class="line">        View view = LayoutInflater.from(getContext).inflate(resourceId, parent, <span class="keyword">false</span>);</span><br><span class="line">        ImageView fruitImage = view.findViewById(...);</span><br><span class="line">        TextView fruitName = View.findViewById(...);</span><br><span class="line">        fruitImage.setImgageResource(fruit.getImageId()；</span><br><span class="line">        fruitName.setText(Fruit.getName();</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于inflate()方法，第三个参数false表示只让在父布局中声明的layout属性生效，但不为这个View添加父布局，因View有了父布局后，就不能添加到ListView中了。<br>适配ListView，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> List&lt;Fruit&gt; fruitList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">onCreate() &#123;</span><br><span class="line">...</span><br><span class="line">initFruits();</span><br><span class="line">FruitAdapter adapter = <span class="keyword">new</span> FruitAdapter(MainActivity.<span class="keyword">this</span>,R.layout.fruit_item.xml,fruitList);</span><br><span class="line">listView.setAdapter(adapter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">initFruits() &#123;</span><br><span class="line">Fruit apple = <span class="keyword">new</span> Fruit(<span class="string">&quot;Apple&quot;</span>, R.drawble.apple_pic);</span><br><span class="line">fruitList.add(apple);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="提升ListView的效率"><a href="#提升ListView的效率" class="headerlink" title="提升ListView的效率"></a>提升ListView的效率</h3><p>目前getView()时，每次加载子项都会重新加载布局，这样给了一个提升效率的方式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span>(convertView == <span class="keyword">null</span>) &#123;</span><br><span class="line">view = LayoutInflater.from(getContext()).inflate(resourceId,parent,<span class="keyword">false</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">view = convertView;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不过目前getView每次都要同findViewById()获取硬件实例，所以可以通过ViewHolder优化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span>(convertView == <span class="keyword">null</span>) &#123;</span><br><span class="line">view = LayoutInflater.from(getContext()).inflate(resourceId,parent,<span class="keyword">false</span>);</span><br><span class="line">viewHolder = <span class="keyword">new</span> ViewHolder();</span><br><span class="line">viewHolder.fruitImage = view.findViewById(...);</span><br><span class="line">viewHolder.fruitName = view.findViewById(...);</span><br><span class="line">view.setTag(viewHolder); <span class="comment">// viewHolder存储于view中</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">view = convertView;</span><br><span class="line">viewHolder = (ViewHolder)view.getTag();</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class ViewHolder &#123;</span><br><span class="line">ImageView fruitImage;</span><br><span class="line">    TextView fruitName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ListView的点击事件"><a href="#ListView的点击事件" class="headerlink" title="ListView的点击事件"></a>ListView的点击事件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">listView.setOnItemClickListener(<span class="keyword">new</span> AdapterView.onItemClickListener) &#123;</span><br><span class="line">onItemClick(AdapterView&lt;?&gt; parent, View view , <span class="keyword">int</span> position, <span class="keyword">long</span> id) &#123;</span><br><span class="line">Fruit fruit = fruitList.get(position);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a>RecyclerView</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>首先需要再build.gradle中添加依赖库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    compile <span class="string">&#x27;com.android.support:recyclerview-v7:24.2.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在activity_main.xml中添加布局：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout</span><br><span class="line">    &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">        android:id&#x3D;&quot;&quot;</span><br><span class="line">        android:layout_width&#x3D;&quot;match_parent&quot;</span><br><span class="line">        android:layout_height&#x3D;&quot;match_parent&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;LinearLayout&gt;        </span><br></pre></td></tr></table></figure><p>接下来需准备一个适配器类FruitAdapter：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">FruitAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; mFruitList;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        ImageView fruitImage;</span><br><span class="line">        TextView fruitName;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">viewHolder</span> <span class="params">(View view)</span> </span>&#123;</span><br><span class="line">            suiper(view);</span><br><span class="line">            fruitImage = (ImageView) view.findViewById();</span><br><span class="line">            fruitName = (TextView) view.findViewById();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(List&lt;Fruit&gt; fruitList)</span> </span>&#123;</span><br><span class="line">        mFruitList = fruitList;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View view = LayoutInflater.from(parent.getcontext()).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">        <span class="keyword">return</span> holder;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span> <span class="params">(ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Fruit fruit = mFruitList.get(position);</span><br><span class="line">        holder.fruitImage.setImageResource (fruit.getImageId());</span><br><span class="line">        holder.fruitName.setText(fruit.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mFruitLIst.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>适配器准备好后，就可以使用RecyclerView，修改MainActivity：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line">    private List&lt;Fruit&gt; fruitList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    onCreate () &#123;</span><br><span class="line">        initFruits();</span><br><span class="line">        RecyclerView recyclerView &#x3D; (RecyclerView)findViewById();</span><br><span class="line">        LinearLayoutManager layoutManager &#x3D; new LinearLayoutManager(this);</span><br><span class="line">        &#x2F;&#x2F; 用于指定RecyclerView的布局方式，此指定为线性布局</span><br><span class="line">        recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">        FruitAdapter adapter &#x3D; new FruitAdapter(fruitList);</span><br><span class="line">        recyclerView.setAdapter(adapter);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    private void initFruits()&#123;</span><br><span class="line">        Fruit apple &#x3D; new Fruit(&quot;Apple&quot;, R.drawable.apple_pic);</span><br><span class="line">        fruitLIst.add(apple);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="横向滚动和瀑布流布局"><a href="#横向滚动和瀑布流布局" class="headerlink" title="横向滚动和瀑布流布局"></a>横向滚动和瀑布流布局</h3><p>实现横向滚动的话，为了好看，需要将fruit_item.xml中图片和文字控件改为竖向布局。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLaout</span><br><span class="line">    android:orientation = <span class="string">&quot;vertical&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>然后再MainActivity中设置为横向滚动：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onCreate &#123;</span><br><span class="line">    layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RecyclerView除了提供LinearLayoutManager布局排列外，还提供了如下两种布局排列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GridLayoutManager：用于实现网格布局 </span><br><span class="line">StaggeredGridLayoutManager：用于实现瀑布流布局（类似于表格，不过根据内容多少适配显示） </span><br></pre></td></tr></table></figure><p>实现瀑布流，可以对fruit_item.xml做一些针对性的调整，然后修改MainActivity，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onCreate() &#123;</span><br><span class="line">    StaggeredGridLayoutManger layoutManager = <span class="keyword">new</span> StaggeredGridLayoutManager(<span class="number">3</span>, StaggeredGridLayoutManger.VERTICAL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="RecyclerView点击事件"><a href="#RecyclerView点击事件" class="headerlink" title="RecyclerView点击事件"></a>RecyclerView点击事件</h3><p>RecyclerView需要针对具体view去注册，这样也能响应子项的点击事件。修改FruitAdapter，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">FruitAdapter &#123;</span><br><span class="line">    ViewHolder &#123;</span><br><span class="line">        View fruitView;</span><br><span class="line">        </span><br><span class="line">        ViewHolder(View view)&#123;</span><br><span class="line">            fruitView = view;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    onCreateViewHolder() &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">final</span> ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">        <span class="comment">// 子项点击事件</span></span><br><span class="line">        holder.fruitView.setOnclickListener(<span class="keyword">new</span> View.OnCickListener () &#123;</span><br><span class="line">            onClick(View v) &#123;</span><br><span class="line">                <span class="keyword">int</span> position = holder.getAdapterPosition();</span><br><span class="line">                Fruit fruit = mFruitList.get(position);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        );</span><br><span class="line">        <span class="comment">//图片点击事件</span></span><br><span class="line">        holder.fruitImage.setOnclickListener(...);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="界面最佳实践"><a href="#界面最佳实践" class="headerlink" title="界面最佳实践"></a>界面最佳实践</h2><p>这个实践是一个做一个简单的聊天界面。</p><h3 id="Nine-Patch图片"><a href="#Nine-Patch图片" class="headerlink" title="Nine-Patch图片"></a>Nine-Patch图片</h3><p>为了防止图片被拉伸变形， 需要对信息背景的图片进行处理,windows下sdk/tools下有一个draw9patch.bat工具脚本，可以用来制作Nine-Patch图片，Ubuntu下没找到。</p><h3 id="编写界面"><a href="#编写界面" class="headerlink" title="编写界面"></a>编写界面</h3><p>因为会用RecyclerView，所以第一件事就是添加依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">&#x27;com.android.support:recyclerview-v7:24.2.1&#x27;</span></span><br></pre></td></tr></table></figure><p>编写主界面activity_main.xml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout&gt;</span><br><span class="line">    &lt;android.support.v7.widget.RecyclerView&#x2F;&gt; &#x2F;&#x2F; 信息界面</span><br><span class="line">    &lt;LinearLayout&gt; </span><br><span class="line">        &lt;EditText&gt;  &#x2F;&#x2F; 编辑框</span><br><span class="line">        &lt;Button&gt;    &#x2F;&#x2F; 发送按钮</span><br><span class="line">    &lt;&#x2F;LinearLayout&gt; </span><br><span class="line">&lt;&#x2F;LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>定义一个消息实体类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Msg</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_RECEIVED = <span class="number">0</span>; <span class="comment">// 收到的消息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_SENT = <span class="number">1</span>;     <span class="comment">// 发送的消息</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>  type;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Msg</span><span class="params">(String content, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消息类写好了，还需要写RecyclerView的子项布局文件msg_item.xml，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout&gt;</span><br><span class="line">    &lt;LinearLayout &gt; //background设为制作的Nine-Patch消息背景图片</span><br><span class="line">        &lt;TextView&gt;  // 收到消息</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;LinearLayout &gt; //background设为制作的Nine-Patch消息背景图片</span><br><span class="line">        &lt;TextView&gt;  // 发出的消息</span><br><span class="line">    &lt;/LinearLayout&gt;      </span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>此处子项布局文件是将发送和接收写在一起的，可以动可见属性来决定显示和隐藏。</p><p>接下来就该写适配器类MsgAdapter:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MsgAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">MsgAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Msg&gt; mMsgList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MsgAdapter</span><span class="params">(List&lt;Msg&gt; msgList)</span> </span>&#123;</span><br><span class="line">        mMsgList = msgList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        LinearLayout leftLayout;</span><br><span class="line">        LinearLayout rightLayout;</span><br><span class="line"></span><br><span class="line">        TextView leftMsg;</span><br><span class="line">        TextView rightMsg;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            leftLayout = (LinearLayout) itemView.findViewById(R.id.left_layout);</span><br><span class="line">            rightLayout = (LinearLayout) itemView.findViewById(R.id.right_layout);</span><br><span class="line">            leftMsg = (TextView) itemView.findViewById(R.id.left_msg);</span><br><span class="line">            rightMsg = (TextView) itemView.findViewById(R.id.right_msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.msg_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Msg msg = mMsgList.get(position);</span><br><span class="line">        <span class="keyword">if</span> (msg.getType() == Msg.TYPE_RECEIVED)&#123;</span><br><span class="line">            holder.leftLayout.setVisibility(View.VISIBLE);</span><br><span class="line">            holder.rightLayout.setVisibility(View.GONE);</span><br><span class="line">            holder.leftMsg.setText(msg.getContent());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (msg.getType() == Msg.TYPE_SENT) &#123;</span><br><span class="line">            holder.rightLayout.setVisibility(View.VISIBLE);</span><br><span class="line">            holder.leftLayout.setVisibility(View.GONE);</span><br><span class="line">            holder.rightMsg.setText(msg.getContent());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mMsgList.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后在MainActivity中做一些处理即可实现一个聊天界面了。如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    ...</span><br><span class="line">    initMsgs();</span><br><span class="line">    msgRecyclerView = findViewById();</span><br><span class="line">    LinearLayoutManager layoutManager = <span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>);</span><br><span class="line">    msgRecyclerView.setLayoutManager(layoutManager);</span><br><span class="line">    adapter = <span class="keyword">new</span> MsgAdapter(mMsgLists);</span><br><span class="line">    msgRecyclerView.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">    send = (Button) findViewById(R.id.send);</span><br><span class="line">    inputText = (EditText) findViewById(R.id.input_text);</span><br><span class="line">    send.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            String content = inputText.getText().toString();</span><br><span class="line">            <span class="keyword">if</span> (!<span class="string">&quot;&quot;</span>.equals(content)) &#123;</span><br><span class="line">                Msg msg = <span class="keyword">new</span> Msg(content,Msg.TYPE_SENT);</span><br><span class="line">                mMsgLists.add(msg);</span><br><span class="line">                adapter.notifyItemInserted(mMsgLists.size()-<span class="number">1</span>);  <span class="comment">// 刷新消息</span></span><br><span class="line">                msgRecyclerView.scrollToPosition(mMsgLists.size()-<span class="number">1</span>); <span class="comment">//listview 定位到最后一行</span></span><br><span class="line">                inputText.setText(<span class="string">&quot;&quot;</span>); <span class="comment">// 清空输入框</span></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">&quot;The input text can not be emputy!&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initMsgs</span><span class="params">()</span> </span>&#123; <span class="comment">// 默认在消息几面显示一些聊天信息</span></span><br><span class="line">    Msg msg1 = <span class="keyword">new</span> Msg(<span class="string">&quot;Hello , this is msg1!&quot;</span>, Msg.TYPE_RECEIVED);</span><br><span class="line">    mMsgLists.add(msg1);        </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux内核完全注释之80x86内存管理</title>
      <link href="2017/03/24/Linux/Linux-kernel-content-80x86-mem-manage/"/>
      <url>2017/03/24/Linux/Linux-kernel-content-80x86-mem-manage/</url>
      
        <content type="html"><![CDATA[<p><a href="http://pan.baidu.com/s/1kVgED6n">Linux内核完全注释PDF下载</a></p><p>如下图所示，80x86从逻辑地址到物理地址变换使用分段和分页两种机制。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/book/add_change.png"></p><a id="more"></a><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/book/addr_resolution.png"></p><p>如果没有开启分页机制，则处理器会直接将线性地址映射到物理地址。分段机制用来完成虚拟（逻辑）地址到线性地址的转换，分页主要用来将线性地址（很多时候比物理地址大，让应用编程不用受内存空间限制）转换到物理地址。段描述符等会存于硬盘等存储介质，物理地址由其决定获得。</p><p>分段机制、分页机制应用如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/book/vir_addr_map.png"></p><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/book/line_phy.png"><br>每个页面固定 4KB大小，并且对齐于4K地址边界。因此 x86 4GB被划分为2^20（1M）个页面。<br>Linux0.11中 把每个进程最大可用虚拟内存空间定义为64MB，因此每个进程的逻辑地址加上 任务号*64MB（Linux0.11中算出来范围约为8G，最大任务数126，但人工定义为64个即4G），即可转换为线性空间中的地址。<br>每个进程代码在逻辑空间分布如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/linux/book/progress_add.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux内核完全注释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>所买的书</title>
      <link href="2017/03/24/Life/About-my-books-and-my-plan/"/>
      <url>2017/03/24/Life/About-my-books-and-my-plan/</url>
      
        <content type="html"><![CDATA[<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/mybooks.jpg" alt="myBooks"><br><strong>书架一脚</strong></p><a id="more"></a><p>之前买了很多书，有很多Linux、Android、Java、英语等学习相关的书，也有理财、管理、自传、英文原著等不少书，搬家时我的书都会是一项大工程，但是这些书呢，挺多还没怎么看过，即使看过的也舍不得送人，总是当着一种财产保留在这。这些时间现有工作让我没有激情感到惶恐，突然感慨到这些知识不能就这么遗烂在角落里。</p><p>自己离自己的目标还相差甚远，所以前一段时间计划了一下，准备将没看过的书看了，看过的好书再学习一遍，并且对某些学习做好笔记做好总结。后续将自己的笔记和总结也整理了发布到博客上面，也算是一个激励。</p>]]></content>
      
      
      <categories>
          
          <category> Balderdash </category>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之项目结构与活动</title>
      <link href="2017/03/24/FirstCode/FirstCode-learning-note-project-structure-and-activity/"/>
      <url>2017/03/24/FirstCode/FirstCode-learning-note-project-structure-and-activity/</url>
      
        <content type="html"><![CDATA[<p> <a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/">《第一行代码》第2版思维导图及所有学习笔记目录</a></p><h1 id="第一个应用"><a href="#第一个应用" class="headerlink" title="第一个应用"></a>第一个应用</h1><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>很早以前第一次接触Android代码的项目结构的时候确实够头疼滴.</p><a id="more"></a><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/prj_struct.png" alt="项目结构"></p><ul><li>.gradle &amp; .idea<br>Android Studio自动生成, 无需关心, 版本管理时,一般将其忽略(即.gitignore文件).</li><li>app<br>项目代码、资源基本位于此路径。</li><li>build<br>编译自动生成</li><li>gradle<br>gradle wrapper配置文件.</li><li>.gitignore<br>git版本管理忽略文件及路径的脚本</li><li>build.gradle<br>项目全局的gradle构建脚本, 通常不需修改</li><li>gradle.properties<br>全局gradle的配置文件,所配置属性影响项目中所有gradle编译脚本</li><li>gradlew &amp; gradlew.bat<br>用以命令行界面执行gradle命令, gradlew用于Linux或Mac Os, gradlew.bat 用于windows.</li><li>项目名.iml<br>iml文件是InteliJ IDEA项目(Android Studio基于其开发)自动生成的文件</li><li>local.properties<br>指定本机Android SDK路径</li><li>settings.gradle<br>指定项目中所有引入的模块</li></ul><h3 id="app目录"><a href="#app目录" class="headerlink" title="app目录"></a>app目录</h3><ul><li>build<br>编译自动生成</li><li>libs<br>构建项目所需的库第三方.jar包</li><li>androidTest<br>对项目进行一些自动化测试的Android Test测试用例</li><li>java<br>所有Java代码的路径</li><li>res<br>项目所使用的所有图片、布局、字符等资源路径</li><li>AndroidManifest.xml<br>整个项目的配置文件，权限声明、四大组件注册</li><li>test<br>Unit Test测试用例，项目自动化测试的另一种方式</li><li>.gitignore<br>git版本管理忽略文件及路径的脚本</li><li>app.iml<br>InteliJ IDEA文件</li><li>build.gradle<br>app模块的gradle构建脚本</li><li>proguard-rules.pro<br>指定项目代码的混淆规则</li></ul><h3 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a>build.gradle</h3><p>最外层build.gradle</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// Top-level build file <span class="built_in">where</span> you can add configuration options common to all sub-projects/modules.</span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()   <span class="comment"># 声明jcenter代码托管库</span></span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">&#x27;com.android.tools.build:gradle:2.3.0&#x27;</span>  <span class="comment"># 声明Android版本gradle</span></span><br><span class="line"></span><br><span class="line">        // NOTE: Do not place your application dependencies here; they belong</span><br><span class="line">        // <span class="keyword">in</span> the individual module build.gradle files</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task clean(<span class="built_in">type</span>: Delete) &#123;</span><br><span class="line">    delete rootProject.buildDir</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>app目录下的build.gradle</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">&#x27;com.android.application&#x27;</span>  <span class="comment"># 声明application or library </span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion 24</span><br><span class="line">    buildToolsVersion <span class="string">&quot;25.0.0&quot;</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">&quot;me.huaqianlee.broadcastbestpractice&quot;</span>  </span><br><span class="line">        minSdkVersion 15</span><br><span class="line">        targetSdkVersion 24</span><br><span class="line">        versionCode 1   <span class="comment"># 项目版本号</span></span><br><span class="line">        versionName <span class="string">&quot;1.0&quot;</span> <span class="comment"># 项目版本名</span></span><br><span class="line">        testInstrumentationRunner <span class="string">&quot;android.support.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span>   <span class="comment"># 指定是否混淆代码</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android.txt&#x27;</span>), <span class="string">&#x27;proguard-rules.pro&#x27;</span></span><br><span class="line">            <span class="comment"># xxx.txt Android SDK目录下项目通用混淆规则</span></span><br><span class="line">            <span class="comment"># xxx.pro 当前项目根目录下,编写特有混淆规则</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123; <span class="comment"># 指定当前项目的所有依赖关系(本地依赖\库依赖\远程依赖)</span></span><br><span class="line">    compile fileTree(dir: <span class="string">&#x27;libs&#x27;</span>, include: [<span class="string">&#x27;*.jar&#x27;</span>])  <span class="comment"># 本地依赖,libs下的所有.jar</span></span><br><span class="line">    androidTestCompile(<span class="string">&#x27;com.android.support.test.espresso:espresso-core:2.2.2&#x27;</span>, &#123;</span><br><span class="line">        exclude group: <span class="string">&#x27;com.android.support&#x27;</span>, module: <span class="string">&#x27;support-annotations&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment"># 远程依赖</span></span><br><span class="line">    compile <span class="string">&#x27;com.android.support:appcompat-v7:24.2.1&#x27;</span> </span><br><span class="line">    compile <span class="string">&#x27;com.android.support.constraint:constraint-layout:1.0.2&#x27;</span></span><br><span class="line">    testCompile <span class="string">&#x27;junit:junit:4.12&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 库依赖: compile project(&#x27;:xxx&#x27;)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="活动"><a href="#活动" class="headerlink" title="活动"></a>活动</h1><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="活动中使用Menu"><a href="#活动中使用Menu" class="headerlink" title="活动中使用Menu"></a>活动中使用Menu</h3><p>在res/menu路径下新建xxx.xml,添加代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;menu xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span><br><span class="line">    &lt;item </span><br><span class="line">        android:id=<span class="string">&quot;@id/add_item&quot;</span></span><br><span class="line">        android:title=<span class="string">&quot;Add&quot;</span>/&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=<span class="string">&quot;@id/remove_item&quot;</span></span><br><span class="line">        androi:title=<span class="string">&quot;Remove&quot;</span>/&gt;    </span><br><span class="line">&lt;/menu&gt; </span><br></pre></td></tr></table></figure><p>在Activity中重写onCreateOptionsMenu()方法:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public boolean onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">    getMenuInflater().inflate(R.menu.main, menu);</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">true</span>; // 允许菜单显示</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># getMenuInflater() 获得MenuInflater对象,然后通过inflate方法创建菜单</span></span><br></pre></td></tr></table></figure><p>响应菜单事件, 重写onOptionsItemSelected(MenuItem item)方法,item.getItemId() 判断item ID.</p><h3 id="销毁活动"><a href="#销毁活动" class="headerlink" title="销毁活动"></a>销毁活动</h3><p>finish()方法即可.</p><h2 id="Intent的应用"><a href="#Intent的应用" class="headerlink" title="Intent的应用"></a>Intent的应用</h2><h3 id="显式Intent"><a href="#显式Intent" class="headerlink" title="显式Intent"></a>显式Intent</h3><p>通过Intent显示启动另一活动.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent(FirstActivity.this, SecondActivity.class);</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><h3 id="隐式Intent"><a href="#隐式Intent" class="headerlink" title="隐式Intent"></a>隐式Intent</h3><p>在AndroidManifest.xml中针对SecondActivity添加:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;action android:name=<span class="string">&quot;me.huaqianlee.activity.ACTION_START&quot;</span>/&gt;</span><br><span class="line">    &lt;category android:name=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt; <span class="comment"># 默认category</span></span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure><p>在FistActivity中Intent指定相同&lt;action&gt;与&lt;category&gt;即可启动另一活动.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent(<span class="string">&quot;me.huaqianlee.activity.ACTION_START&quot;</span>);</span><br><span class="line">//intent.addCategory(<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>);</span><br><span class="line"><span class="comment"># 因为声明的默认category, 这里不用添加, startActivity会自动添加.</span></span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><h3 id="更多隐式Intent用法"><a href="#更多隐式Intent用法" class="headerlink" title="更多隐式Intent用法"></a>更多隐式Intent用法</h3><h4 id="启动浏览器"><a href="#启动浏览器" class="headerlink" title="启动浏览器"></a>启动浏览器</h4><p>在自己应用程序中展示网页。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent(Intent.ACTION_VIEW); <span class="comment"># 内置动作,常量值:android.intent.action.VIEW.</span></span><br><span class="line">intent.setData(Uri.parse(<span class="string">&quot;http://www.google.com&quot;</span>));</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><p>AndroidManifest.xml中更精确指定当前活动响应的类型：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;data&gt;</span><br><span class="line">        android:scheme  <span class="comment"># 指定数据协议,如 http</span></span><br><span class="line">        android:host    <span class="comment"># 主机名, 如域名</span></span><br><span class="line">        android:port    <span class="comment"># 端口</span></span><br><span class="line">        android:path    <span class="comment"># 如网址中域名后面的内容</span></span><br><span class="line">        android:mimeType <span class="comment"># 可以处理的数据类型, 可以通过通配符指定</span></span><br><span class="line">    &lt;/data&gt;</span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure><p>譬如在某一活动xml中加入如下内容则可响应http网页：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;action android:name=<span class="string">&quot;android.intent.action.VIEW&quot;</span>/&gt;</span><br><span class="line">    &lt;category android:name=<span class="string">&quot;android.intent.category.DEFAULT&quot;</span>/&gt;</span><br><span class="line">    &lt;data android:scheme=<span class="string">&quot;http&quot;</span>/&gt;</span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure><h4 id="启动系统拨号"><a href="#启动系统拨号" class="headerlink" title="启动系统拨号"></a>启动系统拨号</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent(Intent.ACTION_DIAL);</span><br><span class="line">intent.setData(Uri.parse(<span class="string">&quot;tel:10010&quot;</span>));</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><h3 id="活动中传递数据"><a href="#活动中传递数据" class="headerlink" title="活动中传递数据"></a>活动中传递数据</h3><h4 id="传递数据到下一个活动"><a href="#传递数据到下一个活动" class="headerlink" title="传递数据到下一个活动"></a>传递数据到下一个活动</h4><p>FirstActivity中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String data = <span class="string">&quot;Hello, SecondActivity!&quot;</span>;</span><br><span class="line">Intent  intent = new Intent(FirstActivity.this, SecondActivity.class);</span><br><span class="line">intent.putExtra(<span class="string">&quot;extra_data&quot;</span>, data); // 参数：键值对</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><p>SecondActivity中接收：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = getIntent();</span><br><span class="line">String data = intent.getStringExtra(<span class="string">&quot;extra_data&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="返回数据给上一活动"><a href="#返回数据给上一活动" class="headerlink" title="返回数据给上一活动"></a>返回数据给上一活动</h4><p>FirstActivity中添加代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent  intent = new Intent(FirstActivity.this, SecondActivity.class);</span><br><span class="line">startActivityForResult(intent,1);</span><br></pre></td></tr></table></figure><p>FirstActivity中重写回调函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">            <span class="keyword">if</span>(resultCode = RESULT_OK)</span><br><span class="line">                String returnData = data.getStringExtra(<span class="string">&quot;data_return&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SecondActivity中实现返回逻辑：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">intent.putExtra(<span class="string">&quot;data_return&quot;</span>, <span class="string">&quot;Hello, FirstActivity!&quot;</span>);</span><br><span class="line">setResult(RESULT_OK, intent);</span><br><span class="line">finish();</span><br><span class="line"><span class="comment"># 为了在按返回键时也返回数据,需要重写onBackPressed()方法,并加入如上内容.</span></span><br></pre></td></tr></table></figure><h2 id="活动的生命周期"><a href="#活动的生命周期" class="headerlink" title="活动的生命周期"></a>活动的生命周期</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/lifecycle.gif" alt="lifecycle"></p><p>根据生命周期，活动存在被回收的可能性，所以为了有好的体验，需要保存数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Overide</span><br><span class="line">protected void onSaveInstanceState(Bundle outState) &#123;</span><br><span class="line">    super.onSaveInstanceState(outState);</span><br><span class="line">    String tempData = <span class="string">&quot;**********&quot;</span>;</span><br><span class="line">    outState.putString(<span class="string">&quot;data_key&quot;</span>, tempData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恢复数据:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    ....</span><br><span class="line">    <span class="keyword">if</span>(savedInstanceState != null)&#123;</span><br><span class="line">        String tmpData = savedInstaceState.getString(<span class="string">&quot;data_key&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Bundle对象亦可放在Intent对象中传递.</p></blockquote><h2 id="活动的启动模式"><a href="#活动的启动模式" class="headerlink" title="活动的启动模式"></a>活动的启动模式</h2><p>活动启动模式一共4种：standard、singleTop、singleTask和singleInstance。AndroidManifest.xml中<activity/>指定android:launchMode属性来选择。</p><h3 id="standard"><a href="#standard" class="headerlink" title="standard"></a>standard</h3><p>系统默认，每启动一个活动就在栈顶创建，即使已经存在。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/standard.jpg" alt="standard"></p><h3 id="singleTop"><a href="#singleTop" class="headerlink" title="singleTop"></a>singleTop</h3><p>活动启动时，栈顶如果不存在此活动，则创建此活动。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/singleTop.jpg" alt="singleTop"></p><h3 id="singleTask"><a href="#singleTask" class="headerlink" title="singleTask"></a>singleTask</h3><p>活动启动时，如果栈里存在此活动，则将之前的全部出栈，将此活动置于栈顶。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/singleTask.jpg" alt="singleTask"></p><h3 id="singleInstance"><a href="#singleInstance" class="headerlink" title="singleInstance"></a>singleInstance</h3><p>启动活动时，单独创建一个返回栈来管理，这样所有应用可以共用返回栈，访问此活动。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/singleInstance.jpg" alt="singleInstance"></p><h2 id="最佳实践及有用的技巧"><a href="#最佳实践及有用的技巧" class="headerlink" title="最佳实践及有用的技巧"></a>最佳实践及有用的技巧</h2><h3 id="随时随地退出程序"><a href="#随时随地退出程序" class="headerlink" title="随时随地退出程序"></a>随时随地退出程序</h3><p>随时随地退出程序，建一个ActivityCollector类和所有新建类的基类BaseActivity类。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">public class ActivityCollector &#123;</span><br><span class="line">    public static List&lt;Activity&gt; activities = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public static void addActivity(Activity activity) &#123;</span><br><span class="line">        activities.add(activity);</span><br><span class="line">    &#125;</span><br><span class="line">    public static void removeActivity(Activity activity) &#123;</span><br><span class="line">        activities.remove(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void <span class="function"><span class="title">finishAll</span></span>() &#123;</span><br><span class="line">        <span class="keyword">for</span>(Acitivity activity : activities) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!activity.isFinishing()) &#123;</span><br><span class="line">                activity.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class BaseActivity extends AppCompatActivity &#123;</span><br><span class="line">    protected void onCreate(Bundle saveInstanceState) &#123;</span><br><span class="line">        ...</span><br><span class="line">        ActivityCollector.addActivity(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected void <span class="function"><span class="title">onDestory</span></span> () &#123;</span><br><span class="line">        ...</span><br><span class="line">        ActivityCollector.removeActivity(this);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当需要销毁所有活动时</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ActivityCollector.finishAll();</span><br><span class="line">android.os.Process.killProcess(android.os.Process.myPid());</span><br><span class="line"><span class="comment"># kill掉当前进程， 确保万一的语句</span></span><br></pre></td></tr></table></figure><h3 id="项目合作时启动活动的最佳写法"><a href="#项目合作时启动活动的最佳写法" class="headerlink" title="项目合作时启动活动的最佳写法"></a>项目合作时启动活动的最佳写法</h3><p>在需要被启动的活动中实现actionStart()方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public static void actionStart(Context context, String data1, String data2) &#123;</span><br><span class="line">    Intent intent = new Intent(context, xxx.class);</span><br><span class="line">    intent.putExtra(<span class="string">&quot;param1&quot;</span>,data1);</span><br><span class="line">    intent.putExtra(<span class="string">&quot;param2&quot;</span>,data2);</span><br><span class="line">    context.startActivity(intent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一行代码之启程 </title>
      <link href="2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/"/>
      <url>2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/</url>
      
        <content type="html"><![CDATA[<p>因为工作等原因(其实主要是自己懒^_^), 之前Android学习总是断断续续的. 自己也买了一打的书, 全放在角落里了, 超过50%都没怎么看。 这次自己有了些新想法, 就计划把这些书都再学习一下, 顺便针对自己觉得有必要的知识加以整理做好笔记,就从《第一行代码》第2版开始。首先在此文中梳理下整本书的思维导图及学习笔记目录。</p><p>《第一行代码》思维导图如下:<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/firstcode/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81.png" alt="脑图1"></p><a id="more"></a><p>《第一行代码》学习笔记目录:</p><p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/FirstCode-learning-note-project-structure-and-activity/">第一行代码之项目结构与活动</a></p><p><a href="http://huaqianlee.github.io/2017/03/25/FirstCode/firstcode-note-UI/">第一行代码之UI</a></p><p><a href="http://huaqianlee.github.io/2017/03/25/FirstCode/FirstCode-Broadcast-Receiver/">第一行代码之广播机制</a></p><p><a href="http://huaqianlee.github.io/2017/04/29/FirstCode/FirstCode-data-storage/">第一行代码之数据存储</a></p><p><a href="http://huaqianlee.github.io/2017/05/03/FirstCode/FirstCode-Content-Provider/">第一行代码之跨程序共享数据-内容提供器</a></p><p><a href="http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-media/">第一行代码之手机多媒体</a></p><p><a href="http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-Service/">第一行代码之服务</a></p><p><a href="http://huaqianlee.github.io/2017/05/09/FirstCode/FirstCode-Network/">第一行代码之网络</a></p><p><a href="http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Fragment/">第一行代码之碎片</a></p><p><a href="http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Material-Design/">第一行代码之Material Design</a></p><p><a href="http://huaqianlee.github.io/2017/05/13/FirstCode/FirstCode-advanced-skills/">第一行代码之高级技巧</a></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Notation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> FirstCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ashamed</title>
      <link href="2017/03/17/Life/Ashamed/"/>
      <url>2017/03/17/Life/Ashamed/</url>
      
        <content type="html"><![CDATA[<p>惭愧! 惭愧!</p><p>  作为一个即将迈入三十的中年人, 又懈怠浪费了这么多时间. 工作不给力, 得好好准备准备换换环境了, 然后也差不多该回成都了.</p><p>  博客\CODING需要更积极些.</p><p>加油!加油!  </p>]]></content>
      
      
      <categories>
          
          <category> Balderdash </category>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>camera架构与调试-菜鸟笔记</title>
      <link href="2016/07/07/Uav/camera-arch-and-tunning-rookie-note/"/>
      <url>2016/07/07/Uav/camera-arch-and-tunning-rookie-note/</url>
      
        <content type="html"><![CDATA[<blockquote><p>菜鸟笔记，因为对camera不是很了解，肯定会有很多疏漏，也会记录一些现在不是很明白的杂乱信息，以便以后知识面扩展了后看到有所帮助。由于自己没有耐心图片一张张重画,就直接拍下了自己手写笔记的照片,笔记图片中的字很丑，将就将就</p></blockquote><p>##VFE<br>VFE为Video Front End的简写，这属于硬件部分，对于高通通过Chromatix 工具，可以产生对此流程有用的tuning file，用于配置。 VFE 流程图如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/vfe.png" alt="VFE FLOW"></p><a id="more"></a><p>###MIPI<br>现在的camera基本都采用MIPI接口， MIPI以一种采用差分方式按位传输数据的接口。只有四条引脚（DN、DP，CN、CP）。</p><p>###数据<br>根据自己的理解我大致将VFE根据数据格式分为四个部分：</p><ul><li>Raw RGB（也称为Bayer RGB）</li><li>Sensor RGB</li><li>Image RGB</li><li>YUV</li></ul><h4 id="Raw-RGB"><a href="#Raw-RGB" class="headerlink" title="Raw RGB"></a>Raw RGB</h4><p>Raw RGB为原始数据，分为Qcom raw 和 mipi raw， 现在基本都使用mipi  raw，mipi raw数据1pixel为10bits的数据(1 chanel)，即将所有数据按位重新排列，图像的行列应该为4的倍数。如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/raw%20bits.png" alt="raw bits"></p><h5 id="所有pixel图像数据构成按照如下规律排列（表格中为某种颜色的亮度值）："><a href="#所有pixel图像数据构成按照如下规律排列（表格中为某种颜色的亮度值）：" class="headerlink" title="所有pixel图像数据构成按照如下规律排列（表格中为某种颜色的亮度值）："></a>所有pixel图像数据构成按照如下规律排列（表格中为某种颜色的亮度值）：</h5><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/rgb_all.jpg" alt="rgb_all"><br>GB： 指靠近B的G. 其余同理<br>#####Raw RGB数据构成规则按照下表方式排列，对角线可以两两兑换.<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/rgb.png" alt="rgb"><br>####Raw RGB 有四种排列方式，如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/rgb_4.jpg" alt="rgb_4"></p><h4 id="Sensor-RGB"><a href="#Sensor-RGB" class="headerlink" title="Sensor RGB"></a>Sensor RGB</h4><p>Sensor RGB为camera Sensor处理过的数据，即上流程图demosaic之后的数据，1 pixel 为 3 Chanel，现在基本都为888格式的 RGB 24bits数据。<br>Sensor RGB图像数据构成按如下排列：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/sensor_rgb.jpg" alt="sensor_rgb"></p><p>####Image RGB<br>Image RGB是Sensor RGB通过color correction转变过来的，会按照三种不同光源强度乘以不同的矩阵得到不同的Image RGB，这三种光源强度为：<br>D65 - daylight color temp 为 6500k<br>TL  -   3800~4000k<br>A    -   2800k</p><blockquote><p>后两种记不清楚了， 简单搜索了一下，没有在网上找到准确的资源，先这样写着</p></blockquote><h4 id="YUV"><a href="#YUV" class="headerlink" title="YUV"></a>YUV</h4><p>YUV，分为三个分量，“Y”表示明亮度（Luminance或Luma），也就是灰度值；而“U”和“V” 表示的则是色度（Chrominance或Chroma）。是与RGB类似的颜色编码方法，主要用于计算机端。由Image RGB通过gamma处理而来，如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/gamma_note.jpg" alt="gamma_note"></p><p>###LSC<br>LSC即为Lens  shading correction， 其主要就是修正边角较暗的地方，如下笔记：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/lsc_note.jpg" alt="lsc_note"></p><p>###BLC<br>BLC即为black level correction，主要处理暗电流，笔记如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/exposure_dc.jpg" alt="exposure_dc"></p><p>###domain<br>domain分为spatial domain和frequency domain， 笔记如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/domain_note.jpg" alt="domain_note"></p><p>###CPP<br>VFE模块完成后则会进入CPP模块，cpp模块主要有如下两部分：</p><ul><li>WNR - wavelet noise reduction</li><li>ASF -  Auto special Filter （-&gt; sharpness）<br>exposure index 和 gain index 是cpp模块的trigger condition</li></ul><p>附  图片一般会经过4层曝光处理，chromatix工具<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/exposure_note.jpg" alt="exposure_note"></p><p>附 Chromatix Tool<br>driver_info.txt (等同于dts中的信息)， 通过chromatix产生tuning file（cpp项的 exposure index和gain index很可能源于此文件）</p><p>###Driver<br>驱动中图像处理，笔记如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/frame.png" alt="frame"></p><p>现在的cmos基本都是使用rolling shutter， 方式如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/cmos_rolling_shutter.jpg" alt="cmos_rolling_shutter"></p><p>####附 糊涂笔记<br>VT clock —&gt; banding  （50HZ/60HZ/AUTO/OFF —&gt;app上的配置）<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/stripe.jpg" alt="stripe"></p><p>####driver_info.txt<br>Chromatix Tool会用到的一个Sensor info文件，内容与<root_dir>\mm-camera\mm-camera2\media-controller\modules\sensors\sensor_libs\imx214\imx214_lib.c 相关，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. max frame rate  ---&gt; depends on sensor register and project</span><br><span class="line">2. min line count ---&gt; value &#x3D; 1, depends on sensor property # 1 line * 1 pixel  clock * cloumnum &#x3D; min exposure time</span><br><span class="line">3. max line count in max fps. # max line count &#x3D; FL - offset</span><br><span class="line">4. max line count  ---&gt; FL * (maxfps&#x2F;minfps) - offset</span><br><span class="line">5.raw image width</span><br><span class="line">6. raw image height</span><br><span class="line">7. bayer pattern</span><br><span class="line">8.bits per pixel</span><br><span class="line">9. packed or not ---&gt; 1: mipi; 0: others,depend on sensor</span><br><span class="line">10~13. crop ---&gt; crop掉无效边，top、right、bottom、left.</span><br><span class="line">14~16 blacklevel ---&gt; 厂商单位 12bits  &#x2F; 16(2的4次方) -&gt;8bit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Uav </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通px4代码阅读笔记</title>
      <link href="2016/05/11/Uav/qualcomm-px4-code-reading-note/"/>
      <url>2016/05/11/Uav/qualcomm-px4-code-reading-note/</url>
      
        <content type="html"><![CDATA[<p><strong>像这种庞大系统的代码， 我一般喜欢先大致了解一下代码结构，然后按照执行流程阅读分析。我阅读的是高通8074平台的px4代码。</strong></p><p>代码地址：<a href="https://github.com/ATLFlight/Firmware">ATLFlight/Firmware</a><br>参考文档：<a href="http://dev.px4.io/tutorial-hello-sky.html?q=">px4 devguide</a></p><blockquote><p>由于没有足够的时间再去细细研究, 所以只有这么一个粗略的笔记.</p></blockquote><p>============================================================================================================<br>##关键路径及文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\modules\mavlink   //  信息数据处理</span><br><span class="line">mavlink_main.cpp</span><br><span class="line">mavlink_receiver.cpp</span><br><span class="line"></span><br><span class="line">FastRPC   --  aDSP 与 apps 之间远程调用</span><br><span class="line">1. 共享内存（不包括L1/L2缓存）</span><br><span class="line">2. aDSP中能支持有限的物理映射</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\src\modules\muorb\</span><br><span class="line">adsp </span><br><span class="line">Krait</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\posix-configs\eagle\flight    // config 文件</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\src\modules  // 功能模块</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\makefiles\ </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\src\drivers\rc_receiver\rc_receiver_main.cpp   // 遥控器</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\src\drivers\device\vdev.cpp   <span class="comment"># Virtual character device base class.</span></span><br><span class="line">mavilink、uorb 继承于此类</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="按执行调用（log）顺序阅读"><a href="#按执行调用（log）顺序阅读" class="headerlink" title="##按执行调用（log）顺序阅读"></a>##按执行调用（log）顺序阅读</h1><p>###APPS Processor<br>执行指令： ./mainapp mainapp.config  - （main.cpp + W:\uav\Firmware\posix-configs\eagle\flight\mainapp-flight.config）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\platforms\posix\main.cpp </span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">    px4::init_once()</span><br><span class="line">        pthread_self()                  <span class="comment"># expand params table and copy own params to shared memory</span></span><br><span class="line">        init_own_params()           <span class="comment"># copy other proc params from shared memory</span></span><br><span class="line">    process_line(line)         <span class="comment"># 执行mainapp.config中的命令</span></span><br><span class="line">    getline(cin, mystr)       <span class="comment"># 定义shell， 并读取输入  “pxh&gt;”</span></span><br></pre></td></tr></table></figure><p>执行时打印的log如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">px4muorbKraitWrapper.cpp （C:\Qualcomm\Hexagon_SDK\2.0\flight_controller\krait\inc\px4muorb_KraitRpcWrapper.hpp）</span><br><span class="line"></span><br><span class="line">W:\uav\apq8074-le-1-0_ap_standard_oem\apps_proc\oe-core\build\tmp-eglibc\work\cortexa8hf-vfp-neon-linux-gnueabi\adsprpc\1.0-r0\adsprpc-1.0\src</span><br><span class="line">fastrpc_apps_user.c</span><br><span class="line">listener_android.c</span><br><span class="line">rpcmem.c  （rpcmem_alloc 分配 ION memory）</span><br><span class="line"></span><br><span class="line">INFO  Shell id is 3069956096</span><br><span class="line">INFO  Starting shared memory param sync</span><br><span class="line"></span><br><span class="line">INFO  param loading done</span><br><span class="line"></span><br><span class="line">App name: mainapp</span><br><span class="line">pxh&gt;  （shell ？）</span><br><span class="line">apq8074-le-1-0_ap_standard_oem&#x2F;apps_proc&#x2F;oe-core&#x2F;build&#x2F;tmp-eglibc&#x2F;work&#x2F;cortexa8hf-vfp-neon-linux-gnueabi&#x2F;adsprpc&#x2F;1.0-r0&#x2F;adsprpc-1.0&#x2F;src&#x2F;listener_android.c</span><br></pre></td></tr></table></figure><p>mainapp.config的内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uorb start</span><br><span class="line">muorb start</span><br><span class="line">mavlink start -u 14556</span><br><span class="line">sleep 1</span><br><span class="line">mavlink stream -u 14556 -s HIGHRES_IMU -r 50</span><br><span class="line">mavlink stream -u 14556 -s ATTITUDE -r 50</span><br><span class="line">mavlink boot_complete</span><br></pre></td></tr></table></figure><h3 id="ADSP"><a href="#ADSP" class="headerlink" title="ADSP"></a>ADSP</h3><p>adsp端打印的log如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">symbol.c （链接ELF（ Executable and Linkable Format） 和 object）</span><br><span class="line">reloc.c      &#x2F;&#x2F; two c file maybe come from apps_proc</span><br><span class="line">W:\uav\Firmware\src\modules\muorb\adsp\px4muorb.cpp （px4muorb_orb_initialize）</span><br><span class="line">      - W:\uav\Firmware\src\platforms\qurt\px4_layer\main.cpp （ dspal_entry）</span><br><span class="line">        W:\uav\Firmware\posix-configs\eagle\flight\px4-flight.config --&gt;（adb push） &#x2F;usr&#x2F;share&#x2F;data&#x2F;adsp&#x2F;px4.config（linaro中文件， 由px4-flight.config改名得来）  --&gt; “&#x2F;dev&#x2F;fs&#x2F;px4.config“（W:\uav\Firmware\src\platforms\qurt\px4_layer\main.cpp 中引用）</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\src\modules\uORB\uORBManager_posix.cpp  --&gt;加载 DeviceNode</span><br></pre></td></tr></table></figure><p>adsp端main.cp源码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#W:\uav\Firmware\src\platforms\qurt\px4_layer\main.cpp </span></span><br><span class="line">int dspal_main(int argc, char *argv[])</span><br><span class="line">    dspal_entry( int argc, char* argv[] )</span><br><span class="line">        px4::init_once()</span><br><span class="line">            init_own_params()</span><br><span class="line">            init_other_params()</span><br><span class="line">        process_commands(apps, get_commands())  <span class="comment"># 执行px4-flight.config中的命令</span></span><br><span class="line">            PARAM_DEFINE_INT32(MAV_TYPE,2)  <span class="comment"># commander需要用到的parameter，由mavlink创建，因为mavilink没有运行在qurt，所以需要手动定义以便在commander中能够使用， &quot;2&quot; is for quadrotor（枚举值，四轴飞行器），MAV_TYPE - enum</span></span><br><span class="line">            run_cmd(apps, appargs)</span><br><span class="line">        void qurt_external_hook(void) __attribute__((weak))      <span class="comment">#start external function</span></span><br></pre></td></tr></table></figure><p>adsp端配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># W:\uav\Firmware\posix-configs\eagle\flight\px4-flight.config</span></span><br><span class="line">uorb start</span><br><span class="line">param <span class="built_in">set</span> xx  xx</span><br><span class="line">commander start </span><br><span class="line"></span><br><span class="line">param <span class="built_in">set</span> RC_RECEIVER_TYPE 1    <span class="comment"># 为c中相关的地方提供参数， 类似于外部宏定义 ?</span></span><br><span class="line">/**</span><br><span class="line">**  _params_handles.rc_receiver_type=param_find(<span class="string">&quot;RC_RECEIVER_TYPE&quot;</span>); <span class="comment"># W:\uav\Firmware\src\drivers\rc_receiver\rc_receiver_main.cpp</span></span><br><span class="line">**  PARAM_DEFINE_INT32(RC_RECEIVER_TYPE, 1);  <span class="comment"># W:\uav\Firmware\src\drivers\rc_receiver\rc_receiver_params.c)</span></span><br><span class="line">**/</span><br><span class="line"></span><br><span class="line">rc_receiver start -D /dev/tty-1</span><br><span class="line"></span><br><span class="line">attitude_estimator_q start</span><br><span class="line">position_estimator_inav start</span><br><span class="line">mc_pos_control start</span><br><span class="line">mc_att_control start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">param <span class="built_in">set</span> xx  xx</span><br><span class="line">sensors start</span><br><span class="line"></span><br><span class="line">param <span class="built_in">set</span> xx  xx</span><br><span class="line"></span><br><span class="line">mpu9x50 start -D /dev/spi-1    ---&gt;  driver/mpu9x50 ---&gt; module/sensors ---&gt; ... ---&gt; drivers/uart_esc</span><br><span class="line">uart_esc start -D /dev/tty-2</span><br><span class="line">csr_gps start -D /dev/tty-3</span><br><span class="line">pressure start -D /dev/i2c-2</span><br><span class="line">list_devices</span><br><span class="line">list_files</span><br><span class="line">list_tasks</span><br><span class="line">list_topics</span><br></pre></td></tr></table></figure><h3 id="uorb-amp-muorb"><a href="#uorb-amp-muorb" class="headerlink" title="uorb &amp; muorb"></a>uorb &amp; muorb</h3><p>uorb&amp;muorb是负责数据传输的模块。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关键路径</span></span><br><span class="line">W:\uav\Firmware\src\modules\uORB\uORBCommon.hpp</span><br></pre></td></tr></table></figure><h4 id="uorb-start"><a href="#uorb-start" class="headerlink" title="uorb start"></a>uorb start</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\modules\uORB\uORBMain.cpp</span><br><span class="line">int uorb_main(int argc, char *argv[])</span><br><span class="line">    g_dev = new uORB::DeviceMaster(uORB::PUBSUB); </span><br><span class="line">        ...    (W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.hpp)</span><br><span class="line">    g_dev-&gt;init()</span><br><span class="line">        VDev-&gt;init()              W:\uav\Firmware\src\drivers\device\vdev.cpp  , 父类</span><br><span class="line">            device-&gt;init()         W:\uav\Firmware\src\drivers\device\vdev.cpp, 父类</span><br><span class="line">            register_driver(_devname, (void *)this); <span class="comment"># 注册驱动    </span></span><br></pre></td></tr></table></figure><p>W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.hpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">class uORB::DeviceNode : public device::VDev</span><br><span class="line">&#123;</span><br><span class="line">virtual int   open(device::file_t *filp);</span><br><span class="line">virtual int   ioctl(device::file_t *filp, int cmd, unsigned long arg);</span><br><span class="line">...</span><br><span class="line">static ssize_t    publish(const orb_metadata *meta, orb_advert_t handle, const void *data);</span><br><span class="line">...</span><br><span class="line">int16_t process_add_subscription(int32_t rateInHz);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Master control device <span class="keyword">for</span> ObjDev.</span><br><span class="line"> *</span><br><span class="line"> * Used primarily to create new objects via the ORBIOCCREATE</span><br><span class="line"> * ioctl.</span><br><span class="line"> */</span><br><span class="line">class uORB::DeviceMaster : public device::VDev</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">DeviceMaster(Flavor f);</span><br><span class="line">~DeviceMaster();</span><br><span class="line"></span><br><span class="line">static uORB::DeviceNode *GetDeviceNode(const char *node_name);</span><br><span class="line"></span><br><span class="line">virtual int   ioctl(device::file_t *filp, int cmd, unsigned long arg);</span><br><span class="line">private:</span><br><span class="line">Flavor      _flavor;</span><br><span class="line">static std::map&lt;std::string, uORB::DeviceNode *&gt; _node_map;  <span class="comment"># DeviceNode 集合 </span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>　</p><h4 id="muorb-start"><a href="#muorb-start" class="headerlink" title="muorb start"></a>muorb start</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uORBDevices_posix.cpp  </span><br><span class="line">        ---&gt; W:\uav\Firmware\src\drivers\device\vdev_posix.cpp      </span><br><span class="line">                 uorb  px4_write() px4_read() px4_ioctl() px4_poll() 等底层实现 ？</span><br></pre></td></tr></table></figure><h5 id="Krait-muorb"><a href="#Krait-muorb" class="headerlink" title="Krait muorb"></a>Krait muorb</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int muorb_main(int argc, char *argv[]) (W:\uav\Firmware\src\modules\muorb\krait\muorb_main.cpp)</span><br><span class="line"><span class="string">&quot;start&quot;</span></span><br><span class="line">    uORB::Manager::get_instance()-&gt;set_uorb_communicator(uORB::KraitFastRpcChannel::GetInstance()); <span class="comment"># register the fast rpc channel with UORB.</span></span><br><span class="line">        uORB::Manager *uORB::Manager::get_instance() (W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.cpp)</span><br><span class="line">        static uORB::KraitFastRpcChannel *GetInstance(W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.hpp) <span class="comment"># 获取uORB::KraitFastRpcChannel实例, invoke constructor</span></span><br><span class="line">    uORB::KraitFastRpcChannel::GetInstance()-&gt;Start(); <span class="comment"># start the KaitFastRPC channel thread.</span></span><br><span class="line">        void uORB::KraitFastRpcChannel::Start() (W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.cpp)  <span class="comment"># start </span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;stop&quot;</span>  </span><br><span class="line">    void uORB::KraitFastRpcChannel::Stop()</span><br></pre></td></tr></table></figure><p>####muorb通信</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"> Krait muorb                                         (invoke)----&gt;                                             adsp muorb</span><br><span class="line">(uORBKraitFastRpcChannel.cpp)                                                                             (adsp\px4muorb.cpp)</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.hpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">namespace uORB</span><br><span class="line">&#123;</span><br><span class="line">class KraitFastRpcChannel;</span><br><span class="line">&#125;</span><br><span class="line">class uORB::KraitFastRpcChannel : public uORBCommunicator::IChannel --&gt; private  constructor. </span><br><span class="line"></span><br><span class="line">static uORB::KraitFastRpcChannel *GetInstance (<span class="comment"># W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.hpp)</span></span><br><span class="line">    uORB::KraitFastRpcChannel::KraitFastRpcChannel() (W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.cpp) <span class="comment"># constructor begin</span></span><br><span class="line">        _KraitWrapper.Initialize();</span><br><span class="line">           int px4muorb_orb_initialize() （W:\uav\Firmware\src\modules\muorb\adsp\px4muorb.cpp） <span class="comment"># 调用adsp中initial</span></span><br><span class="line">                dspal_main(argc, argv); （W:\uav\Firmware\src\platforms\qurt\px4_layer\main.cpp）</span><br><span class="line">    int16_t uORB::KraitFastRpcChannel::add_subscription(const char *messageName, int32_t msgRateInHz)</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>####uorb通信</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">==========================================================================</span><br><span class="line">uorb      (invoke)----&gt;    krait muorb      (invoke)----&gt;     adsp muorb</span><br><span class="line">==========================================================================</span><br></pre></td></tr></table></figure><h4 id="add-subscriber"><a href="#add-subscriber" class="headerlink" title="add subscriber"></a>add subscriber</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">void uORB::DeviceNode::add_internal_subscriber() (W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.cpp  <span class="comment"># 调用adsp 和 Krait中muorb中实现的 接口 ？)</span></span><br><span class="line">    int16_t uORB::KraitFastRpcChannel::add_subscription(const char *messageName, int32_t msgRateInHz) (W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.cpp)</span><br><span class="line">        int px4muorb_add_subscriber(const char *name) (W:\uav\Firmware\src\modules\muorb\adsp\px4muorb.cpp)</span><br><span class="line">            uORB::FastRpcChannel::GetInstance(); // 获取adsp FastRpcChannel 实例， 构造方法 </span><br><span class="line">                uORB::FastRpcChannel::FastRpcChannel()</span><br><span class="line">                    初始化...</span><br><span class="line">                    _RemoteSubscribers.clear(); <span class="comment"># std::set&lt;std::string&gt; _RemoteSubscribers   远端订阅集？</span></span><br><span class="line">    channel-&gt;AddRemoteSubscriber(name);</span><br><span class="line">                _RemoteSubscribers.insert(messageName); <span class="comment"># 插入一个message</span></span><br><span class="line">            uORBCommunicator::IChannelRxHandler *rxHandler  = channel-&gt;GetRxHandler();</span><br><span class="line">            rxHandler-&gt;process_add_subscription(name, 0);</span><br><span class="line">                virtual int16_t process_add_subscription(const char *messageName, int32_t msgRateInHz) = 0;   <span class="comment">#无源文件， 库</span></span><br></pre></td></tr></table></figure><p>W:\uav\Firmware\src\modules\muorb\adsp\uORBFastRpcChannel.hpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">namespace uORB</span><br><span class="line">&#123;</span><br><span class="line">class FastRpcChannel;</span><br><span class="line">&#125;</span><br><span class="line">class uORB::FastRpcChannel : public uORBCommunicator::IChannel</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>W:\uav\Firmware\src\modules\uORB\uORBCommunicator.hpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Class passed to the communication link implement to provide callback <span class="keyword">for</span> received</span><br><span class="line"> * messages over a channel.</span><br><span class="line"> */</span><br><span class="line">class uORBCommunicator::IChannelRxHandler</span><br><span class="line"> virtual int16_t process_add_subscription(const char *messageName, int32_t msgRateInHz) = 0;</span><br></pre></td></tr></table></figure><p>W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.cpp  ( apps processor 数据交互 ？)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">void uORB::DeviceNode::add_internal_subscriber()</span><br><span class="line">int16_t uORB::DeviceNode::process_add_subscription(int32_t rateInHz)</span><br><span class="line">    uORBCommunicator::IChannel *uORB::Manager::get_uorb_communicator(void) <span class="comment"># 获取 uORBCommunicator::IChannel</span></span><br><span class="line">        ch-&gt;send_message(_meta-&gt;o_name, _meta-&gt;o_size, _data);</span><br><span class="line"></span><br><span class="line">int uORB::DeviceNode::ioctl(device::file_t *filp, int cmd, unsigned long arg)</span><br><span class="line"><span class="built_in">read</span>()  </span><br><span class="line">write()</span><br><span class="line">int uORB::DeviceMaster::ioctl(device::file_t *filp, int cmd, unsigned long arg)  <span class="comment"># create new objects </span></span><br><span class="line">switch (cmd) &#123;</span><br><span class="line"><span class="keyword">case</span> ORBIOCADVERTISE: &#123;</span><br><span class="line">                /* construct the new node */</span><br><span class="line">node = new uORB::DeviceNode(meta, objname, devpath, adv-&gt;priority);                </span><br><span class="line">_node_map[std::string(nodepath)] = node; // add to the node map;.</span><br></pre></td></tr></table></figure><p>W:\uav\Firmware\src\modules\uORB\uORBManager_posix.cpp （px4_ioctl）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int16_t uORB::Manager::process_add_subscription(const char *messageName, int32_t msgRateInHz)</span><br><span class="line"></span><br><span class="line">orb_advert_t uORB::Manager::orb_advertise_multi(const struct orb_metadata *meta, const void *data, int *instance,int priority)</span><br><span class="line">    int px4_ioctl(int fd, int cmd, unsigned long arg) (W:\uav\Firmware\src\drivers\device\vdev_posix.cpp)</span><br><span class="line">        dev-&gt;ioctl(filemap[fd], cmd, arg);</span><br><span class="line">            int VDev::ioctl(file_t *filep, int cmd, unsigned long arg)( W:\uav\Firmware\src\drivers\device\vdev.cpp)</span><br></pre></td></tr></table></figure><p>W:\uav\Firmware\src\drivers\drv_orb_dev.h</p><p>W:\uav\Firmware\src\drivers\device\vdev.cpp</p><p> 编译后执行程序 打印路径变成 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\apq8074-le-1-0_ap_standard_oem\apps_proc\oe-core\build\tmp-eglibc\work\cortexa8hf-vfp-neon-linux-gnueabi\adsprpc\1.0-r0\adsprpc-1.0\src</span><br><span class="line">W:\uav\apq8074-le-1-0_ap_standard_oem\apps_proc\adsprpc\src\listener_android.c</span><br><span class="line">W:\uav\apq8074-le-1-0_ap_standard_oem\apps_proc\adsprpc\src\adsp_listener_stub.c</span><br><span class="line">W:\uav\apq8074-le-1-0_ap_standard_oem\apps_proc\adsprpc\src\fastrpc_apps_user.c</span><br><span class="line">W:\uav\apq8074-le-1-0_ap_standard_oem\apps_proc\adsprpc\src\rpcmem.c</span><br></pre></td></tr></table></figure><h3 id="数据传输流程"><a href="#数据传输流程" class="headerlink" title="数据传输流程"></a>数据传输流程</h3><p>adsp –&gt; libmpu9x50.so-&gt;mpu9x50_main.cpp-&gt;orb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\drivers\mpu9x50\mpu9x50_main.cpp</span><br><span class="line">int mpu9x50_main(int argc, char *argv[]) (device &#x3D; myoptarg&#x3D;dev&#x2F;spi-1 )</span><br><span class="line">    mpu9x50::start();</span><br><span class="line">        void task_main(int argc, char *argv[])</span><br><span class="line">            ...    (libmpu9x50.so,  adsp 操作接口)</span><br><span class="line">            create_pubs()    # 创建 uorb publications   </span><br><span class="line">                  _gyro_pub &#x3D; orb_advertise(ORB_ID(sensor_xxx), &amp;_xxx);     # 通知 公布主题</span><br><span class="line">    _params_sub &#x3D; orb_subscribe(ORB_ID(parameter_update));     # 订阅 parameter_update topic</span><br><span class="line">    while (!_task_should_exit) &#123;</span><br><span class="line">mpu9x50_get_data(&amp;_data)</span><br><span class="line">parameter_update_poll(); # 轮询 parameter update (W:\uav\Firmware\src\modules\uORB\topics\parameter_update.h)</span><br><span class="line">publish_reports(); # 发布sensors主题</span><br></pre></td></tr></table></figure><h3 id="commander"><a href="#commander" class="headerlink" title="commander"></a>commander</h3><p>飞行安全管理， 订阅相关主题， 用来检查飞行安全，并做相应处理，。。。。。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\modules\commander\commander.cpp</span><br><span class="line">int commander_main(int argc, char *argv[])</span><br><span class="line">    int commander_thread_main(int argc, char *argv[])</span><br><span class="line">        ...      <span class="comment"># set parameters  -&gt; mavlink</span></span><br><span class="line">        <span class="comment"># 初始化vehicle_status_s (W:\uav\Firmware\src\modules\uORB\topics\vehicle_status.h)</span></span><br><span class="line">        main_states_str[vehicle_status_s::MAIN_STATE_MAX]; </span><br><span class="line">        arming_states_str[] / nav_states_str[]</span><br><span class="line">        ...</span><br><span class="line">        orb_advertise(ORB_ID(vehicle_status), &amp;status); <span class="comment"># 公布vehicle_status</span></span><br><span class="line">        orb_advertise(ORB_ID(vehicle_control_mode), &amp;control_mode);</span><br><span class="line">        orb_advertise(ORB_ID(actuator_armed), &amp;armed);</span><br><span class="line">        dm_read(DM_KEY_MISSION_STATE, 0, &amp;mission, sizeof(mission_s)</span><br><span class="line">         orb_advertise(ORB_ID(offboard_mission), &amp;mission);</span><br><span class="line">         orb_publish(ORB_ID(offboard_mission), mission_pub, &amp;mission);</span><br><span class="line"></span><br><span class="line">        /* Start monitoring loop */</span><br><span class="line">        rc_calibration_check(mavlink_fd);   <span class="comment">#遥控器校准？</span></span><br><span class="line">        orb_subscribe(ORB_ID(safety))</span><br><span class="line">        orb_subscribe(ORB_ID(mission_result))</span><br><span class="line">        orb_subscribe(ORB_ID(geofence_result))</span><br><span class="line">        orb_subscribe(ORB_ID(manual_control_setpoint)) <span class="comment"># 订阅manual control data</span></span><br><span class="line">        orb_subscribe(ORB_ID(offboard_control_mode))</span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_global_position)) <span class="comment">#订阅global position</span></span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_local_position))</span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_land_detected))</span><br><span class="line"></span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_gps_position))</span><br><span class="line">        orb_subscribe(ORB_ID(sensor_combined))</span><br><span class="line">        orb_subscribe(ORB_ID(differential_pressure))</span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_command))</span><br><span class="line">        orb_subscribe(ORB_ID(parameter_update))</span><br><span class="line">        orb_subscribe(ORB_ID(battery_status))</span><br><span class="line">        orb_subscribe(ORB_ID(subsystem_info))</span><br><span class="line">        orb_subscribe(ORB_ID(position_setpoint_triplet))</span><br><span class="line">        orb_subscribe(ORB_ID(system_power))</span><br><span class="line">        orb_subscribe(ORB_ID_VEHICLE_ATTITUDE_CONTROLS)</span><br><span class="line">        orb_subscribe(ORB_ID(vtol_vehicle_status))</span><br><span class="line"></span><br><span class="line">        param_get(_param_sys_type, &amp;(status.system_type)) <span class="comment"># update vehicle status(vehicle_status_s ) to find out vehicle type (required for preflight checks)</span></span><br><span class="line">        <span class="comment"># Run preflight check</span></span><br><span class="line">        </span><br><span class="line">        commander_boot_timestamp = hrt_absolute_time() <span class="comment"># 获取启动时间戳</span></span><br><span class="line"></span><br><span class="line">        pthread_create(&amp;commander_low_prio_thread, &amp;commander_low_prio_attr, commander_low_prio_loop, NULL);</span><br><span class="line">            px4_poll(&amp;fds[0], (sizeof(fds) / sizeof(fds[0])), 1000)</span><br><span class="line">            orb_copy(ORB_ID(vehicle_command), cmd_sub, &amp;cmd)</span><br><span class="line">            <span class="comment"># handel command</span></span><br><span class="line">        <span class="keyword">while</span>()</span><br><span class="line">            更新 parameter</span><br><span class="line">            orb_check(param_changed_sub, &amp;updated)  <span class="comment"># 检查主题是否更新， 每次获取copy前执行， 或者执行poll()</span></span><br><span class="line">            orb_copy(ORB_ID(parameter_update), param_changed_sub, &amp;param_changed) <span class="comment"># 从订阅主题中获取更新数据存在param_changed</span></span><br><span class="line">            通过parameters获取值？</span><br><span class="line">            orb_copy(ORB_ID(manual_control_setpoint), sp_man_sub, &amp;sp_man) <span class="comment"># 获取订阅主题manual_control_setpoint 数据</span></span><br><span class="line">            orb_copy(ORB_ID(offboard_control_mode), offboard_control_mode_sub, &amp;offboard_control_mode)</span><br><span class="line"></span><br><span class="line">            orb_subscribe_multi(ORB_ID(telemetry_status), i)  <span class="comment">#  订阅多个不同来源的 telemetry_status主题（最多四个）   遥控器 ？</span></span><br><span class="line">            orb_copy(ORB_ID(telemetry_status), telemetry_subs[i], &amp;telemetry)</span><br><span class="line"></span><br><span class="line">            orb_copy(ORB_ID(sensor_combined), sensor_sub, &amp;sensors)</span><br><span class="line">            orb_copy(ORB_ID(differential_pressure), diff_pres_sub, &amp;diff_pres)</span><br><span class="line">            orb_copy(ORB_ID(system_power), system_power_sub, &amp;system_power)</span><br><span class="line">            orb_copy(ORB_ID(safety), safety_sub, &amp;safety)</span><br><span class="line">            orb_copy(ORB_ID(vtol_vehicle_status), vtol_vehicle_status_sub, &amp;vtol_status) <span class="comment"># 垂直起降</span></span><br><span class="line">            orb_copy(ORB_ID(vehicle_global_position), global_position_sub, &amp;gpos)</span><br><span class="line">            orb_copy(ORB_ID(vehicle_local_position), local_position_sub, &amp;local_position)</span><br><span class="line">            orb_copy(ORB_ID(vehicle_land_detected), land_detector_sub, &amp;land_detector)</span><br><span class="line">            orb_copy(ORB_ID(battery_status), battery_sub, &amp;battery); <span class="comment"># 后面会根据电池状态做一些判断和处理</span></span><br><span class="line">    orb_copy(ORB_ID_VEHICLE_ATTITUDE_CONTROLS, actuator_controls_sub, &amp;actuator_controls)</span><br><span class="line">            orb_copy(ORB_ID(subsystem_info), subsys_sub, &amp;info)</span><br><span class="line">            orb_copy(ORB_ID(position_setpoint_triplet), pos_sp_triplet_sub, &amp;pos_sp_triplet)</span><br><span class="line">            orb_copy(ORB_ID(vehicle_gps_position), gps_sub, &amp;gps_position)</span><br><span class="line">            orb_copy(ORB_ID(mission_result), mission_result_sub, &amp;mission_result)</span><br><span class="line">            orb_copy(ORB_ID(geofence_result), geofence_result_sub, &amp;geofence_result)</span><br><span class="line">            遥控器输入信号检查</span><br><span class="line"></span><br><span class="line">            set_main_state_rc(&amp;status, &amp;sp_man)  <span class="comment"># manual_control_setpoint主题数据， MANUAL/ALTCTL/POSCTL 模式处理及反馈</span></span><br><span class="line"></span><br><span class="line">            orb_copy(ORB_ID(vehicle_command), cmd_sub, &amp;cmd) <span class="comment"># 获取cmd    </span></span><br><span class="line">            handle_command(&amp;status, &amp;safety, &amp;cmd, &amp;armed, &amp;_home, &amp;global_position, &amp;local_position, &amp;home_pub)  <span class="comment"># 处理cmd</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># publish states (armed, control mode, vehicle status) at least with 5 Hz</span></span><br><span class="line">            set_control_mode();</span><br><span class="line">            orb_publish(ORB_ID(vehicle_control_mode), control_mode_pub, &amp;control_mode);</span><br><span class="line">            orb_publish(ORB_ID(vehicle_status), status_pub, &amp;status);</span><br><span class="line">            orb_publish(ORB_ID(actuator_armed), armed_pub, &amp;armed);</span><br></pre></td></tr></table></figure><p>W:\uav\Firmware\src\platforms\ros\nodes\commander\commander.cpp  （与上一commander.cpp 对应  ？）</p><p>W:\uav\Firmware\src\drivers\px4io\px4io.cpp    </p><h3 id="Mavlink"><a href="#Mavlink" class="headerlink" title="Mavlink"></a>Mavlink</h3><p>int mavlink_main(int argc, char *argv[]) # W:\uav\Firmware\src\modules\mavlink\mavlink_main.cpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;start&quot;</span></span><br><span class="line">    Mavlink::start(int argc, char *argv[])</span><br><span class="line">        px4_task_spawn_cmd( )</span><br><span class="line">            Mavlink::start_helper( )</span><br><span class="line">        Mavlink::task_main(int argc, char *argv[])</span><br><span class="line">                    px4_getopt(argc, argv, <span class="string">&quot;b:r:d:u:m:fpvwx&quot;</span>, &amp;myoptind, &amp;myoptarg)  <span class="comment">#  &quot;-u&quot;  set udp</span></span><br><span class="line">                    px4_open(MAVLINK_LOG_DEVICE, 0) <span class="comment"># 创建设备节点， 发送log消息</span></span><br><span class="line">                    MavlinkReceiver::receive_start(this)  <span class="comment"># 创建 MavlinkReceiver线程</span></span><br><span class="line">                    MavlinkOrbSubscription *param_sub     <span class="comment"># Mavlink  Orb    Subscription 类  </span></span><br><span class="line">                    = add_orb_subscription(ORB_ID(parameter_update));</span><br><span class="line">                    add_orb_subscription(ORB_ID(vehicle_status))</span><br><span class="line">                    status_sub-&gt;update(&amp;status_time, &amp;status)  <span class="comment"># 调用MavlinkOrbSubscription 中update()， 获取比status_time新的数据</span></span><br><span class="line">                    根据mode添加默认数据流</span><br><span class="line">                    ...</span><br><span class="line">                    LL_APPEND(_mavlink_instances, this) <span class="comment"># 添加mavilink实例链表，初始化等？</span></span><br><span class="line">                    init_udp(); <span class="comment"># 如果为udp模式，初始化socket  , 后面也有初始化串口等操作</span></span><br><span class="line">                    <span class="keyword">while</span>( )</span><br><span class="line">                        <span class="keyword">if</span> (status_sub-&gt;update(&amp;status_time, &amp;status))         set_hil_enabled(status.hil_state == vehicle_status_s::HIL_STATE_ON)  <span class="comment"># switch HIL mode if required</span></span><br><span class="line">    set_manual_input_mode_generation(status.rc_input_mode == vehicle_status_s::RC_IN_MODE_GENERATED); <span class="comment"># 设置为手动输入生成模式，if true， 通过手动输入mavilink消息在系统总线生成RC_INPUT消息    </span></span><br><span class="line">                        check <span class="keyword">for</span> requested subscriptions</span><br><span class="line">                        configure_stream(_subscribe_to_stream, _subscribe_to_stream_rate)</span><br><span class="line">                        stream-&gt;update(t); <span class="comment"># 更新数据流</span></span><br><span class="line">                        通过其他uarts 或者FTP(File Transfer Protocol) worker 传输消息</span><br><span class="line">message_buffer_get_ptr((void **)&amp;read_ptr, &amp;is_part);</span><br><span class="line">                        ...</span><br><span class="line">                        <span class="comment"># 释放close所有设备消息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;stream&quot;</span></span><br><span class="line">    Mavlink::stream_command(int argc, char *argv[])</span><br><span class="line">        strcmp(argv[i], <span class="string">&quot;-s&quot;</span>)</span><br><span class="line">            stream_name = argv[i + 1];  <span class="comment"># 配置数据流名如： HIGHRES_IMU，ATTITUDE</span></span><br><span class="line">        strcmp(argv[i], <span class="string">&quot;-r&quot;</span>)</span><br><span class="line">            rate = strtod(argv[i + 1], nullptr);  <span class="comment"># 配置传输速率</span></span><br><span class="line">        strcmp(argv[i], <span class="string">&quot;-u&quot;</span>)</span><br><span class="line">            配置udp端口</span><br><span class="line">    </span><br><span class="line">        get_instance_for_device(device_name);  <span class="comment"># &quot;/dev/ttyS1&quot; ， 与下二选一</span></span><br><span class="line">        get_instance_for_network_port(network_port); <span class="comment"># 获取数据传输文件实例， 此为udp</span></span><br><span class="line">        inst-&gt;configure_stream_threadsafe(stream_name, rate) <span class="comment"># orb订阅在主线程中完成，set _subscribe_to_stream和 _subscribe_to_stream_rate在mavilink主循环中取值</span></span><br><span class="line">            _subscribe_to_stream_rate = rate;</span><br><span class="line">            _subscribe_to_stream = s;  <span class="comment"># stream_name</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;boot_complete&quot;</span></span><br><span class="line">    <span class="function"><span class="title">set_boot_complete</span></span>() &#123; _boot_complete = <span class="literal">true</span>; &#125;</span><br></pre></td></tr></table></figure><h3 id="Mavlink-Reiceiver"><a href="#Mavlink-Reiceiver" class="headerlink" title="Mavlink Reiceiver"></a>Mavlink Reiceiver</h3><p>MavlinkReceiver::receive_start(Mavlink *parent)  # W:\uav\Firmware\src\modules\mavlink\mavlink_receiver.cpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">*MavlinkReceiver::start_helper(void *context)</span><br><span class="line">MavlinkReceiver *rcv = new MavlinkReceiver((Mavlink *)context)</span><br><span class="line">rcv-&gt;receive_thread(NULL) <span class="comment"># 创建接收线程</span></span><br><span class="line">    <span class="keyword">if</span>从串口读取 ::<span class="built_in">read</span>(uart_fd, buf, sizeof(buf))    </span><br><span class="line">    <span class="keyword">if</span>从udp读取  recvfrom(_mavlink-&gt;get_socket_fd(), buf, sizeof(buf), 0, (struct sockaddr *)&amp;srcaddr, &amp;addrlen); </span><br><span class="line">    解析接收的数据  <span class="keyword">if</span> mavlink_parse_char(_mavlink-&gt;get_channel(), buf[i], &amp;msg, &amp;status)  成功</span><br><span class="line">    handle_message(&amp;msg) <span class="comment"># 处理通用信息和命令</span></span><br><span class="line">        handle_message_manual_control(msg); <span class="comment"># case MAVLINK_MSG_ID_MANUAL_CONTROL</span></span><br><span class="line">        mavlink_msg_manual_control_decode(msg, &amp;man); <span class="comment"># 解码手动控制信息到结构体man</span></span><br><span class="line">        处理转换手动控制信息</span><br><span class="line">        orb_advertise(ORB_ID(input_rc), &amp;rc) <span class="comment"># 公布input_rc主题（远程输入消息）</span></span><br><span class="line">        orb_publish(ORB_ID(input_rc), _rc_pub, &amp;rc); <span class="comment"># 发送主题  （sensors.cpp中订阅接收主题， 解析后再发布出去，传到下一级操作？）</span></span><br><span class="line"></span><br><span class="line">    _mavlink-&gt;handle_message(&amp;msg) <span class="comment"># 处理父对象包</span></span><br><span class="line"></span><br><span class="line">    _mavlink-&gt;count_rxbytes(nread) <span class="comment"># 接收信息计数</span></span><br></pre></td></tr></table></figure><p>W:\uav\Firmware\src\modules\mavlink\mavlink_messages.cpp  # 各种数据流 stream 类定义。。。</p><h3 id="uart-esc-start-D-dev-tty-2"><a href="#uart-esc-start-D-dev-tty-2" class="headerlink" title="uart_esc start -D /dev/tty-2"></a>uart_esc start -D /dev/tty-2</h3><p>int uart_esc_main(int argc, char *argv[])  # W:\uav\Firmware\src\drivers\px4_legacy_driver_wrapper\uart_esc\uart_esc_main.cpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   uart_esc::start()-&gt;task_main(int argc, char *argv[])</span><br><span class="line">       parameters_init(); <span class="comment"># 电调参数初始化</span></span><br><span class="line">       esc = UartEsc::get_instance()  <span class="comment"># 获取电调实例， 实现在libuart.so</span></span><br><span class="line"> orb_subscribe(ORB_ID(actuator_controls_0));  <span class="comment"># 订阅主题</span></span><br><span class="line">orb_subscribe(ORB_ID(actuator_armed));</span><br><span class="line">orb_subscribe(ORB_ID(parameter_update));</span><br><span class="line">       initialize_mixer(MIXER_FILENAME) <span class="comment"># 设置mixer</span></span><br><span class="line">       <span class="keyword">while</span>( )</span><br><span class="line">           orb_copy(ORB_ID(actuator_controls_0), _controls_sub, &amp;_controls)</span><br><span class="line">           esc-&gt;send_rpms(motor_rpms, _outputs.noutputs)    </span><br></pre></td></tr></table></figure><h3 id="attitude-estimator-q-start-（主要接收sensor和vehicle-global-position主题，处理，-发布飞行姿态主题）"><a href="#attitude-estimator-q-start-（主要接收sensor和vehicle-global-position主题，处理，-发布飞行姿态主题）" class="headerlink" title="attitude_estimator_q start     （主要接收sensor和vehicle_global_position主题，处理， 发布飞行姿态主题）"></a>attitude_estimator_q start     （主要接收sensor和vehicle_global_position主题，处理， 发布飞行姿态主题）</h3><p>W:\uav\Firmware\src\modules\attitude_estimator_q\attitude_estimator_q_main.cpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">int attitude_estimator_q_main(int argc, char *argv[])</span><br><span class="line">    attitude_estimator_q::instance = new AttitudeEstimatorQ</span><br><span class="line">    AttitudeEstimatorQ::start() </span><br><span class="line">        AttitudeEstimatorQ::task_main() </span><br><span class="line"></span><br><span class="line">            orb_subscribe(ORB_ID(sensor_combined))</span><br><span class="line">            orb_subscribe(ORB_ID(parameter_update))</span><br><span class="line">            orb_subscribe(ORB_ID(vehicle_global_position))</span><br><span class="line"></span><br><span class="line">            update_parameters(<span class="literal">true</span>)</span><br><span class="line">            --&gt; AttitudeEstimatorQ::update_parameters(bool force)</span><br><span class="line">                orb_copy(ORB_ID(parameter_update), _params_sub, &amp;param_update)</span><br><span class="line">                param_get(_params_handles.w_acc, &amp;_w_accel)</span><br><span class="line">                ...</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (!_task_should_exit)</span><br><span class="line">                px4_poll(fds, 1, 1000)      <span class="comment"># fds[0].fd = _sensors_sub , 监控订阅的sensors数据</span></span><br><span class="line">                orb_copy(ORB_ID(sensor_combined), _sensors_sub, &amp;sensors)    <span class="comment"># 获取订阅的sensors数据</span></span><br><span class="line">                orb_check(_global_pos_sub, &amp;gpos_updated)    <span class="comment"># 功能类似于px4_poll()</span></span><br><span class="line">                orb_copy(ORB_ID(vehicle_global_position), _global_pos_sub, &amp;_gpos)</span><br><span class="line"></span><br><span class="line">                struct vehicle_attitude_s att    <span class="comment"># 创建飞行姿态结构并赋值</span></span><br><span class="line">                att_pub = orb_advertise(ORB_ID(vehicle_attitude), &amp;att)   <span class="comment"># 公布飞行姿态主题</span></span><br><span class="line">                orb_publish(ORB_ID(vehicle_attitude), _att_pub, &amp;att)     <span class="comment"># 发布飞行姿态主题</span></span><br></pre></td></tr></table></figure><h3 id="position-estimator-inav-start-（订阅飞控等相关主题，接收到主题后，进行一些算法处理。-发布vehicle-local-position、vehicle-global-position主题）"><a href="#position-estimator-inav-start-（订阅飞控等相关主题，接收到主题后，进行一些算法处理。-发布vehicle-local-position、vehicle-global-position主题）" class="headerlink" title="position_estimator_inav start （订阅飞控等相关主题，接收到主题后，进行一些算法处理。 发布vehicle_local_position、vehicle_global_position主题）"></a>position_estimator_inav start （订阅飞控等相关主题，接收到主题后，进行一些算法处理。 发布vehicle_local_position、vehicle_global_position主题）</h3><p> W:\uav\Firmware\src\modules\position_estimator_inav\position_estimator_inav_main.c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">int position_estimator_inav_thread_main(int argc, char *argv[])</span><br><span class="line">    <span class="comment"># declare and safely initialize all structs</span></span><br><span class="line">    struct actuator_controls_s actuator</span><br><span class="line">    struct actuator_armed_s armed</span><br><span class="line">    struct sensor_combined_s sensor</span><br><span class="line">    struct vehicle_gps_position_s gps</span><br><span class="line">    struct home_position_s home</span><br><span class="line">    struct vehicle_attitude_s att</span><br><span class="line">    struct vehicle_local_position_s local_pos</span><br><span class="line">    struct optical_flow_s flow</span><br><span class="line">    struct vision_position_estimate_s vision</span><br><span class="line">    struct att_pos_mocap_s mocap</span><br><span class="line">    struct vehicle_global_position_s global_pos</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 订阅相关主题</span></span><br><span class="line">    orb_subscribe(ORB_ID(parameter_update));</span><br><span class="line">    orb_subscribe(ORB_ID_VEHICLE_ATTITUDE_CONTROLS);</span><br><span class="line">    orb_subscribe(ORB_ID(actuator_armed));    orb_subscribe(ORB_ID(sensor_combined));    orb_subscribe(ORB_ID(vehicle_attitude));    orb_subscribe(ORB_ID(optical_flow));</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_gps_position));    orb_subscribe(ORB_ID(vision_position_estimate));    orb_subscribe(ORB_ID(att_pos_mocap));</span><br><span class="line">    orb_subscribe(ORB_ID(home_position));</span><br><span class="line"></span><br><span class="line">    orb_advertise(ORB_ID(vehicle_local_position), &amp;local_pos)  <span class="comment"># 公布vehicle_local_position主题</span></span><br><span class="line">    inav_parameters_update(&amp;pos_inav_param_handles, &amp;params) <span class="comment"># 获取所有相关参数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (wait_baro &amp;&amp; !thread_should_exit)</span><br><span class="line">        px4_poll(fds_init, 1, 1000)               <span class="comment"># 监控sensor_combined主题</span></span><br><span class="line">        orb_copy(ORB_ID(sensor_combined), sensor_combined_sub, &amp;sensor)    <span class="comment"># 获取sensors数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!thread_should_exit)</span><br><span class="line">        px4_poll(fds, 1, 20)             <span class="comment"># 监控vehicle_attitude主题</span></span><br><span class="line">        orb_copy(ORB_ID(vehicle_attitude), vehicle_attitude_sub, &amp;att)     <span class="comment"># 获取飞行姿态数据</span></span><br><span class="line">        orb_copy(ORB_ID(parameter_update), parameter_update_sub, &amp;update)</span><br><span class="line">        inav_parameters_update(&amp;pos_inav_param_handles, &amp;params)</span><br><span class="line">        orb_copy(ORB_ID_VEHICLE_ATTITUDE_CONTROLS, actuator_sub, &amp;actuator)  <span class="comment"># 获取actuator数据</span></span><br><span class="line">        orb_copy(ORB_ID(actuator_armed), armed_sub, &amp;armed)    <span class="comment"># 获取armed数据   </span></span><br><span class="line">        orb_copy(ORB_ID(sensor_combined), sensor_combined_sub, &amp;sensor) <span class="comment">#  获取sensors数据</span></span><br><span class="line">        acc[i] += PX4_R(att.R, i, j) * sensor.accelerometer_m_s2[j]  <span class="comment"># transform acceleration vector from body frame to NED frame</span></span><br><span class="line">        orb_copy(ORB_ID(optical_flow), optical_flow_sub, &amp;flow)  <span class="comment"># 获取光流数据        ...        orb_copy(ORB_ID(home_position), home_position_sub, &amp;home)   # 获取home position数据        orb_copy(ORB_ID(vision_position_estimate), vision_position_estimate_sub, &amp;vision)  # 获取vehicle vision position数据        orb_copy(ORB_ID(att_pos_mocap), att_pos_mocap_sub, &amp;mocap)  #  获取 vehicle mocap position数据</span></span><br><span class="line">        orb_copy(ORB_ID(vehicle_gps_position), vehicle_gps_position_sub, &amp;gps)  <span class="comment"># 获取vehicle GPS position 数据</span></span><br><span class="line"></span><br><span class="line">        orb_publish(ORB_ID(vehicle_local_position), vehicle_local_position_pub, &amp;local_pos)   <span class="comment"># publish local position        orb_advertise(ORB_ID(vehicle_global_position), &amp;global_pos)        orb_publish(ORB_ID(vehicle_global_position), vehicle_global_position_pub, &amp;global_pos) </span></span><br></pre></td></tr></table></figure><h3 id="mc-att-control-start"><a href="#mc-att-control-start" class="headerlink" title="mc_att_control  start"></a>mc_att_control  start</h3><p> W:\uav\Firmware\src\modules\mc_att_control\mc_att_control_main.cpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">int mc_att_control_main(int argc, char *argv[])</span><br><span class="line">    mc_att_control::g_control = new MulticopterAttitudeControl</span><br><span class="line">    MulticopterAttitudeControl::start()</span><br><span class="line">        MulticopterAttitudeControl::task_main()</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_attitude_setpoint));    orb_subscribe(ORB_ID(vehicle_rates_setpoint));    orb_subscribe(ORB_ID(vehicle_attitude));    orb_subscribe(ORB_ID(vehicle_control_mode));    orb_subscribe(ORB_ID(parameter_update));    orb_subscribe(ORB_ID(manual_control_setpoint));    orb_subscribe(ORB_ID(actuator_armed));    orb_subscribe(ORB_ID(vehicle_status));</span><br><span class="line">    orb_subscribe(ORB_ID(multirotor_motor_limits));</span><br><span class="line"></span><br><span class="line">            orb_copy(ORB_ID(vehicle_attitude), _v_att_sub, &amp;_v_att)  <span class="comment">#  获取飞行姿态主题</span></span><br><span class="line">            <span class="keyword">if</span> (_v_control_mode.flag_control_attitude_enabled)</span><br><span class="line">                orb_publish(_rates_sp_id, _v_rates_sp_pub, &amp;_v_rates_sp) <span class="comment">#  publish attitude rates setpoint</span></span><br><span class="line">            <span class="keyword">else</span> &#123; <span class="keyword">if</span> (_v_control_mode.flag_control_manual_enabled)</span><br><span class="line">                orb_publish(_rates_sp_id, _v_rates_sp_pub, &amp;_v_rates_sp)</span><br><span class="line">            orb_publish(_actuators_id, _actuators_0_pub, &amp;_actuators)</span><br><span class="line">            orb_publish(ORB_ID(mc_att_ctrl_status),_controller_status_pub, &amp;_controller_status)</span><br></pre></td></tr></table></figure><h3 id="mc-pos-control-start"><a href="#mc-pos-control-start" class="headerlink" title="mc_pos_control start"></a>mc_pos_control start</h3><p> W:\uav\Firmware\src\modules\mc_pos_control\mc_pos_control_main.cpp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">int mc_pos_control_main(int argc, char *argv[])</span><br><span class="line">    pos_control::g_control = new MulticopterPositionControl;</span><br><span class="line">    MulticopterPositionControl::start()</span><br><span class="line">        MulticopterPositionControl::task_main()</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_status));</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_attitude));</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_attitude_setpoint));</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_control_mode));</span><br><span class="line">    orb_subscribe(ORB_ID(parameter_update));</span><br><span class="line">    orb_subscribe(ORB_ID(manual_control_setpoint));</span><br><span class="line">    orb_subscribe(ORB_ID(actuator_armed));</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_local_position));</span><br><span class="line">    orb_subscribe(ORB_ID(position_setpoint_triplet));</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_local_position_setpoint));</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_global_velocity_setpoint));</span><br><span class="line"></span><br><span class="line">            poll_subscriptions()  <span class="comment"># check &amp; copy所有传感器数据， 初始化更新</span></span><br><span class="line">            --&gt; MulticopterPositionControl::poll_subscriptions()</span><br><span class="line">            <span class="keyword">while</span> (）</span><br><span class="line">                px4_poll(&amp;fds[0], (sizeof(fds) / sizeof(fds[0])), 500)   <span class="comment"># 监控vehicle_local_position主题</span></span><br><span class="line">                poll_subscriptions()   <span class="comment">#  check相关数据，if update， 获取数据</span></span><br><span class="line">                update_ref()   <span class="comment">#  position setpoint</span></span><br><span class="line">                <span class="comment"># select control source</span></span><br><span class="line">                control_manual(dt)</span><br><span class="line">                control_offboard(dt)</span><br><span class="line">                control_auto(dt)</span><br><span class="line">                <span class="keyword">if</span> (!_control_mode.flag_control_manual_enabled &amp;&amp;...)</span><br><span class="line">                    orb_publish(ORB_ID(vehicle_attitude_setpoint), _att_sp_pub, &amp;_att_sp) <span class="comment"># 发布vehicle_attitude_setpoint主题</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    orb_publish(ORB_ID(vehicle_global_velocity_setpoint), _global_vel_sp_pub, &amp;_global_vel_sp)  <span class="comment"># 发布 velocity setpoint主题</span></span><br><span class="line">                orb_publish(ORB_ID(vehicle_local_position_setpoint), _local_pos_sp_pub, &amp;_local_pos_sp)   <span class="comment"># 发布vehicle_local_position_setpoint主题</span></span><br><span class="line">                generate attitude setpoint from manual controls</span><br><span class="line">                /* publish attitude setpoint</span><br><span class="line"> * Do not publish <span class="keyword">if</span> offboard is enabled but position/velocity control is disabled,</span><br><span class="line"> * <span class="keyword">in</span> this <span class="keyword">case</span> the attitude setpoint is published by the mavlink app</span><br><span class="line"> */</span><br><span class="line">                orb_publish(ORB_ID(vehicle_attitude_setpoint), _att_sp_pub, &amp;_att_sp)  <span class="comment"># 发布vehicle_attitude_setpoint主题</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Uav </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码分析 </tag>
            
            <tag> PX4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机无人机常用sensor介绍</title>
      <link href="2016/05/07/Uav/mobile-and-uav-sensors/"/>
      <url>2016/05/07/Uav/mobile-and-uav-sensors/</url>
      
        <content type="html"><![CDATA[<p>一直以来对这些常用的传感器不是很清楚, 有时听到名字或者简称,不知道有什么具体的用途,特地简单总结一下.</p><blockquote><p>资料皆是网上获取,不能完全保证准确性.</p></blockquote><h2 id="重力传感器-gravity-g-sensor"><a href="#重力传感器-gravity-g-sensor" class="headerlink" title="重力传感器(gravity/g-sensor)"></a>重力传感器(gravity/g-sensor)</h2><p>重力传感器是根据压电效应的原理来工作的, 将加速度转化成电压输出。简单来说是测量内部一片重物(重物和压电片做成一体)重力正交两个方向的分力大小，来判定水平方向。<br>应用场景：手机横竖屏幕切换、翻转静音、平衡球、各种射击、赛车游戏等。</p><a id="more"></a><p>##加速度传感器(Accelerometer)<br>加速度传感器是一种能够测量加速力的电子设备。加速力就是当物体在加速过程中作用在物体上的力，就好比地球引力，也就是重力。一般在手机被提到加速度感应器时，就是指重力感应器。<br>应用场景：微信摇一摇、甩动切歌等, 无人机中用于确定位置和无人机飞行姿态.</p><p>##距离传感器(Proximity/p-sensor)<br>通过发射特别短的光脉冲，并测量此光脉冲从发射到被物体反射回来的时间，通过测时间来计算与物体之间的距离。<br>应用场景：通话时手机靠近脸部，屏幕背景灯熄灭，离开时背景灯点亮并解锁屏幕。</p><p>##光线感应器(Light)<br>对投光器受光器间之光线做遮蔽动作所获得的信号加以运用以完成各种自动化控制。<br>应用场景：自动调整屏幕亮度功能等</p><p>##三轴陀螺仪(Gyroscope)<br>同时测定6个方向的位置，移动轨迹，加速。单轴的只能测量一个方向的量，也就是一个系统需要三个陀螺仪，而3轴的一个就能替代三个单轴的。测量角速度，以判别物体的运动状态，也称为运动传感器。判断在哪去哪。<br>应用场景：目前主要应用在一些大型手机射击游戏中，如狂野飙车等,用于辅助GPS定位。<br>如下是网上看到的两幅很形象图片：<br>单轴陀螺仪:<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/a_tuoluoyi.gif" alt="single-axis"><br>三轴陀螺仪:<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/tuoluoyi.gif" alt="three-axis"></p><p>##地磁/磁力计/电子罗盘(Magnetic/compass)<br>工作原理：电子罗盘，也叫数字指南针，是利用地磁场来定北极的一种方法。。<br>应用场景：各种指南针以及导航软件、地图等,在无人机，电子罗盘提供关键性的惯性导航和方向定位系统的信息。</p><p>##气压计 (Barometer)<br>气压传感器用于检测大气压强的仪器,实际应用当中气压传感器可作高度计，提示海拔高度，尤其适合登山、户外单车、滑雪以及其他户外运动中，您可以据此在地图上分析高度、寻找正确路径等。同时也用于GPS精确导航（航位推算，上下桥检测等），手机GPS海拔测量，室内室外导航，休闲、体育和医疗健康等监测，天气预报、垂直速度指示（上升/下沉速度），风扇功率控制、温度显示等。 </p><p>##超声波/声呐(sonar)<br>应用场景：超声波测距,避障.</p><p>##光流（camera）<br>光流法是运动图像分析的重要方法,因为当物体在运动时，它在图像上对应点的亮度模式也在运动。这种图像亮度模式的表观运动（apparent motion）就是光流。光流表达了图像的变化，由于它包含了目标运动的信息，因此可被观察者用来确定目标的运动情况。从本质上说，光流就是你在这个运动着的世界里感觉到的明显的视觉运动。通过光流camera看到物体的相对运动速度是不一样的,通过不同目标的运动速度判断它们与我们的距离。</p><p>##惯性测量单元(IMU)<br>同时包含陀螺仪、地磁、加速度计的传感器芯片，如mpu9x50。<br>惯性测量单元结合GPS是维持方向和飞行路径的关键。随着无人机智能化的发展，方向和路径控制是重要的空中交通管理规则。惯性测量单元采用的多轴磁传感器，在本质上都是精准度极高的小型指南针，通过感知方向将数据传输至中央处理器，从而指示方向和速度。</p><p>##倾角传感器</p><p>倾角传感器，集成了陀螺仪和加速度计为飞行控制系统提供保持水平飞行的数据。这类传感器和陀螺仪， 结合加速度计，能够测量到细微的运动变化，使得倾角传感器能够应用于移动程序，如汽车或无人驾驶飞机的陀螺仪补偿。</p><p>还有如热传感器、温度传感器、湿度传感器、紫外线传感器、压力传感器等</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Uav </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>高通无人机8074 BLSP接口说明</title>
      <link href="2016/04/27/Uav/Qualcomm-uav-blsp-port/"/>
      <url>2016/04/27/Uav/Qualcomm-uav-blsp-port/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>BLSP是高通对于低速接口的一种管理方式，8074 平台含有两个BLSP(BAM Low-Speed Peripheral) 块，对应于12个BLSP端口。 每一个BLSP块含有最多六个Qualcomm Universal Peripheral (QUP)或六个Uart cores，通过相关手册查询到每个外设属于BLSP多少。结构框图如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/BLSP.png" alt="BLSP"></p><blockquote><ol><li>BAM（Bus Access Manager）is used to move data to/from the peripheral buffers;  2.每个BLSP外设静态连接到一对BAM管道，BLSP支持BAM 和non-BAM-based 数据传输。</li></ol></blockquote><a id="more"></a><p>每一个QUP可以被配置为I2C， SPI, UART, UIM接口等，如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blsp_pin.jpg" alt="blsp_pin"></p><p>##自定义BLSP口，配置TZ<br>这些端口在aDSP和应用处理器之间共享。为了让BLSP端口独立使用，我们可以在TrustZone（TZ）中定义BLSP 端口的分配，没有权限的子系统访问BLSP 端口将导致系统崩溃。 高通默认已经做好了配置。在DspAL中， 提供了一组设备文件路径映射到硬件，无人机用到的相关口已经在TZ中配置好了，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SPI:  /dev/spi-[1~12]  对应于   BLSP[1~12]上的SPI设备</span><br><span class="line">I2C: /dev/iic-[1-12]      对应于   BLSP[1~12]上的I2C设备</span><br><span class="line">UART: /dev/tty-[1-4]</span><br><span class="line"><span class="comment"># UAV 8074 最多支持4个串口设备，每一个串口设备对应一个BAM设备， </span></span><br></pre></td></tr></table></figure><p>如果要自定义新的端口，需按于如下方式配置：</p><h3 id="计算APPS-BLSP值"><a href="#计算APPS-BLSP值" class="headerlink" title="计算APPS BLSP值"></a>计算APPS BLSP值</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/apps_blsp.jpg" alt="apps-BLSP"><br>根据倒数第二列（对应于BAM pipe）计算出结果如下：<br>APPS BLSP1 : 0x00C3000C   [ Format : 0x00 (Apps BLSP1 QUP) ( Apps BLSP1 UART) ]<br>APPS BLSP2 : 0x00F30F33   [ Format : 0x00 (Apps BLSP2 QUP) ( Apps BLSP2 UART) ]</p><blockquote><p>Apps列对应Y，则表明BLSPx配为Uart或QUP，下同。</p></blockquote><h3 id="计算ADSP-BLSP值"><a href="#计算ADSP-BLSP值" class="headerlink" title="计算ADSP BLSP值"></a>计算ADSP BLSP值</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/adsp_blsp.jpg" alt="adsp-BLSP"><br>ADSP BLSP1 = 0x0003FF00   [ Format : 0x00 (Adsp BLSP1 QUP) ( Adsp BLSP1 UART) ]<br>ADSP BLSP2 = 0x00FC00CC  [ Format : 0x00 (Adsp BLSP2 QUP) ( Adsp BLSP2 UART) ]</p><h3 id="通过计算的值在TZ中配置"><a href="#通过计算的值在TZ中配置" class="headerlink" title="通过计算的值在TZ中配置"></a>通过计算的值在TZ中配置</h3><p>路径：trustzone_images\core\hwengines\bam\8974\bamtgtcfgdata_tz.h</p><p>BLSP1:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Replace the highlighted values with ADSP BLSP1 and APPS BLSP1</span><br><span class="line"> </span><br><span class="line">bam_sec_config_type bam_tgt_blsp1_secconfig =</span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">#ifdef FEATURE_DRONE_CUSTOMIZATION_1 </span></span><br><span class="line"><span class="comment">#ifdef BAM_TZ_DISABLE_SPI</span></span><br><span class="line">        &#123;0x00C3000C   , TZBSP_VMID_AP, 0x0, TZBSP_VMID_AP_BIT&#125;,       // APPS BLSP1</span><br><span class="line">        &#123;0x0003FF00   , TZBSP_VMID_LPASS, 0x0, TZBSP_VMID_LPASS_BIT&#125;, // ADSP BLSP1</span><br><span class="line">        &#123;0x00000000, TZBSP_VMID_MSS, 0x0, TZBSP_VMID_MSS_BIT&#125;,</span><br><span class="line"><span class="comment">#else</span></span><br><span class="line">        &#123;0x00C3000C   , TZBSP_VMID_AP, 0x0, TZBSP_VMID_AP_BIT&#125;,       // APPS BLSP1</span><br><span class="line">        &#123;0x0003FF00   , TZBSP_VMID_LPASS, 0x0, TZBSP_VMID_LPASS_BIT&#125;, // ADSP BLSP1</span><br><span class="line">        &#123;0x00000000, TZBSP_VMID_MSS, 0x0, TZBSP_VMID_MSS_BIT&#125;,</span><br><span class="line">        &#123;0x00300000, TZBSP_VMID_TZ, 0x0, TZBSP_VMID_TZ_BIT&#125;</span><br><span class="line">      </span><br><span class="line"><span class="comment">#endif /*BAM_TZ_DISABLE_SPI*/</span></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BLSP2:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">bam_sec_config_type bam_tgt_blsp2_secconfig =</span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">#ifdef FEATURE_DRONE_CUSTOMIZATION_1 </span></span><br><span class="line">        &#123;0x00F30F33   , TZBSP_VMID_AP, 0x0, TZBSP_VMID_AP_BIT&#125;,       // APPS BLSP2</span><br><span class="line">        &#123;0x00FC00CC  , TZBSP_VMID_LPASS, 0x0, TZBSP_VMID_LPASS_BIT&#125;   // ADSP BLSP2</span><br><span class="line"><span class="comment">#else</span></span><br><span class="line">        &#123;0x003C0FFF, TZBSP_VMID_AP, 0x0, TZBSP_VMID_AP_BIT&#125;,</span><br><span class="line">        &#123;0x00C3F000, TZBSP_VMID_LPASS, 0x0, TZBSP_VMID_LPASS_BIT&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="怎么工作"><a href="#怎么工作" class="headerlink" title="怎么工作"></a>怎么工作</h2><p>在启动期间，aDSP将加载BLSP配置文件初始化串口设备。为了是能运行时配置，可在/usr/share/data/adsp/blsp.config中定义串口设备和BAM端口的映射，bam<em>对应于BLSP</em>。如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tty-1 bam-9</span><br><span class="line">tty-2 bam-6</span><br><span class="line">tty-3 bam-8</span><br><span class="line">tty-4 bam-2</span><br></pre></td></tr></table></figure><p>如果串口设备只用TX和RX，需要在最后一行加入 “[2-wire]”作为标示，否则默认为四线：TX，RX，CTS和RTS。</p><blockquote><ol><li>串口根据需要配置，不一定所有都配置；2. 如果运行时指定路径文件不存在或者加载失败，如上所示的默认配置将被使用；3. /usr/share/data/adsp/blsp.config最好设置为只读模式。</li></ol></blockquote><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>80-NA157-24  Low-Speed Peripherals Overview.pdf<br>80-NB849-1 Rev. J  APQ8074A PQ8074AB Device Specification.pdf<br>80-H9580-1-J_QUALCOMM SNAPDRAGON FLIGHT DEVELOPER GUIDE.pdf<br>80-NU767-1 G Linux BAM Low-Speed Peripherals Configuration and Debug Guide  .pdf</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Uav </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>无人机开发主板调试</title>
      <link href="2016/04/02/Uav/uav-board-debugging/"/>
      <url>2016/04/02/Uav/uav-board-debugging/</url>
      
        <content type="html"><![CDATA[<h2 id="问题一-：-新板子不能开机，关键点：板子2-32（ddr-emmc）换为了2-16"><a href="#问题一-：-新板子不能开机，关键点：板子2-32（ddr-emmc）换为了2-16" class="headerlink" title="问题一 ： 新板子不能开机，关键点：板子2+32（ddr+emmc）换为了2+16 ."></a>问题一 ： 新板子不能开机，关键点：板子2+32（ddr+emmc）换为了2+16 .</h2><p>自己的uav主板回来后将软件刷入板子(高通msm8074), 板子不能正常启动.</p><p>通过分析log， 发现死在boot_images\core\boot\secboot3\hw\msm8974\sbl1\sbl1_mc.c 中 sbl1_tlmm_init() —&gt; boot_gpio_init()， 当我屏蔽此函数后， log如下：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Format: Log Type - Time(microsec) - Message </span><br><span class="line">Log <span class="built_in">type</span>: B - since boot(excluding boot rom). D - delta </span><br><span class="line">B - 41663 - SBL1, Start </span><br><span class="line">B - 46909 - scatterload_region &amp;&amp; ram_init, Start </span><br><span class="line">D - 30 - scatterload_region &amp;&amp; ram_init, Delta </span><br><span class="line">B - 63897 - pm_device_init, Start </span><br><span class="line">D - 27297 - pm_device_init, Delta </span><br><span class="line">B - 91317 - boot_flash_init, Start </span><br><span class="line">D - 10919 - boot_flash_init, Delta </span><br><span class="line">B - 102632 - boot_config_data_table_init, Start </span><br><span class="line">D - 134932 - boot_config_data_table_init, Delta </span><br><span class="line">B - 239150 - sbl1_ddr_set_params, Start </span><br><span class="line">B - 241773 - Pre_DDR_clock_init, Start </span><br><span class="line">D - 274 - Pre_DDR_clock_init, Delta </span><br><span class="line">D - 0 - sbl1_ddr_set_params, Delta </span><br><span class="line">B - 255773 - pm_driver_init, Start </span><br><span class="line">D - 16134 - pm_driver_init, Delta </span><br><span class="line">B - 271907 - clock_init, Start </span><br><span class="line">D - 152 - clock_init, Delta </span><br><span class="line">B - 274988 - Image Load, Start </span><br><span class="line">B - 295209 - Tz Execution, Start </span><br><span class="line">D - 193065 - Tz Execution, Delta </span><br><span class="line">B - 496387 - Image Load, Start </span><br><span class="line">B - 506361 - Signal PBL to Jump to RPM FW </span><br><span class="line">B - 506605 - sbl1_wait_for_ddr_training, Start   </span><br><span class="line">B - 540399 - 1<span class="comment">######################################################### </span></span><br><span class="line">D - 45323 - sbl1_wait_for_ddr_training, Delta </span><br><span class="line"><span class="comment">#不屏蔽boot_gpio_init()函数,则停在此处， boot_gpio_init()中</span></span><br><span class="line">B - 558302 - 11<span class="comment">#########################################################   </span></span><br><span class="line">B - 685884 - Image Load, Start </span><br><span class="line">B - 689391 - WDT Execution, Start </span><br><span class="line">D - 213 - WDT Execution, Delta </span><br><span class="line">B - 694790 - Image Load, Start </span><br><span class="line">B - 707905 - sbl1_efs_handle_cookies, Start </span><br></pre></td></tr></table></figure><p>　</p><a id="more"></a><p>继续跟代码一无所获。怀疑ddr配置，但仔细一想，用的相同的ddr，应该没问题，就没深究， 如若要修改对比ddr配置，参考如下方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ddr参数：</span><br><span class="line">boot_images\core\boot\secboot3\scripts\8974_cdp_jedec_ddr_4_die_interleave_dal.xml   ---&gt; DDR 参数配置文件（对比ddr数据手册），</span><br><span class="line">编译：</span><br><span class="line">python cdt_generator.py 8974_cdp_jedec_ddr_4_die_interleave_dal.xml binfile.bin</span><br><span class="line">将生成boot_cdt_array.c和ddr.bin，boot_cdt_array.c替换boot_images\core\boot\secboot3\hw\msm8974\boot_cdt_array.c,然后重新make boot</span><br></pre></td></tr></table></figure><p>后怀疑应该是更换emmc后分区导致，给userdata分太多空间，而emmc空间不够。<br>修改相关文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\apq8074-le-1-0_ap_standard_oem\boot_images\core\storage\tools\ptool\ptool.py <span class="comment">#  python script to create GPT partition table </span></span><br><span class="line">W:\uav\apq8074-le-1-0_ap_standard_oem\common\build\partition.xml  <span class="comment"># partition table information </span></span><br><span class="line">W:\uav\apq8074-le-1-0_ap_standard_oem\apps_proc\device\qcom\msm8974\BoardConfig.mk <span class="comment">#  file system image size for android </span></span><br><span class="line"></span><br><span class="line">解析partition.xml，生成相关文件：</span><br><span class="line">ptool.py -x partition.xml   <span class="comment"># 解析partition.xml， 生成partition.bin, rawprogram.xml等文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">apps_proc/oe-core下执行命令生成相应文件：</span><br><span class="line">./meta-qti/scripts/mkuserimage.sh </span><br><span class="line"></span><br><span class="line">common/build下执行如下打包命令 :</span><br><span class="line">python update_common_info.py </span><br></pre></td></tr></table></figure><blockquote><p>如能正常启动：fastboot flash partition gpt_backup0.bin –&gt; You MUST flash the new partition table first so others should be flashed on new layout. 　　</p></blockquote><p>　</p><p>于是，将userdata分区空间改小一半，终于看到了一丝胜利的曙光，不过虽然能进入linaro系统，但是仍然有问题，空间不够，串口log如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/uav_boot_small.png" alt="uav_boot_log_1"></p><p>　　</p><p>最后，将userdata相应加大，板子成功启动。串口log如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/uav_boot_ok.png" alt="uav_boot_log_2"></p><p>　</p><h2 id="附-USB调试信息打开"><a href="#附-USB调试信息打开" class="headerlink" title="附 USB调试信息打开"></a>附 USB调试信息打开</h2><ol><li><p>Dynamic UDC debug </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Echo ‘file dwc3-msm.c +p’ &gt; /d/dynamic_debug/control </span><br><span class="line">Echo ‘file dwc3_otg.c +p’ &gt; /d/dynamic_debug/control </span><br><span class="line">Echo ‘file phy-msm-qusb.c +p’ &gt; /d/dynamic_debug/control </span><br><span class="line">Echo ‘file phy-msm-qmp.c +p’ &gt; /d/dynamic_debug/control </span><br></pre></td></tr></table></figure></li><li><p>Kernel UDC debug configurations </p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># W:\uav\apq8074-le-1-0_ap_standard_oem\apps_proc\linux\drivers\usb\dwc3\Makefile</span></span><br><span class="line">CONFIG_USB_DWC3_DEBUG </span><br><span class="line">CONFIG_USB_DWC3_VERBOSE</span><br><span class="line"></span><br><span class="line"><span class="comment"># linux/drivers/usb/dwc3/dwc3_otg.c</span></span><br><span class="line">添加如下：</span><br><span class="line"> <span class="comment">#undef dev_dbg </span></span><br><span class="line"> <span class="comment">#define dev_dbg dev_info  </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Uav </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux系统使用问题集</title>
      <link href="2016/01/04/Linux/linux-problem-set/"/>
      <url>2016/01/04/Linux/linux-problem-set/</url>
      
        <content type="html"><![CDATA[<p>##问题一 ubuntu 密码正确进不了系统<br><strong>现象：</strong><br>即使密码输入正确也不能进入系统。<br><strong>原因：</strong><br>设置环境变量时出错，影响到系统。<br><strong>解决：</strong><br>开机时按住shift 进入 recovery 模式，选第二个恢复模式，12.04的界面是fsck和root选项在同一页，先选fsck解除写限制（按下fsck后等几秒即可），再选root，vi /etc/profile， vi /etc/environment 恢复下环境变量，再重新登录。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git 常见问题集</title>
      <link href="2015/10/22/Git/git-experence/"/>
      <url>2015/10/22/Git/git-experence/</url>
      
        <content type="html"><![CDATA[<h2 id="问题一-gitignore无效，不能过滤某些文件或路径。"><a href="#问题一-gitignore无效，不能过滤某些文件或路径。" class="headerlink" title="问题一 .gitignore无效，不能过滤某些文件或路径。"></a>问题一 .gitignore无效，不能过滤某些文件或路径。</h2><p><strong>现象:</strong><br>在.gitignore中添加了files和directories过滤，但git status仍会显示files和directories。</p><p><strong>原因：</strong><br>在git仓库中已经存在此files和directories，其已经被git跟踪。.gitignore只对未加入版本管理的文件生效。</p><p><strong>解决：</strong><br>从版本库删除文件和目录，更新。</p><pre><code class="bash">git rm (--cached) files directories -r -fgit commit</code></pre><a id="more"></a><h2 id="问题二-已经添加文件或路径-提示untracked"><a href="#问题二-已经添加文件或路径-提示untracked" class="headerlink" title="问题二  已经添加文件或路径, 提示untracked"></a>问题二  已经添加文件或路径, 提示untracked</h2><p><strong>现象：</strong><br>已经将某文件夹添加到暂存区, git status 仍提示: modified: next (modified content, untracked content)</p><p><strong>原因：</strong><br>此文件夹中有.git , git将其识别为submodule.</p><p><strong>解决：</strong><br>删除文件夹中.git.</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2015年10月7日:小丑</title>
      <link href="2015/10/08/Life/2015%E5%B9%B410%E6%9C%887%E6%97%A5-%E5%B0%8F%E4%B8%91/"/>
      <url>2015/10/08/Life/2015%E5%B9%B410%E6%9C%887%E6%97%A5-%E5%B0%8F%E4%B8%91/</url>
      
        <content type="html"><![CDATA[<p><strong>The Only Fair Is  Not Fair.</strong><br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogemptychair.jpg" alt="em"></p><p>前些天去看华仔的《解救吾先生》，当“吾先生”在将死之际清唱《小丑》时，我感动得眼泛泪光。</p><a id="more"></a><p>在假期的最后一天感冒了，下午吃了感冒药，到晚上就开始梦游； 现在反而不想睡觉了，很多思绪涌入心中。想写篇博文，不知道该拟什么名字时，小丑又在我耳边响起。</p><p>前些时间不满现状准备离职，也拿到几个还ok的offer，在老大加薪以及一些承诺下留了下来，以为自己能很轻松地踏入下一段旅途，但不如愿。小丑仍有顽习，仍有彷徨。毕业已经三年有余，工作也已将近四年，也有无数个日夜熬到了凌晨一两点，然而至今还未有成就，还未有几多存款, 斗志也时时低沉。终其原因：自控力较差、涉猎太广、心理素质不够好以及白日梦想家。 </p><h3 id="自控力"><a href="#自控力" class="headerlink" title="自控力"></a>自控力</h3><p>我一直觉得一个人成功与否，最重要的因素之一就是自控力。我现在还离目标甚远，自控力差是最重要的一个原因。太多的诱惑、太多的借口，总让自己放弃计划、纵容自己，一旦这样，之前培养的好习惯也将轰然坍塌。</p><h3 id="见样学样"><a href="#见样学样" class="headerlink" title="见样学样"></a>见样学样</h3><p>一看到cool的东西，就去学。看了很多书，学了很多“无用”知识，直到去年才真正找准自己的方向。</p><h3 id="心理状态"><a href="#心理状态" class="headerlink" title="心理状态"></a>心理状态</h3><p>心理素质不够好，挫折、失败会让自己低沉一阵子， 而自己未达到自己心中的完美样子，也会让自己低沉一阵子。也正因为自己总是想要完美，所以很多时候想做而没勇气做，就会总给自己留下遗憾。</p><h3 id="白日梦想家"><a href="#白日梦想家" class="headerlink" title="白日梦想家"></a>白日梦想家</h3><p>前些天看了一部电影《白日梦想家》，觉得很好，主角开始总会做白日梦，踏出勇敢的一步后，找到了自己。发现自己很多时候正如主角一样活在自己的世界里，而我到现在还没能如主角一样踏出那么勇敢的一步。所以我现在还是会偶尔变成day dreamer，陷入自己的那个小小世界，这个时候可能只有我家那位才会觉得我还是一个帅得美丽的人类。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogdreamer.jpg" alt="dream"></p><h3 id="存款"><a href="#存款" class="headerlink" title="存款"></a>存款</h3><p>存款，这是一个悲伤的故事。刚实习时工资就2k左右，还能存到钱。后面两年被社会坑被社会被宰（当然也是我自己傻），积蓄被挥霍一空。现在的工资已经是之前的六七倍了，却反而存不了钱,没什么积蓄。前几天计算了一下今年过来后的开销,平均每月要花一万左右,也就释然了，这样的开销怎能有多少存款呢。</p><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><p>每次想为自己的学习做一个计划时，就觉得时间怎么如此不够呢。就算将所有业余时间都用来学习都不够，其实还是自己学生时代和刚工作那会儿未学到正确的东西，现在想做的事又需要太多知识。</p><h3 id="小丑的梦想"><a href="#小丑的梦想" class="headerlink" title="小丑的梦想"></a>小丑的梦想</h3><p>其实我的梦想挺简单的，自己能实现自己的任何想法，能自如的和外国人谈天说地，买自己想买的电子产品或其他东西可以毫不犹豫。</p><p>需要克服以前的种种缺点，养成更好的习惯；需要有好的计划，一直呆在学习区而不是舒适区（参照心理学的三个区域：舒适区、学习区、恐慌区）。</p><h3 id="小丑的歌词"><a href="#小丑的歌词" class="headerlink" title="小丑的歌词"></a>小丑的歌词</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">小丑</span><br><span class="line">演唱：刘德华</span><br><span class="line"> </span><br><span class="line">掌声在欢呼之中响起</span><br><span class="line">眼泪已涌在笑容里</span><br><span class="line">启幕时欢乐送到你眼前</span><br><span class="line">落幕时孤独留给自己</span><br><span class="line">是多少磨炼 和多少眼泪</span><br><span class="line">才能够站在这里</span><br><span class="line">失败的痛苦 成功的鼓励</span><br><span class="line">有谁知道 这是多少岁月的累积</span><br><span class="line">小丑 小丑</span><br><span class="line">是他的辛酸 化作喜悦 呈献给你</span><br><span class="line"> </span><br><span class="line">掌声在欢呼之中响起</span><br><span class="line">眼泪已涌在笑容里</span><br><span class="line">启幕时欢乐送到你眼前</span><br><span class="line">落幕时孤独留给自己</span><br><span class="line">是多少磨炼 和多少眼泪</span><br><span class="line">才能够站在这里</span><br><span class="line">失败的痛苦 成功的鼓励</span><br><span class="line">有谁知道 这是多少岁月的累积</span><br><span class="line"> </span><br><span class="line">小丑 小丑</span><br><span class="line">是他的辛酸 化作喜悦 呈献给你</span><br><span class="line"> </span><br><span class="line">小丑 小丑</span><br><span class="line">是他的辛酸 化作喜悦 呈献给你</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Balderdash </category>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通Android设备启动流程分析(从power-on上电到Home Lanucher启动)</title>
      <link href="2015/08/23/Android/%E9%AB%98%E9%80%9AAndroid%E8%AE%BE%E5%A4%87%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-%E4%BB%8Epower-on%E4%B8%8A%E7%94%B5%E5%88%B0Home-Lanucher%E5%90%AF%E5%8A%A8/"/>
      <url>2015/08/23/Android/%E9%AB%98%E9%80%9AAndroid%E8%AE%BE%E5%A4%87%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-%E4%BB%8Epower-on%E4%B8%8A%E7%94%B5%E5%88%B0Home-Lanucher%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p><em>Platform Information :<br>　System:    Ａndroid5.1<br>　Platform:  Qualcomm msm8916<br>　Author:     Andy Lee<br>　Email:        <a href="mailto:&#104;&#117;&#x61;&#x71;&#105;&#97;&#x6e;&#108;&#101;&#x65;&#x40;&#x67;&#109;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;">&#104;&#117;&#x61;&#x71;&#105;&#97;&#x6e;&#108;&#101;&#x65;&#x40;&#x67;&#109;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;</a></em></p><p><strong>如有错误欢迎指出，共同学习，共同进步</strong><br>　<br>在我第一次接触Android得时候，我就很想知道Android设备在按下电源键后是怎么启动到主界面的，但是到现在为止也没有完全理清这个过程，所以就决定从按下power键开始来分析一下这个流程。虽然Android基于Linux内核开发的一个操作系统，但是在init进程后Android附加了很多其他操作，所以其启动流程还是有比较大的差别的，关于Linux系统的启动流程可以参考我的另一篇博文：<a href="http://huaqianlee.github.io/2015/08/21/Linux/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Linux%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/">深入理解linux启动过程</a>。</p><p>因为我现在工作中用到的是高通的源码，并且高通也是目前Android手机的主流芯片，所以我就按照高通的msm8916来分析了，不过其他的也应该大同小异。<br>　<br>首先来看一下官方给出的Android系统架构：</p><a id="more"></a>　<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogandroidarchitecture.jpg" alt="arch"><br>　<br>当按下电源开关后，主要执行了如下步骤：<br>　<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogbootflow.png" alt="boot"><br>　<br>另，在内核启动了第一个进程后，init-&gt;home lanucher的详细流程如下：<br>　<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog0_1273850759wbAp.gif" alt="boot"></p><blockquote><p>注：此图取自网络，觉得描述得很详细，故附上</p></blockquote><p>接下来就按照引导程序、内核启动、init进程、系统服务、Home Lanucher这样的顺序来分析Android启动的code。</p><h2 id="引导程序"><a href="#引导程序" class="headerlink" title="引导程序"></a>引导程序</h2><p>引导程序在Android操作系统开始运行前的一个小程序，其主要为内核启动服务。引导程序执行的第一段代码，因此它是针对特定的主板与芯片的。设备制造商要么使用很受欢迎的引导程序比如redboot、uboot或者开发自己的引导程序，它不是Android操作系统的一部分。引导程序是OEM厂商或者运营商加锁和限制的地方。</p><p>引导程序分两个阶段执行。第一个阶段，检测外部的RAM以及加载对第二阶段有用的程序；第二阶段，引导程序设置网络、内存等等。这些对于运行内核是必要的，为了达到特殊的目标，引导程序可以根据配置参数或者输入数据设置内核。</p><h3 id="power-on及系统启动"><a href="#power-on及系统启动" class="headerlink" title="power-on及系统启动"></a>power-on及系统启动</h3><p>当按下电源键或者系统重启之后，引导芯片代码PBL（Primary Boot Loader，类似于x86的BIOS）从预定义的地方（固化在ROM）开始执行，PBL由高通做好了的烧写在芯片中，PBL将启动设备、支持紧急下载等，然后加载引导程序sbl1，然后跳转到sbl1执行。</p><h3 id="处理器启动地址"><a href="#处理器启动地址" class="headerlink" title="处理器启动地址"></a>处理器启动地址</h3><p>MSM8916芯片内部有很多不同的处理器，如下：</p><table><thead><tr><th align="center">子系统</th><th align="center">处理器</th><th align="center">启动地址</th></tr></thead><tbody><tr><td align="center">APPS</td><td align="center">Cortex-a53</td><td align="center">0xfc010000</td></tr><tr><td align="center">RPM</td><td align="center">Cortex-m3</td><td align="center">0x00200000/0x0</td></tr><tr><td align="center">Modem</td><td align="center">MSS_QDSP6</td><td align="center">可配置的</td></tr><tr><td align="center">Pronto</td><td align="center">ARM9<sup>TM</td><td align="center">0x0/0xffff0000/硬件重映射</td></tr></tbody></table><h3 id="启动栈"><a href="#启动栈" class="headerlink" title="启动栈"></a>启动栈</h3><table><thead><tr><th align="center">组件</th><th align="center">处理器</th><th align="center">加载源地址</th><th align="center">执行地址</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">APPS PBL</td><td align="center">Cortex-A53</td><td align="center">NA</td><td align="center">APPS ROM</td><td align="center">启动设备，检测接口，支持紧急下载，通过L2TCM加载和校验SBL1 ELF段,加载校验RPM code RAM</td></tr><tr><td align="center">SBL1</td><td align="center">Cortex-A53</td><td align="center">eMMC</td><td align="center">L2 TCM(segment1)/OCIMEM/RPM code RAM(segment2)</td><td align="center">初始化内存子系统（总线，DDR，时钟，CDT），加载校验TZ、Hyperviser、RPM_FW、APPSBL镜像，通过USB2.0和Sahara协议memory dump，看门狗调试retention（如：L2 flush），RAM dump到eMMC/SD卡等的支持，大容量存储支持，USB驱动支持，USB充电，温度检测，PMIC驱动的支持，配置DDR以及crash调试的flush L1/L2/ETB支持等相关配置</td></tr><tr><td align="center">QSEE/TZ</td><td align="center">Cortex-A53</td><td align="center">eMMC</td><td align="center">LPDDR2/3</td><td align="center">等同于TZBSP，设置运行时安全环境，配置xPU，支持fuse驱动，校验子系统镜像，丢弃RESET调试功能</td></tr><tr><td align="center">QHEE（Hypervisior）</td><td align="center">Cortex-A53</td><td align="center">eMMC</td><td align="center">LPDDR2/3</td><td align="center">Hypervisor镜像负责设置VMM，配置SMMU以及控制xPU存取</td></tr><tr><td align="center">RPM_FW</td><td align="center">Cortex-M3</td><td align="center">eMMC</td><td align="center">RPM code RAM</td><td align="center">电源资源管理</td></tr><tr><td align="center">APPSBL/启动管理器和系统加载器</td><td align="center">Cortex-A53</td><td align="center">eMMC</td><td align="center">LPDDR2/3</td><td align="center">启动画面，加载校验内核</td></tr><tr><td align="center">HLOS</td><td align="center">Cortex-A53</td><td align="center">eMMC</td><td align="center">LPDDR2/3</td><td align="center">引导HLOS镜像，例如a53 HLOS内核镜像，Pronto镜像等</td></tr><tr><td align="center">Modem PBL</td><td align="center">MSS_QDSP6</td><td align="center">NA</td><td align="center">Modem ROM Hexagon<sup>TM  TCM</td><td align="center">设置Hexagon  TCM，从LPDDR2/3拷贝MBA到Hexagon  TCM并校验</td></tr><tr><td align="center">MBA</td><td align="center">MSS_QDSP6</td><td align="center">eMMC</td><td align="center">Hexagon TCM</td><td align="center">校验modem镜像，xPU为modem和memory dump保护DDR</td></tr></tbody></table><blockquote><p><strong>eMMC</strong> ：Embeded Multi Media Card，内嵌式记忆体，内部存储<br><strong>APPS PBL</strong>：Application Processor Primary Boot Loader，应用处理器初级引导程序<br><strong>SBL1</strong>：Secondary Boot Loader Stage1，第二引导程序阶段一（此处写阶段一是因为早期高通芯片分为几个阶段，但现在都由sbl1实现）<br><strong>TZ</strong>：TrustZone<br><strong>PRM_FW</strong>：Resource Power Manager Firmware，电源资源管理固件<br><strong>HLOS</strong>：High-Level Operating System，高级操作系统<br><strong>Modem PBL</strong>：Modem Primary Boot Loader，调制解调器侧初级引导程序<br><strong>MBA</strong>：Modem Boot Authenticator，调制解调器侧引导校验程序</p></blockquote><h3 id="引导代码流程"><a href="#引导代码流程" class="headerlink" title="引导代码流程"></a>引导代码流程</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogbootcodeflow.png"></p><ol><li><p>系统上电或者MSM8916 AP侧CPU重启。</p></li><li><p>Cortex-A53中APPS PBL执行，从启动设备中加载校验是sbl1镜像，然后跳转到sbl1中执行。</p></li><li><p>sbl1初始化ddr，从启动设备中加载校验QSEE/TZ、QHEE、RPM_FW、APPSBL镜像到DDR。</p></li><li><p>sbl1将控制权给QSEE/TZ，QSEE/TZ将设置一个安全环境，配置xPU，并支持fuse驱动。</p></li><li><p>QSEE传递控制权给QHEE，QHEE负责设置VMM，配置SMMU和xPU存取控制。</p></li><li><p>QHEE通知RPM开始执行RPM固件。</p></li><li><p>QHEE将控制器传递给HLOS APPSBL，APPSBL将初始化系统。</p></li><li><p>HLOS APPSBL加载和校验HLOS内核。</p></li><li><p>HLOS内核通过PIL.Modem加载MBA和modem镜像到DDR，然后继续启动进程。</p></li><li><p>HLOS通过PIL加载外围设备镜像Pronto到DDR，在通过TZ校验。</p></li></ol><h3 id="第一阶段引导程序和第二阶段引导程序"><a href="#第一阶段引导程序和第二阶段引导程序" class="headerlink" title="第一阶段引导程序和第二阶段引导程序"></a>第一阶段引导程序和第二阶段引导程序</h3><p>由PBL加载的sbl1是第一阶段引导程序，APP SBL为第二阶段引导程序。这两部分代码的作用在上面<strong>启动栈</strong>和<strong>引导代码流程</strong>中已有一个简单的描述，如果想了解更多请参考我另外两篇博文：</p><p><a href="http://huaqianlee.github.io/2015/07/25/Android/Android%E6%BA%90%E7%A0%81bootable%E8%A7%A3%E6%9E%90%E4%B9%8BLK-bootloader-little-kernel/">Android源码bootable解析之bootloader LK(little kernel)</a><br><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/">高通平台Android源码bootloader分析之sbl1(一)</a></p><h2 id="内核"><a href="#内核" class="headerlink" title="内核"></a>内核</h2><p>Android的内核就是用的Linux的内核，只是针对移动设备做了一些优化，所有Android内核与linux内核启动的方式差不多。内核主要设置缓存、被保护存储器、计划列表，加载驱动等。当内核完成这些系统设置后，它首先在系统文件中寻找”init”文件，然后启动root进程或者系统的第一个进程。这部分可以参考我的另一篇博文：</p><p><a href="http://huaqianlee.github.io/2015/08/21/Linux/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Linux%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/">深入理解linux启动过程</a></p><h2 id="init进程"><a href="#init进程" class="headerlink" title="init进程"></a>init进程</h2><p>init进程时Android的第一个用户空间进程，是所有进程的父进程。init进程主要有两个任务，一是挂载目录，比如/sys、/dev、/proc，二是读取解析init.rc脚本，将其中的元素整理成自己的数据结构（链表）。</p><p>init进程实现路径： system\core\init</p><h3 id="init-c"><a href="#init-c" class="headerlink" title="init.c"></a>init.c</h3><p>首先来看一下init进程的实现代码init.c， 其关键代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># system\core\init\init.c</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/* Get the basic filesystem setup we need put</span></span><br><span class="line"><span class="comment">      * together in the initramdisk on / and then we&#x27;ll</span></span><br><span class="line"><span class="comment">      * let the rc file figure out the rest.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    mkdir(<span class="string">&quot;/dev&quot;</span>, <span class="number">0755</span>);</span><br><span class="line">    mkdir(<span class="string">&quot;/proc&quot;</span>, <span class="number">0755</span>);</span><br><span class="line">    mkdir(<span class="string">&quot;/sys&quot;</span>, <span class="number">0755</span>);</span><br><span class="line"></span><br><span class="line">    mount(<span class="string">&quot;tmpfs&quot;</span>, <span class="string">&quot;/dev&quot;</span>, <span class="string">&quot;tmpfs&quot;</span>, MS_NOSUID, <span class="string">&quot;mode=0755&quot;</span>);</span><br><span class="line">    mkdir(<span class="string">&quot;/dev/pts&quot;</span>, <span class="number">0755</span>);</span><br><span class="line">    mkdir(<span class="string">&quot;/dev/socket&quot;</span>, <span class="number">0755</span>);</span><br><span class="line">    mount(<span class="string">&quot;devpts&quot;</span>, <span class="string">&quot;/dev/pts&quot;</span>, <span class="string">&quot;devpts&quot;</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    mount(<span class="string">&quot;proc&quot;</span>, <span class="string">&quot;/proc&quot;</span>, <span class="string">&quot;proc&quot;</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    mount(<span class="string">&quot;sysfs&quot;</span>, <span class="string">&quot;/sys&quot;</span>, <span class="string">&quot;sysfs&quot;</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    property_init(); <span class="comment">// 初始化属性服务，主要为属性文件分配存储空间</span></span><br><span class="line"></span><br><span class="line">    get_hardware_name(hardware, &amp;revision); <span class="comment">// 从虚拟文件/proc/cpuinfo中获取hardware及revision，后面init.rc中的hardware变量值从此获取</span></span><br><span class="line"></span><br><span class="line">    process_kernel_cmdline(); <span class="comment">// 导入命令行参数并用属性值设置内核变量， /proc/cmdline</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    selinux_initialize();<span class="comment">// 初始化selinux安全机制</span></span><br><span class="line"></span><br><span class="line">    init_parse_config_file(<span class="string">&quot;/init.rc&quot;</span>); <span class="comment">// 解析init.rc文件，主要生成action和service链表</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 解析完init.rc配置文件后，会得到一系列的Action，action_for_each_trigger函数用来将Action加入action_queue，有关init.rc、action等内容下面再分析*/</span>  </span><br><span class="line">    action_for_each_trigger(<span class="string">&quot;early-init&quot;</span>, action_add_queue_tail);  <span class="comment">// 添加“early-init”action</span></span><br><span class="line"></span><br><span class="line">    queue_builtin_action(wait_for_coldboot_done_action, <span class="string">&quot;wait_for_coldboot_done&quot;</span>);</span><br><span class="line">    queue_builtin_action(mix_hwrng_into_linux_rng_action, <span class="string">&quot;mix_hwrng_into_linux_rng&quot;</span>);</span><br><span class="line">    queue_builtin_action(keychord_init_action, <span class="string">&quot;keychord_init&quot;</span>);</span><br><span class="line">    queue_builtin_action(console_init_action, <span class="string">&quot;console_init&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* execute all the boot actions to get us started */</span></span><br><span class="line">    action_for_each_trigger(<span class="string">&quot;init&quot;</span>, action_add_queue_tail); <span class="comment">// 添加“init”action</span></span><br><span class="line"></span><br><span class="line">    queue_builtin_action(mix_hwrng_into_linux_rng_action, <span class="string">&quot;mix_hwrng_into_linux_rng&quot;</span>);</span><br><span class="line">    queue_builtin_action(property_service_init_action, <span class="string">&quot;property_service_init&quot;</span>);  <span class="comment">// 启动属性服务</span></span><br><span class="line">    queue_builtin_action(signal_init_action, <span class="string">&quot;signal_init&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Don&#x27;t mount filesystems or start core system services if in charger mode. */</span></span><br><span class="line">    <span class="keyword">if</span> (is_charger) &#123;</span><br><span class="line">        action_for_each_trigger(<span class="string">&quot;charger&quot;</span>, action_add_queue_tail);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_ffbm) &#123;</span><br><span class="line">            action_for_each_trigger(<span class="string">&quot;ffbm&quot;</span>, action_add_queue_tail);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            action_for_each_trigger(<span class="string">&quot;late-init&quot;</span>, action_add_queue_tail); <span class="comment">// 添加“late-init”action</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* run all property triggers based on current state of the properties */</span></span><br><span class="line">    queue_builtin_action(queue_property_triggers_action, <span class="string">&quot;queue_property_triggers&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(;;) &#123; <span class="comment">// 无限循环，建立init子进程</span></span><br><span class="line">        ...</span><br><span class="line">        execute_one_command(); <span class="comment">// 执行节点command，zygote service也在此启动，稍后再详细分析</span></span><br><span class="line">        restart_processes(); <span class="comment">// 重启进程</span></span><br><span class="line">        </span><br><span class="line">        # 监听属性服务事件</span><br><span class="line">        ufds[fd_count].fd = get_property_set_fd();</span><br><span class="line">        ufds[fd_count].events = POLLIN; <span class="comment">// 属性事件</span></span><br><span class="line"></span><br><span class="line">        ufds[fd_count].fd = get_signal_fd();</span><br><span class="line">        ufds[fd_count].events = POLLIN;  <span class="comment">// 子进程事件</span></span><br><span class="line"></span><br><span class="line">        ufds[fd_count].fd = get_keychord_fd();</span><br><span class="line">        ufds[fd_count].events = POLLIN; <span class="comment">// keychord热键事件</span></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> BOOTCHART</span></span><br><span class="line">      <span class="comment">// bootchart是一个性能统计工具，用于搜集硬件和系统的信息，并将其写入磁盘，以便其他程序使用</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        nr = poll(ufds, fd_count, timeout); <span class="comment">// 等待下一个命令提交</span></span><br><span class="line">        # 处理具体消息</span><br><span class="line">        handle_property_set_fd(); <span class="comment">// 处理属性命令</span></span><br><span class="line">        handle_keychord(); <span class="comment">// adb使能时处理keychord</span></span><br><span class="line">        handle_signal(); <span class="comment">// 处理子进程挂掉发来的信号，service重启</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="init-rc"><a href="#init-rc" class="headerlink" title="init.rc"></a>init.rc</h3><h4 id="rc文件的语法"><a href="#rc文件的语法" class="headerlink" title=".rc文件的语法"></a>.rc文件的语法</h4><p>init.rc文件是Android的有特定格式和规则的脚本文件，位于：system\core\rootdir\init.rc，称为Android的初始化语言。当进入adb shell后，我们能在根目录看到一个只读的虚拟内存文件init.rc，源文件init.rc被打包在boot.img中ramdisk.img中。其有四类声明：</p><ol><li>Action - 动作</li><li>Command - 命令</li><li>Service - 服务</li><li>Option - 选项</li></ol><p>该语言规定，Action和Service是以一种“小节”（Section）的形式出现的，其中每个Action小节可以含有若干Command，而每个Service小节可以含有若干Option。小节只有起始标记，却没有明确的结束标记，也就是说，是用“后一个小节”的起始来结束“前一个小节”的。</p><p>脚本中的Action大体上表示一个“动作”，它用一系列Command共同完成该“动作”。Action需要有一个触发器（trigger）来触发它，一旦满足了触发条件，这个Action就会被加到执行队列的末尾。Action的形式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">on  &lt;trigger&gt;</span><br><span class="line"> &lt;command1&gt;</span><br><span class="line"> &lt;command2&gt;</span><br><span class="line"> ......</span><br></pre></td></tr></table></figure><p>Service表示一个服务程序，会在初始化时启动，当服务退出时init进程会视情况重启服务。因为init.rc脚本中描述的服务往往都是核心服务，所以（基本上所有的）服务会在退出时自动重启。Service的形式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service &lt;name&gt; &lt;pathname&gt; [&lt;arguments&gt;]*</span><br><span class="line"> &lt;option&gt;</span><br><span class="line"> &lt;option&gt;</span><br><span class="line">  ......</span><br></pre></td></tr></table></figure><p>其实，除了Action和Service，init.rc中还有一种小节：import小节。该小节类似java中的import或者c中的头文件，导入其他.rc脚本文件。如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import /init.environ.rc</span><br><span class="line">import /init.usb.rc</span><br><span class="line">import /init.<span class="variable">$&#123;ro.hardware&#125;</span>.rc</span><br><span class="line">import /init.trace.rc</span><br></pre></td></tr></table></figure><h4 id="init-rc-1"><a href="#init-rc-1" class="headerlink" title="init.rc"></a>init.rc</h4><p>init.rc脚本的主要内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># system\core\rootdir\init.rc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入相关.rc文件</span></span><br><span class="line">import /init.environ.rc</span><br><span class="line">import /init.usb.rc</span><br><span class="line">import /init.<span class="variable">$&#123;ro.hardware&#125;</span>.rc <span class="comment"># hardware变量的值在上面讲的main函数中获取</span></span><br><span class="line">import /init.<span class="variable">$&#123;ro.zygote&#125;</span>.rc <span class="comment">#导入zygote服务.rc脚本文件</span></span><br><span class="line">import /init.trace.rc</span><br><span class="line">import /init.ideanfc.preinstall.rc</span><br><span class="line"></span><br><span class="line">on early-init <span class="comment"># 设置init进程以及它创建的子进程的优先级，设置init进程的安全环境</span></span><br><span class="line">on init <span class="comment"># 设置全局环境，为cpu accounting创建cgroup(资源控制)挂载点</span></span><br><span class="line">...</span><br><span class="line"><span class="comment"># Load properties from /system/ + /factory after fs mount.</span></span><br><span class="line">on load_all_props_action</span><br><span class="line">    load_all_props</span><br><span class="line"></span><br><span class="line">on late-init</span><br><span class="line">    trigger early-fs <span class="comment"># 触发early-fs动作</span></span><br><span class="line">    trigger fs <span class="comment"># 触发fs动作，挂载mtd分区</span></span><br><span class="line">    trigger post-fs</span><br><span class="line">    trigger post-fs-data</span><br><span class="line">    trigger load_all_props_action</span><br><span class="line">    ...</span><br><span class="line">    trigger early-boot</span><br><span class="line">    trigger boot</span><br><span class="line"></span><br><span class="line">on post-fs <span class="comment"># 改变系统目录的访问权限</span></span><br><span class="line">on post-fs-data <span class="comment"># 改变/data目录以及它的子目录的访问权限</span></span><br><span class="line">on boot <span class="comment"># 初始化基本网络、内存管理等</span></span><br><span class="line">    ...</span><br><span class="line">    chown radio system /sys/power/wake_lock // 修改文件用户组</span><br><span class="line">    chown radio system /sys/power/wake_unlock</span><br><span class="line">    chmod 0660 /sys/power/wake_lock // 修改文件操作权限</span><br><span class="line">    chmod 0660 /sys/power/wake_unlock</span><br><span class="line">    ...</span><br><span class="line">    class_start core <span class="comment"># 开启核心服务</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">service healthd /sbin/healthd <span class="comment"># 电源管理服务</span></span><br><span class="line">service servicemanager /system/bin/servicemanager <span class="comment"># 系统服务管理器，管理所有的本地服务，比如位置、音频、Shared preference等等</span></span><br><span class="line">    class core  <span class="comment"># 声明为core核心服务</span></span><br><span class="line">    user system</span><br><span class="line">    group system</span><br><span class="line">    critical</span><br><span class="line">    onrestart restart healthd <span class="comment">#重启电池管理服务</span></span><br><span class="line">    onrestart restart zygote <span class="comment"># 重启zygote服务作为应用进程, 定义在文件头import的zygote.rc脚本中</span></span><br><span class="line">    onrestart restart media <span class="comment"># 重启音频服务</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><blockquote><p>servicemanager主要注册获取服务，源码路径：frameworks\base\cmds\servicemanager\Service_manager.c。</p></blockquote><h4 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h4><p>Action包含的不同command对应不同func回调函数，具体对应情况可查看Keywords.h，如下：</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># system\core\init\keywords.h</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">do_chroot</span><span class="params">(<span class="keyword">int</span> nargs, <span class="keyword">char</span> **args)</span></span>; <span class="comment">//对应于KEYWORD最后一个参数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">do_chdir</span><span class="params">(<span class="keyword">int</span> nargs, <span class="keyword">char</span> **args)</span></span>;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">do_write</span><span class="params">(<span class="keyword">int</span> nargs, <span class="keyword">char</span> **args)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">do_copy</span><span class="params">(<span class="keyword">int</span> nargs, <span class="keyword">char</span> **args)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">do_chown</span><span class="params">(<span class="keyword">int</span> nargs, <span class="keyword">char</span> **args)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">do_chmod</span><span class="params">(<span class="keyword">int</span> nargs, <span class="keyword">char</span> **args)</span></span>;</span><br><span class="line">...</span><br><span class="line">KEYWORD(capability,  OPTION,  <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">KEYWORD(chdir,       COMMAND, <span class="number">1</span>, do_chdir)</span><br><span class="line">KEYWORD(chroot,      COMMAND, <span class="number">1</span>, do_chroot)</span><br><span class="line">KEYWORD(class,       OPTION,  <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">KEYWORD(class_start, COMMAND, <span class="number">1</span>, do_class_start)</span><br><span class="line">KEYWORD(class_stop,  COMMAND, <span class="number">1</span>, do_class_stop)</span><br><span class="line">KEYWORD(class_reset, COMMAND, <span class="number">1</span>, do_class_reset)</span><br><span class="line">KEYWORD(console,     OPTION,  <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">...</span><br><span class="line">KEYWORD(user,        OPTION,  <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">KEYWORD(wait,        COMMAND, <span class="number">1</span>, do_wait)</span><br><span class="line">KEYWORD(write,       COMMAND, <span class="number">2</span>, do_write)</span><br><span class="line">KEYWORD(copy,        COMMAND, <span class="number">2</span>, do_copy)</span><br><span class="line">KEYWORD(chown,       COMMAND, <span class="number">2</span>, do_chown)</span><br><span class="line">KEYWORD(chmod,       COMMAND, <span class="number">2</span>, do_chmod)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h4 id="init-rc脚本文件的解析"><a href="#init-rc脚本文件的解析" class="headerlink" title="init.rc脚本文件的解析"></a>init.rc脚本文件的解析</h4><p>关于init.rc脚本文件的解析，就不详细描述了，只列出关键文件和关键函数，如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># system\core\init\init.c</span></span><br><span class="line">init_parse_config_file(<span class="string">&quot;/init.rc&quot;</span>); <span class="comment">// 解析init.rc文件</span></span><br><span class="line">  data = read_file(fn, <span class="number">0</span>);</span><br><span class="line">  parse_config(fn, data); <span class="comment">// 真正的解析函数</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># system\core\init\init_parser.c ，被parse_config调用</span></span><br><span class="line">lookup_keyword() <span class="comment">//查找关键字</span></span><br><span class="line">kw_is() <span class="comment">// 一个宏，查表lookup_keyword返回关键字，对应上keywords.h中的KEYWORD</span></span><br><span class="line">parse_new_section() <span class="comment">// section起始行，解析service、on小节，import小节汇成一个链表</span></span><br><span class="line">state.parse_line() <span class="comment">// 从属于section的子行</span></span><br><span class="line">init_parse_config_file(<span class="keyword">import</span>-&gt;filename) <span class="comment">//解析import小节</span></span><br></pre></td></tr></table></figure><h4 id="core服务和main服务"><a href="#core服务和main服务" class="headerlink" title="core服务和main服务"></a>core服务和main服务</h4><p>boot子阶段会通过class_start对应的回调函数do_class_start开启core服务和main服务，这两类服务通过如下两句表明身份：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">class core # 声明section为core服务</span><br><span class="line">class main # 声明section为main服务</span><br></pre></td></tr></table></figure><h5 id="core服务"><a href="#core服务" class="headerlink" title="core服务"></a>core服务</h5><table><thead><tr><th align="center">core类型的服务</th><th align="center">对应的可执行文件</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">ueventd</td><td align="center">/sbin/ueventd</td><td align="center"></td></tr><tr><td align="center">logd</td><td align="center">/system/bin/logd</td><td align="center"></td></tr><tr><td align="center">healthd</td><td align="center">/sbin/healthd</td><td align="center">电源管理服务</td></tr><tr><td align="center">console</td><td align="center">/system/bin/sh</td><td align="center"></td></tr><tr><td align="center">adbd</td><td align="center">/sbin/adbd</td><td align="center"></td></tr><tr><td align="center">servicemanager</td><td align="center">/system/bin/servicemanager</td><td align="center">service manager service服务，Android的核心之一，zygote在此服务中加载</td></tr><tr><td align="center">vold</td><td align="center">/system/bin/vold</td><td align="center"></td></tr></tbody></table><h5 id="main服务"><a href="#main服务" class="headerlink" title="main服务"></a>main服务</h5><table><thead><tr><th align="center">main类型的服务</th><th align="center">对应的可执行文件</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">netd</td><td align="center">/system/bin/netd</td><td align="center"></td></tr><tr><td align="center">debuggerd</td><td align="center">/system/bin/debuggerd</td><td align="center"></td></tr><tr><td align="center">ril-daemon</td><td align="center">/system/bin/rild</td><td align="center"></td></tr><tr><td align="center">surfaceflinger</td><td align="center">/system/bin/surfaceflinger</td><td align="center"></td></tr><tr><td align="center">zygote</td><td align="center">/system/bin/app_process</td><td align="center">Android创建内部创建新进程的核心服务</td></tr><tr><td align="center">drm</td><td align="center">/system/bin/drmserver</td><td align="center"></td></tr><tr><td align="center">media</td><td align="center">/system/bin/mediaserver</td><td align="center"></td></tr><tr><td align="center">bootanim</td><td align="center">/system/bin/bootanimation</td><td align="center"></td></tr><tr><td align="center">installd</td><td align="center">/system/bin/installd</td><td align="center"></td></tr><tr><td align="center">flash_recovery</td><td align="center">/system/etc/install-recovery.sh</td><td align="center"></td></tr><tr><td align="center">racoon</td><td align="center">/system/bin/racoon</td><td align="center"></td></tr><tr><td align="center">mtpd</td><td align="center">/system/bin/mtpd</td><td align="center"></td></tr><tr><td align="center">keystore</td><td align="center">/system/bin/keystore</td><td align="center"></td></tr><tr><td align="center">dumpstate</td><td align="center">/system/bin/dumpstate</td><td align="center"></td></tr><tr><td align="center">sshd</td><td align="center">/system/bin/start-ssh</td><td align="center"></td></tr><tr><td align="center">mdnsd</td><td align="center">/system/bin/mdnsd</td><td align="center"></td></tr></tbody></table><h2 id="属性服务"><a href="#属性服务" class="headerlink" title="属性服务"></a>属性服务</h2><p>众所周知在windows中有一个注册表机制，在注册表中提供了大量的key-value属性。在Android(或Linux)中也有类似的机制：属性服务（property service）。init在启动的过程中会启动属性服务（Socket服务），并且在内存中建立一块存储区域，用来存储这些属性。当读取这些属性时，直接从这一内存区域读取，如果修改属性值，需要通过Socket连接属性服务完成。在init.c文件中main函数通过property_service_init_action调用了start_property_service函数来启动属性服务。</p><p>属性文件是由系统依次读取位于不同目录的配置文件，关于属性文件的解析也涉及到很多内容，这里就不去详细分析了，关键函数和路径如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># system\core\init\property_service.c</span></span><br><span class="line">void start_property_service(void)</span><br><span class="line">const char* property_get(const char *name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bionic/libc/bionic/system_properties.c</span></span><br><span class="line">const prop_info *__system_property_find(const char *name)</span><br><span class="line">static int init_property_area(void)</span><br><span class="line">static int send_prop_msg(prop_msg *msg)</span><br><span class="line">int __system_property_set(const char *key, const char *value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bionic\libc\include\sys\_system_properties.h ,定义了相关属性文件</span></span><br><span class="line"><span class="comment">#define PROP_PATH_RAMDISK_DEFAULT  &quot;/default.prop&quot;</span></span><br><span class="line"><span class="comment">#define PROP_PATH_SYSTEM_BUILD     &quot;/system/build.prop&quot;</span></span><br><span class="line"><span class="comment">#define PROP_PATH_SYSTEM_DEFAULT   &quot;/system/default.prop&quot;</span></span><br><span class="line"><span class="comment">#define PROP_PATH_VENDOR_BUILD     &quot;/vendor/build.prop&quot;</span></span><br><span class="line"><span class="comment">#define PROP_PATH_LOCAL_OVERRIDE   &quot;/data/local.prop&quot;</span></span><br><span class="line"><span class="comment">#define PROP_PATH_FACTORY          &quot;/factory/factory.prop&quot;</span></span><br></pre></td></tr></table></figure><p>另，我们可以在adb shell中通过getprop获取所有属性名，或者通过getprop &lt; 根属性名&gt;获取具体属性值，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取所有属性值</span></span><br><span class="line">C:\Users\Administrator&gt;adb shell</span><br><span class="line">shell@msm8916_32:/ $ getprop</span><br><span class="line">getprop</span><br><span class="line">[DEVICE_PROVISIONED]: [1]</span><br><span class="line">[audio.dolby.ds2.enabled]: [<span class="literal">true</span>]</span><br><span class="line">[audio.offload.buffer.size.kb]: [64]</span><br><span class="line">[audio.offload.gapless.enabled]: [<span class="literal">true</span>]</span><br><span class="line">[audio.offload.min.duration.secs]: [30]</span><br><span class="line">[av.offload.enable]: [<span class="literal">true</span>]</span><br><span class="line">[bluetooth.hfp.client]: [1]</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取指定属性具体属性值</span></span><br><span class="line">shell@msm8916_32:/ $ getprop ro.build.product</span><br><span class="line">getprop ro.build.product</span><br><span class="line">msm8916_32</span><br></pre></td></tr></table></figure><h2 id="Zygote"><a href="#Zygote" class="headerlink" title="Zygote"></a>Zygote</h2><p>Zygote是Android中非常重要十分核心的一个服务，将由其去运行系统服务及孵化Activity进程等，接下来就好好分析一下Zygote。</p><p>在Java中，不同的虚拟机实例会为不同的应用分配不同的内存，每一个实例都有它自己的核心库类文件和堆对象的拷贝。但Android系统如果为每一个应用启动不同的Dalvik虚拟机实例，就会消耗大量的内存以及时间。因此，为了克服这个问题，Android系统创造了”Zygote”。Zygote让Dalvik虚拟机共享代码、低内存占用以及最小的启动时间成为可能。Zygote是一个虚拟器进程，在系统引导的时候启动。Zygote预加载以及初始化核心库类。通常，这些核心类是只读的，也是Android SDK或者核心框架的一部分。</p><h3 id="Zygote的启动"><a href="#Zygote的启动" class="headerlink" title="Zygote的启动"></a>Zygote的启动</h3><p>首先，先看一下Zygote在相关zygote.rc文件中的定义：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server <span class="comment"># 此处定义了启动zygote时会启动那些进程</span></span><br><span class="line">    class main</span><br><span class="line">    socket zygote stream 660 root system</span><br><span class="line">    onrestart write /sys/android_power/request_state wake</span><br><span class="line">    onrestart write /sys/power/state on</span><br><span class="line">    onrestart restart media</span><br><span class="line">    onrestart restart netd</span><br></pre></td></tr></table></figure><p>当init.c中解析了rc文件后，rc文件中定义class_start命令对应do_class_start函数将启动服务(包括Zygote)进程，关键源码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># system\core\init\builtins.c</span></span><br><span class="line">int do_class_start(int nargs, char **args)</span><br><span class="line">&#123;</span><br><span class="line">        /* Starting a class does not start services</span><br><span class="line">         * <span class="built_in">which</span> are explicitly disabled.  They must</span><br><span class="line">         * be started individually.</span><br><span class="line">         */</span><br><span class="line">    service_for_each_class(args[1], service_start_if_not_disabled); // 从service_list链表找到class_name和参数一致的，然后调用service_start_if_not_disabled启动服务</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void service_start_if_not_disabled(struct service *svc)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!(svc-&gt;flags &amp; SVC_DISABLED)) &#123;</span><br><span class="line">        service_start(svc, NULL);  //启动服务</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        svc-&gt;flags |= SVC_DISABLED_START;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># system\core\init\init.c</span></span><br><span class="line">void service_start(struct service *svc, const char *dynamic_args)</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    /* 检查需要开启进程的可执行文件是否存在，如：Zygote路径/system/bin/app_process */</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">stat</span>(svc-&gt;args[0], &amp;s) != 0) &#123;</span><br><span class="line">        ERROR(<span class="string">&quot;cannot find &#x27;%s&#x27;, disabling &#x27;%s&#x27;\n&quot;</span>, svc-&gt;args[0], svc-&gt;name);</span><br><span class="line">        svc-&gt;flags |= SVC_DISABLED;</span><br><span class="line">        <span class="built_in">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    pid = fork(); // 创建子进程，父进程为init创建的service进程</span><br><span class="line">    ...</span><br><span class="line">    execve(svc-&gt;args[0], (char**) arg_ptrs, (char**) ENV); // 执行进程，如/system/bin/app_process</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">if</span> (properties_inited())</span><br><span class="line">        notify_service_state(svc-&gt;name, <span class="string">&quot;running&quot;</span>); // 设置服务为running状态</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过上述流程，app_proces等进程就被启动起来了就进入到app_process相关code了，如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># frameworks\base\cmds\app_process\app_main.cpp</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* <span class="keyword">const</span> argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function">AppRuntime <span class="title">runtime</span><span class="params">(argv[<span class="number">0</span>], computeArgBlockSize(argc, argv))</span></span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">if</span> (zygote) &#123;</span><br><span class="line">        runtime.start(<span class="string">&quot;com.android.internal.os.ZygoteInit&quot;</span>, args);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta"># frameworks\base\core\jni\AndroidRuntime.cpp</span></span><br><span class="line"><span class="comment">/* 开始Android运行， 打开虚拟机，调用&quot;static void main(String[] args)&quot;*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AndroidRuntime::start</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* className, <span class="keyword">const</span> Vector&lt;String8&gt;&amp; options)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/* start the virtual machine */</span></span><br><span class="line">    JniInvocation jni_invocation;</span><br><span class="line">    jni_invocation.Init(<span class="literal">NULL</span>);</span><br><span class="line">    JNIEnv* env;</span><br><span class="line">    <span class="keyword">if</span> (startVm(&amp;mJavaVM, &amp;env) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    onVmCreated(env);</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Register android functions.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (startReg(env) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        ALOGE(<span class="string">&quot;Unable to register all android natives\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Start VM.  This thread becomes the main thread of the VM, and will</span></span><br><span class="line"><span class="comment">     * not return until the VM exits.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">char</span>* slashClassName = toSlashClassName(className);</span><br><span class="line">    jclass startClass = env-&gt;FindClass(slashClassName);</span><br><span class="line">    jmethodID startMeth = env-&gt;GetStaticMethodID(startClass, <span class="string">&quot;main&quot;</span>,<span class="string">&quot;([Ljava/lang/String;)V&quot;</span>); <span class="comment">//获取静态main方法</span></span><br><span class="line">    env-&gt;CallStaticVoidMethod(startClass, startMeth, strArray); <span class="comment">// 调用main方法</span></span><br></pre></td></tr></table></figure><p>这样就真正进入了Zygote进程了，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frameworks\base\core\java\com\android\internal\os\ZygoteInit.java</span></span><br><span class="line">public static void main(String argv[]) &#123;</span><br><span class="line">    // Start profiling the zygote initialization.</span><br><span class="line">   SamplingProfilerIntegration.start();</span><br><span class="line">   ...</span><br><span class="line">    registerZygoteSocket(socketName);  // 为Zygote注册服务器套接字（server socket）</span><br><span class="line">    ...</span><br><span class="line">    preload(); // 调用preloadClassed()：加载一系列类的文本文件（“preloaded-classes”），位于/frameworks/base</span><br><span class="line">                       调用preloadResources():  加载本地主题、布局以及android.R文件中包含的所有东西</span><br><span class="line">    ...</span><br><span class="line">    startSystemServer(abiList, socketName); // 准备参数，通过Zygote孵化新 system server 进程</span><br><span class="line">    runSelectLoop(abiList); // 运行Zygote进程选中的loop，此函数中不断接受新的connections，并读取<span class="built_in">command</span>执行</span><br><span class="line">    ...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>到了这个阶段，就可以看到启动动画了。前面分析了Zygote的流程，可以总结为如下一张图：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogZygote.jpg" alt="from internet"></p><p>在rc文件中有通过onrestart定义需要重启的动作或服务，这块就不去详细分析了，只将重启流程中的关键函数和路径列出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># system\core\init\init.c</span></span><br><span class="line">queue_builtin_action(signal_init_action, <span class="string">&quot;signal_init&quot;</span>); //main函数中</span><br><span class="line">static int signal_init_action(int nargs, char **args) //此函数调用singal_init</span><br><span class="line"></span><br><span class="line"><span class="comment"># system\core\init\signal_handler.c</span></span><br><span class="line">void signal_init(void)</span><br><span class="line">static void sigchld_handler(int s)</span><br><span class="line">int get_signal_fd()</span><br><span class="line">void handle_signal(void)</span><br><span class="line">static int wait_for_one_process(int block) // 此函数中将发出restarting信号，然后init.c中的main函数收到此信号后将重启相应进程</span><br></pre></td></tr></table></figure><h2 id="Home-Lanucher启动"><a href="#Home-Lanucher启动" class="headerlink" title="Home Lanucher启动"></a>Home Lanucher启动</h2><p>上ZygoteInit.java中mian函数在loop之前会调用一个关键函数startSystemServer，其除了准备一些参数外还将fork进程。其中就包括SystemServer，在SystemServer中最终会调用到ActivityManagerService，然后Home Lanucher就由ActivityManagerService中的方法来启动。关键源码和路径如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frameworks\base\services\java\com\android\server\SystemServer.java</span></span><br><span class="line"><span class="comment"># frameworks\base\services\core\java\com\android\server\am\ActivityManagerService.java</span></span><br><span class="line">public void systemReady(final Runnable goingCallback) &#123;</span><br><span class="line">     // Start up initial activity.</span><br><span class="line">     mBooting = <span class="literal">true</span>;</span><br><span class="line">     startHomeActivityLocked(mCurrentUserId, <span class="string">&quot;systemReady&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">boolean startHomeActivityLocked(int userId, String reason) &#123;</span><br><span class="line">    setDefaultLauncher(); // 第一次开机时设置</span><br><span class="line">    mStackSupervisor.startHomeActivity(intent, aInfo, reason); // 开启homeActivity</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>花了这么长的时间，终于把这个流程走完了。 不过还是有很多地方偷懒了，没有详细研究，只了解了一个大概，然后做了记录。如有错误请谅解！</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>在我分析启动流程时，主要参考引用了如下地址，后3篇博文对init.c和init.rc分析得十分详细，感兴趣可以参考一下这几篇博文。<br><a href="http://developer.android.com/index.html">Android官网</a><br><a href="http://android.jobbole.com/67931/">Android设备启动流程</a><br><a href="http://my.oschina.net/youranhongcha/blog/469028">Android 4.4的init进程</a><br><a href="http://blog.csdn.net/hu3167343/article/details/38299969">Android情景分析之详解init进程</a><br><a href="http://www.cnblogs.com/nokiaguy/archive/2013/04/14/3020774.html">Androidinit过程详解</a></p><blockquote><p>本文边分析边记录而成，由于时间原因，很多地方没有详细分析，简单看了一下就跳过。可能会有很多描述不清楚甚至错误的地方，欢迎指出，共同学习，共同进步。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入理解Linux启动过程(译)</title>
      <link href="2015/08/21/Linux/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Linux%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/"/>
      <url>2015/08/21/Linux/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Linux%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>第一篇完全译文，因为自己对技术和英文的热爱，所以决定翻译此文，水平有限，所以肯定会有不恰当的地方，欢迎移驾至原地址：<a href="http://www.ibm.com/developerworks/linux/library/l-linuxboot/">http://www.ibm.com/developerworks/linux/library/l-linuxboot/</a></strong><br>注：因为想写一篇博文来阐述并理清Android启动的完全过程，发现了这篇文章，觉得写得十分好，帮我解答了很多疑惑。</p></blockquote><p>##引言<br>Linux系统的启动过程由很多阶段组成，但是无论你是启动标准的x86桌面还是启动嵌入式PowerPC目标，许多流程都是惊人的相似的。这篇文章从初始化引导程序到第一个用户空间应用程序探索Linux启动进程。顺着这个流程，你将知道很多和启动相关的主题，比如：引导程序，内核解压, 初始RAM磁盘,以及其他Linux引导元素。</p><a id="more"></a><p>早期，引导计算机启动需要插入一条带有引导程序的纸带或者手动控制带有地址/数据/控制开关的面板加载启动程序。今天的计算机<br>装备了简化启动进程的工具，不过并不一定使这个过程变得简单了。</p><p>我们先从Linux启动的顶层视图开始分析，以便你能有一个整体的认识。然后我们将回顾每一个分离的步骤。顺着这个流程的源码引用将帮助你浏览内核树结构，以便在以后深入分析。</p><p>##概述<br>图一将为你展示两万英里的视图。</p><p><strong>Figure 1. The 20,000-foot view of the Linux boot process</strong><br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogfigure1.gif" alt="Figure 1"></p><p>当系统第一次启动或重启时，处理器将执行一个已知地方的代码。对应个人电脑，这个地方是存在主板上内存内的BIOS；对于嵌入式系统中的cpu，将会加载引导区去启动flash/ROM中已知地址的程序。无论怎样，结果是相同的。个人电脑提供了很多灵和性，BIOS必须觉得哪些设备是候补准备启动，稍后再详细讲。</p><p>当一个启动设备被发现，第一阶段引导程序被加载到RAM并执行。这一部分引导程序最大为512字节（1单位扇区大小），他的作用是去加载第二阶段引导程序。</p><p>当第二阶段引导程序被加载进RAM并执行，启动界面将被显示，并且Linux和可选的初始磁盘（临时文件系统）被加载进内存。当镜像被加载以后，控制权从第二阶段引导程序传递到内核镜像，内核镜像先自解压和初始化。在这一步，第二阶段引导程序将检查系统硬件，枚举硬件设备，挂载主设备，加载必须的内核模块。当这些完成时，用户空间的第一个程序(init)开始执行，这样就开始顶层系统初始化开始了。</p><p>上面这些是Linux启动的一个外壳，接下来我们开始更深层次的探索启动进程的细节。</p><p>##系统启动<br>系统启动依赖于引导Linux的硬件。在嵌入式平台，系统在启动或重启时会用到引导程序环境变量，比如：包括u-boot，redboot及lucent公司的MicroMonitor。嵌入式平台通常附带一个引导监视器。这些程序位于目标硬件的flash内存中一个特别的区域，为Linux内核镜像加载到flash内存提供方法，并在随后执行Linux内核。除了存储和启动Linux镜像外，引导监视器还会执行一些系统测试及硬件初始化。在一个嵌入式目标，引导监视器通常存在于第一步及第二步引导程序。</p><p>对于个人计算机，Linux从0xffff0地址的BIOS开始启动。BIOS的第一步是上电自检（POST）。上电自检的工作是检查硬件。BIOS的第二步是枚举和初始化本地设备。</p><p>鉴于BIOS的不同用途，BIOS主要由两部分组成：上电自检代码和运行服务。在上电自检完成后，上电自检代码从内存被清除，但是运行服务被保留并且对目标操作系统仍然有效。</p><p>要引导一个操作系统，BIOS运行时会按照CMOS的设置定义的顺序来搜索处于活动状态并且可以引导的设备。引导设备可以为软盘，CD-ROM，硬盘的分区，网络上的设备以及U盘。</p><p>Linux一般从MBR包含初级引导程序的硬盘启动。MBR是一个512字节的扇区，位于硬盘的第一扇区（0道0柱1扇区）。在MBR被加载到RAM中后，由BIOS去控制它。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">提取MBR（主引导记录）</span><br><span class="line"></span><br><span class="line">可以通过如下命令查看你的MBR：</span><br><span class="line"><span class="comment"># dd if=/dev/hda of=mbr.bin bs=512 count=1</span></span><br><span class="line"><span class="comment"># od -xa mbr.bin</span></span><br><span class="line"></span><br><span class="line">dd命令：需要root权限，从/dev/hda（第一个集成驱动电路或IDE驱动器）中读取512字节内容并写到mbr.bin文件。</span><br><span class="line">od命令：以hex和ASCII格式打印二进制文件</span><br></pre></td></tr></table></figure><p>##第一阶段引导程序<br>初级引导程序位于512字节的MBR镜像，MBR镜像由一个小型分区表和代码组成（见Figure 2）。前446字节是初级引导程序代码，包括执行代码和错误信息。接下来的64字节是一个分区表，包含4个16字节的分区记录。MBR最后的两字节定义了一个magic数字（0xaa55）。这个magic数字用来校验检查MBR。</p><p><strong>Figure 2. Anatomy of the MBR</strong><br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogfigure2.gif" alt="Figure 2"></p><p>初级引导程序主要就是找到并且加载第二阶段引导程序。其通过分区表寻找一个活动的分区。在找到一个活动的分区表后，其将扫描剩余的分区确定它们不是活动的。当这些被确定后，活动分区的启动启动记录将从设备加载到RAM并且执行。</p><p>##第二阶段引导程序<br>第二阶段引导程序其实叫着内核引导程序更加合适。因为其任务就是加载Linux内核和可选的初始磁盘。</p><p>在x86环境中，第一阶段和第二阶段引导程序结合一起叫着Linux引导程序（LILO）或者 GRand Unified Bootloader（GRUB）。因为LILO有一些在GRUB中已经被纠正的缺点，所有我们就分析GRUB。（如果想了解更多关于GRUB，LILO和相关主题的信息，请看文章最后的Resources）</p><p>GRUB最伟大的是其包含已知的所有Linux文件系统。GRUB不像LILO一样使用裸扇区，而能从ext2和ext3文件系统中加载Linux内核。它通过将两阶段的引导程序转换为三阶段的引导程序来实现此功能。第一阶段（MBR）启动能识别Linux内核镜像中包含的特殊文件系统的第1.5阶段引导程序。比如reiserfs_stage1_5（从Reiser日志文件系统加载） 或者 e2fs_stage1_5（从ext2或者ext3文件系统加载）。当第1.5阶段引导程序被加载并运行后，第2阶段引导程序就能被加载了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CRUB阶段引导程序</span><br><span class="line"></span><br><span class="line">/boot/grup路径包括第1阶段，第1.5阶段，以及第2阶段引导程序，以及一些交替引导程序（如：CR-ROMs 使用iso9660_stage_1_5）</span><br></pre></td></tr></table></figure><p>随着第二阶段被加载，CRUB会根据需求显示一个可用的内核列表（定义在/etc/grub.con，以及/etc/grub/menu.lst和/etc/grub.conf的软连接）。你可以选中一个内核，并且可以用附加的内核参数改进它。另外，你还能通过shell终端命令行的方式手动控制整个启动过程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GRUB中手动启动</span><br><span class="line"></span><br><span class="line">通过grub命令行，你可以用initrd镜像启动一个指定的内核，如下：</span><br><span class="line">grub&gt; kernel /bzImage-2.6.14.2</span><br><span class="line">  [Linux-bzImage, setup=0x1400, size=0x29672e]</span><br><span class="line"></span><br><span class="line">grub&gt; initrd /initrd-2.6.14.2.img</span><br><span class="line">  [Linux-initrd @ 0x5f13000, 0xcc199 bytes]</span><br><span class="line"></span><br><span class="line">grub&gt; boot</span><br><span class="line"></span><br><span class="line">Uncompressing Linux... Ok, booting the kernel.</span><br><span class="line"></span><br><span class="line">如果你不知道需要启动的内核名字，只需要敲一个斜杠（<span class="string">&quot;/&quot;</span>）并按Tab键。GRUB将显示内核镜像和initrd镜像列表。</span><br></pre></td></tr></table></figure><p>第二阶段引导程序被加载进内存后，将查询文件系统，加载默认内核镜像和initrd镜像到内存。当所有镜像准备好后，将从第二阶段跳转到内核镜像。</p><p>##内核<br>随着内核镜像加载到内存并且从第二阶段引导程序获得控制权，内核阶段开始了。内核镜像不是一个可以执行的内核，而是一个被压缩的内核镜像。通常是用zlib工具压缩的一个zImage（被压缩的镜像，小于512kb）或者一个bzImage（大的压缩镜像，大于512kb）。在内核镜像的头部有一个小型程序routine，其做少量的硬件设置，然后自解压内核镜像并放到高端内存。如果存在初始磁盘镜像（initrd），routine将拷贝initrd以供稍后安装使用。然后routine将调用内核开始内核启动。</p><p>当bzImage（i1386的镜像）被调用，将从汇编程序“./arch/i386/boot/head.S”的start入口开始（见Figure 3）。这段程序做些基本的硬件设置然后调用“./arch/i386/boot/compressed/head.S”中的startup_32。startup_32设置一些基本的环境（如堆栈等），并且清除BBS（Block Started by Symbol - 以符号启始的区块）。然后调用一个c函数decompress_kernel（位于./arch/i386/boot/compressed/misc.c）解压内核镜像。当内核被解压到内存后，将调用另一个位于“./arch/i386/kernel/head.S”的startup_32函数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">decompress_kernel 输出</span><br><span class="line"></span><br><span class="line">decompress_kernel函数执行时，通常会看到如下解压内核信息：</span><br><span class="line"></span><br><span class="line">Uncompressing Linux... Ok, booting the kernel.</span><br></pre></td></tr></table></figure><p>在这个新的startup_32函数（也叫清除程序或者进程0）中，会对页表进行初始化，并启用内存分页功能。然后会为任何可选的浮点单元（FPU）检测 CPU 的类型，并将其存储起来供以后使用。然后调用 start_kernel 函数（在 init/main.c 中），它会将您带入与体系结构无关的 Linux 内核部分。从本质上讲，这才是Linux内核的主要功能。</p><p><strong>Figure 3. Major functions flow for the Linux kernel i386 boot</strong><br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogfigure3.gif" alt="Figure 3"></p><p>调用start_kernel函数之后，会调用一系列初始化函数来设置中断，执行进一步的内存配置，并加载初始RAM磁盘。最后将掉用kernel_thread（在arch/i386/kernel/process.c中）启动一个init函数，init函数是用户控件的第一个进程。最后，空闲进程将会开始执行并且进程调度器将获得控制权（当cpu调用cpu_idle后）。通过启用中断，抢占式的调度器就可以周期性地接管控制权，从而提供多任务处理能力。</p><p>在内核引导过程中，初始 RAM 磁盘（initrd）是由第 2 阶段引导程序加载到内存中的，它会被复制到 RAM 中并挂载到系统上。这个 initrd作为 RAM 中的临时根文件系统使用，并允许内核在没有挂载任何物理磁盘的情况下完整地实现引导。由于与外围设备进行交互所需要的模块可是 initrd 的一部分，因此内核可以非常小，但是仍然支持大量可能的硬件配置。在内核启动后，就可以正式装备根文件系统了（通过 pivot_root），此时会将 initrd 根文件系统卸载掉，并挂载真正的根文件系统。</p><p>initrd 函数让我们可以创建一个小型的 Linux 内核，其中包括作为可加载模块编译的驱动程序。这些可加载的模块为内核提供了访问磁盘和磁盘上的文件系统的方法，并为其他硬件提供了驱动程序。由于根文件系统是磁盘上的一个文件系统，因此 initrd 函数会提供一种启动方法来获得对磁盘的访问，并挂载真正的根文件系统。在没有硬盘的嵌入式目标中，initrd 可以是最终的根文件系统，或者也可以通过网络文件系统（NFS）来挂载最终的根文件系统。</p><p>##init进程<br>在内核被启动并初始化后，内核启动第一个用户空间应用程序。这是调用的第一个使用标准 C 库编译的程序。在此进程之前，还没有执行任何标准的 C 应用程序。</p><p>在桌面 Linux 系统上，启动的第一个程序通常是 /sbin/init。不过完全没必要这样，很少有嵌入式系统会需要使用 init 所提供的丰富初始化功能（通过 /etc/inittab 配置的）。很多情况下，我们可以直接调用一个简单的 shell 脚本来启动必需的嵌入式应用程序。</p><p>##总结<br>与 Linux 本身非常类似，Linux 的引导过程也非常灵活，可以支持众多的处理器和硬件平台。最初，为加载引导程序提供了一种简单的方法，不用任何花架子就可以引导 Linux。LILO 引导程序对引导能力进行了扩展，但是它却缺少文件系统的识别能力。最新一代的引导程序，例如 GRUB，允许 Linux 从多种文件系统（如从 Minix 到 Reiser）上进行引导。</p><p>##Resource</p><blockquote><p>这部分就不翻译了，安心当一个大自然的搬运工，不过将所有链接都做上去了的。</p></blockquote><p><strong>Learn</strong></p><ul><li><a href="http://mirror.href.com/thestarman/asm/mbr/MBR_in_detail.htm">Boot Records Revealed</a> is a great resource on MBRs and the various boot loaders. This resource not only disassembles MBRs, but also discusses GRUB, LILO, and the various Windows? boot loaders.</li><li>Check out the <a href="http://www.rwc.uc.edu/koehler/comath/42.html">Disk Geometry</a> page to understand disks and their geometries. You’ll find an interesting summary of disk attributes.</li><li>A <a href="http://en.wikipedia.org/wiki/LiveCD">live CD</a> is an operating system that’s bootable from a CD or DVD without needing a hard drive.</li><li><a href="http://www.ibm.com/developerworks/linux/library/l-bootload.html">“Boot loader showdown: Getting to know LILO and GRUB”</a> (developerWorks, August 2005) gives you a detailed look at the LILO and GRUB boot loaders.</li><li>In the <a href="http://www.ibm.com/developerworks/linux/lpi/101.html?S_TACT=105AGX03&S_CMP=art">Linux Professional Institute (LPI) exam prep</a> series of developerWorks tutorials, get a comprehensive introduction to booting a Linux system and many other fundamental Linux tasks while you prepare for system administrator certification.</li><li><a href="http://www.freshmeat.net/projects/lilo/">LILO</a> was the precursor to GRUB, but you can still find it booting Linux.</li><li>The <a href="http://www.netadmintools.com/html/mkinitrd.man.html">mkintrd</a> command is used to create an initial RAM disk image. This command is useful for building an initial root file system for boot configuration that allows preloading of block devices needed to access the real root file system.</li><li>At the <a href="http://debianlinux.net/linux.html">Debian Linux Kernel Project</a>, find more information on the Linux kernel, boot, and embedded development.</li><li>In the <a href="http://www.ibm.com/developerworks/linux/">developerWorks Linux zone</a>, find more resources for Linux developers.</li><li>Stay current with <a href="http://www.ibm.com/developerworks/offers/techbriefings/?S_TACT=105AGX03&S_CMP=art">developerWorks technical events and Webcasts</a>.</li></ul><p><strong>Get products and technologies</strong></p><ul><li>The <a href="http://www.linuxdevices.com/articles/AT8516113114.html">MicroMonitor</a> provides a boot environment for a variety of small target devices. You can use this monitor to boot Linux in an embedded environment. It has ports for ARM, XScale, MIPS, PowerPC, Coldfire, and Hitachi’s Super-H.</li><li><a href="http://www.gnu.org/software/grub/">GNU GRUB</a> is a boot shell filled with options and flexibility.</li><li><a href="http://www.linuxbios.org/index.php/Main_Page">LinuxBIOS</a> is a BIOS replacement. Not only does it boot Linux, LinuxBIOS, itself, is a compressed Linux kernel.</li><li><a href="http://www.openbios.org/">OpenBIOS</a> is another portable BIOS project that operates on a variety of architectures such as x86, Alpha, and AMD64.</li><li>At <a href="http://www.kernel.org/">kernel.org</a>, grab the latest kernel tree.</li><li>With <a href="http://www.ibm.com/developerworks/downloads/?S_TACT=105AGX03&S_CMP=art">IBM trial software</a>, available for download directly from developerWorks, build your next development project on Linux.</li></ul><p><strong>Discuss</strong></p><ul><li>Check out <a href="http://www.ibm.com/developerworks/blogs/">developerWorks blogs</a> and get involved in the <a href="http://www.ibm.com/developerworks/community">developerWorks community</a>.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 译文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通平台Android源码分析之Linux内核设备树(DT - Device Tree)</title>
      <link href="2015/08/19/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BLinux%E5%86%85%E6%A0%B8%E8%AE%BE%E5%A4%87%E6%A0%91-DT-Device-Tree-dts%E6%96%87%E4%BB%B6/"/>
      <url>2015/08/19/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BLinux%E5%86%85%E6%A0%B8%E8%AE%BE%E5%A4%87%E6%A0%91-DT-Device-Tree-dts%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>刚开始接触Android源码的时候，发现在kernel里面多了一种dts文件，因为当初自学Linux时和在第一家公司做物联网模型时都是用的比较老的内核，内核代码还比较混乱，没有采用dts这种方便简洁的格式。后面才知道这是因为Linus的一句”this whole arm thing is a fucking pain in ass“促进改革的，记得Linux早期代码里面板级细节都是在C文件中描述的，代码就显得十分臃肿和混乱。如此优化之后就显得简洁多了，并且也更易于学习、移植。<br>　<br>今天准备专门来分析一下内核设备树，主要按照如下三个方向来分析：</p><ul><li>Device Tree组成及用法；</li><li>DTS文件解析常用api介绍；</li><li>DTS文件的编译；</li><li>高通Android源码中dts文件引用流程；<a id="more"></a></li></ul><h2 id="Device-Tree组成及用法"><a href="#Device-Tree组成及用法" class="headerlink" title="Device Tree组成及用法"></a>Device Tree组成及用法</h2><p>Device Tree由一系列node（节点）和property（属性）组成，节点本身可包含更多的子节点。属性是成对出现的name-value键值对。在device tree中主要描述如下信息：</p><ul><li>CPU的数量及类别</li><li>内存基地址和size</li><li>总线和桥</li><li>外设连接</li><li>中断</li><li>GPIO</li><li>CLOCK</li></ul><p>Device Tree在内核的作用有点类似于描述出PCB上的CPU、内存、总线、设备及IRQ GPIO等组成的tree结构。然后经由bootloader传递给内核，内核再根据此设备树解析出需要的i2c、spi等设备，然后将内存、IRQ、GPIO等资源绑定到相应的设备。</p><blockquote><p>lk中通过tag传递到kernel，文件路径：bootable/bootloader/lk/app/aboot/aboot.c，由DEVICE_TREE宏开关控制</p></blockquote><h2 id="DTS-device-tree-source"><a href="#DTS-device-tree-source" class="headerlink" title="DTS(device tree source)"></a>DTS(device tree source)</h2><p>dts文件是一种ASCII文本格式的device tree描述文件，其结构明了，第一次看到都能大概猜出其描述意图。在内核中arm部分，基本上一个.dts文件对应一个arm的machine，一般位于kernel/arch/arm/boot/dts。由于一个soc可能对应多个machine，<br>所以一般讲多个machine通用的部分提炼为一个.dsti文件，有点类似于头文件的作用，引用方式也类似：#include “xxx.dtsi”，dtsi文件也可以相互引用。</p><h3 id="dts中的基本元素"><a href="#dts中的基本元素" class="headerlink" title="dts中的基本元素"></a>dts中的基本元素</h3><p>dts中的基本元素为节点和属性，节点可以包含属性和子节点，属性为name-value键值对，如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">    <span class="class">node1 </span>&#123;</span></span><br><span class="line"><span class="class">        a-string-property = <span class="string">&quot;A string&quot;</span>; <span class="comment">// 值为字符串</span></span></span><br><span class="line"><span class="class">        a-string-list-property = <span class="string">&quot;first string&quot;</span>, <span class="string">&quot;second string&quot;</span>;<span class="comment">// 值为字符数组</span></span></span><br><span class="line"><span class="class">        a-byte-data-property = [<span class="number">0x01</span> <span class="number">0x23</span> <span class="number">0x34</span> <span class="number">0x56</span>]; <span class="comment">// 值为二进制</span></span></span><br><span class="line"><span class="class">        child-<span class="class">node1 </span>&#123;</span></span><br><span class="line"><span class="class">            first-child-property; </span></span><br><span class="line"><span class="class">            second-child-property = <span class="params">&lt;<span class="number">1</span>&gt;</span>; </span></span><br><span class="line"><span class="class">            a-string-property = <span class="string">&quot;Hello, world&quot;</span>;</span></span><br><span class="line"><span class="class">        &#125;;</span></span><br><span class="line">        child-<span class="class">node2 </span>&#123;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="class">node2 </span>&#123;</span><br><span class="line">        an-empty-property; <span class="comment">// 值为kog</span></span><br><span class="line">        <span class="comment">/* each number (cell) is a uint32 */</span></span><br><span class="line">        a-cell-property = <span class="params">&lt;<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>&gt;</span>;  <span class="comment">// cells（由uint32组成）</span></span><br><span class="line">        child-<span class="class">node1 </span>&#123;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>上述dt并没有什么真实用途，没有描述任何东西。不过展示了dt的结构：</p><ul><li>一个根节点：”/“；</li><li>一对子节点：”node1”和”node2”；</li><li>子节点的子节点：”child-node”；</li><li>属性定义： 属性值可以为空、字符串、cells(整数组成)、数组及二进制等任意字节流；</li></ul><p>属性中常用的字节流如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字符串，用双引号引用： </span></span><br><span class="line">string-property = <span class="string">&quot;A string&quot;</span>; </span><br><span class="line"><span class="comment">#cells(32 bits)，用尖括号引用分隔开的32bit无符号整数：</span></span><br><span class="line">cell-property = &lt;0xbeef 123 0xabcd1234&gt;；</span><br><span class="line"><span class="comment"># 二进制数据，用方括号引用：</span></span><br><span class="line">binary-property = [0x01 0x23 0x45 0x67];</span><br><span class="line"><span class="comment"># 通过逗号链接不同数据：</span></span><br><span class="line">mixed-property = <span class="string">&quot;a string&quot;</span>, [0x01 0x23 0x45 0x67], &lt;0x12345678&gt;;</span><br><span class="line"><span class="comment"># 通过逗号创建字符串数组：</span></span><br><span class="line">string-list = <span class="string">&quot;red fish&quot;</span>, <span class="string">&quot;blue fish&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="Sample-Machine"><a href="#Sample-Machine" class="headerlink" title="Sample Machine"></a>Sample Machine</h2><p>理解设备树怎么被用的最好办法，就是做一遍，接下来就通过一步一步构建描述一个简单machine的device tree来理解设备树。假设machine的硬件配置如下：</p><ul><li>一个32bit的ARM CPU</li><li>处理器的local bus的内存映射分布了串口、spi总线控制器、i2c控制器、中断控制器和外部总线桥</li><li>256MB的SDRAM，基地址为0</li><li>2个串口基地址为：0x101f1000 和 0x101f2000</li><li>GPIO控制器，基地址为0x101f3000</li><li>spi控制器，基地址为0x10170000,从属设备：<ul><li>MMC slot with ss pin attached to GPIO #1 (不能很好理解其意思，所以就不胡乱翻译了)</li></ul></li><li>External bus桥，从属设备：<ul><li>smc smc91111 Ethernet设备，基地址为0x10100000</li><li>i2c控制器，基地址为0x10160000，从属设备：<ul><li>Maxim DS1338时钟芯片，从设备I2C地址 1101000(0x58)</li></ul></li><li>64MB Nor flash,基地址为0x30000000</li></ul></li></ul><h3 id="初始化结构"><a href="#初始化结构" class="headerlink" title="初始化结构"></a>初始化结构</h3><p>首先，为machine创建一个框架结构，一个有效设备树的最简单的结构，如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">    compatible = <span class="string">&quot;acme,coyotes-revenge&quot;</span>;</span></span><br><span class="line"><span class="class">&#125;;</span></span><br></pre></td></tr></table></figure><p>compatible指定系统的名字，格式： compatible = “&lt; manufacturer&gt;,&lt; model&gt;”（制造商，型号）。它非常重要，用来精确指定设备，并通过包含manufacurer(制造商)名字来避免冲突。因为操作系统通过compatible的值来决定machine怎么运行，所以使用正确的值是非常重要的。<br>　<br>理论上来说，compatible是操作系统所有数据标示machine的唯一标示符，os将通过顶层compatible寻找相应的值。</p><h3 id="CPUs"><a href="#CPUs" class="headerlink" title="CPUs"></a>CPUs</h3><p>第二步，描述CPU的”cpus”节点，其包含每一个CPU描述信息的子节点，在这个例子中，CPU为一个双核的arm cortex A9处理器，所以其描述如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">    compatible = <span class="string">&quot;acme,coyotes-revenge&quot;</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="class">cpus </span>&#123;</span></span><br><span class="line"><span class="class">        <span class="class">cpu@0 </span>&#123;</span></span><br><span class="line"><span class="class">            compatible = <span class="string">&quot;arm,cortex-a9&quot;</span>; <span class="comment">// 格式同顶层节点，&lt;manufacturer&gt;,&lt;model&gt;</span></span></span><br><span class="line"><span class="class">        &#125;;</span></span><br><span class="line">        <span class="class">cpu@1 </span>&#123;</span><br><span class="line">            compatible = <span class="string">&quot;arm,cortex-a9&quot;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="节点名"><a href="#节点名" class="headerlink" title="节点名"></a>节点名</h3><p>每一个节点必须有一个节点名，格式： &lt; name&gt;[@&lt; unit-address&gt;]。</p><ul><li>&lt; name&gt;：为最长31个字符的ascii字符串，一般用其代表的设备类型命名，ie. 一个3com Ethernet adapter的节点名：ethernet，不用3com509。</li><li>unit-address： 描述设备的地址，一般情况下，其提供访问设备的基地址，节点的reg property也用此参数，见下文。</li></ul><p>同层次兄弟节点的节点名必须是独一无二的，不过多个节点可以使用一样的通用name，只要地址不同就可以了。ie. serial@101f1000 &amp; serial@101f2000</p><h3 id="Devices"><a href="#Devices" class="headerlink" title="Devices"></a>Devices</h3><p>每一个device在系统中由一个设备树节点描述，所以接下来，第三步是为设备填充树的节点。不过，现在我为新节点创建一个空节点，直到我们知道地址范围和如何处理irqs请求之后再填写相应内容。如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">    compatible = <span class="string">&quot;acme,coyotes-revenge&quot;</span>;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="class">cpus </span>&#123;</span></span><br><span class="line"><span class="class">        <span class="class">cpu@0 </span>&#123;</span></span><br><span class="line"><span class="class">            compatible = <span class="string">&quot;arm,cortex-a9&quot;</span>;</span></span><br><span class="line"><span class="class">        &#125;;</span></span><br><span class="line">        <span class="class">cpu@1 </span>&#123;</span><br><span class="line">            compatible = <span class="string">&quot;arm,cortex-a9&quot;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">serial@101F0000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl011&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">serial@101F2000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl011&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">gpio@101F3000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl061&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    interrupt-<span class="class">controller@10140000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl190&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">spi@10115000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl022&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    external-<span class="class">bus </span>&#123;</span><br><span class="line">        ethernet@<span class="number">0</span>,<span class="number">0</span> &#123;</span><br><span class="line">            compatible = <span class="string">&quot;smc,smc91c111&quot;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        i2c@<span class="number">1</span>,<span class="number">0</span> &#123;</span><br><span class="line">            compatible = <span class="string">&quot;acme,a1234-i2c-bus&quot;</span>;</span><br><span class="line">            <span class="class">rtc@58 </span>&#123;</span><br><span class="line">                compatible = <span class="string">&quot;maxim,ds1338&quot;</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        flash@<span class="number">2</span>,<span class="number">0</span> &#123;</span><br><span class="line">            compatible = <span class="string">&quot;samsung,k8f1315ebm&quot;</span>, <span class="string">&quot;cfi-flash&quot;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在此tree中，在系统中为每一个device增加了节点，其层次结构反应了系统中的连接情况。ie. extern bus上的的设备憋创建为external bus节点的子节点，i2c设备被创建为i2c总线控制器的子节点。简单来说，tree中的层次结构代表了系统中的CPU视图。</p><p>目前，这个tree是无效的，因为它没有设备之间的连接信息，接下来再添加这些信息。<br>在这个tree中有几点需要注意：</p><ul><li>每个设备节点都有一个compatible属性</li><li>flash节点的compatible属性有两个字符串值。</li><li>如前所述，节点名反映设备类型，而非详细型号。</li></ul><h4 id="compatible详解"><a href="#compatible详解" class="headerlink" title="compatible详解"></a>compatible详解</h4><p>设备树中每个节点都需要有compatible属性，compatible属性决定每一个设备驱动绑定哪一个设备。如上所介绍，compatible是一个字符串序列，第一个字符串指定精确设备，第二字符串指定兼容设备。</p><p>例如：Freescale MPC8349片上有一个根据国家半导体ns16550接口实现的串行设备，定义为：compatible = “fsl,mpc8349-uart”, “ns16550”. 第一个字符串指定精确设备，第二个指定国家半导体16550 uart兼容设备。</p><blockquote><p>ns16550没有制造商前缀（manufacturer）纯属历史原因，所有的compatible值应该带有制造商前缀。</p></blockquote><p>这种做法允许将存在的设备驱动绑定到一类更新的设备，并且仍然能识别到精确的设备。</p><blockquote><p>警告：不要使用通配符赋值，如：”fsl,mpc83xx-uart”等。为了兼容后续设备，一般会选择一个特定实现，如上的：”ns16550”。</p></blockquote><h3 id="设备寻址"><a href="#设备寻址" class="headerlink" title="设备寻址"></a>设备寻址</h3><p>关于设备寻址，设备树中通过如下属性encode地址信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">reg ：每个可寻址的设备有一个reg cells.</span><br><span class="line">格式：reg = &lt;address1 length1 [address2 length2] [address3 length3] ... &gt;</span><br><span class="line">// 因为地址和地址长度是变量，所以父节点中定义<span class="comment">#address-cells和#size-cells两个属性，声明每个域里会用到多少cell</span></span><br><span class="line"><span class="comment">#address-cells</span></span><br><span class="line"><span class="comment">#size-cells</span></span><br></pre></td></tr></table></figure><h5 id="CPU寻址"><a href="#CPU寻址" class="headerlink" title="CPU寻址"></a>CPU寻址</h5><p>CPU节点寻址是寻址里面最简单的，每个CPU被一个独一无二的ID标记，没有size与CPU ids关联。如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">cpus </span>&#123;</span><br><span class="line">    <span class="meta">#address-cells = &lt;1&gt;;</span></span><br><span class="line">    <span class="meta">#size-cells = &lt;0&gt;; <span class="comment">// 此两个属性表明子节点reg 值为一个没有size的uint32地址</span></span></span><br><span class="line">    <span class="class">cpu@0 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,cortex-a9&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0</span>&gt;</span>; <span class="comment">// 值与节点名的unit-address相同</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="class">cpu@1 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,cortex-a9&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">1</span>&gt;</span>; </span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>如果一个节点有reg属性，则节点名必须包含unit-address，并且取reg属性的第一个address值。</p></blockquote><h3 id="有内存映像地址的设备"><a href="#有内存映像地址的设备" class="headerlink" title="有内存映像地址的设备"></a>有内存映像地址的设备</h3><p>与cpu中只有address值不同，有内存映像地址的设备还需分配地址范围值，每个子节点reg元素定义地址长度值的数量由父节点的#size-cells指定。如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">    #address-cells = <span class="params">&lt;<span class="number">1</span>&gt;</span>; <span class="comment">// 值为 1 cell(32bits)</span></span></span><br><span class="line"><span class="class">    #size-cells = <span class="params">&lt;<span class="number">1</span>&gt;</span>; <span class="comment">// 每个长度值为 1 cell</span></span></span><br><span class="line"><span class="class">    <span class="comment">// 如果是64 bit machines， 则以上两值为2</span></span></span><br><span class="line"><span class="class">    ...</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="class">serial@101f0000 </span>&#123;</span></span><br><span class="line"><span class="class">        compatible = <span class="string">&quot;arm,pl011&quot;</span>;</span></span><br><span class="line"><span class="class">        reg = <span class="params">&lt;<span class="number">0x101f0000</span> <span class="number">0x1000</span> &gt;</span>; </span></span><br><span class="line"><span class="class">        <span class="comment">// 第一个参数为基地址，第二个参数为地址长度，此处表示serial的内存地址范围：0x101f0000~0x101f0fff</span></span></span><br><span class="line"><span class="class">    &#125;;</span></span><br><span class="line"></span><br><span class="line">    <span class="class">serial@101f2000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl011&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0x101f2000</span> <span class="number">0x1000</span> &gt;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">gpio@101f3000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl061&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0x101f3000</span> <span class="number">0x1000</span></span></span><br><span class="line"><span class="params">               <span class="number">0x101f4000</span> <span class="number">0x0010</span>&gt;</span>; <span class="comment">// GPIO设备被分配到两个地址范围</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    interrupt-<span class="class">controller@10140000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl190&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0x10140000</span> <span class="number">0x1000</span> &gt;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">spi@10115000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl022&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0x10115000</span> <span class="number">0x1000</span> &gt;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>当然，并不是所有设备都直接和cpu相连，也有一些设备通过挂载到一条总线上和cpu相连。对于挂接到总线的设备，每个父节点为子节点定义地址域，如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">external-<span class="class">bus </span>&#123;  <span class="comment">//父节点</span></span><br><span class="line"><span class="meta">#address-cells = &lt;2&gt; <span class="comment">// 子节点有2 cells基地址值，一个用于指定chip number，一个用于指定选中芯片基地址的偏移量</span></span></span><br><span class="line"><span class="meta">#size-cells = &lt;1&gt;; <span class="comment">// 子节点有1 cell 地址长度</span></span></span><br><span class="line"></span><br><span class="line">    ethernet@<span class="number">0</span>,<span class="number">0</span> &#123;</span><br><span class="line">        compatible = <span class="string">&quot;smc,smc91c111&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0</span> <span class="number">0</span> <span class="number">0x1000</span>&gt;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    i2c@<span class="number">1</span>,<span class="number">0</span> &#123;</span><br><span class="line">        compatible = <span class="string">&quot;acme,a1234-i2c-bus&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">1</span> <span class="number">0</span> <span class="number">0x1000</span>&gt;</span>;</span><br><span class="line">        <span class="class">rtc@58 </span>&#123;</span><br><span class="line">            compatible = <span class="string">&quot;maxim,ds1338&quot;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    flash@<span class="number">2</span>,<span class="number">0</span> &#123;</span><br><span class="line">        compatible = <span class="string">&quot;samsung,k8f1315ebm&quot;</span>, <span class="string">&quot;cfi-flash&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">2</span> <span class="number">0</span> <span class="number">0x4000000</span>&gt;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>由于地址域被节点和其子节点一起定义，所以父节点可以为总线定义任何寻址方式。除了直接父亲以外的所有节点和子节点都不用关心本地的寻址域，不用关心地址从哪映射到哪。</p><blockquote><p>如不明白，请继续往下看，相信接下来的部分会帮你解惑</p></blockquote><h3 id="无内存映像的设备"><a href="#无内存映像的设备" class="headerlink" title="无内存映像的设备"></a>无内存映像的设备</h3><p>无内存映像的设备没有直接访问cpu的权限，父设备的驱动将间接访问cpu，其cpu一样reg属性会有一个地址值，但没有地址长度或范围，如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">i2c@<span class="number">1</span>,<span class="number">0</span> &#123;</span><br><span class="line">    compatible = <span class="string">&quot;acme,a1234-i2c-bus&quot;</span>;</span><br><span class="line">    <span class="meta">#address-cells = &lt;1&gt;;</span></span><br><span class="line">    <span class="meta">#size-cells = &lt;0&gt;;</span></span><br><span class="line">    reg = <span class="params">&lt;<span class="number">1</span> <span class="number">0</span> <span class="number">0x1000</span>&gt;</span>;</span><br><span class="line">    <span class="class">rtc@58 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;maxim,ds1338&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">58</span>&gt;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="地址转换"><a href="#地址转换" class="headerlink" title="地址转换"></a>地址转换</h3><p>前面讲了怎么给设备分配本地地址，但没有说明怎么映射到cpu能直接访问的地址。接下来就详细分析一下这一部分：</p><p>根节点描述cpu地址空间视图，根节点的子节点不需要做任何显性的映射直接使用cpu的地址域。比如：serial@101f0000直接分配到地址0x101f0000.</p><p>而不是根节点的直接孩子的节点不使用cpu的地址域，为了能将其映射到cpu的内存地址，设备树就得对其地址进行转换，ranges属性就是用来实现这个目的的，加入ranges属性后如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">    compatible = <span class="string">&quot;acme,coyotes-revenge&quot;</span>;</span></span><br><span class="line"><span class="class">    #address-cells = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</span></span><br><span class="line"><span class="class">    #size-cells = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</span></span><br><span class="line"><span class="class">    ...</span></span><br><span class="line"><span class="class">    external-<span class="class">bus </span>&#123;</span></span><br><span class="line"><span class="class">        #address-cells = <span class="params">&lt;<span class="number">2</span>&gt;</span></span></span><br><span class="line"><span class="class">        #size-cells = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</span></span><br><span class="line"><span class="class">        ranges = <span class="params">&lt;<span class="number">0</span> <span class="number">0</span>  <span class="number">0x10100000</span>   <span class="number">0x10000</span>     // Chipselect <span class="number">0</span>, Ethernet</span></span></span><br><span class="line"><span class="class"><span class="params">                         <span class="number">1</span> <span class="number">0</span>  <span class="number">0x10160000</span>   <span class="number">0x10000</span>     // Chipselect <span class="number">1</span>, i2c controller</span></span></span><br><span class="line"><span class="class"><span class="params">                         <span class="number">2</span> <span class="number">0</span>  <span class="number">0x30000000</span>   <span class="number">0x10000000</span>&gt;</span>; <span class="comment">// Chipselect 2, NOR Flash，此处参考文章地址空间大小少一个0，但我觉得不对，所以自己做了修改，下同，就不再说明</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="comment">// 相信大家直接通过这个列表就能知道地址怎么转换的了，如下：</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="number">1.</span> 偏移量为<span class="number">0</span>的Chipselect0映射到<span class="number">0x10100000</span>~<span class="number">0x1010ffff</span></span></span><br><span class="line"><span class="class"><span class="number">2.</span> 偏移量为<span class="number">0</span>的Chipselect1映射到<span class="number">0x10160000</span>~<span class="number">0x1016ffff</span></span></span><br><span class="line"><span class="class"><span class="number">3.</span> 偏移量为<span class="number">0</span>的Chipselect2映射到<span class="number">0x30000000</span>~<span class="number">0x3fffffff</span> （此处参考文章写的<span class="number">0x10000000</span>，但我觉得应该是<span class="number">0x3fffffff</span>，原地址见博文最后引用）</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">        ethernet@<span class="number">0</span>,<span class="number">0</span> &#123;</span></span><br><span class="line"><span class="class">            compatible = <span class="string">&quot;smc,smc91c111&quot;</span>;</span></span><br><span class="line"><span class="class">            reg = <span class="params">&lt;<span class="number">0</span> <span class="number">0</span> <span class="number">0x1000</span>&gt;</span>;</span></span><br><span class="line"><span class="class">        &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// i2c总线节点没有ranges参数，因为i2c总线上的设备不需映射到cpu地址域，cpu直接通过i2c就能访问i2c设备</span></span><br><span class="line">        i2c@<span class="number">1</span>,<span class="number">0</span> &#123;</span><br><span class="line">            compatible = <span class="string">&quot;acme,a1234-i2c-bus&quot;</span>;</span><br><span class="line">            <span class="meta">#address-cells = &lt;1&gt;;</span></span><br><span class="line">            <span class="meta">#size-cells = &lt;0&gt;;</span></span><br><span class="line">            reg = <span class="params">&lt;<span class="number">1</span> <span class="number">0</span> <span class="number">0x1000</span>&gt;</span>;</span><br><span class="line">            <span class="class">rtc@58 </span>&#123;</span><br><span class="line">                compatible = <span class="string">&quot;maxim,ds1338&quot;</span>;</span><br><span class="line">                reg = <span class="params">&lt;<span class="number">58</span>&gt;</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        flash@<span class="number">2</span>,<span class="number">0</span> &#123;</span><br><span class="line">            compatible = <span class="string">&quot;samsung,k8f1315ebm&quot;</span>, <span class="string">&quot;cfi-flash&quot;</span>;</span><br><span class="line">            reg = <span class="params">&lt;<span class="number">2</span> <span class="number">0</span> <span class="number">0x10000000</span>&gt;</span>; <span class="comment">// 此处参考文章写的0x4000000， 但我觉得为0x10000000 - 256MB</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>ranges参数的值是一个地址转换列表，每一个条目由如下几部分组成：</p><ul><li>子节点地址：由子节点的#address-cells值决定</li><li>父节点地址：由父节点的#address-cells值决定</li><li>子节点地址空间的大小 ：由子节点的#size-cells值决定</li></ul><p>如果ranges参数为空，则表示子节点地址和父节点地址1:1映射。你可能会有疑问，既然1:1映射，为什么还要通过地址转换来获得地址空间。一些总线（比如PCI）有完全不同的地址空间细节需要暴露给操作系统。其他带DMA的设备需要知道设备在总线上的真实地址。有时设备需要组合在一起去共享相同的可编程物理地址映射。是否需要通过1:1映射依赖于操作系统和硬件设计的很多信息。</p><p>缺乏ranges参数意味着，一个设备只能被其父节点访问而不能被cpu直接访问。</p><h3 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h3><p>中断信号可以来自machine的任何设备，中断信号在设备树中被描述为节点之间的links。主要有如下4中属性：</p><ul><li>interrupt-controller：一个空属性，定义节点为中断控制器；</li><li>#interrupt-cells：表明连接此中断控制器的interrupts属性cell大小（类似于#address-cells和#size-cells）；</li><li>interrupt-parent：指定节点设备所依附的中断控制器的phandle，若没有此参数，则从父节点继承；</li><li>interrupts：中断说明符列表，节点通过此方法指定中断号、触发方式等；</li></ul><p>一个中断说明符描述指定中断输入设备的相关信息，由#interrupt-cells指定中断说明符cell数量。设备可能一个或多个中断源。一个中断设备的说明符完全取决于绑定的中断控制器设备。  定义一个中断源需要多少cells由中断控制器决定。加入中断相关属性后如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">    compatible = <span class="string">&quot;acme,coyotes-revenge&quot;</span>;</span></span><br><span class="line"><span class="class">    #address-cells = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</span></span><br><span class="line"><span class="class">    #size-cells = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</span></span><br><span class="line"><span class="class">    interrupt-parent = <span class="params">&lt;<span class="variable">&amp;intc</span>&gt;</span>;  <span class="comment">// intc-&gt;interrupt-controller，作为系统默认的interrupt-parent属性，子节点重写则覆盖</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="class">cpus </span>&#123;</span></span><br><span class="line"><span class="class">        #address-cells = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</span></span><br><span class="line"><span class="class">        #size-cells = <span class="params">&lt;<span class="number">0</span>&gt;</span>;</span></span><br><span class="line"><span class="class">        <span class="class">cpu@0 </span>&#123;</span></span><br><span class="line"><span class="class">            compatible = <span class="string">&quot;arm,cortex-a9&quot;</span>;</span></span><br><span class="line"><span class="class">            reg = <span class="params">&lt;<span class="number">0</span>&gt;</span>;</span></span><br><span class="line"><span class="class">        &#125;;</span></span><br><span class="line">        <span class="class">cpu@1 </span>&#123;</span><br><span class="line">            compatible = <span class="string">&quot;arm,cortex-a9&quot;</span>;</span><br><span class="line">            reg = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">serial@101f0000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl011&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0x101f0000</span> <span class="number">0x1000</span> &gt;</span>;</span><br><span class="line">        interrupts = <span class="params">&lt; <span class="number">1</span> <span class="number">0</span> &gt;</span>; <span class="comment">// 指定中断源</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">serial@101f2000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl011&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0x101f2000</span> <span class="number">0x1000</span> &gt;</span>;</span><br><span class="line">        interrupts = <span class="params">&lt; <span class="number">2</span> <span class="number">0</span> &gt;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">gpio@101f3000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl061&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0x101f3000</span> <span class="number">0x1000</span></span></span><br><span class="line"><span class="params">               <span class="number">0x101f4000</span> <span class="number">0x0010</span>&gt;</span>;</span><br><span class="line">        interrupts = <span class="params">&lt; <span class="number">3</span> <span class="number">0</span> &gt;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="symbol">    intc:</span> interrupt-<span class="class">controller@10140000 </span>&#123;  <span class="comment">// 中断控制器</span></span><br><span class="line">        compatible = <span class="string">&quot;arm,pl190&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0x10140000</span> <span class="number">0x1000</span> &gt;</span>;</span><br><span class="line">        interrupt-controller;</span><br><span class="line">        <span class="meta">#interrupt-cells = &lt;2&gt;; <span class="comment">// 中断说明符有2 cells，此例中cell 1表示中断号，cell 2 表示触发方式</span></span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="class">spi@10115000 </span>&#123;</span><br><span class="line">        compatible = <span class="string">&quot;arm,pl022&quot;</span>;</span><br><span class="line">        reg = <span class="params">&lt;<span class="number">0x10115000</span> <span class="number">0x1000</span> &gt;</span>;</span><br><span class="line">        interrupts = <span class="params">&lt; <span class="number">4</span> <span class="number">0</span> &gt;</span>; <span class="comment">// 注：设备还可以使用多个中断号，假如此spi使用两个，则：interrupts = &lt;0 4 0&gt;, &lt;1 5 0&gt;;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    external-<span class="class">bus </span>&#123;</span><br><span class="line">        <span class="meta">#address-cells = &lt;2&gt;</span></span><br><span class="line">        <span class="meta">#size-cells = &lt;1&gt;;</span></span><br><span class="line">        ranges = <span class="params">&lt;<span class="number">0</span> <span class="number">0</span>  <span class="number">0x10100000</span>   <span class="number">0x10000</span>     // Chipselect <span class="number">0</span>, Ethernet</span></span><br><span class="line"><span class="params">                  <span class="number">1</span> <span class="number">0</span>  <span class="number">0x10160000</span>   <span class="number">0x10000</span>     // Chipselect <span class="number">1</span>, i2c controller</span></span><br><span class="line"><span class="params">                  <span class="number">2</span> <span class="number">0</span>  <span class="number">0x30000000</span>   <span class="number">0x10000000</span>&gt;</span>; <span class="comment">// Chipselect 2, NOR Flash</span></span><br><span class="line"></span><br><span class="line">        ethernet@<span class="number">0</span>,<span class="number">0</span> &#123;</span><br><span class="line">            compatible = <span class="string">&quot;smc,smc91c111&quot;</span>;</span><br><span class="line">            reg = <span class="params">&lt;<span class="number">0</span> <span class="number">0</span> <span class="number">0x1000</span>&gt;</span>;</span><br><span class="line">            interrupts = <span class="params">&lt; <span class="number">5</span> <span class="number">2</span> &gt;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        i2c@<span class="number">1</span>,<span class="number">0</span> &#123;</span><br><span class="line">            compatible = <span class="string">&quot;acme,a1234-i2c-bus&quot;</span>;</span><br><span class="line">            <span class="meta">#address-cells = &lt;1&gt;;</span></span><br><span class="line">            <span class="meta">#size-cells = &lt;0&gt;;</span></span><br><span class="line">            reg = <span class="params">&lt;<span class="number">1</span> <span class="number">0</span> <span class="number">0x1000</span>&gt;</span>;</span><br><span class="line">            interrupts = <span class="params">&lt; <span class="number">6</span> <span class="number">2</span> &gt;</span>;</span><br><span class="line">            <span class="class">rtc@58 </span>&#123;</span><br><span class="line">                compatible = <span class="string">&quot;maxim,ds1338&quot;</span>;</span><br><span class="line">                reg = <span class="params">&lt;<span class="number">58</span>&gt;</span>;</span><br><span class="line">                interrupts = <span class="params">&lt; <span class="number">7</span> <span class="number">3</span> &gt;</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        flash@<span class="number">2</span>,<span class="number">0</span> &#123;</span><br><span class="line">            compatible = <span class="string">&quot;samsung,k8f1315ebm&quot;</span>, <span class="string">&quot;cfi-flash&quot;</span>;</span><br><span class="line">            reg = <span class="params">&lt;<span class="number">2</span> <span class="number">0</span> <span class="number">0x10000000</span>&gt;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>另， 关于cell含义在内核中的相关文档有详细描述，比如arm gic 中断：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># Documentation/devicetree/bindings/arm/gic.txt</span><br><span class="line">The 1st cell is the interrupt type; 0 for SPI interrupts, 1 for PPI  </span><br><span class="line">interrupts.  </span><br><span class="line"></span><br><span class="line">The 2nd cell contains the interrupt number for the interrupt type.  </span><br><span class="line">SPI interrupts are in the range [0-987].  PPI interrupts are in the  </span><br><span class="line">range [0-15].   </span><br><span class="line"></span><br><span class="line">The 3rd cell is the flags, encoded as follows:  </span><br><span class="line">       bits[3:0] trigger type and level flags.  </span><br><span class="line">               1 = low-to-high edge triggered  </span><br><span class="line">               2 = high-to-low edge triggered  </span><br><span class="line">               4 = active high level-sensitive  </span><br><span class="line">               8 = active low level-sensitive  </span><br><span class="line">       bits[15:8] PPI interrupt cpu mask.  Each bit corresponds to each of  </span><br><span class="line">       the 8 possible cpus attached to the GIC.  A bit set to &#x27;1&#x27; indicated  </span><br><span class="line">       the interrupt is wired to that CPU.  Only valid for PPI interrupts.  </span><br></pre></td></tr></table></figure><h3 id="设备特有数据"><a href="#设备特有数据" class="headerlink" title="设备特有数据"></a>设备特有数据</h3><p>除了上面讲的常用属性，任意需要的属性和子节点都可以被加入到设备树，不过新device-specific属性应将制造商名作为前缀命名，以避免与标准的属性冲突；</p><blockquote><p>其实还有一些要求，不过主要针对内核开发者的，而我还没有那个水平，就没详细看了 </p></blockquote><h3 id="特殊节点"><a href="#特殊节点" class="headerlink" title="特殊节点"></a>特殊节点</h3><h4 id="aliases节点"><a href="#aliases节点" class="headerlink" title="aliases节点"></a>aliases节点</h4><p>一个specific节点通常以完全路径的形式引用，如：/external-bus/ethernet@0,0 ， 但是这样太复杂了，不利于阅读。所以通常会用以一个短的别名命名的aliases节点去指定设备的完全路径，如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">aliases </span>&#123;</span><br><span class="line">    ethernet0 = <span class="variable">&amp;eth0</span>;  </span><br><span class="line">    serial0 = <span class="variable">&amp;serial0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>注：property = &amp;Label 不同于如上中断phandle引用的phandle = &lt;&amp;Lable&gt;</p></blockquote><h4 id="chosen节点"><a href="#chosen节点" class="headerlink" title="chosen节点"></a>chosen节点</h4><p>chosen节点不指明真实的设备，其为硬件和操作系统数据传输服务，如：启动参数。通常chosen节点在dts源文件中写为空，在启动时再填充，在例中增加如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">chosen </span>&#123;</span><br><span class="line">        bootargs = <span class="string">&quot;root=/dev/nfs rw nfsroot=192.168.1.1 console=ttyS0,115200&quot;</span>;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><h2 id="DTC-device-tree-compiler"><a href="#DTC-device-tree-compiler" class="headerlink" title="DTC (device tree compiler)"></a>DTC (device tree compiler)</h2><p>DTC将.dts编译为.dtb的工具。DTC的源代码位于内核的scripts/dtc目录，在Linux内核使能了Device Tree的情况下，编译内核的时候主机工具dtc会被编译出来，对应scripts/dtc/Makefile中的“hostprogs-y := dtc”。<br>在Linux内核的arch/arm/boot/dts/Makefile中，描述了当某种SoC被选中后，哪些.dtb文件会被编译出来，如与VEXPRESS对应的.dtb包括：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dtb-$(CONFIG_ARCH_VEXPRESS) += vexpress-v2p-ca5s.dtb \  </span><br><span class="line">        vexpress-v2p-ca9.dtb \  </span><br><span class="line">        vexpress-v2p-ca15-tc1.dtb \  </span><br><span class="line">        vexpress-v2p-ca15_a7.dtb \  </span><br><span class="line">        xenvm-4.2.dtb  </span><br></pre></td></tr></table></figure><p>在Linux下，我们可以通过make dtbs命令单独编译Device Tree文件。因为arch/arm/Makefile中含有一个dtbs编译target，如下：</p><figure class="highlight mk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Build the DT binary blobs if we have OF configured</span></span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(CONFIG_USE_OF)</span>,y)</span><br><span class="line">KBUILD_DTBS := dtbs</span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure><h3 id="Device-Tree-Blob-dtb"><a href="#Device-Tree-Blob-dtb" class="headerlink" title="Device Tree Blob (dtb)"></a>Device Tree Blob (dtb)</h3><p>dtb是dts被DTC编译后生成的二进制格式Device Tree描述，可由Linux内核解析。系统设计时通常会单独留下一个很小的flash空间存放.dtb文件，bootloader在引导kernel的过程中，会先读取该.dtb到内存。</p><h3 id="Binding"><a href="#Binding" class="headerlink" title="Binding"></a>Binding</h3><p>对于Device Tree中的结点和属性具体是如何来描述设备的硬件细节的，内核里有相应的文档，位于：Documentation/devicetree/bindings目录，其下又分为很多子目录。</p><h2 id="dts解析API"><a href="#dts解析API" class="headerlink" title="dts解析API"></a>dts解析API</h2><blockquote><p>注：此部分基本完全摘自参考文档</p></blockquote><p>在Linux的BSP和驱动代码中，解析dts的API通常被以“of_”作为前缀，它们的实现代码位于内核的drivers/of目录。接下来就介绍一下常用的API。</p><p><strong>int of_device_is_compatible(const struct device_node *device,const char *compat);</strong></p><p>判断设备结点的compatible 属性是否包含compat指定的字符串。当一个驱动支持2个或多个设备的时候，这些不同.dts文件中设备的compatible 属性都会进入驱动 OF匹配表。因此驱动可以透过Bootloader传递给内核的Device Tree中的真正结点的compatible 属性以确定究竟是哪一种设备，从而根据不同的设备类型进行不同的处理。如drivers/pinctrl/pinctrl-sirf.c即兼容于”sirf,prima2-pinctrl”，又兼容于”sirf,prima2-pinctrl”，在驱动中就有相应分支处理：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (of_device_is_compatible(np, <span class="string">&quot;sirf,marco-pinctrl&quot;</span>))  </span><br><span class="line">      is_marco = <span class="number">1</span>;  </span><br><span class="line"><span class="function">struct device_node *<span class="title">of_find_compatible_node</span><span class="params">(struct device_node *from,</span></span></span><br><span class="line"><span class="function"><span class="params">         <span class="keyword">const</span> <span class="keyword">char</span> *type, <span class="keyword">const</span> <span class="keyword">char</span> *compatible)</span></span>;</span><br></pre></td></tr></table></figure><p>根据compatible属性，获得设备结点。遍历Device Tree中所有的设备结点，看看哪个结点的类型、compatible属性与本函数的输入参数匹配，大多数情况下，from、type为NULL。</p><p><strong>int of_property_read_u8_array(const struct device_node *np, const char *propname, u8 *out_values, size_t sz);<br>int of_property_read_u16_array(const struct device_node *np, const char *propname, u16 *out_values, size_t sz);<br>int of_property_read_u32_array(const struct device_node *np, const char *propname, u32 *out_values, size_t sz);<br>int of_property_read_u64(const struct device_node *np, const char *propname, u64 *out_value);</strong></p><p>读取设备结点np的属性名为propname，类型为8、16、32、64位整型数组的属性。对于32位处理器来讲，最常用的是of_property_read_u32_array()。如在arch/arm/mm/cache-l2x0.c中，透过如下语句读取L2 cache的”arm,data-latency”属性：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">of_property_read_u32_array(np, <span class="string">&quot;arm,data-latency&quot;</span>,  </span><br><span class="line">      data, ARRAY_SIZE(data));  </span><br></pre></td></tr></table></figure><p>在arch/arm/boot/dts/vexpress-v2p-ca9.dts中，含有”arm,data-latency”属性的L2 cache结点如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">L2: cache-controller@<span class="number">1e00</span>a000 &#123;  </span><br><span class="line">        compatible = <span class="string">&quot;arm,pl310-cache&quot;</span>;  </span><br><span class="line">        reg = &lt;<span class="number">0x1e00a000</span> <span class="number">0x1000</span>&gt;;  </span><br><span class="line">        interrupts = &lt;<span class="number">0</span> <span class="number">43</span> <span class="number">4</span>&gt;;  </span><br><span class="line">        cache-level = &lt;<span class="number">2</span>&gt;;  </span><br><span class="line">        arm,data-latency = &lt;<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>&gt;;  </span><br><span class="line">        arm,tag-latency = &lt;<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>&gt;;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>有些情况下，整形属性的长度可能为1，于是内核为了方便调用者，又在上述API的基础上封装出了更加简单的读单一整形属性的API，它们为int of_property_read_u8()、of_property_read_u16()等，实现于include/linux/of.h：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">of_property_read_u8</span><span class="params">(<span class="keyword">const</span> struct device_node *np,  </span></span></span><br><span class="line"><span class="function"><span class="params">                                       <span class="keyword">const</span> <span class="keyword">char</span> *propname,  </span></span></span><br><span class="line"><span class="function"><span class="params">                                       u8 *out_value)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> of_property_read_u8_array(np, propname, out_value, <span class="number">1</span>);  </span><br><span class="line">&#125;  </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">of_property_read_u16</span><span class="params">(<span class="keyword">const</span> struct device_node *np,  </span></span></span><br><span class="line"><span class="function"><span class="params">                                       <span class="keyword">const</span> <span class="keyword">char</span> *propname,  </span></span></span><br><span class="line"><span class="function"><span class="params">                                       u16 *out_value)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> of_property_read_u16_array(np, propname, out_value, <span class="number">1</span>);  </span><br><span class="line">&#125;  </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">of_property_read_u32</span><span class="params">(<span class="keyword">const</span> struct device_node *np,  </span></span></span><br><span class="line"><span class="function"><span class="params">                                       <span class="keyword">const</span> <span class="keyword">char</span> *propname,  </span></span></span><br><span class="line"><span class="function"><span class="params">                                       u32 *out_value)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> of_property_read_u32_array(np, propname, out_value, <span class="number">1</span>);  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p><strong>int of_property_read_string(struct device_node <em>np, const char *propname, const char *</em>out_string);<br>int of_property_read_string_index(struct device_node <em>np, const char    *propname, int index, const char *</em>output);</strong></p><p>前者读取字符串属性，后者读取字符串数组属性中的第index个字符串。如drivers/clk/clk.c中的of_clk_get_parent_name()透过of_property_read_string_index()遍历clkspec结点的所有”clock-output-names”字符串数组属性。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">char</span> *<span class="title">of_clk_get_parent_name</span><span class="params">(struct device_node *np, <span class="keyword">int</span> index)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">of_phandle_args</span> <span class="title">clkspec</span>;</span>  </span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *clk_name;  </span><br><span class="line">        <span class="keyword">int</span> rc;  </span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span>)  </span><br><span class="line">                <span class="keyword">return</span> <span class="literal">NULL</span>;  </span><br><span class="line"> </span><br><span class="line">        rc = of_parse_phandle_with_args(np, <span class="string">&quot;clocks&quot;</span>, <span class="string">&quot;#clock-cells&quot;</span>, index,  </span><br><span class="line">                                        &amp;clkspec);  </span><br><span class="line">        <span class="keyword">if</span> (rc)  </span><br><span class="line">                <span class="keyword">return</span> <span class="literal">NULL</span>;  </span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (of_property_read_string_index(clkspec.np, <span class="string">&quot;clock-output-names&quot;</span>,  </span><br><span class="line">                                  clkspec.args_count ? clkspec.args[<span class="number">0</span>] : <span class="number">0</span>,  </span><br><span class="line">                                          &amp;clk_name) &lt; <span class="number">0</span>)  </span><br><span class="line">                clk_name = clkspec.np-&gt;name;  </span><br><span class="line"> </span><br><span class="line">        of_node_put(clkspec.np);  </span><br><span class="line">        <span class="keyword">return</span> clk_name;  </span><br><span class="line">&#125;  </span><br><span class="line">EXPORT_SYMBOL_GPL(of_clk_get_parent_name);  </span><br></pre></td></tr></table></figure><p><strong>static inline bool of_property_read_bool(const struct device_node *np, const char *propname);</strong></p><p>如果设备结点np含有propname属性，则返回true，否则返回false。一般用于检查空属性是否存在。</p><p><strong>void __iomem *of_iomap(struct device_node *node, int index);</strong><br>通过设备结点直接进行设备内存区间的 ioremap()，index是内存段的索引。若设备结点的reg属性有多段，可通过index标示要ioremap的是哪一段，只有1段的情况，index为0。采用Device Tree后，大量的设备驱动通过of_iomap()进行映射，而不再通过传统的ioremap。</p><p>*<em>unsigned int irq_of_parse_and_map(struct device_node <em>dev, int index);</em></em><br>透过Device Tree或者设备的中断号，实际上是从.dts中的interrupts属性解析出中断号。若设备使用了多个中断，index指定中断的索引号。<br>还有一些OF API，这里不一一列举，具体可参考include/linux/of.h头文件。</p><h2 id="高通Android源码中dts文件"><a href="#高通Android源码中dts文件" class="headerlink" title="高通Android源码中dts文件"></a>高通Android源码中dts文件</h2><h3 id="AndroidBoard-mk"><a href="#AndroidBoard-mk" class="headerlink" title="AndroidBoard.mk"></a>AndroidBoard.mk</h3><p>Android编译过程（如想了解更多可参考：<a href="http://huaqianlee.github.io/2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/">Android编译过程详解</a>）中会解析到device\qcom\msm8916_32\AndroidBoard.mk，此文件中选择了kernel的默认配置文件，如下：</p><figure class="highlight mk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># device\qcom\msm8916_32\AndroidBoard.mk</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Compile (L)ittle (K)ernel bootloader and the nandwrite utility</span></span><br><span class="line"><span class="comment">#----------------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">ifneq</span> (<span class="variable">$(<span class="built_in">strip</span> <span class="variable">$(TARGET_NO_BOOTLOADER)</span>)</span>,true)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compile</span></span><br><span class="line"><span class="keyword">include</span> bootable/bootloader/lk/AndroidBoot.mk</span><br><span class="line"></span><br><span class="line"><span class="variable">$(INSTALLED_BOOTLOADER_MODULE)</span>: <span class="variable">$(TARGET_EMMC_BOOTLOADER)</span> | <span class="variable">$(ACP)</span></span><br><span class="line">    $(transform-prebuilt-to-target)</span><br><span class="line"><span class="variable">$(BUILT_TARGET_FILES_PACKAGE)</span>: <span class="variable">$(INSTALLED_BOOTLOADER_MODULE)</span></span><br><span class="line"></span><br><span class="line"><span class="section">droidcore: <span class="variable">$(INSTALLED_BOOTLOADER_MODULE)</span></span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Compile Linux Kernel</span></span><br><span class="line"><span class="comment">#----------------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(KERNEL_DEFCONFIG)</span>,)</span><br><span class="line">    KERNEL_DEFCONFIG := msm8916_defconfig  //选择msm8916_defconfig文件为默认配置文件</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> kernel/AndroidKernel.mk</span><br><span class="line"></span><br><span class="line"><span class="variable">$(INSTALLED_KERNEL_TARGET)</span>: <span class="variable">$(TARGET_PREBUILT_KERNEL)</span> | <span class="variable">$(ACP)</span></span><br><span class="line">    $(transform-prebuilt-to-target)</span><br></pre></td></tr></table></figure><h3 id="msm8916-defconfig"><a href="#msm8916-defconfig" class="headerlink" title="msm8916_defconfig"></a>msm8916_defconfig</h3><p>此文件中主要是一些编译开关，包括dts文件的编译开关，如下：</p><figure class="highlight mk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kernel\arch\arm\configs\msm8916_defconfig</span></span><br><span class="line">...</span><br><span class="line">CONFIG_ARCH_MSM=y</span><br><span class="line">CONFIG_ARCH_MSM8916=y  // dts文件的编译开关，当然也在其他地方用到，如加载板级文件：obj-<span class="variable">$(CONFIG_ARCH_MSM8916)</span> += board-8916.o</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h3><p>dts文件目录的mk文件决定需要加载哪些dts文件，这些文件最终打包到dt.img，再经由mkbootimg工具和其他镜像一起打包到boot.img。关键源码如下：</p><figure class="highlight mk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kernel\arch\arm\boot\dts\qcom\Makefile</span></span><br><span class="line">...</span><br><span class="line">// 我们的代码针对每一个项目新建了一个dts文件，然后通过此文件去<span class="keyword">include</span>了相关dts文件，所以下面都被屏蔽掉了</span><br><span class="line">dtb-<span class="variable">$(CONFIG_ARCH_MSM8916)</span> += msm8916-qrd-skuh-<span class="variable">$(OEM_PROJECT_NAME)</span>.dtb  </span><br><span class="line"><span class="comment">#msm8916-sim.dtb</span></span><br><span class="line"><span class="comment">#msm8916-rumi.dtb</span></span><br><span class="line"><span class="comment">#msm8916-cdp.dtb</span></span><br><span class="line"><span class="comment">#msm8916-cdp-smb1360.dtb</span></span><br><span class="line"><span class="comment">#msm8916-mtp.dtb</span></span><br><span class="line"><span class="comment">#msm8916-512mb-mtp.dtb</span></span><br><span class="line"><span class="comment">#msm8916-mtp-smb1360.dtb</span></span><br><span class="line"><span class="comment">#msm8916-512mb-mtp-smb1360.dtb</span></span><br><span class="line"><span class="comment">#msm8916-512mb-qrd-skui.dtb</span></span><br><span class="line"><span class="comment">#msm8916-qrd-skuh.dtb</span></span><br><span class="line"><span class="comment">#msm8916-qrd-skuhf.dtb</span></span><br><span class="line"><span class="comment">#msm8916-qrd-skui.dtb</span></span><br><span class="line"><span class="comment">#msm8916-512mb-qrd-skuh.dtb</span></span><br><span class="line"><span class="comment">#msm8939-sim.dtb</span></span><br><span class="line"><span class="comment">#msm8939-rumi.dtb</span></span><br><span class="line"><span class="comment">#msm8939-qrd-skuk.dtb</span></span><br><span class="line"><span class="comment">#msm8939-cdp.dtb</span></span><br><span class="line"><span class="comment">#msm8939-cdp-smb1360.dtb</span></span><br><span class="line"><span class="comment">#msm8939-mtp.dtb</span></span><br><span class="line"><span class="comment">#msm8939-mtp-smb1360.dtb</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="dts中的-platform-info"><a href="#dts中的-platform-info" class="headerlink" title="dts中的 platform info"></a>dts中的 platform info</h3><p>msm8916-cdp.dts文件中定义平台信息，如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># kernel\arch\arm\boot\dts\qcom\msm8916-cdp.dts</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;msm8916-cdp.dtsi&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;msm8916-memory.dtsi&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">    model = <span class="string">&quot;Qualcomm Technologies, Inc. MSM 8916 CDP&quot;</span>;</span></span><br><span class="line"><span class="class">    compatible = <span class="string">&quot;qcom,msm8916-cdp&quot;</span>, <span class="string">&quot;qcom,msm8916&quot;</span>, <span class="string">&quot;qcom,cdp&quot;</span>;</span></span><br><span class="line"><span class="class">    qcom,board-id = <span class="params">&lt;<span class="number">1</span> <span class="number">0</span>&gt;</span>;</span></span><br><span class="line"><span class="class">&#125;;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>不过我们在每个项目的dts文件中重新定义了平台信息，如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># kernel\arch\arm\boot\dts\qcom\msm8916-qrd-skuh-$(OEM_PROJECT_NAME).dts </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;msm8916-qrd-skuh.dtsi&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;msm8916-memory.dtsi&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">    model = <span class="string">&quot;Qualcomm Technologies, Inc. MSM 8916 QRD SKUH changcheng l783&quot;</span>;</span></span><br><span class="line"><span class="class">    compatible = <span class="string">&quot;qcom,msm8916-qrd-skuh&quot;</span>, <span class="string">&quot;qcom,msm8916-qrd&quot;</span>, <span class="string">&quot;qcom,msm8916&quot;</span>, <span class="string">&quot;qcom,qrd&quot;</span>;</span></span><br><span class="line"><span class="class">    qcom,board-id = <span class="params">&lt;<span class="number">0x1000b</span> <span class="number">0</span>&gt;</span> , <span class="params">&lt;<span class="number">0x1000b</span> <span class="number">4</span>&gt;</span>;</span></span><br><span class="line"><span class="class">&#125;;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>我的这篇博文只是写了一些基本的东西，主要参考下面这些文档，并且很多内容直接翻译自下面的文档，如果想了解更多请查阅如下引用文档：<br><a href="http://pan.baidu.com/s/1c0mBcek">kernel\Documentation\devicetree</a>：<em>源码中的文档，很有参考价值，其实需要的基本能在里面找到，我已上传至百度云，可以click下载查看</em><br><a href="http://devicetree.org/Device_Tree_Usage">http://devicetree.org/Device_Tree_Usage</a> ：<em>很多内容译自此处</em><br><a href="http://pan.baidu.com/s/1c0c195I">Power_ePAPR_APPROVED_v1.0.pdf</a>：<em>进阶文档，因为官网总是不能成功访问，所以在我百度网盘存了一份，分享给大家</em><br><a href="http://blog.csdn.net/21cnbao/article/details/8457546">http://blog.csdn.net/21cnbao/article/details/8457546</a> </p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> 译文 </tag>
            
            <tag> kernel </tag>
            
            <tag> dts文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通平台Android源码bootloader分析之sbl1(三)</title>
      <link href="2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/"/>
      <url>2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/">高通平台Android源码bootloader分析之sbl1(一)</a><br><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/">高通平台Android源码bootloader分析之sbl1(二)</a><br><a href="http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/">高通平台Android源码bootloader分析之sbl1(三)</a></p><p>前两篇博文分析了启动流程、代码流程、cdt，接下来就分析另外几个需要格外关注的部分。</p><h2 id="log系统"><a href="#log系统" class="headerlink" title="log系统"></a>log系统</h2><p>sbl1中的log系统也是sbl1部分调试会经常接触得部分高通平台在sbl中做的log系统并不是很强大， 但是对于我们调试已经远远足够了。<br>###sbl1_boot_logger_init<br>sbl1_boot_logger_init是log系统的初始化函数，被sbl1_main_ctl函数调用（详细参考：高通平台Android源码bootloader分析之sbl1(一)），其源码如下：</p><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># boot_images\core\boot\secboot3\hw\msm8916\sbl1\sbl1_mc.c</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sbl1_boot_logger_init</span><span class="params">(  boot_log_init_data *boot_log_data,  boot_pbl_shared_data_type *pbl_shared)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/*initialize boot logger*/</span></span><br><span class="line">  boot_log_init(boot_log_data); </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Write PBL timestamp milestones into beginning of log */</span></span><br><span class="line">  boot_pbl_log_milestones(pbl_shared);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Set the reference time to 0 as the start of boot*/</span></span><br><span class="line">  boot_log_set_ref_time(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Add SBL start entry using stored time from beginning of sbl1_main_ctl */</span></span><br><span class="line">  boot_log_message_raw(<span class="string">&quot;SBL1, Start&quot;</span>,</span><br><span class="line">                       sbl_start_time,</span><br><span class="line">                       LOG_MSG_TYPE_BOOT,</span><br><span class="line">                       <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">/* sbl1_boot_logger_init */</span></span><br></pre></td></tr></table></figure><h3 id="boot-log-init"><a href="#boot-log-init" class="headerlink" title="boot_log_init"></a>boot_log_init</h3><p>boot_log_init被上面函数调用，位于boot_logger.c中，log的打印函数也全在此文件，其源码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#boot_images\core\boot\secboot3\src\boot_logger.c</span><br><span class="line">另几个<span class="built_in">log</span>相关的文件，与boot_logger.c同一路径：</span><br><span class="line"> boot_logger_uart.c</span><br><span class="line"> boot_logger_ram.c</span><br><span class="line"> boot_logger_timer.c</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">boot_log_init</span><span class="params">(boot_log_init_data *init_data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/*we must first set meta info becasue boot_log_init_ram and</span></span><br><span class="line"><span class="comment">   * boot_log_init_timer will use the meta info structure*/</span></span><br><span class="line">  boot_log_set_meta_info(init_data-&gt;meta_info_start);</span><br><span class="line">  boot_log_init_ram(init_data); <span class="comment">// 初始化ram log</span></span><br><span class="line">  boot_init_timer(init_data); <span class="comment">// 初始化时钟</span></span><br><span class="line">  boot_log_init_uart();<span class="comment">// 初始化串口</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Write image version values out to the log. */</span></span><br><span class="line">  boot_log_image_version();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Write the Boot Config register out to the log. */</span></span><br><span class="line">  boot_log_boot_config_register();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Write the Core 0 Apps frequency out to the log. */</span></span><br><span class="line">  boot_log_apps_frequency(<span class="number">0</span>);</span><br><span class="line">&#125;<span class="comment">/* boot_log_init */</span></span><br><span class="line"></span><br><span class="line">#常用的两个打印函数</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">boot_log_message</span><span class="params">(<span class="keyword">char</span> * message)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">boot_log_message_optional_data</span><span class="params">(<span class="keyword">char</span> * message,<span class="keyword">char</span> * optional_data)</span></span></span><br></pre></td></tr></table></figure><h3 id="log用法"><a href="#log用法" class="headerlink" title="log用法"></a>log用法</h3><p>打印log时可以打印到串口和ram，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接使用如下两个函数即可</span></span><br><span class="line">void boot_log_message(char * message)</span><br><span class="line">void boot_log_message_optional_data(char * message,char * optional_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印变量小技巧</span></span><br><span class="line">static char error_message[BOOT_ERROR_MSG_LEN];</span><br><span class="line"></span><br><span class="line">snprintf(error_message, BOOT_ERROR_MSG_LEN, <span class="string">&quot;Error code %lx at %s Line %lu var = %d&quot;</span>, err_code, filename_ptr, line，var);   </span><br><span class="line">boot_log_message(error_message);</span><br></pre></td></tr></table></figure><h2 id="下载模式"><a href="#下载模式" class="headerlink" title="下载模式"></a>下载模式</h2><p>高通目前主要支持两种下载模式：紧急下载模式和普通下载模式。</p><p>其代码我就不去详细分析了，只来看一下几个关键函数，主要源码路径：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">boot_images\core\boot\secboot3\src\boot_dload.c</span><br><span class="line">boot_images\core\boot\secboot3\hw\msm8916\sbl1\sbl1_target.c</span><br><span class="line">boot_images\core\boot\secboot3\hw\msm8916\sbl1\sbl1_mc.c</span><br></pre></td></tr></table></figure><h3 id="boot-dload-check"><a href="#boot-dload-check" class="headerlink" title="boot_dload_check"></a>boot_dload_check</h3><p>boot_dload_check函数检测是否需要进入QPST下载，然后进入下载模式。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"># boot_images\core\boot\secboot3\src\boot_dload.c</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">boot_dload_check</span><span class="params">(   bl_shared_data_type *bl_shared_data )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  boolean status = FALSE;</span><br><span class="line">  <span class="comment">/* Check whether USB D+ line is grounded. If it is, then enter</span></span><br><span class="line"><span class="comment">     PBL Download mode */</span></span><br><span class="line">  <span class="keyword">if</span>(boot_usb_al_check_for_pbl_dload(<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    boot_dload_transition_pbl_forced_dload(); <span class="comment">//进入PBL下载模式</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Determine if the downloader should be entered at this time,</span></span><br><span class="line"><span class="comment">     instead of continuing with the normal boot process. */</span></span><br><span class="line">  <span class="keyword">if</span> ( boot_dload_entry( ) == TRUE )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* Check the UEFI ram dump cookie, we enter download mode</span></span><br><span class="line"><span class="comment">       only if UEFI ram dump cookie is NOT set*/</span></span><br><span class="line">    <span class="keyword">if</span> ( !( boot_shared_imem_cookie_ptr != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">            boot_shared_imem_cookie_ptr-&gt;uefi_ram_dump_magic == </span><br><span class="line">            UEFI_CRASH_DUMP_MAGIC_NUM ) )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/* Enter downloader for QPST */</span>  </span><br><span class="line">      sbl_dload_entry();  <span class="comment">// 进入QPST下载模式，即普通下载模式</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* Check if PMIC warm reset occured */</span></span><br><span class="line">  BL_VERIFY((boot_pm_pon_warm_reset_status(<span class="number">0</span>, &amp;status) == PM_ERR_FLAG__SUCCESS), BL_ERR_SBL);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* If status is true, set abonormal reset cookie and </span></span><br><span class="line"><span class="comment">     clear the warm reset status in PMIC */</span></span><br><span class="line">  <span class="keyword">if</span>(status)</span><br><span class="line">  &#123; </span><br><span class="line">    <span class="keyword">if</span> ( boot_shared_imem_cookie_ptr != <span class="literal">NULL</span> )</span><br><span class="line">       boot_shared_imem_cookie_ptr-&gt;abnormal_reset_occurred = ABNORMAL_RESET_ENABLED;</span><br><span class="line"></span><br><span class="line">    BL_VERIFY((boot_pm_pon_warm_reset_status_clear(<span class="number">0</span>) == PM_ERR_FLAG__SUCCESS), BL_ERR_SBL);</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="comment">/* boot_dload_check() */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="紧急下载模式"><a href="#紧急下载模式" class="headerlink" title="紧急下载模式"></a>紧急下载模式</h3><p>紧急下载模式进入又分为两种情况：</p><ul><li>自动进入：裸片或者sbl1异常，系统自动进入紧急下载模式；</li><li>手动进入：<ul><li>硬件下拉某一GPIO，PBL阶段检测到此GPIO则进入紧急下载模式。</li><li>软件设置magic numbers，热重启，PBL检测到magic numbers后进入紧急下载模式。</li></ul></li></ul><h4 id="boot-dload-transition-pbl-forced-dload"><a href="#boot-dload-transition-pbl-forced-dload" class="headerlink" title="boot_dload_transition_pbl_forced_dload"></a>boot_dload_transition_pbl_forced_dload</h4><p>boot_dload_transition_pbl_forced_dload函数由上boot_dload_check函数调用，其设置magic numbers，然后重启，当PBL检测到设置的magic numbers则会强制进入下载模式。源码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># boot_images\core\boot\secboot3\src\boot_dload.c</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">boot_dload_transition_pbl_forced_dload</span><span class="params">( <span class="keyword">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* PBL uses the last four bits of BOOT_MISC_DETECT to trigger forced download.</span></span><br><span class="line"><span class="comment">     Preserve the other bits of the register. */</span></span><br><span class="line"></span><br><span class="line">  uint32 register_value = </span><br><span class="line">    HWIO_TCSR_BOOT_MISC_DETECT_INM(HWIO_TCSR_BOOT_MISC_DETECT_RMSK);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Clear the PBL masked area and then apply HS_USB value */</span></span><br><span class="line">  register_value &amp;= ~(FORCE_DLOAD_MASK);</span><br><span class="line">  register_value |= FORCE_DLOAD_HS_USB_MAGIC_NUM;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Write the new value back out to the register */</span></span><br><span class="line">  HWIO_TCSR_BOOT_MISC_DETECT_OUTM(FORCE_DLOAD_MASK,</span><br><span class="line">                                  register_value);</span><br><span class="line"></span><br><span class="line">  boot_hw_reset(BOOT_WARM_RESET_TYPE);</span><br><span class="line">&#125; <span class="comment">/* boot_dload_transition_pbl_forced_dload() */</span></span><br></pre></td></tr></table></figure><h3 id="普通下载模式"><a href="#普通下载模式" class="headerlink" title="普通下载模式"></a>普通下载模式</h3><p>一般情况下，在通过PBL下载了软件后 ，除非device挂掉，不会再通过PBL进入紧急下载，这时会通过sbl对软件更新。在上boot_dload_check函数中会检查USB D+是否接地，是否了设置下载模式cookie（通过boot_dload_set_cookie()设置），如果皆为否，则进入普通下载模式。</p><h4 id="boot-dload-set-cookie"><a href="#boot-dload-set-cookie" class="headerlink" title="boot_dload_set_cookie"></a>boot_dload_set_cookie</h4><p>当sbl1发生异常时，sbl_error_handler函数（位于sbl1_mc.c）会调用此函数设置cookie，此函数比较简单，源码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># boot_images\core\boot\secboot3\src\boot_dload.c</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">boot_dload_set_cookie</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  HWIO_TCSR_BOOT_MISC_DETECT_OUTM(SBL_DLOAD_MODE_BIT_MASK,</span><br><span class="line">                                  SBL_DLOAD_MODE_BIT_MASK);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="sbl-dload-entry"><a href="#sbl-dload-entry" class="headerlink" title="sbl_dload_entry"></a>sbl_dload_entry</h4><p>sbl_dload_entry函数指针默认指向紧急下载入口boot_dload_transition_pbl_forced_dload函数，由PBL通过firehose协议实现下载。如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># boot_images\core\boot\secboot3\hw\msm8916\sbl1\sbl1_target.c</span><br><span class="line"><span class="keyword">void</span> (*sbl_dload_entry)(<span class="keyword">void</span>) = boot_dload_transition_pbl_forced_dload; </span><br></pre></td></tr></table></figure><h4 id="sbl1-dload-entry"><a href="#sbl1-dload-entry" class="headerlink" title="sbl1_dload_entry"></a>sbl1_dload_entry</h4><p>不过如果没有定义sbl错误时进入PBL错误处理的宏，sbl_dload_entry函数指针将被重定向到sbl1_dload_entry函数，其在sbl1中直接通过sahara协议下载。如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># boot_images\core\boot\secboot3\hw\msm8916\sbl1\sbl1_mc.c</span><br><span class="line"><span class="comment">/*DLOAD flag for SBL1 to enter PBL error handler*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> BOOT_ENTER_PBL_DLOAD_ON_SBL_ERROR</span></span><br><span class="line">  <span class="keyword">static</span> boot_boolean edload_flag = TRUE;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">  <span class="keyword">static</span> boot_boolean edload_flag = FALSE;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sbl1_post_ddr_init</span><span class="params">(bl_shared_data_type *bl_shared_data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...  </span><br><span class="line">  <span class="keyword">if</span> (edload_flag != TRUE)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* Update the dload entry to sbl1 sahara dload entry function */</span></span><br><span class="line">    sbl_dload_entry = sbl1_dload_entry;</span><br><span class="line">  &#125; </span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># boot_images\core\boot\secboot3\hw\msm8916\sbl1\sbl1_target.c</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sbl1_dload_entry</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">static</span> uint32 dload_entry_count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  dload_entry_count++; </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Only execute the pre-dload procedures the first time we try to enter</span></span><br><span class="line"><span class="comment">   * dload in case there is an error within these procedures. */</span></span><br><span class="line">  <span class="keyword">if</span>( dload_entry_count == <span class="number">1</span> &amp;&amp; &amp;bl_shared_data != <span class="literal">NULL</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* Entering dload routine for the first time */</span></span><br><span class="line">    boot_do_procedures( &amp;bl_shared_data, sbl1_pre_dload_procs );</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Enter boot Sahara */</span></span><br><span class="line">  boot_dload_transition_enter_sahara();</span><br><span class="line">  </span><br><span class="line">&#125;<span class="comment">/* sbl_dload_entry() */</span></span><br></pre></td></tr></table></figure><h2 id="升级模式"><a href="#升级模式" class="headerlink" title="升级模式"></a>升级模式</h2><p>上面的下载模式对于开发来说不是很方便，接下来分析一下更适合开发、生产的下载模式，也分为两种，如下：</p><ol><li>通过组合按键进入：比如power键+音量下键进入PBL紧急下载。</li><li>通过命令进入：开机后连接USB， 通过adb reboot edl/dload 进入PBL紧急下载或sbl普通下载。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通平台Android源码bootloader分析之sbl1(二)</title>
      <link href="2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/"/>
      <url>2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/">高通平台Android源码bootloader分析之sbl1(一)</a><br><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/">高通平台Android源码bootloader分析之sbl1(二)</a><br><a href="http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/">高通平台Android源码bootloader分析之sbl1(三)</a></p><p>在上一篇博文中主要描述了启动流程，及代码执行流程，并重点介绍了一下我重点关注的部分。这个sbl部分也算有点庞大，我们没有精力也没有必要去分析全部，所以接下来就来分析一下sbl1中另外几个需要格外关注的部分：</p><ul><li>CDT ：主要提供平台设备数据</li><li>log system：log日志系统，当然没有kernel里面那么强大了</li><li>download：代码下载烧写实现</li><li>ramdump：异常信息dump<br>　<br>本篇博文就先来分析一下CDT， 其他部分后面再分析。<a id="more"></a><h2 id="CDT"><a href="#CDT" class="headerlink" title="CDT"></a>CDT</h2>CDT主要提供Platform ID、ddr硬件配置等平台设备数据。很多module利用这些信息去减少依赖及执行动态初始化。CDT通常被厂家写入EEPROM中，如没有eeprom则会在编译bootloader时链入。<br>　<br>sbl中主要涉及到如下关键文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">boot_images\core\boot\secboot3\hw\msm8916\boot_cdt_array.c // config_data_table配置表定义</span><br><span class="line">boot_images\core\systemdrivers\platforminfo\src\PlatformInfo.c</span><br><span class="line">boot_images\core\boot\secboot3\scripts\cdt_generator.py</span><br><span class="line">boot_images\core\boot\secboot3\scripts\jedec_lpddr3_single_channel.xml</span><br></pre></td></tr></table></figure><h3 id="boot程序加载CDT"><a href="#boot程序加载CDT" class="headerlink" title="boot程序加载CDT"></a>boot程序加载CDT</h3>对于CDT，boot程序主要有如下动作：</li></ul><ol><li>sbl1校验eMMC的boot分区中的CDT分区，如果ok，则加载CDT镜像，如果不ok，则执行第2步；</li><li>sbl1从sbl1.mbn中加载默认cdt分区表（config_data_table[]）；</li><li>sbl1通过SMEM将平台信息传递到lk；sbl1 - SMEM_HW_SW_BUILD_ID，lk - SMEM_BOARD_INFO_LOCATION.</li><li>lk获取平台信息，加载dt头，然后搜寻相应的dt入口；</li><li>lk通过正确的dt入口地址跳转到kernel。</li></ol><h4 id="关键函数："><a href="#关键函数：" class="headerlink" title="关键函数："></a>关键函数：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sbl1</span></span><br><span class="line">boot_updat_config_data_table（boot_images\core\boot\secboot3\src\boot_config_emmc.c）</span><br><span class="line"><span class="comment">#lk</span></span><br><span class="line">dev_tree_get_entry_info(bootable\bootloader\lk\platform\msm_shared\dev_tree.c)</span><br></pre></td></tr></table></figure><h4 id="关键枚举："><a href="#关键枚举：" class="headerlink" title="关键枚举："></a>关键枚举：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#boot_images\core\api\systemdrivers\DDIChipInfo.h</span></span><br><span class="line">DALCHIPINFO_ID_APQ8026     = 199,</span><br><span class="line">DALCHIPINFO_ID_MSM8926     = 200,</span><br><span class="line">DALCHIPINFO_ID_MSM8326     = 205,</span><br><span class="line">DALCHIPINFO_ID_MSM8916     = 206,</span><br><span class="line">DALCHIPINFO_ID_MSM8994     = 207,</span><br><span class="line"><span class="comment">#boot_images\core\api\systemdrivers\PlatformInfoDefs.h</span></span><br><span class="line">DALPLATFORMINFO_TYPE_SURF         = 0x01,  /**&lt; Target is a SURF device. */</span><br><span class="line">DALPLATFORMINFO_TYPE_CDP          = DALPLATFORMINFO_TYPE_SURF,  /**&lt; Target is a CDP (aka SURF) device. */</span><br><span class="line">DALPLATFORMINFO_TYPE_MTP_MSM      = 0x08,  /**&lt; Target is a MSM MTP device. */</span><br><span class="line">DALPLATFORMINFO_TYPE_QRD          = 0x0B,  /**&lt; Target is a QRD device. */</span><br></pre></td></tr></table></figure><h4 id="DT头"><a href="#DT头" class="headerlink" title="DT头"></a>DT头</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#kernel\arch\arm\boot\dts\qcom\msm8916-cdp.dts</span></span><br><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">  model = <span class="string">&quot;Qualcomm Technologies, Inc. MSM 8916 CDP&quot;</span>;</span></span><br><span class="line"><span class="class">  compatible = <span class="string">&quot;qcom,msm8916-cdp&quot;</span>, <span class="string">&quot;qcom,msm8916&quot;</span>, <span class="string">&quot;qcom,cdp&quot;</span>;</span></span><br><span class="line"><span class="class">  qcom,board-id = <span class="params">&lt;<span class="number">1</span> <span class="number">0</span>&gt;</span>;<span class="comment">// id为0x01则为cdp设备，与下cdt描述xml中对应</span></span></span><br><span class="line"><span class="class">&#125;;</span></span><br><span class="line"><span class="meta">#kernel\arch\arm\boot\dts\qcom\msm8916-mtp.dts</span></span><br><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">  model = <span class="string">&quot;Qualcomm Technologies, Inc. MSM 8916 MTP&quot;</span>;</span></span><br><span class="line"><span class="class">  compatible = <span class="string">&quot;qcom,msm8916-mtp&quot;</span>, <span class="string">&quot;qcom,msm8916&quot;</span>, <span class="string">&quot;qcom, mtp&quot;</span>;</span></span><br><span class="line"><span class="class">  qcom,board-id = <span class="params">&lt;<span class="number">8</span> <span class="number">0</span>&gt;</span>; <span class="comment">// id为0x08则为mtp设备</span></span></span><br><span class="line"><span class="class">&#125;;</span></span><br><span class="line"><span class="meta">#kernel\arch\arm\boot\dts\qcom\msm8916-qrd.dts</span></span><br><span class="line"><span class="class">/ &#123;</span></span><br><span class="line"><span class="class">  model = <span class="string">&quot;Qualcomm Technologies, Inc. MSM 8916 QRD&quot;</span>;</span></span><br><span class="line"><span class="class">  compatible = <span class="string">&quot;qcom,msm8916-qrd&quot;</span>, <span class="string">&quot;qcom,msm8916&quot;</span>, <span class="string">&quot;qcom, qrd&quot;</span>;</span></span><br><span class="line"><span class="class">  qcom,board-id = <span class="params">&lt;<span class="number">11</span> <span class="number">0</span>&gt;</span>; <span class="comment">// id为0x0b则为qrd设备</span></span></span><br><span class="line"><span class="class">&#125;;</span></span><br></pre></td></tr></table></figure><blockquote><p>dt.img的格式，参考dtbtool.txt和bootable\bootloader\lk\platform\msm_shared\smem.h</p></blockquote><h4 id="CDT描述的xml文件"><a href="#CDT描述的xml文件" class="headerlink" title="CDT描述的xml文件"></a>CDT描述的xml文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#boot_images\core\boot\secboot3\scripts\jedec_lpddr3_single_channel.xml</span><br><span class="line">      <span class="tag">&lt;<span class="name">device</span> <span class="attr">id</span>=<span class="string">&quot;cdb0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span> <span class="attr">name</span>=<span class="string">&quot;platform_id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;DALPROP_ATTR_TYPE_BYTE_SEQ&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">          /*byte0 - platform id版本</span><br><span class="line">             byte1 - platform id，因此此为mtp设备</span><br><span class="line">             byte2 - platform id硬件版本*/         </span><br><span class="line">          0x03, 0x08, 0x01, 0x00, 0x00, 0x00, end </span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">device</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>上述xml中设备对应的结构体包如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> PACKED <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  uint8                 nVersion;</span><br><span class="line">  uint8                 nPlatform;　　　　　 <span class="comment">//平台id，用于高通不同平台，不能修改。</span></span><br><span class="line">  uint8                 nHWVersionMajor;     <span class="comment">//硬件版本号</span></span><br><span class="line">  uint8                 nHWVersionMinor;</span><br><span class="line">  uint8                 nSubtype;　　　　<span class="comment">//　默认为０，可以用来区分项目</span></span><br><span class="line">  uint8                 nNumKVPS;</span><br><span class="line">  PlatformInfoKVPSCDTType  aKVPS[];</span><br><span class="line">&#125; PlatformInfoCDTType;</span><br></pre></td></tr></table></figure><h3 id="platform-info"><a href="#platform-info" class="headerlink" title="platform info"></a>platform info</h3><p>在上一篇博文分析的sbl执行流程中，有两个和platform info有关的两个关键函数，如下：</p><h4 id="boot-config-data-table-init"><a href="#boot-config-data-table-init" class="headerlink" title="boot_config_data_table_init"></a>boot_config_data_table_init</h4><p>此函数主要初始化配置数据表，如果eeprom/emmc中存在cdt，则更新编译时链入的cdt表。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#boot_images\core\boot\secboot3\src\boot_config_data.c</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">boot_config_data_table_init</span><span class="params">(bl_shared_data_type* bl_shared_data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> bootlog_buffer[BOOT_LOG_TEMP_BUFFER_SIZE];</span><br><span class="line">  uint32 bytes_read = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Reset the flash byte counter so the number of bytes read from flash</span></span><br><span class="line"><span class="comment">     can be retreived later. */</span></span><br><span class="line">  boot_statistics_reset_flash_byte_counter();</span><br><span class="line"></span><br><span class="line">  boot_log_message(<span class="string">&quot;boot_config_data_table_init, Start&quot;</span>);</span><br><span class="line">  boot_log_start_timer();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*populate configuration data table&#x27;s info*/</span></span><br><span class="line">  config_data_table_info.size = config_data_table_size;</span><br><span class="line">  config_data_table_info.cdt_ptr = config_data_table; <span class="comment">// 定义在boot_cdt_array.c </span></span><br><span class="line"></span><br><span class="line">  boot_update_config_data_table(&amp;config_data_table_info);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*put a pointer to the table info into sbl shared data so next sbl can access it*/</span></span><br><span class="line">  bl_shared_data-&gt;sbl_shared_data-&gt;config_data_table_info = &amp;config_data_table_info;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Retreive the number of bytes read from flash via boot statistics. */</span></span><br><span class="line">  bytes_read = boot_statistics_get_flash_byte_counter();</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Convert CDT size to string for boot logger. */</span></span><br><span class="line">  <span class="built_in">snprintf</span>(bootlog_buffer,</span><br><span class="line">           BOOT_LOG_TEMP_BUFFER_SIZE,</span><br><span class="line">           <span class="string">&quot;(%d Bytes)&quot;</span>,</span><br><span class="line">           bytes_read);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  boot_log_stop_timer_optional_data(<span class="string">&quot;boot_config_data_table_init, Delta&quot;</span>,</span><br><span class="line">                                    bootlog_buffer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="config-data-table"><a href="#config-data-table" class="headerlink" title="config_data_table"></a>config_data_table</h4><p>config_data_table定义了与上xml文件对应的配置表，存储在memory，用于初始化cdt，如此表存在则此表数据为最终数据。源码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># boot_images\core\boot\secboot3\hw\msm8916\boot_cdt_array.c</span><br><span class="line">uint8 config_data_table[CONFIG_DATA_TABLE_MAX_SIZE] = </span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* Header */</span></span><br><span class="line"></span><br><span class="line">  <span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0x54</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Meta data */</span></span><br><span class="line"></span><br><span class="line">  <span class="number">0x16</span>, <span class="number">0x00</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x1C</span>, <span class="number">0x00</span>, <span class="number">0x88</span>, <span class="number">0x01</span>, </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Block data */</span></span><br><span class="line">#ifdef BOOT_PRE_SILICON</span><br><span class="line">  #ifdef FEATURE_RUMI_BOOT</span><br><span class="line">  <span class="number">0x03</span>, <span class="number">0x0F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  #<span class="keyword">else</span></span><br><span class="line">  <span class="number">0x03</span>, <span class="number">0x10</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,</span><br><span class="line">  #endif</span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">  <span class="number">0x03</span>, <span class="number">0x0B</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>,<span class="comment">// platform id 等信息</span></span><br><span class="line">#endif</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">uint32 config_data_table_size = <span class="number">420</span>; <span class="comment">// cdt表size</span></span><br></pre></td></tr></table></figure><h4 id="sbl1-hw-platform-smem"><a href="#sbl1-hw-platform-smem" class="headerlink" title="sbl1_hw_platform_smem"></a>sbl1_hw_platform_smem</h4><p>此函数主要解析cdt表获得sw-platform id，调用platform id api并传送指针到获得的id，然后调用hw_init_smem存储platform id到SMEM。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#boot_images\core\boot\secboot3\hw\msm8909\sbl1\sbl1_mc.c</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sbl1_hw_platform_smem</span><span class="params">(bl_shared_data_type* bl_shared_data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ....... </span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">cdt_info</span> *<span class="title">cdt_info_ptr</span> = (<span class="title">struct</span> <span class="title">cdt_info</span> *)</span></span><br><span class="line"><span class="class">                          <span class="title">bl_shared_data</span>-&gt;<span class="title">sbl_shared_data</span>-&gt;<span class="title">config_data_table_info</span>;</span></span><br><span class="line">  <span class="comment">/*get a pointer to platform id data from configuration data table*/</span></span><br><span class="line">  platform_id_cdb_ptr = </span><br><span class="line">              boot_get_config_data_block(cdt_info_ptr-&gt;cdt_ptr,</span><br><span class="line">                                         CONFIG_DATA_BLOCK_INDEX_V1_PLATFORM_ID,</span><br><span class="line">                                         &amp;platform_id_len);  </span><br><span class="line">  <span class="keyword">if</span>(platform_id_cdb_ptr != <span class="literal">NULL</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    eResult = boot_DAL_DeviceAttachEx(<span class="literal">NULL</span>,</span><br><span class="line">                                      DALDEVICEID_PLATFORMINFO,</span><br><span class="line">                                      DALPLATFORMINFO_INTERFACE_VERSION,</span><br><span class="line">                                      &amp;phPlatform);</span><br><span class="line">    <span class="keyword">if</span> (eResult == DAL_SUCCESS) </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/*call the following API to store the platform id to DAL and SMEM*/</span></span><br><span class="line">      boot_DalPlatformInfo_CDTConfigPostDDR(phPlatform, platform_id_cdb_ptr);      </span><br><span class="line">      boot_DAL_DeviceDetach(phPlatform);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="platform-info匹配"><a href="#platform-info匹配" class="headerlink" title="platform info匹配"></a>platform info匹配</h3><p>platform info中的platform id十分重要，lk、kernel中dts都是根据platform id及subtype id等platform info来匹配的。lk和kernel中涉及到的主要函数和代码路径如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#lk</span></span><br><span class="line">/*ootable\bootloader\lk\platform\msm_shared\smem.h */</span><br><span class="line">enum platform_subtype </span><br><span class="line"></span><br><span class="line">/*bootable\bootloader\lk\platform\msm_shared\board.c */</span><br><span class="line">static void platform_detect()</span><br><span class="line">uint32_t board_hardware_subtype(void)</span><br><span class="line">uint32_t board_hardware_id()</span><br><span class="line"></span><br><span class="line">/*bootable\bootloader\lk\platform\msm_shared\dev_tree.c*/</span><br><span class="line">int dev_tree_get_entry_info(struct dt_table *table, struct dt_entry *dt_entry_info)</span><br><span class="line"></span><br><span class="line"><span class="comment">#kernel</span></span><br><span class="line">kernel\arch\arm\kernel\setup.c</span><br><span class="line">kernel\arch\arm\boot\dts\qcom</span><br></pre></td></tr></table></figure><p>当我们在项目开发时就可以同cdt这些信息来配置不同项目，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-------------------------------------------------------------</span><br><span class="line">  sbl1        platform subtype_id           boot_cdt_array.c</span><br><span class="line">-------------------------------------------------------------</span><br><span class="line">  lk              匹配dts                    dev_tree.c</span><br><span class="line">-------------------------------------------------------------</span><br><span class="line">  kernel     通过传入dts地址创建设备          setup.c</span><br><span class="line">-------------------------------------------------------------</span><br></pre></td></tr></table></figure><h3 id="DDR配置"><a href="#DDR配置" class="headerlink" title="DDR配置"></a>DDR配置</h3><p>ddr相关的东西我很少动， 也就不深入分析了，列出几个关键函数，如果需要深入了解的话再分析。ddr初始化主要涉及3个函数，见如下load_qsee_pre_procs函数指针数组：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"> boot_procedure_func_type load_qsee_pre_procs[] = </span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* Save reset register logs */</span></span><br><span class="line">  boot_save_reset_register_log,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Initialize the flash device */</span></span><br><span class="line">  boot_flash_init,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Copy the configure data table from eeprom */</span></span><br><span class="line">  boot_config_data_table_init, <span class="comment">// 函数一 ： 加载配置表</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Store platform id */</span></span><br><span class="line">  sbl1_hw_platform_pre_ddr,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Configure ddr parameters based on eeprom CDT table data. */</span></span><br><span class="line">  sbl1_ddr_set_params, <span class="comment">// 函数二：配置ddr</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Initialize DDR */</span></span><br><span class="line">  (boot_procedure_func_type)sbl1_ddr_init, <span class="comment">// 函数三：初始化ddr</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">   Run deviceprogrammer if compiling the deviceprogrammer_ddr image.</span></span><br><span class="line"><span class="comment">  ----------------------------------------------------------------------*/</span></span><br><span class="line">  boot_deviceprogrammer_ddr_main,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Initialize SBL1 DDR ZI region, relocate boot log to DDR */</span>   </span><br><span class="line">  sbl1_post_ddr_init,</span><br><span class="line">  </span><br><span class="line">  sbl1_hw_init_secondary,</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* DDR training */</span></span><br><span class="line">  (boot_procedure_func_type)sbl1_wait_for_ddr_training,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Initialize SBL1 DDR ZI region, relocate page table to DDR */</span></span><br><span class="line">  sbl1_post_ddr_training_init, </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Zero out QSEE and QHEE region if needed.  This MUST be done before</span></span><br><span class="line"><span class="comment">     boot_dload_dump_security_regions executes for security reasons. */</span></span><br><span class="line">  sbl1_cleanse_security_regions,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Backup QSEE and QHEE region for ramdumps taken after SBL has executed */</span></span><br><span class="line">  boot_dload_dump_security_regions,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Check to see if DLOAD mode needs to be entered */</span></span><br><span class="line">  boot_dload_check,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Last entry in the table. */</span></span><br><span class="line">  <span class="literal">NULL</span> </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通平台Android源码bootloader分析之sbl1(一)</title>
      <link href="2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/"/>
      <url>2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/">高通平台Android源码bootloader分析之sbl1(一)</a><br><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/">高通平台Android源码bootloader分析之sbl1(二)</a><br><a href="http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/">高通平台Android源码bootloader分析之sbl1(三)</a></p><p>高通8k平台的boot过程搞得比较复杂， 我也是前段时间遇到一些问题深入研究了一下才搞明白。不过虽然弄得很复杂，我们需要动的东西其实很少，modem侧基本就sbl1（全称：Secondary boot loader）的代码需要动一下，ap侧就APPSBL代码需要动（对此部分不了解，可参照：<a href="http://huaqianlee.github.io/2015/07/25/Android/Android%E6%BA%90%E7%A0%81bootable%E8%A7%A3%E6%9E%90%E4%B9%8BLK-bootloader-little-kernel/">bootable 源码解析</a>），其他的都是高通搞好了的，甚至有些我们看不到代码。今天就要分析一下开机前几秒钟起着关键作用的sbl1， 这套代码在modem侧的boot_images\中。</p><h2 id="启动流程"><a href="#启动流程" class="headerlink" title="启动流程"></a>启动流程</h2><p>首先来看一下高通的bootloader流程框图，主要由ap、RPM及modem三部分构成，由于我工作主要涉及到ap侧，所以对RPM和modem侧代码不了解，以后有空时间的话到可以研究一下，框图如下：</p><a id="more"></a><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/20155304921b788-8a63-472f-be7c-2220a98cf428.jpg" alt="boot arch"><br>由上图可知，系统启动流程主要由以下几步组成：</p><ol><li><p>系统上电或重启。</p></li><li><p>在Cortex-a53芯片中，ap侧的PBL执行，从boot device中加载sbl1镜像到TCM，并对镜像进行校验，然后跳转到sbl1中继续执行.</p></li><li><p>sbl1初始化ddr，从boot device中加载QSEE镜像和QHEE镜像到DDR，并对镜像进行校验，QSEE执行并设置一个安全的环境，QHEE为VMM设置、SMMU配置及xPU访问控制服务。</p></li><li><p>sbl1从boot device加载RPM固件镜像到code-RAM，并对镜像进行校验。</p></li><li><p>sbl1从启动设备加载HLOS APPSBL镜像到ddr，并对镜像进行校验。</p></li><li><p>sbl1跳转到QSEE-&gt;QHEE。</p></li><li><p>QHEE通知RPM侧跳转到RPM固件中并自己跳转到HLOS APPSBL中执行。RPM侧开始执行RPM固件。</p></li><li><p>QHEE跳转到HLOS APPSBL中初始化系统。</p></li><li><p>HLOS APPSBL加载和校验HLOS内核。</p></li><li><p>由内核来加载文件系统等完成整个Android系统的启动。</p></li></ol><blockquote><p>HLOS APPSBL即为ap侧的bootloader，见：<a href="http://huaqianlee.github.io/2015/07/25/Android/Android%E6%BA%90%E7%A0%81bootable%E8%A7%A3%E6%9E%90%E4%B9%8BLK-bootloader-little-kernel/">bootable源码解析</a></p></blockquote><p>　　<br>modem侧主要是射频网络相关的代码，我没有研究过也不了解，RPM侧的代码也没怎么研究，高通文档对其介绍如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogRPM.png" alt="RPM"></p><h2 id="sbl1流程分析"><a href="#sbl1流程分析" class="headerlink" title="sbl1流程分析"></a>sbl1流程分析</h2><p>接下来我就来跟一下sbl1的代码，总结出关键流程，此部分代码皆在modem侧。我平时主要会涉及的几个重要文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">boot_images\core\boot\secboot3\hw\msm8916\sbl1\sbl1_hw.c</span><br><span class="line">boot_images\core\systemdrivers\pmic\framework\src\pm_init.c</span><br><span class="line">boot_images\core\boot\secboot3\hw\msm8909\sbl1\sbl1_config.c</span><br><span class="line">boot_images\core\systemdrivers\pmic\app\chg\src\pm_app_chg_alg.c</span><br><span class="line">boot_images\core\systemdrivers\pmic\drivers\smb\src\pm_smb.c // 如果带smb135x芯片</span><br></pre></td></tr></table></figure><p>首先从其入口文件sbl1.s开始，如下：</p><h3 id="sbl1入口：-sbl1-s"><a href="#sbl1入口：-sbl1-s" class="headerlink" title="sbl1入口： sbl1.s"></a>sbl1入口： sbl1.s</h3><p>此部分代码路径在：boot_images/core/boot/secboot3/hw/msm8916/sbl1/sbl1.s，此文件引导处理器，主要有实现如下操作：</p><ul><li>设置硬件，继续boot进程。</li><li>初始化ddr。</li><li>加载Trust_Zone操作系统。</li><li>加载RPM固件。</li><li>加载APPSBL然后继续boot进程。</li></ul><p>关键源码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*引入c函数，主要为异常实现函数，及一个关键函数sbl1_main_ctl*&#x2F;</span><br><span class="line">; Import the external symbols that are referenced in this module.</span><br><span class="line">IMPORT |Image$$SBL1_SVC_STACK$$ZI$$Limit|</span><br><span class="line">IMPORT |Image$$SBL1_UND_STACK$$ZI$$Limit|</span><br><span class="line">IMPORT |Image$$SBL1_ABT_STACK$$ZI$$Limit|</span><br><span class="line">IMPORT boot_undefined_instruction_c_handler</span><br><span class="line">IMPORT boot_swi_c_handler</span><br><span class="line">IMPORT boot_prefetch_abort_c_handler</span><br><span class="line">IMPORT boot_data_abort_c_handler</span><br><span class="line">IMPORT boot_reserved_c_handler</span><br><span class="line">IMPORT boot_irq_c_handler</span><br><span class="line">IMPORT boot_fiq_c_handler</span><br><span class="line">IMPORT boot_nested_exception_c_handler</span><br><span class="line">IMPORT sbl1_main_ctl #主要关注此函数</span><br><span class="line">IMPORT boot_crash_dump_regs_ptr</span><br><span class="line">...</span><br><span class="line"># 关于中断向量配置等汇编语句，就没有去详细看了，我们一般也不会涉及到这么底层的东西</span><br></pre></td></tr></table></figure><h3 id="sbl1-main-ctl"><a href="#sbl1-main-ctl" class="headerlink" title="sbl1_main_ctl"></a>sbl1_main_ctl</h3><p>此函数位于boot_images\core\boot\secboot3\hw\mdm9x45\sbl1\sbl1_mc.c，主要完成初始化RAM等工作， 注此函数决不return。部分关键源码如下，我加汉字解释的是我认为我们应该关注的部分：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Calculate the SBL start time for use during boot logger initialization. */</span></span><br><span class="line">sbl_start_time = CALCULATE_TIMESTAMP(HWIO_IN(TIMETICK_CLK));</span><br><span class="line">boot_clock_debug_init();</span><br><span class="line"><span class="comment">/* Enter debug mode if debug cookie is set */</span></span><br><span class="line">sbl1_debug_mode_enter();  </span><br><span class="line"><span class="comment">/* Initialize the stack protection canary */</span></span><br><span class="line">boot_init_stack_chk_canary();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Initialize boot shared imem */</span></span><br><span class="line">boot_shared_imem_init(&amp;bl_shared_data);</span><br><span class="line"><span class="comment">/*初始化RAM*/</span></span><br><span class="line">boot_ram_init(&amp;sbl1_ram_init_data);</span><br><span class="line"><span class="comment">/*初始化log系统，即串口驱动*/</span></span><br><span class="line">sbl1_boot_logger_init(&amp;boot_log_data, pbl_shared);</span><br><span class="line"><span class="comment">/*检索PBL传递过来的数据*/</span> </span><br><span class="line">sbl1_retrieve_shared_info_from_pbl(pbl_shared); </span><br><span class="line"><span class="comment">/* Initialize the QSEE interface */</span></span><br><span class="line">sbl1_init_sbl_qsee_interface(&amp;bl_shared_data,&amp;sbl_verified_info);</span><br><span class="line"><span class="comment">/* Initialize SBL memory map. Initializing early because drivers could be located in RPM Code RAM. */</span></span><br><span class="line">sbl1_populate_initial_mem_map(&amp;bl_shared_data);</span><br><span class="line"><span class="comment">/*初始化DAL*/</span></span><br><span class="line">boot_DALSYS_InitMod(<span class="literal">NULL</span>); </span><br><span class="line"><span class="comment">/*配置PMIC芯片，以便我们能通过PS_HOLD复位*/</span></span><br><span class="line">sbl1_hw_init();</span><br><span class="line"><span class="comment">/*执行sbl1的目标依赖进程*/</span></span><br><span class="line">boot_config_process_bl(&amp;bl_shared_data, SBL1_IMG, sbl1_config_table);</span><br></pre></td></tr></table></figure><h3 id="sbl1-config-table"><a href="#sbl1-config-table" class="headerlink" title="sbl1_config_table"></a>sbl1_config_table</h3><p>sbl1_config_table为一个结构体数组，里面存储了加载QSEE、RPM、APPSBL等镜像所需要的配置参数及执行函数，位于boot_images\core\boot\secboot3\hw\msm8909\sbl1\sbl1_config.c。其关键代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">boot_configuration_table_entry sbl1_config_table[] = </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* SBL1 -&gt; QSEE */</span></span><br><span class="line">  &#123;</span><br><span class="line">    SBL1_IMG,                   <span class="comment">/* host_img_id */</span></span><br><span class="line">    CONFIG_IMG_QC,              <span class="comment">/* host_img_type */</span></span><br><span class="line">    GEN_IMG,                    <span class="comment">/* target_img_id */</span></span><br><span class="line">    CONFIG_IMG_ELF,             <span class="comment">/* target_img_type */</span></span><br><span class="line">    ...</span><br><span class="line">    load_qsee_pre_procs,        <span class="comment">/* pre_procs */</span> </span><br><span class="line">    load_qsee_post_procs,       <span class="comment">/* post_procs */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* SBL1 -&gt; QHEE */</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">/* SBL1 -&gt; RPM */</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">/* SBL1 -&gt; APPSBL （即lk部分） */</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="load-qsee-pre-procs"><a href="#load-qsee-pre-procs" class="headerlink" title="load_qsee_pre_procs"></a>load_qsee_pre_procs</h3><p>load_qsee_pre_procs为一个函数结构体数组，在QSEE加载之前执行。源码注释写得很清楚并且容易理解，我就不多此一举去翻译了，关键源码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Save reset register logs */</span></span><br><span class="line">boot_save_reset_register_log,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Initialize the flash device */</span></span><br><span class="line">boot_flash_init,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Copy the configure data table from eeprom */</span></span><br><span class="line">boot_config_data_table_init,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Store platform id */</span></span><br><span class="line">sbl1_hw_platform_pre_ddr,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Configure ddr parameters based on eeprom CDT table data. */</span></span><br><span class="line">sbl1_ddr_set_params,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Initialize DDR */</span></span><br><span class="line">(boot_procedure_func_type)sbl1_ddr_init,</span><br><span class="line"></span><br><span class="line"><span class="comment">/*----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> Run deviceprogrammer if compiling the deviceprogrammer_ddr image.</span></span><br><span class="line"><span class="comment">----------------------------------------------------------------------*/</span></span><br><span class="line">boot_deviceprogrammer_ddr_main,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Initialize SBL1 DDR ZI region, relocate boot log to DDR */</span>   </span><br><span class="line">sbl1_post_ddr_init,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 此函数挺重要，我能改到的东西基本上都基于它，所有的PMIC API都是在此函数调用boot_pm_dirver_init()之后再被调用*/</span></span><br><span class="line">sbl1_hw_init_secondary, </span><br><span class="line"> </span><br><span class="line"><span class="comment">/* DDR training */</span></span><br><span class="line">(boot_procedure_func_type)sbl1_wait_for_ddr_training,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Initialize SBL1 DDR ZI region, relocate page table to DDR */</span></span><br><span class="line">sbl1_post_ddr_training_init, </span><br><span class="line"></span><br><span class="line"><span class="comment">/* Zero out QSEE and QHEE region if needed.  This MUST be done before</span></span><br><span class="line"><span class="comment">   boot_dload_dump_security_regions executes for security reasons. */</span></span><br><span class="line">sbl1_cleanse_security_regions,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Backup QSEE and QHEE region for ramdumps taken after SBL has executed */</span></span><br><span class="line">boot_dload_dump_security_regions,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Check to see if DLOAD mode needs to be entered */</span></span><br><span class="line">boot_dload_check,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Last entry in the table. */</span></span><br><span class="line"><span class="literal">NULL</span> </span><br></pre></td></tr></table></figure><h3 id="load-qsee-post-procs"><a href="#load-qsee-post-procs" class="headerlink" title="load_qsee_post_procs"></a>load_qsee_post_procs</h3><p>load_qsee_post_procs同样也为一个函数结构体数组，其在加载QSEE之后执行。关键源码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/* Enable the secure watchdog</span></span><br><span class="line"><span class="comment">     This is done after boot_dload_check that way if we are in the final stage</span></span><br><span class="line"><span class="comment">     of an abnormal reset boot_dload_check will finalize the stage. */</span></span><br><span class="line">  boot_secure_watchdog_init,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* Load SEC partition if it exists.  This must be done after QSEE is</span></span><br><span class="line"><span class="comment">     loaded as the partition is loaded into a QSEE buffer. */</span></span><br><span class="line">  sbl1_load_sec_partition,  </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Set the memory barrier pointer to shared memory */</span></span><br><span class="line">  boot_cache_set_memory_barrier,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">   Put SMEM in debug state such that smem_alloc() calls will return NULL. </span></span><br><span class="line"><span class="comment">   The state is changed back to normal once smem_boot_init() is called.</span></span><br><span class="line"><span class="comment">   This call has to be made after setting the memory barrier.</span></span><br><span class="line"><span class="comment">  ----------------------------------------------------------------------*/</span></span><br><span class="line">  boot_smem_debug_init,  </span><br><span class="line">    </span><br><span class="line">  <span class="comment">/* Initialize shared memory after dload to preserve logs */</span></span><br><span class="line">  boot_smem_init,</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(FEATURE_RUMI_BOOT)</span></span><br><span class="line">  <span class="comment">/* Stub out for rumi build. pmic api  pm_get_power_on_status gets </span></span><br><span class="line"><span class="comment">     called from below api to get power on reason */</span> </span><br><span class="line">  <span class="comment">/*----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">   Store Power on Status in SMEM. </span></span><br><span class="line"><span class="comment">   Needs to be done after PMIC and SMEM initialization</span></span><br><span class="line"><span class="comment">  ----------------------------------------------------------------------*/</span></span><br><span class="line">  boot_smem_store_pon_status,</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>  </span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">   Store the platform id to smem</span></span><br><span class="line"><span class="comment">  ----------------------------------------------------------------------*/</span></span><br><span class="line">  sbl1_hw_platform_smem,</span><br><span class="line">   </span><br><span class="line">  <span class="comment">/*----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">   Get shared data out of the flash device module</span></span><br><span class="line"><span class="comment">  ----------------------------------------------------------------------*/</span></span><br><span class="line">  boot_share_flash_data,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">   populate the ram partition table</span></span><br><span class="line"><span class="comment">  ----------------------------------------------------------------------*/</span></span><br><span class="line">  boot_populate_ram_partition_table,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">   Initialize GPIO for low power configuration</span></span><br><span class="line"><span class="comment">  ----------------------------------------------------------------------*/</span></span><br><span class="line">  sbl1_tlmm_init,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*-----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">   Calls efs cookie handling api to perform efs backup/restore</span></span><br><span class="line"><span class="comment">  -----------------------------------------------------------------------*/</span>  </span><br><span class="line">  sbl1_efs_handle_cookies,</span><br><span class="line">    </span><br><span class="line">  <span class="comment">/*-----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">   APT Security Test</span></span><br><span class="line"><span class="comment">   ----------------------------------------------------------------------*/</span></span><br><span class="line">  (boot_procedure_func_type)boot_apt_test,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Last entry in the table. */</span></span><br><span class="line">  <span class="literal">NULL</span> </span><br></pre></td></tr></table></figure><h3 id="pm-chg-charger-detect-state"><a href="#pm-chg-charger-detect-state" class="headerlink" title="pm_chg_charger_detect_state"></a>pm_chg_charger_detect_state</h3><p>pm_chg_charger_detect_state函数是启动工程中非常重要的一个函数，它将监测电池的状态，然后决定启动过程，调用关系和解析如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sbl1_hw_init_secondary</span><br><span class="line"> -&gt;boot_pm_dirver_init </span><br><span class="line">  -&gt;pm_driver_init <span class="comment">#初始化PMIC驱动</span></span><br><span class="line">   -&gt;pm_driver_post_init</span><br><span class="line">    -&gt;pm_chg_sbl_charging_state_entry</span><br><span class="line">     -&gt;pm_chg_battery_and_debug_board_detect_state</span><br><span class="line">      -&gt;pm_chg_charger_detect_state <span class="comment">#监测电池状态，电池正常则启动，weak则死循环，充电知道电池正常</span></span><br><span class="line">       -&gt;pm_chg_enable_usb_charging</span><br></pre></td></tr></table></figure><h3 id="pm-chg-sbl-charging-state-entry"><a href="#pm-chg-sbl-charging-state-entry" class="headerlink" title="pm_chg_sbl_charging_state_entry"></a>pm_chg_sbl_charging_state_entry</h3><p>pm_chg_sbl_charging_state_entry是充电状态机的入口函数， 如果充电状态不正确的话会造成死机，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">pm_err_flag_type  <span class="title">pm_chg_sbl_charging_state_entry</span><span class="params">(<span class="keyword">void</span>)</span>   <span class="comment">//called at the end of pm_driver_init</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pm_err_flag_type err_flag = PM_ERR_FLAG__SUCCESS;</span><br><span class="line"></span><br><span class="line">    pm_chg_status.previous_state = PM_CHG_ENTRY_STATE;</span><br><span class="line">    pm_chg_status.current_state  = PM_CHG_ENTRY_STATE;</span><br><span class="line">    pm_chg_status.batt_level  = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Get handle for charger algorithm specific data (from Dal config)</span></span><br><span class="line">    sbl_chg_app_ds = (uint16*)pm_target_information_get_specific_info(PM_PROP_CHG_APP_LUT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Check Battery/Debug board presence</span></span><br><span class="line">    next_state_ptr = &amp;pm_chg_state__battery_and_debug_board_detect;</span><br><span class="line"></span><br><span class="line">    err_flag |= pm_chg_sbl_charging_initialize();</span><br><span class="line">    </span><br><span class="line">    err_flag |= pm_chg_process_sbl_charger_states();  <span class="comment">//Process next sbl charging state</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( err_flag != PM_ERR_FLAG__SUCCESS)  </span><br><span class="line">    &#123;<span class="comment">//Handle All SBL charger algorithm errors</span></span><br><span class="line">       PM_ERR_FATAL();      <span class="comment">// sbl充电状态异常的话，调用此函数，此函数其实就是一个空的while(1)，如果执行到此步，机器则死机，必须断电才能继续工作</span></span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> err_flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="pm-chg-process-sbl-charger-states"><a href="#pm-chg-process-sbl-charger-states" class="headerlink" title="pm_chg_process_sbl_charger_states"></a>pm_chg_process_sbl_charger_states</h3><p>pm_chg_process_sbl_charger_states函数也是启动过程中非常重要的一个函数，此函数里面有一个死循环，用来更新充电状态或者关机，其被pm_chg_sbl_charging_state_entry函数调用（见上调用关系）。插上充电器开机前几秒就出现的重启问题， 多半是此部分出了状况。代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> pm_err_flag_type  <span class="title">pm_chg_process_sbl_charger_states</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pm_err_flag_type err_flag = PM_ERR_FLAG__SUCCESS;</span><br><span class="line">    pm_chg_state_alg_ptr_type next_state = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Process SBL charging states transitions</span></span><br><span class="line">    <span class="keyword">while</span>( (next_state_ptr != <span class="literal">NULL</span>)  )</span><br><span class="line">    &#123;</span><br><span class="line">        pm_chg_status.previous_state = pm_chg_status.current_state;</span><br><span class="line">        pm_chg_status.current_state  = next_state_ptr-&gt;current_chg_state;</span><br><span class="line"></span><br><span class="line">        next_state = next_state_ptr-&gt;next_chg_state_alg;</span><br><span class="line">        <span class="keyword">if</span> (next_state)</span><br><span class="line">        &#123;</span><br><span class="line">           err_flag = next_state();  <span class="comment">//transition to next state</span></span><br><span class="line">        &#125;</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">if</span> ( ( err_flag                     != PM_ERR_FLAG__SUCCESS  )  ||</span><br><span class="line">             ( pm_chg_status.current_state == PM_CHG_BOOTUP_STATE   )  ||</span><br><span class="line">             ( pm_chg_status.current_state == PM_CHG_SHUTDOWN_STATE )      <span class="comment">//Shutdown state condition will never happen but we have it for sake of being complete</span></span><br><span class="line">           )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> err_flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android源码bootable解析之bootloader LK(little kernel)</title>
      <link href="2015/07/25/Android/Android%E6%BA%90%E7%A0%81bootable%E8%A7%A3%E6%9E%90%E4%B9%8BLK-bootloader-little-kernel/"/>
      <url>2015/07/25/Android/Android%E6%BA%90%E7%A0%81bootable%E8%A7%A3%E6%9E%90%E4%B9%8BLK-bootloader-little-kernel/</url>
      
        <content type="html"><![CDATA[<p>记得当初学Linux时候，bootloader 代码相对来说还比较简单，主要几个汇编文件加上几个C文件，编译一个uboot就ok了。做Android驱动后，发现Android专门做了一个目录bootable来实现boot等相关功能。功能也比较多，所以就准备来研究一下这一部分。今天就先研究一下LK，LK全称为Little Kernel，是AP模块bootloader中实现的一个微型系统。</p><h2 id="boot架构"><a href="#boot架构" class="headerlink" title="boot架构"></a>boot架构</h2><a id="more"></a><p>首先来了解一下bootable代码的目录结构，其下主要有三个子目录，如下：     </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#bootable</span></span><br><span class="line">-bootloader/LK</span><br><span class="line">   -app            <span class="comment">#功能实现，如 adb 命令</span></span><br><span class="line">   -arch           <span class="comment">#CPU架构</span></span><br><span class="line">   -dev            <span class="comment">#设备驱动</span></span><br><span class="line">   -include      <span class="comment">#头文件</span></span><br><span class="line">   -kernel        <span class="comment">#主文件，main.c</span></span><br><span class="line">   -lib             <span class="comment">#库文件</span></span><br><span class="line">   -platform    <span class="comment">#平台文件，如：msm8916</span></span><br><span class="line">   -projiect     <span class="comment">#mk文件</span></span><br><span class="line">   -make       <span class="comment">#mk文件</span></span><br><span class="line">   -scripts      <span class="comment">#脚本文件</span></span><br><span class="line">   -target        <span class="comment">#目标设备文件</span></span><br><span class="line">   AndroidBoot.mk</span><br><span class="line">   makefie</span><br><span class="line">-recovery <span class="comment">#由lk启动，主要用来更新主系统（即我们平时使用的Android系统）</span></span><br><span class="line">-diskinstaller <span class="comment">#打包镜像</span></span><br></pre></td></tr></table></figure><h2 id="LK流程分析"><a href="#LK流程分析" class="headerlink" title="LK流程分析"></a>LK流程分析</h2><p>在LK的链接文件ssystem-onesegment.ld 或  system-twosegment.ld （位于bootable/bootloadler/lk/arch/arm/，此文件用来指定代码的内存分布等）中，LK指定lk/arch/crt0.s中的_start函数为入口函数，crt.s主要初始化CPU，然后长跳转（bl）到lk/kernel/main.c中kmain函数，初始化lk系统，接着初始化boot，跳转到kernel。接下来按照此流程来分析一下。</p><h3 id="kmain"><a href="#kmain" class="headerlink" title="kmain()"></a>kmain()</h3><p>与 boot 启动初始化相关函数为 arch_early_init、  platform_early_init 、bootstrap2/bootstrap_nandwrite，这些函数比较重要,待会儿再详解,如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">void kmain(void)</span><br><span class="line">&#123;</span><br><span class="line">thread_init_early(); // 初始化化lk线程上下文</span><br><span class="line">arch_early_init(); // 架构初始化，如关闭cache，使能mmu</span><br><span class="line">platform_early_init(); // 平台早期初始化</span><br><span class="line">target_early_init(); //目标设备早期初始化</span><br><span class="line">bs_set_timestamp(BS_BL_START);</span><br><span class="line">call_constructors(); //静态构造函数初始化</span><br><span class="line">heap_init(); // 堆初始化</span><br><span class="line">thread_init(); // 初始化线程</span><br><span class="line">dpc_init();  //lk系统控制器初始化</span><br><span class="line">timer_init(); //kernel时钟初始化</span><br><span class="line"></span><br><span class="line"><span class="comment">#if (!ENABLE_NANDWRITE)</span></span><br><span class="line">thread_resume(thread_create(<span class="string">&quot;bootstrap2&quot;</span>, &amp;bootstrap2, NULL, DEFAULT_PRIORITY, DEFAULT_STACK_SIZE)); // 创建一个线程初始化系统</span><br><span class="line">exit_critical_section(); //使能中断</span><br><span class="line">thread_become_idle(); //本线程切换为idle线程</span><br><span class="line"><span class="comment">#else</span></span><br><span class="line">        bootstrap_nandwrite(); </span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="arch-early-init"><a href="#arch-early-init" class="headerlink" title="arch_early_init()"></a>arch_early_init()</h3><p>因为高通平台用的arm架构,所以文件路径为:\bootable\bootloader\lk\arch\arm\arch.c.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">void arch_early_init(void)</span><br><span class="line">&#123;</span><br><span class="line">arch_disable_cache(UCACHE); //关闭cache</span><br><span class="line">set_vector_base(MEMBASE); // 设置异常向量基地址</span><br><span class="line">arm_mmu_init(); //初始化mmu</span><br><span class="line">arch_enable_cache(UCACHE); //打开cache</span><br><span class="line"></span><br><span class="line">/* <span class="built_in">enable</span> cp10 and cp11 */</span><br><span class="line">__asm__ volatile(<span class="string">&quot;mrcp15, 0, %0, c1, c0, 2&quot;</span> : <span class="string">&quot;=r&quot;</span> (val));</span><br><span class="line">val |= (3&lt;&lt;22)|(3&lt;&lt;20);</span><br><span class="line">__asm__ volatile(<span class="string">&quot;mcrp15, 0, %0, c1, c0, 2&quot;</span> :: <span class="string">&quot;r&quot;</span> (val));</span><br><span class="line">/* <span class="built_in">set</span> <span class="built_in">enable</span> bit <span class="keyword">in</span> fpexc(中断相关寄存器) */</span><br><span class="line">__asm__ volatile(<span class="string">&quot;mrc  p10, 7, %0, c8, c0, 0&quot;</span> : <span class="string">&quot;=r&quot;</span> (val));</span><br><span class="line">val |= (1&lt;&lt;30);</span><br><span class="line">__asm__ volatile(<span class="string">&quot;mcr  p10, 7, %0, c8, c0, 0&quot;</span> :: <span class="string">&quot;r&quot;</span> (val));</span><br><span class="line">/* <span class="built_in">enable</span> the cycle count register */</span><br><span class="line">__asm__ volatile(<span class="string">&quot;mrcp15, 0, %0, c9, c12, 0&quot;</span> : <span class="string">&quot;=r&quot;</span> (en));</span><br><span class="line">en &amp;= ~(1&lt;&lt;3); /* cycle count every cycle */</span><br><span class="line">en |= 1; /* <span class="built_in">enable</span> all performance counters */</span><br><span class="line">__asm__ volatile(<span class="string">&quot;mcrp15, 0, %0, c9, c12, 0&quot;</span> :: <span class="string">&quot;r&quot;</span> (en));</span><br><span class="line"></span><br><span class="line">/* <span class="built_in">enable</span> cycle counter */</span><br><span class="line">en = (1&lt;&lt;31);</span><br><span class="line">__asm__ volatile(<span class="string">&quot;mcrp15, 0, %0, c9, c12, 1&quot;</span> :: <span class="string">&quot;r&quot;</span> (en));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="platform-early-init"><a href="#platform-early-init" class="headerlink" title="platform_early_init"></a>platform_early_init</h3><p>每个平台的初始化不一样,我使用的msm8916,路径为:\bootable\bootloader\lk\platform\msm8916\platform.c,如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">void platform_early_init(void)</span><br><span class="line">&#123;</span><br><span class="line">board_init(); //主板初始化</span><br><span class="line">platform_clock_init(); //时钟初始化</span><br><span class="line">qgic_init();</span><br><span class="line">qtimer_init(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="bootstrap2"><a href="#bootstrap2" class="headerlink" title="bootstrap2"></a>bootstrap2</h3><p>此函数由kmain中创建的线程调用，路径为:bootable\bootloader\lk\kernel\main.c。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">static int bootstrap2(void *arg)</span><br><span class="line">&#123;</span><br><span class="line">arch_init(); //架构初始化</span><br><span class="line">bio_init();</span><br><span class="line">fs_init();</span><br><span class="line">platform_init(); //平台初始化, 主要初始化系统时钟,超频等</span><br><span class="line">target_init(); //目标设备初始化,主要初始化Flash,整合分区表等</span><br><span class="line">apps_init(); // 应用功能初始化,调用aboot_init,加载kernel等</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="aboot-init"><a href="#aboot-init" class="headerlink" title="aboot_init"></a>aboot_init</h3><p>此函数由上apps_init函数调用，路径: bootable\bootloader\lk\app\aboot\aboot.c.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">/* Setup page size information <span class="keyword">for</span> nv storage */</span><br><span class="line"><span class="keyword">if</span> (target_is_emmc_boot())</span><br><span class="line">&#123;</span><br><span class="line">page_size = mmc_page_size();</span><br><span class="line">page_mask = page_size - 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">page_size = flash_page_size();</span><br><span class="line">page_mask = page_size - 1;</span><br><span class="line">&#125;</span><br><span class="line">read_device_info(&amp;device); //读取设备信息</span><br><span class="line">target_display_init(device.display_panel); // splash屏初始化</span><br><span class="line">    target_serialno((unsigned char *) sn_buf); //设置串口号</span><br><span class="line">memset(display_panel_buf, <span class="string">&#x27;\0&#x27;</span>, MAX_PANEL_BUF_SIZE); //初始化显存</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_user_force_reset()) // 检查关机原因,如果强制重启则正常启动</span><br><span class="line">goto normal_boot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (keys_get_state(KEY_VOLUMEUP) &amp;&amp; keys_get_state(KEY_VOLUMEDOWN)) // 如果按下音量上下键</span><br><span class="line">&#123;</span><br><span class="line">reboot_device(DLOAD); //重启进入紧急下载</span><br><span class="line"><span class="keyword">if</span> (!pm8x41_ponpon_pwrkey()) &#123;//如果按下power键和音量键,进入fastboot模式,这很可能为自定义,Android源码没有</span><br><span class="line">boot_into_fastboot = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">    /*检查重启模式,并进入相应模式*/</span><br><span class="line">reboot_mode = check_reboot_mode();</span><br><span class="line">hard_reboot_mode = check_hard_reboot_mode();</span><br><span class="line"><span class="keyword">if</span> (reboot_mode == RECOVERY_MODE ||</span><br><span class="line">hard_reboot_mode == RECOVERY_HARD_RESET_MODE) &#123;</span><br><span class="line">boot_into_recovery = 1;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(reboot_mode == FASTBOOT_MODE ||</span><br><span class="line">hard_reboot_mode == FASTBOOT_HARD_RESET_MODE) &#123;</span><br><span class="line">boot_into_fastboot = <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(reboot_mode == ALARM_BOOT ||</span><br><span class="line">hard_reboot_mode == RTC_HARD_RESET_MODE) &#123;</span><br><span class="line">boot_reason_alarm = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">normal_boot:</span><br><span class="line"><span class="keyword">if</span> (!boot_into_fastboot)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (target_is_emmc_boot())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(emmc_recovery_init()) //emmc_recovery初始化</span><br><span class="line">set_tamper_fuse_cmd();</span><br><span class="line">set_tamper_flag(device.is_tampered);</span><br><span class="line">boot_linux_from_mmc();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">recovery_init();  // recovery模式初始化</span><br><span class="line">set_tamper_flag(device.is_tampered);</span><br><span class="line">       &#125;</span><br><span class="line">boot_linux_from_flash(); //从Flash中加载启动内核</span><br><span class="line">&#125;</span><br><span class="line">/*不应该执行到这儿,只有没能正常启动时才会执行到这*/</span><br><span class="line">aboot_fastboot_register_commands(); // 注册fastboot命令,</span><br><span class="line">partition_dump(); //dump(即保存)分区表调试信息</span><br><span class="line">fastboot_init(target_get_scratch_address(), target_get_max_flash_size()); //初始化并进入fastboot</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="boot-linux-from-flash"><a href="#boot-linux-from-flash" class="headerlink" title="boot_linux_from_flash"></a>boot_linux_from_flash</h3><p>路径: bootable\bootloader\lk\app\aboot\aboot.c。此函数实现内核的加载，boot镜像boot.img由如下几部分构成：kernel头、kernel、ramdisk(虚拟磁盘)、second stage（可以没有）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (target_is_emmc_boot()) &#123;  // 如果目标设备是emmc boot(内嵌boot)</span><br><span class="line">hdr = (struct boot_img_hdr *)EMMC_BOOT_IMG_HEADER_ADDR; // 获取emmc boot镜像首地址</span><br><span class="line">goto continue_boot; // 继续启动</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ptable = flash_get_ptable(); // 获取分区表</span><br><span class="line"><span class="keyword">if</span>(!boot_into_recovery) //非recovery模式</span><br><span class="line">&#123;</span><br><span class="line">    ptn = ptable_find(ptable, <span class="string">&quot;boot&quot;</span>); //获取boot分区</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    ptn = ptable_find(ptable, <span class="string">&quot;recovery&quot;</span>); // 获取recovery分区</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flash_read(ptn, offset, buf, page_size)) //获取boot镜像</span><br><span class="line"><span class="keyword">if</span> (memcmp(hdr-&gt;magic, BOOT_MAGIC, BOOT_MAGIC_SIZE)) //校验boot头</span><br><span class="line"><span class="keyword">if</span> (hdr-&gt;page_size != page_size) //校验boot页大小</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * Update the kernel/ramdisk/tags address <span class="keyword">if</span> the boot image header</span><br><span class="line"> * has default values, these default values come from mkbootimg when</span><br><span class="line"> * the boot image is flashed using fastboot flash:raw</span><br><span class="line"> */</span><br><span class="line">update_ker_tags_rdisk_addr(hdr); //读取boot image头，如有默认值则更新kernel、ramdisk、tag地址</span><br><span class="line"></span><br><span class="line">/* Get virtual addresses since the hdr saves physical addresses. */</span><br><span class="line">/* 根据物理地址获取虚拟地址 */</span><br><span class="line">hdr-&gt;kernel_addr = VA((addr_t)(hdr-&gt;kernel_addr));</span><br><span class="line">hdr-&gt;ramdisk_addr = VA((addr_t)(hdr-&gt;ramdisk_addr));</span><br><span class="line">hdr-&gt;tags_addr = VA((addr_t)(hdr-&gt;tags_addr));</span><br><span class="line"></span><br><span class="line">kernel_actual  = ROUND_TO_PAGE(hdr-&gt;kernel_size,  page_mask); //获取kernel实际地址</span><br><span class="line">ramdisk_actual = ROUND_TO_PAGE(hdr-&gt;ramdisk_size, page_mask); // 获取ramdisk实际地址</span><br><span class="line"></span><br><span class="line">/* Check <span class="keyword">if</span> the addresses <span class="keyword">in</span> the header are valid. */</span><br><span class="line">/* 检查镜像头中的地址有效性*/</span><br><span class="line"><span class="keyword">if</span> (check_aboot_addr_range_overlap(hdr-&gt;kernel_addr, kernel_actual) ||</span><br><span class="line">check_aboot_addr_range_overlap(hdr-&gt;ramdisk_addr, ramdisk_actual))</span><br><span class="line"><span class="comment">#ifndef DEVICE_TREE // 设备树,即dts\dtsi文件</span></span><br><span class="line"><span class="keyword">if</span> (check_aboot_addr_range_overlap(hdr-&gt;tags_addr, MAX_TAGS_SIZE)) //检查设备树地址是否与aboot地址重合</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Authenticate Kernel */</span><br><span class="line">/* 鉴定内核 */</span><br><span class="line"><span class="keyword">if</span>(target_use_signed_kernel() &amp;&amp; (!device.is_unlocked)) //如果用签名kernel并且设备未被锁</span><br><span class="line">&#123;</span><br><span class="line">image_addr = (unsigned char *)target_get_scratch_address();</span><br><span class="line">offset = 0;</span><br><span class="line"></span><br><span class="line"><span class="comment">#if DEVICE_TREE</span></span><br><span class="line">dt_actual = ROUND_TO_PAGE(hdr-&gt;dt_size, page_mask);</span><br><span class="line">imagesize_actual = (page_size + kernel_actual + ramdisk_actual + dt_actual);//获取镜像实际地址</span><br><span class="line"><span class="keyword">if</span> (check_aboot_addr_range_overlap(hdr-&gt;tags_addr, hdr-&gt;dt_size)) //检查设备树地址是否与aboot地址重合</span><br><span class="line"><span class="comment">#else</span></span><br><span class="line">imagesize_actual = (page_size + kernel_actual + ramdisk_actual);</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">bs_set_timestamp(BS_KERNEL_LOAD_START); // 开始加载boot镜像</span><br><span class="line"></span><br><span class="line">/* Read image without signature */</span><br><span class="line">/* 读取没有签名的镜像*/</span><br><span class="line"><span class="keyword">if</span> (flash_read(ptn, offset, (void *)image_addr, imagesize_actual))</span><br><span class="line">bs_set_timestamp(BS_KERNEL_LOAD_DONE); //boot镜像加载完成</span><br><span class="line"></span><br><span class="line">offset = imagesize_actual;</span><br><span class="line">/* Read signature */</span><br><span class="line">/* 获取boot镜像签名 */</span><br><span class="line"><span class="keyword">if</span> (flash_read(ptn, offset, (void *)(image_addr + offset), page_size))</span><br><span class="line">verify_signed_bootimg(image_addr, imagesize_actual);</span><br><span class="line"></span><br><span class="line">/* Move kernel and ramdisk to correct address */</span><br><span class="line">/* 移动kernel和ramdisk到正确地址*/</span><br><span class="line">memmove((void*) hdr-&gt;kernel_addr, (char *)(image_addr + page_size), hdr-&gt;kernel_size);</span><br><span class="line">memmove((void*) hdr-&gt;ramdisk_addr, (char *)(image_addr + page_size + kernel_actual), hdr-&gt;ramdisk_size);</span><br><span class="line"><span class="comment">#if DEVICE_TREE</span></span><br><span class="line">/* Validate and Read device device tree <span class="keyword">in</span> the <span class="string">&quot;tags_add */</span></span><br><span class="line"><span class="string">/* 校验并获取设备树*/</span></span><br><span class="line"><span class="string">if (check_aboot_addr_range_overlap(hdr-&gt;tags_addr, dt_entry.size))</span></span><br><span class="line"><span class="string">memmove((void*) hdr-&gt;tags_addr, (char *)(image_addr + page_size + kernel_actual + ramdisk_actual), hdr-&gt;dt_size);</span></span><br><span class="line"><span class="string">#endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* Make sure everything from scratch address is read before next step!*/</span></span><br><span class="line"><span class="string">if(device.is_tampered)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">write_device_info_flash(&amp;device);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">#if USE_PCOM_SECBOOT</span></span><br><span class="line"><span class="string">set_tamper_flag(device.is_tampered);</span></span><br><span class="line"><span class="string">#endif</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">offset = page_size;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">kernel_actual = ROUND_TO_PAGE(hdr-&gt;kernel_size, page_mask);</span></span><br><span class="line"><span class="string">ramdisk_actual = ROUND_TO_PAGE(hdr-&gt;ramdisk_size, page_mask);</span></span><br><span class="line"><span class="string">second_actual = ROUND_TO_PAGE(hdr-&gt;second_size, page_mask);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bs_set_timestamp(BS_KERNEL_LOAD_START); // 开始加载boot镜像</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (flash_read(ptn, offset, (void *)hdr-&gt;kernel_addr, kernel_actual)) // 获取boot镜像</span></span><br><span class="line"><span class="string">offset += kernel_actual;</span></span><br><span class="line"><span class="string">if (flash_read(ptn, offset, (void *)hdr-&gt;ramdisk_addr, ramdisk_actual)) //获取ramdisk镜像</span></span><br><span class="line"><span class="string">offset += ramdisk_actual;</span></span><br><span class="line"><span class="string">bs_set_timestamp(BS_KERNEL_LOAD_DONE); // 结束加载</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if(hdr-&gt;second_size != 0) &#123;</span></span><br><span class="line"><span class="string">offset += second_actual;</span></span><br><span class="line"><span class="string">/* Second image loading not implemented. */</span></span><br><span class="line"><span class="string">ASSERT(0); //跳过第二镜像</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#if DEVICE_TREE</span></span><br><span class="line"><span class="string">if(hdr-&gt;dt_size != 0) &#123; // 如果设备文件存在</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* Read the device tree table into buffer */</span></span><br><span class="line"><span class="string">if(flash_read(ptn, offset, (void *) dt_buf, page_size))  // 读取设备树分区</span></span><br><span class="line"><span class="string">table = (struct dt_table*) dt_buf;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (dev_tree_validate(table, hdr-&gt;page_size, &amp;dt_hdr_size) != 0) //校验设备树分区</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">table = (struct dt_table*) memalign(CACHE_LINE, dt_hdr_size); // 获取内存地址</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* Read the entire device tree table into buffer */</span></span><br><span class="line"><span class="string">if(flash_read(ptn, offset, (void *)table, dt_hdr_size)) // 读取设备树分区</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* Find index of device tree within device tree table */</span></span><br><span class="line"><span class="string">if(dev_tree_get_entry_info(table, &amp;dt_entry) != 0) //获取设备树地址</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* Validate and Read device device tree in the &quot;</span>tags_add */</span><br><span class="line"><span class="keyword">if</span> (check_aboot_addr_range_overlap(hdr-&gt;tags_addr, dt_entry.size)) // 校验设备树地址是否与aboot地址重合</span><br><span class="line"></span><br><span class="line">/* Read device device tree <span class="keyword">in</span> the <span class="string">&quot;tags_add */</span></span><br><span class="line"><span class="string">if(flash_read(ptn, offset + dt_entry.offset, (void *)hdr-&gt;tags_addr, dt_entry.size)) // 获取设备树</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">#endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">continue_boot:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* TODO: create/pass atags to kernel */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">boot_linux((void *)hdr-&gt;kernel_addr, (void *)hdr-&gt;tags_addr,</span></span><br><span class="line"><span class="string">   (const char *)hdr-&gt;cmdline, board_machtype(),</span></span><br><span class="line"><span class="string">   (void *)hdr-&gt;ramdisk_addr, hdr-&gt;ramdisk_size); //启动内核</span></span><br><span class="line"><span class="string">return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>因为时间有限,并没有详细去跟代码。很多细节都是大概扫了一下函数内容或者根据注释得出结果，如有错误,欢迎指出,共同学习,共同进步。</p></blockquote><h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><p>boot.img的头格式定义在：bootable\bootloader\lk\app\nandwrite\bootimg.h。如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">boot_img_hdr</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> magic[BOOT_MAGIC_SIZE];</span><br><span class="line">    <span class="keyword">unsigned</span> kernel_size;  <span class="comment">/* size in bytes */</span></span><br><span class="line">    <span class="keyword">unsigned</span> kernel_addr;  <span class="comment">/* physical load addr */</span></span><br><span class="line">    <span class="keyword">unsigned</span> ramdisk_size; <span class="comment">/* size in bytes */</span></span><br><span class="line">    <span class="keyword">unsigned</span> ramdisk_addr; <span class="comment">/* physical load addr */</span></span><br><span class="line">    <span class="keyword">unsigned</span> second_size;  <span class="comment">/* size in bytes */</span></span><br><span class="line">    <span class="keyword">unsigned</span> second_addr;  <span class="comment">/* physical load addr */</span></span><br><span class="line">    <span class="keyword">unsigned</span> tags_addr;    <span class="comment">/* physical addr for kernel tags */</span></span><br><span class="line">    <span class="keyword">unsigned</span> page_size;    <span class="comment">/* flash page size we assume */</span></span><br><span class="line">    <span class="keyword">unsigned</span> unused[<span class="number">2</span>];    <span class="comment">/* future expansion: should be 0 */</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> name[BOOT_NAME_SIZE]; <span class="comment">/* asciiz product name */</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> cmdline[BOOT_ARGS_SIZE];</span><br><span class="line">    <span class="keyword">unsigned</span> id[<span class="number">8</span>]; <span class="comment">/* timestamp / checksum / sha1 / etc */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>当我们将编译生成的boot.img用文本编辑软件打开后，能看到boot_im_hdr格式定义的头，如下：<br>　　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogboot_img.png" alt="boot.img"></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android中adb(Android Debug Bridge)命令的用法</title>
      <link href="2015/07/19/Android/Android%E4%B8%ADadb-Android-Debug-Bridge-%E5%91%BD%E4%BB%A4%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>2015/07/19/Android/Android%E4%B8%ADadb-Android-Debug-Bridge-%E5%91%BD%E4%BB%A4%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>　　昨天写Android日志系统相关博客时发觉自己对adb命令认知十分不够，所以特意去<a href="http://developer.android.com/tools/help/adb.html">http://developer.android.com/tools/help/adb.html</a>学习了一下,今天准备按照自己的理解加以修改总结并整理出一篇博文。</p><h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><p>　　adb是Android Debug Bridge的简写，按字面意思理解就是在开发者和Android之间搭建的一个debug桥。adb是一个连接仿真实例或者Android设备的命令行工具，是一个客服端-服务器模式的程序，包括如下三部分：<br>　<br>　　1. 一个运行在开发用的Android手机或者仿真器上面的client，我们可以通过adb命令调用client。其他像ADT插件和DDMS也会创建client。<br>　<br>　　2. 一个运行在开发用的Android手机或者仿真器后台的server，这个server负责管理本设备上运行的client和daemon(守护进程)。<br>　<br>　　3. 一个在每个仿真器或者Android设备后台运行的daemon。</p><blockquote><p>adb tool 可以再<sdk>/platform-tools/中找到　</p></blockquote><a id="more"></a><h2 id="adb工具的构成关系"><a href="#adb工具的构成关系" class="headerlink" title="adb工具的构成关系"></a>adb工具的构成关系</h2><p>　　当启动adb client时，client会检查是否有server在运行，若无则启动一个server进程。server进程启动后，会绑定到TCP端口号为5037的端口，然后监听从adb clients发送来的命令（所有adb clients 使用同一端口5037与server通信）。然后，server通过扫描手机或仿真器用到的5555到5585之间的奇数端口号，在所有运行的实例之间建立连接。server在发现adb daemon的地方为那个端口建立连接。每个仿真器或者设备需给console连接提供一个偶数端口号，为adb连接提供一个奇数端口号。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Emulator 1, console: 5554</span><br><span class="line">Emulator 1, adb: 5555</span><br><span class="line">Emulator 2, console: 5556</span><br><span class="line">Emulator 2, adb: 5557</span><br><span class="line">and so on...</span><br></pre></td></tr></table></figure><blockquote><p>当server为所有仿真器创建了连接后,我们可以通过adb 命令进入这些实例,而且可以从任何client(或者script脚本)控制所有的仿真器.　</p></blockquote><h2 id="adb调试"><a href="#adb调试" class="headerlink" title="adb调试"></a>adb调试</h2><p>　　首先需要同USB将电脑和设备相连,然后在开发者模式中打开USB debugging。4.2以上的系统默认都是隐藏了开发者模式，所以需要去到<strong>Setting&gt;About phone&gt;**菜单下点击</strong>Build number**七次以显示开发者模式,然后到开发者模式菜单下打开USB debugging。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>　　我们能通过设备的命令行(shell终端)或者script脚本发出adb命令。用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb [-d|-e|-s &lt;serialNumber&gt;] &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure><blockquote><p>如果仅仅一个仿真器或设备被连接,这adb命令将自己发送本机.如果有多个的话,需要用-d -s 或 -e来指明目标设备.　</p></blockquote><h2 id="adb命令详解"><a href="#adb命令详解" class="headerlink" title="adb命令详解"></a>adb命令详解</h2><p>　</p><h4 id="目标设备"><a href="#目标设备" class="headerlink" title="目标设备"></a>目标设备</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-d      <span class="comment">#指向连接的USB设备,如果USB设备超过一个则返回错误</span></span><br><span class="line">-e      <span class="comment">#指向运行的仿真器,如果超过一个仿真器则返回错误</span></span><br><span class="line">-s&lt;serialNumber&gt;  <span class="comment">#指向指定的仿真器或设备,如emulator-5556,详见下查询仿真器或设备</span></span><br></pre></td></tr></table></figure><p>　</p><h4 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">devices   <span class="comment">#打印所有连接的仿真器或设备,见下查询仿真器或设备</span></span><br><span class="line"><span class="built_in">help</span>    <span class="comment"># 打印所有adb命令</span></span><br><span class="line">version   <span class="comment">#打印adb工具的版本号</span></span><br></pre></td></tr></table></figure><p>　</p><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">logcat [option] [filter-specs]    <span class="comment">#打印log</span></span><br><span class="line">bugreport      <span class="comment">#打印dumpsys,dumpstate及logcat日志</span></span><br><span class="line">jdwp       <span class="comment">#打印设备上的可用JDWP进程,可通过jdwp:&lt;pid&gt;连接指定JDWP进程,如:</span></span><br><span class="line">                adb forward tcp:8000 jdwp:472</span><br><span class="line">                jdb -attach localhost:8000|</span><br></pre></td></tr></table></figure><p>　</p><h4 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">install &lt;apk&gt;          <span class="comment">#安装apk到仿真器或设备</span></span><br><span class="line">pull &lt;remote&gt; &lt;<span class="built_in">local</span>&gt;   <span class="comment">#拷贝指定文件到PC</span></span><br><span class="line">push &lt;<span class="built_in">local</span>&gt; &lt;remote&gt;   <span class="comment">#拷贝指定文件到设备</span></span><br></pre></td></tr></table></figure><p>　</p><h4 id="端口和网络"><a href="#端口和网络" class="headerlink" title="端口和网络"></a>端口和网络</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">forward &lt;<span class="built_in">local</span>&gt; &lt;remote&gt;    <span class="comment">#指定socket连接的PC端口号,仿真器或设备端口号,如下:</span></span><br><span class="line">                                tcp:&lt;portnum&gt;</span><br><span class="line">                                <span class="built_in">local</span>:&lt;UNIX domain socket name&gt;</span><br><span class="line">                                dev:&lt;character device name&gt;</span><br><span class="line">                                jdwp:&lt;pid&gt;</span><br><span class="line">ppp &lt;tty&gt; [parm]...  <span class="comment">#通过USB运行PPP,不应该无故打开PPP连接</span></span><br></pre></td></tr></table></figure><p>　</p><h4 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">get-serialno   <span class="comment">#打印adb实体序列号,见下查询仿真器或设备</span></span><br><span class="line">get-state    <span class="comment">#打印仿真器或设备adb状态</span></span><br><span class="line">wait-for-device     <span class="comment">#阻塞程序直到设备online</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#可以在后面添加其他命令,这样等设备以上线就执行,如下</span></span><br><span class="line">adb wait-for-device shell getprop <span class="comment"># 一连上就getprop</span></span><br><span class="line">adb wait-for-device install &lt;app&gt;.apk <span class="comment">#一连上就安装app</span></span><br></pre></td></tr></table></figure><p>　</p><h4 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-server  <span class="comment">#检查是否有server运行,若无,则启动</span></span><br><span class="line">kill-server   <span class="comment">#终止server进程 </span></span><br></pre></td></tr></table></figure><p>　</p><h4 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell <span class="comment">#为仿真器或者设备打开一个远程shell终端,exit退出</span></span><br><span class="line">shell [shellCommand] <span class="comment">#打开一个远程终端,执行某指令后退出</span></span><br></pre></td></tr></table></figure><h3 id="查询仿真器或者设备"><a href="#查询仿真器或者设备" class="headerlink" title="查询仿真器或者设备"></a>查询仿真器或者设备</h3><p>　　在执行adb命令前,我们可以通过命令去查看仿真器或设备的连接清单，命令如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure><p>　　执行这个命令后，adb将打印每个实例的状态信息：</p><ul><li>Serial number ：adb通过仿真器或设备的console端口号创建的一个独一无二的字符串，格式为“type-consolePort”，如：emulator-5554　</li><li>State ： 实例的连接状态，如下：　<ul><li>offline ：未连接或没回应</li><li>device ：实例连接到adb server，不过并不意味着Android完全启动可操作的，因为文件系统启动过程中，adb也可连接</li><li>no device ：未连接</li></ul></li></ul><p>　每个实例的输出如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[serialNumber] [state]</span><br><span class="line"></span><br><span class="line"><span class="comment">#eg</span></span><br><span class="line">adb devices</span><br><span class="line">List of devices attached</span><br><span class="line">emulator-5554  device</span><br><span class="line">emulator-5556  device</span><br><span class="line">emulator-5558  device</span><br></pre></td></tr></table></figure><h3 id="发送命令到指定仿真器或设备"><a href="#发送命令到指定仿真器或设备" class="headerlink" title="发送命令到指定仿真器或设备"></a>发送命令到指定仿真器或设备</h3><p>　　如果有多个仿真器或者设备同时运行，我们必须通过指定一个目标，否则将报错。我们可以通过-s来指定，用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb -s &lt;serialNumber&gt; &lt;<span class="built_in">command</span>&gt;  <span class="comment">#serialNumber可以用adb devices查看</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#eg</span></span><br><span class="line">adb -s emulator-5556 install helloWorld.apk</span><br></pre></td></tr></table></figure><p>　　如果有多个实例有效，只有一个仿真器，我们可以通过-e来指定仿真器。反之，若只有一个Android 设备，我们可以同-d来指定。</p><h3 id="安装app"><a href="#安装app" class="headerlink" title="安装app"></a>安装app</h3><p>　　adb工具提供了从pc拷贝apk并安装到指定仿真器或设备的命令，不过必须指定.apk文件的路径，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install &lt;path_to_apk&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Android studio/Eclipse也是通过adb安装apk的，不过其ADT插件已经封装了这个过程</p></blockquote><h3 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h3><p>　　我们可以用forward命令设置任意端口为forwarding端口，转发指定主机端口到仿真器或设备上的一个不同端口。也能设置转发到抽象的UNIX域sockets，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb forward tcp:6100 tcp:7100 <span class="comment">#设置主机端口6100转发到目标端口7100</span></span><br><span class="line"></span><br><span class="line">adb forward tcp:6100 <span class="built_in">local</span>:logd </span><br></pre></td></tr></table></figure><h3 id="导入导出文件"><a href="#导入导出文件" class="headerlink" title="导入导出文件"></a>导入导出文件</h3><p> 　　我们可以通过pull命令从仿真器或设备导出任意路径的文件，通过push导入文件到仿真器或设备的任意路径，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#remote 仿真器或设备文件路径 local PC文件路径</span></span><br><span class="line">adb pull &lt;remote&gt; &lt;<span class="built_in">local</span>&gt; <span class="comment">#导出文件</span></span><br><span class="line">adb push &lt;<span class="built_in">local</span>&gt; &lt;remote&gt; <span class="comment">#导入文件</span></span><br></pre></td></tr></table></figure><h2 id="通过无线使用adb"><a href="#通过无线使用adb" class="headerlink" title="通过无线使用adb"></a>通过无线使用adb</h2><p>　　虽然我们通常连接USB来使用adb，但是我们也能通过WiFi来使用。</p><ol><li>让Android设备与PC处于同一WiFi网络环境，不过并不是所有的接入点都能成功，我们需要防火墙配置正确来支持adb。　</li><li>通过USB连接设备与PC。　</li><li>确定PC上adb运行在USB模式<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ adb usb</span><br><span class="line">restarting <span class="keyword">in</span> USB mode</span><br></pre></td></tr></table></figure></li><li>通过USB连接到设备<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices</span><br><span class="line">List of devices attached</span><br><span class="line"><span class="comment">######## device</span></span><br></pre></td></tr></table></figure></li><li>重启PC adb,运行在tcpip模式<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ adb tcpip 5555</span><br><span class="line">restarting <span class="keyword">in</span> TCP mode port: 5555</span><br></pre></td></tr></table></figure></li><li>找到Android设备的ip地址, Settings -&gt; About tablet -&gt; Status -&gt; IP address。　</li><li>连接设备<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ adb connect <span class="comment">#.#.#.#</span></span><br><span class="line">connected to <span class="comment">#.#.#.#:5555</span></span><br></pre></td></tr></table></figure></li><li>移除USB线，确认设备连接<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices</span><br><span class="line">List of devices attached</span><br><span class="line"><span class="comment">#.#.#.#:5555 device</span></span><br></pre></td></tr></table></figure>如果连接丢失：</li><li>确认PC机与Android设备是否处于同一WiFi网络环境。</li><li>通过adb connect重现连接。</li><li>重启adb host<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb kill-server</span><br><span class="line">adb start-server</span><br></pre></td></tr></table></figure><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2>　　虽然官方文档已经介绍得挺详细了，但还是有一些命令没介绍到，如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">adb uninstall &lt;package name&gt; <span class="comment">#卸载指定app，参数为包名</span></span><br><span class="line">adb uninstall -k &lt;package name&gt;   <span class="comment">#卸载指定app，保留配置文件和缓存</span></span><br><span class="line">adb shell dumpsys activity <span class="comment">#列出activity栈(back stack)和任务(task)及其他组件信息和进程信息</span></span><br><span class="line">adb shell dumpsys packages <span class="comment">#(若出错，则dumpsy)列出一些系统信息和所有应用的信息。包括Features，Activity Resolver Table等。</span></span><br><span class="line">adb shell pm list permissions <span class="comment">#列出目标实例的所有权限</span></span><br><span class="line">adb shell pm list packages  <span class="comment">#列出目标设备上安装的所有app包名</span></span><br><span class="line">adb shell pm list features  <span class="comment">#列出目标设备上的所有feature</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用adb命令启动一个Activity</span></span><br><span class="line">adb shell am start PACKAGE_NAME/ACTIVITY_IN_PACKAGE  </span><br><span class="line">adb shell am start PACKAGE_NAME/FULLY_QUALIFIED_ACTIVITY    </span><br><span class="line"><span class="comment">#eg </span></span><br><span class="line">adb shell am start -n me.huaqianlee.example/.MainActivity  </span><br><span class="line">adb shell am start -n me.huaqianlee.example/me.huaqianlee.example.MainActivity</span><br><span class="line"></span><br><span class="line">adb shell screencap -p | perl -pe <span class="string">&#x27;s/\x0D\x0A/\x0A/g&#x27;</span> &gt; screen.png <span class="comment">#屏幕截图, 并使用perl命令保存截图</span></span><br><span class="line"></span><br><span class="line">adb shell input keyevent 82 <span class="comment">#解锁屏幕</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 译文 </tag>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么抓取Android日志文件</title>
      <link href="2015/07/19/Android/%E6%80%8E%E4%B9%88%E6%8A%93%E5%8F%96Android%E6%B5%8B%E8%AF%95%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-How-to-get-android-log-file/"/>
      <url>2015/07/19/Android/%E6%80%8E%E4%B9%88%E6%8A%93%E5%8F%96Android%E6%B5%8B%E8%AF%95%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-How-to-get-android-log-file/</url>
      
        <content type="html"><![CDATA[<p>　　<a href="http://huaqianlee.github.io/2015/07/18/Android/Android-Logging-system-Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/">Android日志系统详解</a><br>　　<a href="http://huaqianlee.github.io/2015/07/18/Android/%E6%80%8E%E4%B9%88%E7%94%A8Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8E%BB%E8%B0%83%E8%AF%95-How-to-debug-with-Android-logging/">How to debug with Android logging</a><br>　　<a href="http://huaqianlee.github.io/2015/07/19/Android/%E6%80%8E%E4%B9%88%E6%8A%93%E5%8F%96Android%E6%B5%8B%E8%AF%95%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-How-to-get-android-log-file/">怎么抓取Android日志文件</a></p><p>　　前两篇blog分别介绍了Android logging系统及编程时怎么应用，关于kernel中的log系统，前面只是大概提及了一下，下次再详细分析。相信大家都知道调试时需要打开USB调试模式，接下来就分析一下怎么抓取日志文件。</p><h2 id="logcat命令详解"><a href="#logcat命令详解" class="headerlink" title="logcat命令详解"></a>logcat命令详解</h2><p>　　logcat是最常用的命令之一，其语法如下；</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">shell@android:/ $ logcat --<span class="built_in">help</span></span><br><span class="line">logcat --<span class="built_in">help</span></span><br><span class="line">Usage: logcat [options] [filterspecs]</span><br><span class="line">options include:</span><br><span class="line">  -s              Set default filter to silent.</span><br><span class="line">                  Like specifying filterspec <span class="string">&#x27;*:s&#x27;</span></span><br><span class="line">  -f &lt;filename&gt;   Log to file. Default to stdout</span><br><span class="line">  -r [&lt;kbytes&gt;]   Rotate <span class="built_in">log</span> every kbytes. (16 <span class="keyword">if</span> unspecified). Requires -f</span><br><span class="line">  -n &lt;count&gt;      Sets max number of rotated logs to &lt;count&gt;, default 4</span><br><span class="line">  -v &lt;format&gt;     Sets the <span class="built_in">log</span> <span class="built_in">print</span> format, <span class="built_in">where</span> &lt;format&gt; is one of:</span><br><span class="line"></span><br><span class="line">                  brief process tag thread raw time threadtime long</span><br><span class="line"></span><br><span class="line">  -c              clear (flush) the entire <span class="built_in">log</span> and <span class="built_in">exit</span></span><br><span class="line">  -d              dump the <span class="built_in">log</span> and <span class="keyword">then</span> <span class="built_in">exit</span> (don<span class="string">&#x27;t block)</span></span><br><span class="line"><span class="string">  -t &lt;count&gt;      print only the most recent &lt;count&gt; lines (implies -d)</span></span><br><span class="line"><span class="string">  -g              get the size of the log&#x27;</span>s ring buffer and <span class="built_in">exit</span></span><br><span class="line">  -b &lt;buffer&gt;     Request alternate ring buffer, <span class="string">&#x27;main&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;radio&#x27;</span></span><br><span class="line">                  or <span class="string">&#x27;events&#x27;</span>. Multiple -b parameters are allowed and the</span><br><span class="line">                  results are interleaved. The default is -b main -b system.</span><br><span class="line">  -B              output the <span class="built_in">log</span> <span class="keyword">in</span> binary</span><br><span class="line"></span><br><span class="line">filterspecs are a series of  &lt;tag&gt;[:priority]</span><br><span class="line"></span><br><span class="line"><span class="built_in">where</span> &lt;tag&gt; is a <span class="built_in">log</span> component tag (or * <span class="keyword">for</span> all) and priority is:</span><br><span class="line">  V    Verbose</span><br><span class="line">  D    Debug</span><br><span class="line">  I    Info</span><br><span class="line">  W    Warn</span><br><span class="line">  E    Error</span><br><span class="line">  A    Assert </span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;*&#x27;</span> means <span class="string">&#x27;*:d&#x27;</span> and &lt;tag&gt; by itself means &lt;tag&gt;:v</span><br><span class="line"></span><br><span class="line">If not specified on the commandline, filterspec is <span class="built_in">set</span> from ANDROID_LOG_TAGS.</span><br><span class="line">If no filterspec is found, filter defaults to <span class="string">&#x27;*:I&#x27;</span></span><br><span class="line"></span><br><span class="line">If not specified with -v, format is <span class="built_in">set</span> from ANDROID_PRINTF_LOG</span><br><span class="line">or defaults to <span class="string">&quot;brief&quot;</span></span><br></pre></td></tr></table></figure><p>部分重要参数详解如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[filterspecs]  以&lt;tag&gt;[:priority]序列形式显示指定priority及其以上，指定tag的日志，未指定tag的部分则按默认输出日志</span><br><span class="line"></span><br><span class="line">-b &lt;buffer&gt;</span><br><span class="line">    用于指定要操作的日志缓冲区:system,events,radio,main.系统默认的是system和main 。该选项可以出现多次，以指定多个日志缓冲区。例:</span><br><span class="line">  adb logcat -b system -b main -b events -b radio -s MyActivity:i</span><br><span class="line">     日志输出会指明当前查看的日志缓冲区如：</span><br><span class="line">     --------- beginning of /dev/<span class="built_in">log</span>/radio</span><br><span class="line">     --------- beginning of /dev/<span class="built_in">log</span>/events</span><br><span class="line">     --------- beginning of /dev/<span class="built_in">log</span>/system</span><br><span class="line">     --------- beginning of /dev/<span class="built_in">log</span>/main</span><br><span class="line"></span><br><span class="line">-v &lt;format&gt;  设置<span class="built_in">log</span>打印格式</span><br><span class="line">    brief — 显示prority/tag,产生日志的进程ID,和日志消息(默认格式)。</span><br><span class="line">    process — 显示priority,产生日志的进程ID,和日志消息</span><br><span class="line">    tag — 显示prority/tag,和消息</span><br><span class="line">    thread — 显示priority,线程ID和日志消息</span><br><span class="line">    raw — 只显示消息</span><br><span class="line">    time — 显示日期时间,priority/tag,产生日志的进程Id,和日志消息</span><br><span class="line">    long — 显示所有信息,日志消息另起一行显示,且每个日志间空一行</span><br></pre></td></tr></table></figure><h2 id="log文件抓取方式"><a href="#log文件抓取方式" class="headerlink" title="log文件抓取方式"></a>log文件抓取方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#实时打印</span></span><br><span class="line">logcat main <span class="comment"># APP日志</span></span><br><span class="line">logcat radio <span class="comment"># 射频通话部分日志</span></span><br><span class="line">logcat events <span class="comment"># 系统事件日志</span></span><br><span class="line">logcat system <span class="comment"># 系统日志</span></span><br><span class="line">tcpdump <span class="comment"># 网络通信方面log抓取</span></span><br><span class="line">QXDM  <span class="comment">#高通平台有,主要是Modem射频网络相关的log,同radio但更强大,没怎么接触,不熟悉</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#状态信息</span></span><br><span class="line">adb shell cat /proc/kmsg <span class="comment"># kernel日志,每cat一次清零</span></span><br><span class="line">adb shell dmesg <span class="comment"># kernel日志,开机信息.(var/log/demsg)</span></span><br><span class="line">adb shell dumpstate <span class="comment"># 系统状态信息,比较全面,如:内存,CPU,log缓存等。可以帮助我们确定是否有内存耗光之类的问题</span></span><br><span class="line">adb shell dumpsys <span class="comment"># 系统service相关信息</span></span><br><span class="line">adb bugreport <span class="comment"># 包括上面所有状态信息</span></span><br></pre></td></tr></table></figure><blockquote><p>Shell，Linux，Dos都支持通过“adb shell logcat &gt; filename.txt”的形式将打印信息写入到文件　</p></blockquote><p>　　dumpstate会打印很多有用的信息,我们也可以执行单独命令打印想要的部分信息,如通过“/system/bin/top -n 1 -d 1 -m 30 -t”获取CPU信息，但我现在对这个用得还不多,不是很熟悉,就不多说了,贴部分内容以供参考.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">Build: JZO54K</span><br><span class="line"></span><br><span class="line">Build fingerprint: <span class="string">&#x27;Xiaomi/mione_plus/mione_plus:4.1.2/JZO54K/4.12.5:user/release-keys&#x27;</span></span><br><span class="line"></span><br><span class="line">Bootloader: unknown</span><br><span class="line"></span><br><span class="line">Radio: msm</span><br><span class="line"></span><br><span class="line">Network: (unknown)</span><br><span class="line"></span><br><span class="line">Kernel: Linux version 3.4.0-perf-g1ccebb5-00148-g5f2009a (builder@taishan) (gcc version 4.6.x-google 20120106 (prerelease) (GCC) ) <span class="comment">#1 SMP PREEMPT Fri Dec 27 16:52:36 CST 2013</span></span><br><span class="line"></span><br><span class="line">Command line: console=ttyHSL0,115200,n8 androidboot.hardware=qcom kgsl.mmutype=gpummu vmalloc=400M androidboot.emmc=<span class="literal">true</span> androidboot.serialno=d02b34a3 syspart=system1 androidboot.baseband=msm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------ UPTIME (uptime) ------</span><br><span class="line"></span><br><span class="line">up time: 05:07:48, idle time: 09:38:57, sleep time: 00:10:10</span><br><span class="line"></span><br><span class="line">[uptime: 0.1s elapsed]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------ MEMORY INFO (/proc/meminfo) ------</span><br><span class="line"></span><br><span class="line">MemTotal:         508016 kB</span><br><span class="line"></span><br><span class="line">MemFree:           36688 kB</span><br><span class="line"></span><br><span class="line">Buffers:           12100 kB</span><br><span class="line"></span><br><span class="line">Cached:            84336 kB</span><br><span class="line"></span><br><span class="line">SwapCached:            0 kB</span><br><span class="line"></span><br><span class="line">Active:           327208 kB</span><br><span class="line"></span><br><span class="line">Inactive:          62316 kB</span><br><span class="line"></span><br><span class="line">Active(anon):     294644 kB</span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>　　写这篇blog主要是因为前两篇有些内容没有表达出来，而在强迫症驱使下完成的。因为自己现在经验尚浅，可能有很多不完善和错误的地方，欢迎大家指出。另，如果想通过logcat直接打印kernel日志的话,可以参考<a href="http://blog.csdn.net/ryfjx6/article/details/7096018">http://blog.csdn.net/ryfjx6/article/details/7096018</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to debug with Android logging</title>
      <link href="2015/07/18/Android/%E6%80%8E%E4%B9%88%E7%94%A8Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8E%BB%E8%B0%83%E8%AF%95-How-to-debug-with-Android-logging/"/>
      <url>2015/07/18/Android/%E6%80%8E%E4%B9%88%E7%94%A8Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8E%BB%E8%B0%83%E8%AF%95-How-to-debug-with-Android-logging/</url>
      
        <content type="html"><![CDATA[<p>　　<a href="http://huaqianlee.github.io/2015/07/18/Android/Android-Logging-system-Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/">Android日志系统详解</a><br>　　<a href="http://huaqianlee.github.io/2015/07/18/Android/%E6%80%8E%E4%B9%88%E7%94%A8Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8E%BB%E8%B0%83%E8%AF%95-How-to-debug-with-Android-logging/">How to debug with Android logging</a><br>　　<a href="http://huaqianlee.github.io/2015/07/19/Android/%E6%80%8E%E4%B9%88%E6%8A%93%E5%8F%96Android%E6%B5%8B%E8%AF%95%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-How-to-get-android-log-file/">怎么抓取Android日志文件</a></p><p>　　Android logging system为logging系统提供了一个Java类android.util.Log，也提供了一个c/c++的log库，在kernel中有四个设备节点，详细见：<a href="http://huaqianlee.github.io/2015/07/18/Android/Android-Logging-system-Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/">Android日志系统详解</a>。其系统架构如下：<br>　　　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogaplogd.jpg" alt="image by simon"></p><blockquote><p>此图与4.0以上的系统有些差异,新版Android增加了log_system</p></blockquote><a id="more"></a><p>##Java日志接口<br>　　此接口一般应用于编写APP时。<br>###Logging类<br>类名：android.util.Log，路径：frameworks/base/core/java/android/util/Log.java。主要方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Log.v();</span><br><span class="line">Log.d();</span><br><span class="line">Log.i();</span><br><span class="line">Log.w();</span><br><span class="line">Log.e();</span><br><span class="line">Log.a();</span><br></pre></td></tr></table></figure><p>Log信息显示等级从高到底分别为：ERROR，WARN，INFO，DEBUG，VERBOSE。VERBOSE除了开发期间，是不应该被编译进APP的，DEBUG应该编译但在runtime被忽略，ERROR，WARN和INFO logs则一直被保留。更加详细的内容见 ：<a href="http://developer.android.com/reference/android/util/Log.html">Log.html</a>。</p><blockquote><p>一个好的习惯是在自己的类中定义一个TAG常量，如：private static final String TAG = “MyActivity”;然后通过Log.i(TAG，”I am “+name);　</p></blockquote><p>###Demo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">package me.huaqianlee.demo;</span><br><span class="line">import android.app.Activity;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.widget.TextView;</span><br><span class="line">import android.util.Log; </span><br><span class="line"></span><br><span class="line">private static final String TAG = <span class="string">&quot;MyActivity&quot;</span>;</span><br><span class="line"></span><br><span class="line">public class Demo extends Activity &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        TextView tv = new TextView(this);</span><br><span class="line">        tv.setText(<span class="string">&quot;Hello, I am andy lee!&quot;</span>);</span><br><span class="line">        setContentView(tv);</span><br><span class="line"></span><br><span class="line">        Log.i(TAG, <span class="string">&quot;this is a log.i message&quot;</span>);</span><br><span class="line">        Log.v(TAG, <span class="string">&quot;this  is a log.v message&quot;</span>);</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;this  is a log.d message&quot;</span>);</span><br><span class="line">        Log.w(TAG, <span class="string">&quot;this  is a log.w message&quot;</span>);</span><br><span class="line">        Log.e(TAG, <span class="string">&quot;this  is a log.e message&quot;</span>);</span><br><span class="line">        Log.a(TAG, <span class="string">&quot;this  is a log.a message&quot;</span>);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##C/C++日志接口<br>　　此接口一般应用于JNI和HAL层。<br>###Logging代码<br>　　Log信息的等级同上，关键代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;cutils/log.h&gt; //路径：system/core/include/cutils/log.h</span></span><br><span class="line">/*公共日志宏*/</span><br><span class="line">ALOGV </span><br><span class="line">ALOGD </span><br><span class="line">ALOGI </span><br><span class="line">ALOGW </span><br><span class="line">ALOGE</span><br><span class="line"></span><br><span class="line">/*条件日志宏*/</span><br><span class="line">ALOGV_IF </span><br><span class="line">ALOGD_IF  </span><br><span class="line">ALOGI_IF  </span><br><span class="line">ALOGW_IF  </span><br><span class="line">ALOGE_IF </span><br><span class="line"></span><br><span class="line">// 在system/core/include/<span class="built_in">log</span>/log.h(被cutils/log.h包含)中定义如下：</span><br><span class="line"><span class="comment">#define CONDITION(cond)     (__builtin_expect((cond)!=0, 0))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifndef ALOGV_IF</span></span><br><span class="line"><span class="comment">#if LOG_NDEBUG</span></span><br><span class="line"><span class="comment">#define ALOGV_IF(cond, ...)   ((void)0)</span></span><br><span class="line"><span class="comment">#else</span></span><br><span class="line"><span class="comment">#define ALOGV_IF(cond, ...) \</span></span><br><span class="line">    ( (CONDITION(cond)) \</span><br><span class="line">    ? ((void)ALOG(LOG_VERBOSE, LOG_TAG, __VA_ARGS__)) \</span><br><span class="line">    : (void)0 )</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"><span class="comment">#endif</span></span><br></pre></td></tr></table></figure><blockquote><ol><li>应该首先在c文件中定义LOG_TAG。</li><li>在Android.mk中添加：LOCAL_SHARED_LIBRARIES := liblog libcutils</li></ol></blockquote><p>###Demo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt; </span></span><br><span class="line"><span class="comment">#include &lt;cutils/log.h&gt; /* log header file*/</span></span><br><span class="line"><span class="comment">#include &lt;cutils/properties.h&gt;</span></span><br><span class="line"></span><br><span class="line">/* define <span class="built_in">log</span> tag */</span><br><span class="line"><span class="comment">#ifdef LOG_TAG</span></span><br><span class="line"><span class="comment">#undef LOG_TAG</span></span><br><span class="line"><span class="comment">#define LOG_TAG &quot;app&quot;</span></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    ALOGV(<span class="string">&quot;Verbose: _app&quot;</span>);</span><br><span class="line">    ALOGD(<span class="string">&quot;Debug: _app&quot;</span>);</span><br><span class="line">    ALOGI(<span class="string">&quot;Info: _app&quot;</span>);</span><br><span class="line">    ALOGW(<span class="string">&quot;Warn: _app&quot;</span>);</span><br><span class="line">    ALOGE(<span class="string">&quot;Error: _app&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I am andy lee！\n&quot;</span>);</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##Android上的log格式<br>　　　Log信息的格式及详解如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tv_sec   tv_nsec     priority     pid    tid     tag     messageLen       Message</span><br><span class="line"></span><br><span class="line">tag: 标签</span><br><span class="line">tv_sec &amp; tv_nsec: 日志的时间戳</span><br><span class="line">pid: 打印日志的进程ID</span><br><span class="line">tid: 打印日志的线程ID</span><br><span class="line">Priority： 日志等级（或优先级），取值如下</span><br><span class="line">  V — Verbose (lowest priority)</span><br><span class="line">  D — Debug</span><br><span class="line">  I — Info</span><br><span class="line">  W — Warning</span><br><span class="line">  E — Error</span><br><span class="line">  A — Assert</span><br></pre></td></tr></table></figure><p>##Reference</p><p><a href="http://log4think.com/debug-android-logging/">http://log4think.com/debug-android-logging/</a><br><a href="http://developer.android.com/reference/android/util/Log.html">http://developer.android.com/reference/android/util/Log.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android日志系统(logging system)详解</title>
      <link href="2015/07/18/Android/Android-Logging-system-Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/"/>
      <url>2015/07/18/Android/Android-Logging-system-Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>　　<a href="http://huaqianlee.github.io/2015/07/18/Android/Android-Logging-system-Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/">Android日志系统详解</a><br>　　<a href="http://huaqianlee.github.io/2015/07/18/Android/%E6%80%8E%E4%B9%88%E7%94%A8Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8E%BB%E8%B0%83%E8%AF%95-How-to-debug-with-Android-logging/">How to debug with Android logging</a><br>　　<a href="http://huaqianlee.github.io/2015/07/19/Android/%E6%80%8E%E4%B9%88%E6%8A%93%E5%8F%96Android%E6%B5%8B%E8%AF%95%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-How-to-get-android-log-file/">怎么抓取Android日志文件</a></p><p>　　不管是做Android应用还是做Android中间层和底层，Logging系统都是必须要了解的；因为Android不像单片机程序UCOS那么简单,可以很方便的单步调试。所以，就准备用一篇blog来分析一下logging system。</p><p>##概览<br>　　Android提供了一个灵活的logging系统，允许应用程序和系统组件等整个系统记录logging信息，它是独立于Linux Kernel的一个logging系统，kernel是通过”pr_info”、”printk”等存储，通过“dmesg”或“cat  /proc/kmsg”获取。不过，Android logging 系统也是将信息存在内核缓存区。其结构如下：　<br>　<br>　　　　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogAndroid-logging-system.png" alt="image by Tetsuyuki Kobabayshi"></p><a id="more"></a>　<p>Logging system由如下几部分组成：</p><ul><li>实现loging信息存储的kernel驱动和缓存区</li><li>C，C++和Java 类添加与读取log</li><li>一个单独浏览log信息的程序（logcat）</li><li>能够查看和过滤来自主机的log信息（通过Android Studio 或者 DDMS）</li></ul><p>其在kernel中为系统的不同部分提供了四个不同log缓存区，可以通过/dev/log查看这些不同的设备节点，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/dev/<span class="built_in">log</span>/mian ： 主应用程序<span class="built_in">log</span>，除了下三个外，其他用户空间<span class="built_in">log</span>将写入此节点，包括System.out.print及System.erro.print等</span><br><span class="line">/dev/<span class="built_in">log</span>/events ： 系统事件信息，二进制<span class="built_in">log</span>信息将写入此节点，需要程序解析</span><br><span class="line">/dev/<span class="built_in">log</span>/radio ： 射频通话相关信息，tag 为<span class="string">&quot;HTC_RIL&quot;</span> <span class="string">&quot;RILJ&quot;</span> <span class="string">&quot;RILC&quot;</span> <span class="string">&quot;RILD&quot;</span> <span class="string">&quot;RIL&quot;</span> <span class="string">&quot;AT&quot;</span> <span class="string">&quot;GSM&quot;</span> <span class="string">&quot;STK&quot;</span>的<span class="built_in">log</span>信息将写入此节点</span><br><span class="line">/dev/<span class="built_in">log</span>/system ： 低等级系统信息和debugging,为了防止mian缓存区溢出,而从中分离出来　</span><br></pre></td></tr></table></figure><p>log中的每条信息主要由四部分组成，如下：</p><ul><li>Tag</li><li>时间戳</li><li>log信息level(或者event的优先级)</li><li>log信息</li></ul><p>##Android logger<br>　　logging的kernel driver部分被称作”logger”，其为系统日志提供支持，代码路径: kernel/drivers/staging/android/logger.c，此文件对4种logging缓存区加以支持。</p><p>###驱动<br>　　Log的读写是通过正常Linux文件读写方式完成的，write path被很好的优化过，所以能很快的open()、write()及close()，这样就避免了logging在系统中有太多的开销，影响速度。<br>　<br>#####Reading<br>　　在用户空间，一个正常的read操作通常读取从log读取一个条目，每read一次返回一个log条目或者阻塞等待下一个log条目。设备可以打开非阻塞模式。每一个read请求应该至少请求LOGGER_ENTRY_MAX_LEN (4096)长度的数据。<br>　<br>####Writing<br>　　当系统写数据到log时，driver将为每一个log条目保存pid（进程ID），tgid（线程组ID），timestamp（时间戳），这些信息将出现在用户空间的level，tag和message中。<br>　<br>####Ioctl<br>　　Ioctl函数支持如下cmd：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- LOGGER_GET_LOG_BUF_SIZE ： <span class="built_in">log</span>条目缓存区的大小</span><br><span class="line">- LOGGER_GET_LOG_LEN ： <span class="built_in">log</span>数据的长度</span><br><span class="line">- LOGGER_GET_NEXT_ENTRY_LEN： 下一<span class="built_in">log</span>条目的大小</span><br><span class="line">- LOGGER_FLUSH_LOG ： 清除<span class="built_in">log</span>数据</span><br><span class="line">- LOGGER_GET_VERSION ： 获得logger版本</span><br><span class="line">- LOGGER_GET_VERSION ： 设置logger版本</span><br></pre></td></tr></table></figure><p>###设备节点<br>　　当一个用户空间执行的程序用合适的主设备号和次设备号打开设备节点后，设备节点就处于活动状态，这些设备节点如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@msm8916_32:/ <span class="comment"># ls -al dev/log</span></span><br><span class="line">ls -al dev/<span class="built_in">log</span></span><br><span class="line">crw-rw-rw- root     <span class="built_in">log</span>       10,  61 1970-01-09 02:14 events</span><br><span class="line">crw-rw-rw- root     <span class="built_in">log</span>       10,  62 1970-01-09 02:14 main</span><br><span class="line">crw-rw-rw- root     <span class="built_in">log</span>       10,  60 1970-01-09 02:14 radio</span><br><span class="line">crw-rw-rw- root     <span class="built_in">log</span>       10,  59 1970-01-09 02:14 system</span><br></pre></td></tr></table></figure><p>##系统和应用程序logging<br>　　所有的log信息在Java类中定义并做相应处理，最终一个格式化的消息通过C/C++库传递到内核驱动程序,然后再将消息存储在适当的缓冲区中。<br>###App  log<br>　　App通过导入android.util.Log包来引入Log类，然后通过log方法写不同优先级的相关信息到log。Java类定义传递到log方法的tag为字符串常量，log方法通过这些字符串来获知信息的重要性，这样，当我们用log查看工具（如logcat）时，就可以过滤tag或者优先级来获取我们想要的信息。如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@msm8916_32:/ <span class="comment"># logcat</span></span><br><span class="line">logcat</span><br><span class="line">--------- beginning of system</span><br><span class="line">I/Vold    (  265): Vold 2.1 (the revenge) firing up</span><br><span class="line">D/Vold    (  265): Volume sdcard1 state changing -1 (Initializing) -&gt; 0 (No-Media)</span><br><span class="line">D/Vold    (  265): Volume uicc0 state changing -1 (Initializing) -&gt; 0 (No-Media)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">D/Vold    (  265): Volume usbotg state changing -1 (Initializing) -&gt; 0 (No-Media)</span><br><span class="line"></span><br><span class="line">D/Vold    (  265): Volume uicc1 state changing -1 (Initializing) -&gt; 0 (No-Media)</span><br><span class="line">I/Cryptfs (  265): Check <span class="keyword">if</span> PFE is activated on Boot</span><br><span class="line">E/Cryptfs (  265): Bad magic <span class="keyword">for</span> real block device /dev/block/bootdevice/by-name/userdata</span><br><span class="line">E/Cryptfs (  265): Error getting crypt footer and key</span><br><span class="line">I/irsc_util(  316): irsc tool created:0xb70ff688</span><br><span class="line">I/irsc_util(  316): Starting irsc tool</span><br><span class="line">I/irsc_util(  316): Trying to open sec config file</span><br></pre></td></tr></table></figure><p>###Event log<br>　　Event logs是在android.util.EventLog.class中创建二进制log信息。Log条目由二进制tag代码和二进制参数构成。Event logs 文件存储在system/etc/event-log-tags中，通过cat system/etc/event-log-tags能查看其信息。如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@msm8916_32:/ <span class="comment"># cat system/etc/event-log-tags</span></span><br><span class="line">cat system/etc/event-log-tags</span><br><span class="line">42 answer (to life the universe etc|3)</span><br><span class="line">314 pi</span><br><span class="line">1003 auditd (avc|3)</span><br><span class="line">2718 e</span><br><span class="line">2719 configuration_changed (config mask|1|5)</span><br><span class="line">2720 sync (id|3),(event|1|5),(<span class="built_in">source</span>|1|5),(account|1|5)</span><br><span class="line">2721 cpu (total|1|6),(user|1|6),(system|1|6),(iowait|1|6),(irq|1|6),(softirq|1|6)</span><br><span class="line">2722 battery_level (level|1|6),(voltage|1|1),(temperature|1|1)</span><br><span class="line">2723 battery_status (status|1|5),(health|1|5),(present|1|5),(plugged|1|5),(technology|3)</span><br><span class="line">2724 power_sleep_requested (wakeLocksCleared|1|1)</span><br><span class="line">2725 power_screen_broadcast_send (wakelockCount|1|1)</span><br><span class="line">2726 power_screen_broadcast_done (on|1|5),(broadcastDuration|2|3),(wakelockCount|1|1)</span><br><span class="line">2727 power_screen_broadcast_stop (<span class="built_in">which</span>|1|5),(wakelockCount|1|1)</span><br><span class="line">2728 power_screen_state (offOrOn|1|5),(becauseOfUser|1|5),(totalTouchDownTime|2|3),(touchCycles|1|1)</span><br><span class="line">2729 power_partial_wake_state (releasedorAcquired|1|5),(tag|3)</span><br><span class="line">2730 battery_discharge (duration|2|3),(minLevel|1|6),(maxLevel|1|6)</span><br><span class="line">2740 location_controller</span><br></pre></td></tr></table></figure><p>###System log<br>　　framework层的许多类通过使用system log 来与app的log信息区分开来。System log在android.util.Slog.clash中实现。</p><p>###log命令行工具<br>　　log命令行工具能用来给任意程序穿件log条目，此工具是内建与toolbox的多功能程序。在adb shell中输入log则会提示其用法，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;adb shell</span><br><span class="line">root@msm8916_32:/ <span class="comment"># log</span></span><br><span class="line"><span class="built_in">log</span></span><br><span class="line">USAGE: <span class="built_in">log</span> [-p priorityChar] [-t tag] message</span><br><span class="line">        priorityChar should be one of:</span><br><span class="line">                v,d,i,w,e</span><br></pre></td></tr></table></figure><blockquote><p>toolbox: 具有管理内存、备份和数据清除功能的一个系统文件，用来对手机性能进行设置，需要root权限，能被软件调用。　</p></blockquote><p>###logwrapper<br>　　logwrapper工具是用来捕捉stdout信息的，当需要从本地应用捕捉stdout信息到log时，它将十分有用。源码路径：system/core/logwrapper/logwrapper.c；用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@msm8916_32:/ <span class="comment"># logwrapper</span></span><br><span class="line">logwrapper</span><br><span class="line">Usage: logwrapper [-a] [-d] [-k] BINARY [ARGS ...]</span><br><span class="line"></span><br><span class="line">Forks and executes BINARY ARGS, redirecting stdout and stderr to</span><br><span class="line">the Android logging system. Tag is <span class="built_in">set</span> to BINARY, priority is</span><br><span class="line">always LOG_INFO.</span><br><span class="line"></span><br><span class="line">-a: Causes logwrapper to <span class="keyword">do</span> abbreviated logging.</span><br><span class="line">    This logs up to the first 4K and last 4K of the <span class="built_in">command</span></span><br><span class="line">    being run, and logs the output when the <span class="built_in">command</span> exits</span><br><span class="line">-d: Causes logwrapper to SIGSEGV when BINARY terminates</span><br><span class="line">    fault address is <span class="built_in">set</span> to the status of <span class="built_in">wait</span>()</span><br><span class="line">-k: Causes logwrapper to <span class="built_in">log</span> to the kernel <span class="built_in">log</span> instead of</span><br><span class="line">    the Android system <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>###Logcat命令<br>　　我们可以通过logcat命令查看log，这个命令文件在文件系统的system/bin目录下，所以我们可以到文件系统中执行logcat，或者直接adb logcat，都能查看log。adb用法可以查看<a href="http://developer.android.com/guide/developing/tools/adb.html">adb.html</a>(需翻墙，等什么时候有空以中文形式移到blog来)。</p><ul><li>每一个有tag和优先级的log信息</li><li>可以通过tag和log等级过滤log信息</li><li>可以通过系统属性指定程序将stdout和stderr内容写入日志</li></ul><p>##在启动阶段默认打开Logcat<br>　　Android logging和kernel logging是完全不同的两种日志系统，另补充一点，kernel日志支持直接在用户空间向/dev/kmsg写入log条目。<a href="http://groups.google.com/group/android-kernel/browse_thread/thread/87d929863ce7c29e/f8b0da9ed6376b2f?pli=1">groups.google.com</a>中介绍了如何在启动阶段launch Logcat，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">it can be launched via init.rc as below.. </span><br><span class="line"></span><br><span class="line">service logcat /system/bin/logcat -f /dev/kmsg </span><br><span class="line">       oneshot </span><br></pre></td></tr></table></figure><blockquote><p>不推荐这样做，这样会增加打印开销，使系统卡顿　</p></blockquote><p>##Reference　　<br><a href="http://elinux.org/Android_Logging_System">http://elinux.org/Android_Logging_System</a> (大部分内容译自此文档)<br><a href="http://developer.android.com/guide/developing/tools/adb.html">http://developer.android.com/guide/developing/tools/adb.html</a><br><a href="http://groups.google.com/group/android-kernel/browse_thread/thread/87d929863ce7c29e/f8b0da9ed6376b2f?pli=1">http://groups.google.com/group/android-kernel/browse_thread/thread/87d929863ce7c29e/f8b0da9ed6376b2f?pli=1</a></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log </tag>
            
            <tag> 译文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android编译过程详解之三</title>
      <link href="2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%89/"/>
      <url>2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<p>　　<a href="http://huaqianlee.github.io/2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/">Android编译过程详解之一</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/">Android编译过程详解之二</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%89/">Android编译过程详解之三</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/">Android.mk解析</a></p><p>　　前两个篇基本完全涉及到了整个编译过程，接下来着重分析一下和公司产品相关的mk文件。有两个路径前面没有怎么提到过，如下：      </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">build/target/product <span class="comment"># 当前产品配置的mk文件，如：需要包含哪些apk在此产品中</span></span><br><span class="line">build/target/board  <span class="comment"># 硬件芯片配置的mk文件，如：GPU、是否支持浮点运算等</span></span><br></pre></td></tr></table></figure><p>　　除以上两个路径外，对产品定义的文件通常位于device目录下，还可以定义在vender目录下（不过Google已不建议如此做了），device目录下根据公司名和产品名分为两级目录，这个上文已经介绍过。通常一个产品定义如下四个文件：</p><ul><li>AndroidProducts.mk </li><li>产品版本定义文件（一般针对不同应用环境存在多个，如：msm8916_32.mk）</li><li>BoardConfig.mk</li><li>verndorsetup.sh</li></ul><h2 id="AndroidProducts-mk"><a href="#AndroidProducts-mk" class="headerlink" title="AndroidProducts.mk"></a>AndroidProducts.mk</h2><a id="more"></a><p>此文件定义PRODUCT_MAKEFILES ，用来导入产品版本配置文件列表，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">1. build\target\product\AndroidProducts.mk  ＃定义默认产品配置文件</span><br><span class="line">ifneq ($(TARGET_BUILD_APPS),)　＃根据TARGET_BUILD_APPS确定编译那些APP，TARGET_BUILD_APPS由上文envsetup.sh中的命令指定</span><br><span class="line">PRODUCT_MAKEFILES := \</span><br><span class="line">    $(LOCAL_DIR)/aosp_arm.mk \</span><br><span class="line">    $(LOCAL_DIR)/full.mk \</span><br><span class="line">    $(LOCAL_DIR)/generic_armv5.mk \</span><br><span class="line">    $(LOCAL_DIR)/aosp_x86.mk \</span><br><span class="line">    $(LOCAL_DIR)/full_x86.mk \</span><br><span class="line">    $(LOCAL_DIR)/aosp_mips.mk \</span><br><span class="line">    $(LOCAL_DIR)/full_mips.mk</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">PRODUCT_MAKEFILES := \</span><br><span class="line">    $(LOCAL_DIR)/core.mk \</span><br><span class="line">    $(LOCAL_DIR)/generic.mk \</span><br><span class="line">    $(LOCAL_DIR)/generic_x86.mk \</span><br><span class="line">    $(LOCAL_DIR)/generic_mips.mk \</span><br><span class="line">    $(LOCAL_DIR)/aosp_arm.mk \</span><br><span class="line">    $(LOCAL_DIR)/full.mk \</span><br><span class="line">    $(LOCAL_DIR)/aosp_x86.mk \</span><br><span class="line">    $(LOCAL_DIR)/full_x86.mk \</span><br><span class="line">    $(LOCAL_DIR)/aosp_mips.mk \</span><br><span class="line">    $(LOCAL_DIR)/full_mips.mk \</span><br><span class="line">    $(LOCAL_DIR)/vbox_x86.mk \</span><br><span class="line">    $(LOCAL_DIR)/sdk.mk \</span><br><span class="line">    $(LOCAL_DIR)/sdk_x86.mk \</span><br><span class="line">    $(LOCAL_DIR)/sdk_mips.mk \</span><br><span class="line">    $(LOCAL_DIR)/large_emu_hw.mk</span><br><span class="line">endif</span><br><span class="line">2. device\qcom\msm8916_32\AndroidProducts.mk  <span class="comment"># 自定义产品配置文件，内容如下：</span></span><br><span class="line">　PRODUCT_MAKEFILES := \</span><br><span class="line">　$(LOCAL_DIR)/msm8916_32.mk</span><br></pre></td></tr></table></figure><h2 id="产品版本定义文件"><a href="#产品版本定义文件" class="headerlink" title="产品版本定义文件"></a>产品版本定义文件</h2><p>对于我用到文件则为msm8916_32.mk，主要定义此产品版本要编入哪些东西，主要变量如下：</p><h3 id="产品版本定义文件定义变量"><a href="#产品版本定义文件定义变量" class="headerlink" title="产品版本定义文件定义变量"></a>产品版本定义文件定义变量</h3><table><thead><tr><th>常量</th><th>说明</th></tr></thead><tbody><tr><td>PRODUCT_NAME</td><td>最终用户将看到的完整产品名，会出现在“关于手机”信息中</td></tr><tr><td>PRODUCT_MODEL</td><td>产品的型号，这也是最终用户将看到的</td></tr><tr><td>PRODUCT_LOCALES</td><td>该产品支持的地区，以空格分格，例如：en_GB de_DE es_ES fr_CA</td></tr><tr><td>PRODUCT_PACKAGES</td><td>该产品版本中包含的 APK 应用程序，以空格分格，例如：Calendar Contacts</td></tr><tr><td>PRODUCT_DEVICE</td><td>该产品的工业设计的名称</td></tr><tr><td>PRODUCT_MANUFACTURER</td><td>制造商的名称</td></tr><tr><td>PRODUCT_BRAND</td><td>该产品专门定义的商标（如果有的话）</td></tr><tr><td>PRODUCT_PROPERTY_OVERRIDES</td><td>对于商品属性的定义</td></tr><tr><td>PRODUCT_COPY_FILES</td><td>编译该产品时需要拷贝的文件，以“源路径 : 目标路径”的形式</td></tr><tr><td>PRODUCT_OTA_PUBLIC_KEYS</td><td>对于该产品的 OTA 公开 key 的列表</td></tr><tr><td>PRODUCT_POLICY</td><td>产品使用的策略</td></tr><tr><td>PRODUCT_PACKAGE_OVERLAYS</td><td>指出是否要使用默认的资源或添加产品特定定义来覆盖</td></tr><tr><td>PRODUCT_CONTRIBUTORS_FILE</td><td>HTML 文件，其中包含项目的贡献者</td></tr><tr><td>PRODUCT_TAGS</td><td>该产品的标签，以空格分格</td></tr></tbody></table><h3 id="msm8916-32-mk"><a href="#msm8916-32-mk" class="headerlink" title="msm8916_32.mk"></a>msm8916_32.mk</h3><p>此文件除了引入定义以上变量以外，还有如下关键代码：　</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(call inherit-product, device/qcom/common/common.mk) <span class="comment"># 继承common.mk，此文件定义了很多值为配置文件、脚本文件的常量</span></span><br><span class="line"></span><br><span class="line">-include $(QCPATH)/common/config/rendering-engine.mk <span class="comment"># （字体渲染引擎开关）font rendering engine feature switch</span></span><br><span class="line">-include $(TOP)/customer/oem_common.mk <span class="comment"># 自定义，引入一些定制变量</span></span><br></pre></td></tr></table></figure><h2 id="BoardConfig-mk"><a href="#BoardConfig-mk" class="headerlink" title="BoardConfig.mk"></a>BoardConfig.mk</h2><p>　　该文件用来配置硬件主板，它其中定义的都是设备底层的硬件特性。例如：该设备的主板相关信息，Wifi 相关信息，还有 bootloader，内核，radioimage 等信息。对于该文件的示例，请参看 Android 源码树已经有的文件。</p><h2 id="vendorsetup-sh"><a href="#vendorsetup-sh" class="headerlink" title="vendorsetup.sh"></a>vendorsetup.sh</h2><p>　　该文件中作用是通过 add_lunch_combo 函数在 lunch 函数中添加一个菜单选项。该函数的参数是产品名称加上编译类型，中间以“-”连接，例如：add_lunch_combo full_lt26-userdebug。/build/envsetup.sh 会扫描所有 device 和 vender 二 级目 录下的名称 为”vendorsetup.sh”文件，并根据其中的内容来确定 lunch 函数的 菜单选项。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>　　只有代码不会说谎，此文可能过时, 不过可以给你一个大致的脉络，然后再跟一下代码，就ok了。另，如需了解模块mk文件，参考我的另一篇博文：<a href="http://huaqianlee.github.io/2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/">Android.mk解析</a>。我写这系列博客，主要参考了Google官网和另外两篇网上Google出来的文章，地址见下References，感谢Google，感谢另两篇文章的作者。　　　</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="http://source.android.com/source/initializing.html">http://source.android.com/source/initializing.html</a> （需翻墙）<br><a href="http://source.android.com/source/building.html">http://source.android.com/source/building.html</a> （需翻墙）<br><a href="http://www.cnblogs.com/mr-raptor/archive/2012/06/07/2540359.html">http://www.cnblogs.com/mr-raptor/archive/2012/06/07/2540359.html</a><br><a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-android-build/">http://www.ibm.com/developerworks/cn/opensource/os-cn-android-build/</a></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> 编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android编译过程详解之二</title>
      <link href="2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/"/>
      <url>2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<p>　　<a href="http://huaqianlee.github.io/2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/">Android编译过程详解之一</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/">Android编译过程详解之二</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%89/">Android编译过程详解之三</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/">Android.mk解析</a><br>　<br>　　配置好环境变量后，接下来要做的就是build了。为了提高编译速度，我们自定义了一个go.sh的脚本文件，详细下面解释。另，编译的时候一般会在后面加一个-j8来实现多线程编译，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　　./go.sh -j8 or make -j8／--<span class="built_in">jobs</span> 　</span><br></pre></td></tr></table></figure><p>参数“-j“ 和”–jobs ”指定了同时编译的线程数量，通常是编译主机 CPU 支持的并发线程总数的 1 倍或 2 倍（如：在一个 4 核，每个核支持两个线程的 CPU 上，可以使用 make -j8 或 make -j16）。在调用 make 命令时，如果没有指定任何目标，则将编译默认目标“droid”（下面详解），然后将会编译出完整的 Android 系统镜像。</p><h2 id="build系统分类"><a href="#build系统分类" class="headerlink" title="build系统分类"></a>build系统分类</h2><p>　　整个build系统的Make文件可以分为三类：</p><ol><li>build系统核心文件：定义整个build系统的框架，其他所有make文件都是在这个框架的基础上写出来的。</li><li>产品的make文件：位于device目录，通常以公司名和产品名分为两级目录，如：\device\qcom\msm8916_32。</li><li>模块的make文件：每个模块专用的make文件，kernel中统一名字为Makefile，其他为Android.mk。　</li></ol><h2 id="build结果"><a href="#build结果" class="headerlink" title="build结果"></a>build结果</h2><p>所有的编译产物都将位于 /out 目录下，该目录下主要有以下几个子目录：</p><ul><li>/out/host/：该目录下包含了针对主机的 Android 开发工具的产物。即 SDK 中的各种工具，例如：emulator，adb，aapt 等。</li><li>/out/target/common/：该目录下包含了针对设备的共通的编译产物，主要是 Java 应用代码和 Java 库。</li><li>/out/target/product/<product_name>/：包含了针对特定设备的编译结果以及平台相关的 C/C++ 库和二进制文件。其中，<product_name>是具体目标设备的名称。</li><li>/out/dist/：包含了为多种分发而准备的包，通过“make disttarget”将文件拷贝到该目录，默认的编译目标不会产生该目录。<a id="more"></a>Build 的产物中最重要的是几个镜像文件，它们都位于 /out/target/product/<product_name>/ 目录下。</li><li>system.img：包含了 Android OS 的系统文件，库，可执行文件以及预置的应用程序，将被挂载到根分区，描述的是设备上的system分区，即/system目录。</li><li>ramdisk.img：在启动时将被 Linux 内核挂载为只读分区，它包含了 /init 文件和一些配置文件。它用来挂载其他系统镜像、文件系统，并启动 init 进程。</li><li>userdata.img：将被挂载为 /data，包含了应用程序相关的数据以及和用户相关的数据。</li><li>boot.img：包含有Kernel及其启动参数、Ramdisk，以及可选的BootLoader第二阶段。</li><li>recovery.img：设备进入recovery模式时所加载的镜像，相当于除正常启动系统的第二系统，此系统用来更新正常系统，即刷机。</li></ul><h2 id="go-sh"><a href="#go-sh" class="headerlink" title="go.sh"></a>go.sh</h2><p>先来分析一下go.sh文件，其代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;OEM_PROJECT_NAME=<span class="variable">$OEM_PROJECT_NAME</span>&quot;</span></span><br><span class="line">start_time=`date +%s`</span><br><span class="line"><span class="built_in">source</span> customer/oem_define.sh <span class="comment"># 导入OEM厂商配置</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">setup_ccache</span></span>() &#123;　＃设置ccache，提高编译速度</span><br><span class="line">    <span class="built_in">export</span> CCACHE_DIR=../.ccache</span><br><span class="line">    <span class="built_in">export</span> USE_CCACHE=1</span><br><span class="line">    <span class="keyword">if</span> [ ! -d <span class="variable">$CCACHE_DIR</span> ];<span class="keyword">then</span> </span><br><span class="line">    prebuilts/misc/linux-x86/ccache/ccache -M 10G　　＃设置编译文件缓存大小为10G</span><br><span class="line">    <span class="keyword">fi</span>    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">delete_ccache</span></span>() &#123; <span class="comment"># 删除缓存</span></span><br><span class="line">    prebuilts/misc/linux-x86/ccache/ccache -C</span><br><span class="line">    rm -rf <span class="variable">$CCACHE_DIR</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setup_ccache <span class="comment"># 调用setup_ccache()</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;clean&quot;</span> ];<span class="keyword">then</span>  <span class="comment">#如果第一个参数为clean，清除ccache缓存</span></span><br><span class="line">delete_ccache</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">oemtools/copy_mp.sh  <span class="comment"># copy modem bin文件</span></span><br><span class="line">make <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span> <span class="variable">$4</span> <span class="variable">$5</span>  <span class="comment"># 调用Makefile编译，下面详解 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">end_time=`date +%s`</span><br><span class="line"><span class="built_in">let</span> min=(<span class="variable">$end_time</span>-<span class="variable">$start_time</span>)/60</span><br><span class="line"><span class="built_in">let</span> sec=(<span class="variable">$end_time</span>-<span class="variable">$start_time</span>)%60</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;build_time <span class="variable">$min</span> mins <span class="variable">$sec</span> seconds&quot;</span>  <span class="comment">#打印编译时间</span></span><br></pre></td></tr></table></figure><h2 id="make"><a href="#make" class="headerlink" title="make"></a>make</h2><p>　　执行make命令的时候会执行当前路径的Makefile文件，内容如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### DO NOT EDIT THIS FILE ###</span></span><br><span class="line">include build/core/main.mk 　　</span><br><span class="line"><span class="comment">### DO NOT EDIT THIS FILE ###</span></span><br></pre></td></tr></table></figure><p>　　相信上面的文件大家都能看懂，接下来就解析一下main.mk，此文件中定义了整个Android的编译关系，主要文件（黄色背景除$开头的文件皆位于build\core\目录下）关系如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/20150711Makemain_mk.png" alt="make"></p><h3 id="main-mk"><a href="#main-mk" class="headerlink" title="main.mk"></a>main.mk</h3><p>　　此文件首先对编译环境进行检查，然后引入其他相关mk文件，另，还将定义几个主要的make目标，如droid，sdk等，关键代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主要引入了如下mk文件</span></span><br><span class="line">include $(BUILD_SYSTEM)/help.mk <span class="comment"># Targets that provide quick help on the build system.</span></span><br><span class="line">-include $(OEM_RESOURCE_DIR)/CustomerSpec.mk <span class="comment"># 自定义，引入项目配置文件</span></span><br><span class="line">-include $(TOP)/customer/oem_define.mk <span class="comment"># 导入OEM厂商配置</span></span><br><span class="line">-include $(BUILD_SYSTEM)/config.mk <span class="comment">#整个build系统的配置文件</span></span><br><span class="line">-include $(BUILD_SYSTEM)/cleanbuild.mk <span class="comment"># 允许强制清除编译文件</span></span><br><span class="line">-include vendor/google/build/config.mk <span class="comment">#Google特性配置</span></span><br><span class="line">-include $(BUILD_SYSTEM)/definitions.mk <span class="comment"># 引入Build 系统其他文件将用到的函数和全局变量定义。例如：</span></span><br><span class="line">    my-dir : 当前路径</span><br><span class="line">    all-subdir-makefiles ：当前目录及子目录Makefile文件</span><br><span class="line">    all-subdir-java-files：当前目录及子目录java文件</span><br><span class="line">    all-java-files-under： 指定目录及子目录java文件</span><br><span class="line">    sign-package ： 对package签名</span><br><span class="line">    include $(BUILD_SYSTEM)/distdir.mk <span class="comment"># 定义dist目标，dist目标用来拷贝文件到指定路径</span></span><br><span class="line">-include $(BUILD_SYSTEM)/dex_preopt.mk <span class="comment"># 针对启动jar包的预优化</span></span><br><span class="line">-include build/core/pdk_config.mk <span class="comment"># pdk（Platform Development Kit）的配置包</span></span><br><span class="line">-include $(BUILD_SYSTEM)/post_clean.mk  <span class="comment"># 在前一次 Build 的基础上检查当前 Build 的配置，并执行必要清理工作</span></span><br><span class="line">-include $(BUILD_SYSTEM)/legacy_prebuilts.mk <span class="comment"># 定义GRANDFATHERED_ALL_PREBUILT </span></span><br><span class="line">-include $(BUILD_SYSTEM)/Makefile <span class="comment"># main.mk的辅助文件</span></span><br><span class="line">-include $(BUILD_SYSTEM)/help.mk <span class="comment"># 列出主要的make目标及其说明</span></span><br><span class="line">-include $(ONE_SHOT_MAKEFILE) <span class="comment"># 一个变量，当使用“mm”编译时，值为当前指定路径下的mk文件路径</span></span><br><span class="line">...</span><br><span class="line">DEFAULT_GOAL := droid <span class="comment"># 定义默认make目标</span></span><br><span class="line"><span class="comment"># 依据不同编译条件，包含不同目录</span></span><br><span class="line">subdirs += build/tools/acp</span><br><span class="line">subdirs := $(TOP)</span><br><span class="line"><span class="comment"># 导入所有Android.mk,顶层Android.mk下详解</span></span><br><span class="line">subdir_makefiles := \</span><br><span class="line">$(shell build/tools/findleaves.py --prune=$(OUT_DIR)  --prune=.repo --prune=.git --prune=kernel --prune=prj_out --prune=links --prune=.svn $(subdirs) Android.mk) </span><br></pre></td></tr></table></figure><blockquote><p>编译器平台相关的mk文件在build\core\combo路径下，如：javac.mk、select.mk等　</p></blockquote><p>另，因定义了DEFAULT_GOAL := droid，当在根目录输入“Make”时，实际上就等同于我们执行“make droid”。加载include的所有文件，完成对所有mk文件的解析以后就会寻找生成droid的规则，依次生成它的依赖，直到所有满足的模块被编译好，然后使用相应的工具打包成相应的img。　</p><p>　droid目标依赖于很多其他目标，这些目标相互配合实现了整个系统的编译，droid依赖的其他make目标关系如下图：<br>　　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogdroid.png" alt="droid依赖目标关系图">　</p><p>　build系统中的一些make目标如下：</p><h3 id="droid的依赖目标"><a href="#droid的依赖目标" class="headerlink" title="droid的依赖目标"></a>droid的依赖目标</h3><table><thead><tr><th>目标</th><th>说明</th></tr></thead><tbody><tr><td>$(modules_to_install)</td><td>modules_to_install 变量包含了当前配置下所有会被安装的模块（一个模块是否会被安装依赖于该产品的配置文件，模块的标签等信息），因此该目标将导致所有会被安装的模块的编译</td></tr><tr><td>$(modules_to_check)</td><td>该目标用来确保我们定义的构建模块是没有冗余的</td></tr><tr><td>$(INSTALLED_ANDROID_INFO_TXT_TARGET)</td><td>该目标会生成一个关于当前 Build 配置的设备信息的文件，该文件的生成路径是：out/target/product/<product_name>/android-info.txt</td></tr><tr><td>systemimage</td><td>生成 system.img</td></tr><tr><td>$(INSTALLED_BOOTIMAGE_TARGET)</td><td>生成 boot.img</td></tr><tr><td>$(INSTALLED_RECOVERYIMAGE_TARGET)</td><td>生成 recovery.img</td></tr><tr><td>$(INSTALLED_USERDATAIMAGE_TARGET)</td><td>生成 userdata.img</td></tr><tr><td>$(INSTALLED_CACHEIMAGE_TARGET)</td><td>生成 cache.img</td></tr><tr><td>$(INSTALLED_FILES_FILE)</td><td>该目标会生成 out/target/product/<product_name>/ installed-files.txt 文件，该文件中内容是当前系统镜像中已经安装的文件列表</td></tr></tbody></table><h3 id="其他主要目标"><a href="#其他主要目标" class="headerlink" title="其他主要目标"></a>其他主要目标</h3><table><thead><tr><th>目标</th><th>说明</th></tr></thead><tbody><tr><td>make clean</td><td>执行清理，等同于：rm -rf out/</td></tr><tr><td>make sdk</td><td>编译出 Android 的 SDK</td></tr><tr><td>make clean-sdk</td><td>清理 SDK 的编译产物</td></tr><tr><td>make update-api</td><td>更新 API。在 framework API 改动之后，需要首先执行该命令来更新 API，公开的 API 记录在 frameworks/base/api 目录下</td></tr><tr><td>make dist</td><td>执行 Build，并将 MAKECMDGOALS 变量定义的输出文件拷贝到 /out/dist 目录</td></tr><tr><td>make all</td><td>编译所有内容，不管当前产品的定义中是否会包含</td></tr><tr><td>make help</td><td>帮助信息，显示主要的 make 目标</td></tr><tr><td>make snod</td><td>从已经编译出的包快速重建系统镜像</td></tr><tr><td>make libandroid_runtime</td><td>编译所有 JNI framework 内容</td></tr><tr><td>make framework</td><td>编译所有 Java framework 内容</td></tr><tr><td>make services</td><td>编译系统服务和相关内容</td></tr><tr><td>make <local_target></td><td>编译一个指定的模块，local_target 为模块的名称</td></tr><tr><td>make clean-<local_target></td><td>清理一个指定模块的编译结果</td></tr><tr><td>make dump-products</td><td>显示所有产品的编译配置信息，例如：产品名，产品支持的地区语言，产品中会包含的模块等信息</td></tr><tr><td>make PRODUCT-xxx-yyy</td><td>编译某个指定的产品</td></tr><tr><td>make bootimage</td><td>生成 boot.img</td></tr><tr><td>make recoveryimage</td><td>生成 recovery.img</td></tr><tr><td>make userdataimage</td><td>生成 userdata.img</td></tr><tr><td>make cacheimage</td><td>生成 cache.img</td></tr></tbody></table><h3 id="build-core-config-mk"><a href="#build-core-config-mk" class="headerlink" title="build\core\config.mk"></a>build\core\config.mk</h3><p>　　此文件是最重要的mk文件之一，主要定义不同模块的编译常量、编译参数及常见文件后缀（如.zip,.jar,.apk）；根据BoardConfig.mk配置产品相关参数；设置常用工具的路径。其主要源码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义标准源文件路径等的环境变量</span></span><br><span class="line">SRC_HEADERS := \</span><br><span class="line">$(TOPDIR)system/core/include \</span><br><span class="line">$(TOPDIR)hardware/libhardware/include \</span><br><span class="line">$(TOPDIR)hardware/libhardware_legacy/include \</span><br><span class="line">$(TOPDIR)hardware/ril/include \</span><br><span class="line">$(TOPDIR)libnativehelper/include \</span><br><span class="line">$(TOPDIR)frameworks/native/include \</span><br><span class="line">$(TOPDIR)frameworks/native/opengl/include \</span><br><span class="line">$(TOPDIR)frameworks/av/include \</span><br><span class="line">$(TOPDIR)frameworks/base/include \</span><br><span class="line">$(TOPDIR)external/skia/include</span><br><span class="line">SRC_HOST_HEADERS:=$(TOPDIR)tools/include  </span><br><span class="line">SRC_LIBRARIES:= $(TOPDIR)libs</span><br><span class="line">SRC_SERVERS:= $(TOPDIR)servers</span><br><span class="line">SRC_TARGET_DIR := $(TOPDIR)build/target</span><br><span class="line">SRC_API_DIR := $(TOPDIR)prebuilts/sdk/api</span><br><span class="line">...</span><br><span class="line">include $(BUILD_SYSTEM)/dumpvar.mk  <span class="comment"># build之前显示此次build的配置信息</span></span><br><span class="line">include $(BUILD_SYSTEM)/pathmap.mk <span class="comment"># 将许多头文件的路径通过名值对的方式定义为映射表，并提供 include-path-for 函数来获取。如，通过$(call include-path-for, frameworks-native)便可以获取到 framework 本地代码需要的头文件路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义编译命令常量，对应相关mk文件，每个常量描述一种类型模块的编译方式</span></span><br><span class="line">BUILD_COMBOS:= $(BUILD_SYSTEM)/combo <span class="comment"># 编译器平台相关mk文件</span></span><br><span class="line">CLEAR_VARS:= $(BUILD_SYSTEM)/clear_vars.mk <span class="comment"># 清除之前定义环境变量</span></span><br><span class="line">BUILD_HOST_STATIC_LIBRARY:= $(BUILD_SYSTEM)/host_static_library.mk  <span class="comment"># 编译主机静态库，指编译此系统的主机，即PC</span></span><br><span class="line">BUILD_HOST_SHARED_LIBRARY:= $(BUILD_SYSTEM)/host_shared_library.mk <span class="comment"># 编译主机动态库</span></span><br><span class="line">BUILD_STATIC_LIBRARY:= $(BUILD_SYSTEM)/static_library.mk <span class="comment"># 编译设备静态库</span></span><br><span class="line">BUILD_RAW_STATIC_LIBRARY := $(BUILD_SYSTEM)/raw_static_library.mk <span class="comment"># 编译原生静态库</span></span><br><span class="line">BUILD_SHARED_LIBRARY:= $(BUILD_SYSTEM)/shared_library.mk <span class="comment"># 编译设备动态库</span></span><br><span class="line">BUILD_EXECUTABLE:= $(BUILD_SYSTEM)/executable.mk <span class="comment"># 编译设备可执行文件</span></span><br><span class="line">BUILD_RAW_EXECUTABLE:= $(BUILD_SYSTEM)/raw_executable.mk <span class="comment"># 编译原生可执行文件</span></span><br><span class="line">BUILD_HOST_EXECUTABLE:= $(BUILD_SYSTEM)/host_executable.mk <span class="comment"># 编译主机可执行文件</span></span><br><span class="line">BUILD_PACKAGE:= $(BUILD_SYSTEM)/package.mk <span class="comment"># 编译apk文件</span></span><br><span class="line">BUILD_PHONY_PACKAGE:= $(BUILD_SYSTEM)/phony_package.mk <span class="comment"># </span></span><br><span class="line">BUILD_HOST_PREBUILT:= $(BUILD_SYSTEM)/host_prebuilt.mk <span class="comment"># 处理一个或多个主机使用的已编译文件，依赖multi_prebuilt.mk</span></span><br><span class="line">BUILD_PREBUILT:= $(BUILD_SYSTEM)/prebuilt.mk <span class="comment"># 处理一个已经编译好的文件，如：jar包</span></span><br><span class="line">BUILD_MULTI_PREBUILT:= $(BUILD_SYSTEM)/multi_prebuilt.mk <span class="comment"># 处理一个或多个已编译文件，依赖prebuilt.mk</span></span><br><span class="line">BUILD_JAVA_LIBRARY:= $(BUILD_SYSTEM)/java_library.mk <span class="comment"># 编译设备动态java库</span></span><br><span class="line">BUILD_STATIC_JAVA_LIBRARY:= $(BUILD_SYSTEM)/static_java_library.mk <span class="comment"># 编译设备静态java库 </span></span><br><span class="line">BUILD_HOST_JAVA_LIBRARY:= $(BUILD_SYSTEM)/host_java_library.mk  <span class="comment"># 编译主机动态java库</span></span><br><span class="line">BUILD_DROIDDOC:= $(BUILD_SYSTEM)/droiddoc.mk</span><br><span class="line">BUILD_COPY_HEADERS := $(BUILD_SYSTEM)/copy_headers.mk</span><br><span class="line">BUILD_NATIVE_TEST := $(BUILD_SYSTEM)/native_test.mk</span><br><span class="line">BUILD_HOST_NATIVE_TEST := $(BUILD_SYSTEM)/host_native_test.mk</span><br><span class="line">BUILD_NOTICE_FILE := $(BUILD_SYSTEM)/notice_files.mk</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">include $(BUILD_SYSTEM)/envsetup.mk <span class="comment">#定义全局变量、用户特殊编译配置等 ，下详解</span></span><br><span class="line"><span class="comment"># Boards may be defined under $(SRC_TARGET_DIR)/board/$(TARGET_DEVICE)</span></span><br><span class="line"><span class="comment"># or under vendor/*/$(TARGET_DEVICE).  Search in both places, but</span></span><br><span class="line"><span class="comment"># make sure only one exists.</span></span><br><span class="line"><span class="comment"># Real boards should always be associated with an OEM vendor.</span></span><br><span class="line"><span class="comment">#在$(SRC_TARGET_DIR)/board/$(TARGET_DEVICE) 或vendor/*/$(TARGET_DEVICE)中搜索BoardConfig.mk文件，但两个路径中只能存在一个mk文件</span></span><br><span class="line">board_config_mk := \</span><br><span class="line">$(strip $(wildcard \</span><br><span class="line">$(SRC_TARGET_DIR)/board/$(TARGET_DEVICE)/BoardConfig.mk \</span><br><span class="line">$(shell <span class="built_in">test</span> -d device &amp;&amp; find device -maxdepth 4 -path <span class="string">&#x27;*/$(TARGET_DEVICE)/BoardConfig.mk&#x27;</span>) \</span><br><span class="line">$(shell <span class="built_in">test</span> -d vendor &amp;&amp; find vendor -maxdepth 4 -path <span class="string">&#x27;*/$(TARGET_DEVICE)/BoardConfig.mk&#x27;</span>) \</span><br><span class="line">))</span><br><span class="line">ifeq ($(board_config_mk),)</span><br><span class="line">  $(error No config file found <span class="keyword">for</span> TARGET_DEVICE $(TARGET_DEVICE))</span><br><span class="line">endif</span><br><span class="line">ifneq ($(words $(board_config_mk)),1)</span><br><span class="line">  $(error Multiple board config files <span class="keyword">for</span> TARGET_DEVICE $(TARGET_DEVICE): $(board_config_mk))</span><br><span class="line">endif</span><br><span class="line">include $(board_config_mk)</span><br><span class="line">ifeq ($(TARGET_ARCH),)</span><br><span class="line">  $(error TARGET_ARCH not defined by board config: $(board_config_mk))</span><br><span class="line">endif</span><br><span class="line">TARGET_DEVICE_DIR := $(patsubst %/,%,$(dir $(board_config_mk)))</span><br><span class="line">board_config_mk :=</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>　　不同类型的模块的编译过程会有一些相同的步骤，例如：编译一个 Java 库和编译一个 APK 文件都需要定义如何编译 Java 文件。因此，config.mk中导入的mk 文件的定义中会包含一些共同的代码逻辑。为了减少代码冗余，将共同的代码复用起来，将共同代码放到专门的文件中，然后在其他文件中包含这些文件的方式来实现的。这些包含关系如下图所示：<br>　　　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogmk.png" alt="模块mk文件的关系"></p><h3 id="build-core-envsetup-mk"><a href="#build-core-envsetup-mk" class="headerlink" title="build\core\ envsetup.mk"></a>build\core\ envsetup.mk</h3><p>此文件主要包括product_config.mk文件，配置build系统需要的环境变量，确定当前编译的主机平台信息，然后指定编译时输出文件的OUT目录。部分关键代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The product defaults to generic on hardware</span></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> This will be overridden in product_config.mk if make</span></span><br><span class="line"><span class="comment"># was invoked with a PRODUCT-xxx-yyy goal.</span></span><br><span class="line">ifeq ($(TARGET_PRODUCT),)</span><br><span class="line">TARGET_PRODUCT := full</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line"><span class="comment"># the variant -- the set of files that are included for a build</span></span><br><span class="line">ifeq ($(strip $(TARGET_BUILD_VARIANT)),)</span><br><span class="line">TARGET_BUILD_VARIANT := eng</span><br><span class="line">endif</span><br><span class="line">...</span><br><span class="line"><span class="comment"># Read the product specs so we an get TARGET_DEVICE and other</span></span><br><span class="line"><span class="comment"># variables that we need in order to locate the output files.</span></span><br><span class="line">include $(BUILD_SYSTEM)/product_config.mk</span><br><span class="line">...</span><br><span class="line"><span class="comment"># 指定编译文件输出路径</span></span><br><span class="line">ifeq (,$(strip $(OUT_DIR)))</span><br><span class="line">ifeq (,$(strip $(OUT_DIR_COMMON_BASE)))</span><br><span class="line">OUT_DIR := $(TOPDIR)out</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">OUT_DIR := $(OUT_DIR_COMMON_BASE)/$(notdir $(PWD))</span><br><span class="line">endif</span><br><span class="line">endif</span><br><span class="line">DEBUG_OUT_DIR := $(OUT_DIR)/debug </span><br><span class="line">PRODUCT_OUT := $(TARGET_PRODUCT_OUT_ROOT)/$(TARGET_DEVICE)</span><br><span class="line">TARGET_OUT_JAVA_LIBRARIES:= $(TARGET_OUT)/framework</span><br><span class="line">TARGET_OUT_INTERMEDIATES := $(PRODUCT_OUT)/obj</span><br><span class="line">TARGET_OUT := $(PRODUCT_OUT)/$(TARGET_COPY_OUT_SYSTEM)</span><br><span class="line">TARGET_OUT_CACHE := $(PRODUCT_OUT)/cache</span><br><span class="line">```　</span><br><span class="line"><span class="comment">## build\core\ product_config.mk</span></span><br><span class="line">此文件主要根据lunch选择的编译项读取device目录或vendor目录下不同厂商自己定义的AndroidProducts.mk文件，内包含目标产品配置文件，如：msm8916_32.mk；</span><br><span class="line">```bash</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">include $(BUILD_SYSTEM)/node_fns.mk</span><br><span class="line">include $(BUILD_SYSTEM)/product.mk</span><br><span class="line">include $(BUILD_SYSTEM)/device.mk </span><br><span class="line">...</span><br><span class="line"><span class="comment"># Import all product makefiles.</span></span><br><span class="line">$(call import-products, $(all_product_makefiles)) <span class="comment"># 找到并导入所有Makefile</span></span><br><span class="line"> <span class="comment"># Import all or just the current product makefile</span></span><br><span class="line">$(call import-products, $(current_product_makefile)) <span class="comment"># 找到并导入当前产品的Makefile</span></span><br><span class="line">$(check-all-products) <span class="comment"># 完整性检查</span></span><br><span class="line">...</span><br><span class="line"><span class="comment"># 调用resolve-short-product-name函数，返回TARGET_PRODUCT的配置文件目录</span></span><br><span class="line">INTERNAL_PRODUCT := $(call resolve-short-product-name, $(TARGET_PRODUCT))</span><br><span class="line">...</span><br><span class="line"><span class="comment"># Find the device that this product maps to.</span></span><br><span class="line">TARGET_DEVICE := $(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_DEVICE) <span class="comment"># 获得目标设备名</span></span><br><span class="line"><span class="comment">#如：INTERNAL_PRODUCT = device\qcom\msm8916_32\msm8916_32.mk</span></span><br><span class="line">    TARGET_DEVICE  = msm8916_32</span><br></pre></td></tr></table></figure><h3 id="build-core-product-mk"><a href="#build-core-product-mk" class="headerlink" title="build\core\ product.mk"></a>build\core\ product.mk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取所有AndroidProducts.mk文件</span></span><br><span class="line">define _find-android-products-files</span><br><span class="line">$(shell <span class="built_in">test</span> -d device &amp;&amp; find device -maxdepth 6 -name AndroidProducts.mk) \</span><br><span class="line">  $(shell <span class="built_in">test</span> -d vendor &amp;&amp; find vendor -maxdepth 6 -name AndroidProducts.mk) \</span><br><span class="line">  $(SRC_TARGET_DIR)/product/AndroidProducts.mk</span><br><span class="line">endef</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取AndroidProducts.mk文件中设置的所有PRODUCT_MAKEFILES变量序列（其实为产品配置文件路径）</span></span><br><span class="line">define get-all-product-makefiles</span><br><span class="line">$(call get-product-makefiles,$(_find-android-products-files))</span><br><span class="line">endef</span><br></pre></td></tr></table></figure><h3 id="build-core-device-mk"><a href="#build-core-device-mk" class="headerlink" title="build\core\ device.mk"></a>build\core\ device.mk</h3><p>这个文件没怎么看懂， 大致就是定义变量、根据device名字获得mk文件路径、检查device的必须变量是否被定义之类的，以后有闲功夫再研究。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">_device_var_list := \</span><br><span class="line">    DEVICE_NAME \</span><br><span class="line">    DEVICE_BOARD \</span><br><span class="line">    DEVICE_REGION</span><br><span class="line"></span><br><span class="line">define dump-device</span><br><span class="line">$(info ==== $(1) ====)\</span><br><span class="line">$(foreach v,$(_device_var_list),\</span><br><span class="line">$(info DEVICES.$(1).$(v) := $(DEVICES.$(1).$(v))))\</span><br><span class="line">$(info --------)</span><br><span class="line"></span><br><span class="line">endefdefine import-devices</span><br><span class="line">$(call import-nodes,DEVICES,$(1),$(_device_var_list))</span><br><span class="line"></span><br><span class="line">define _resolve-short-device-name</span><br></pre></td></tr></table></figure><h3 id="build-core-node-fns-mk"><a href="#build-core-node-fns-mk" class="headerlink" title="build\core\ node_fns.mk"></a>build\core\ node_fns.mk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">define clear-var-list $(foreach v,$(1),$(<span class="built_in">eval</span> $(v):=)) <span class="comment"># 清除用“:=”的变量名</span></span><br><span class="line">define copy-var-list $(foreach v,$(2),$(<span class="built_in">eval</span> $(strip $(1)).$(v):=$($(v)))) <span class="comment"># 拷贝变量名</span></span><br><span class="line">define move-var-list </span><br><span class="line"></span><br><span class="line">define import-nodes  $(1) $(2) $(3) <span class="comment"># 导入变量，此定义需要三个入口参数：</span></span><br><span class="line">$(1)是一个字串，是输出变量的主干名。例如”PRODUCTS<span class="string">&quot;和”DEVICES“</span></span><br><span class="line"><span class="string"><span class="subst">$(2)</span>是一个makefile文件列表，这些文件中应该含有对<span class="subst">$(3)</span>中变量的定义</span></span><br><span class="line"><span class="string"><span class="subst">$(3)</span>是一个变量列表</span></span><br><span class="line"><span class="string">  import-nodes会创建这样形式的变量，例如：<span class="subst">$(1)</span>=&quot;</span>PRODUCTS<span class="string">&quot;,<span class="subst">$(2)</span>中含有&quot;</span>build/target/product/core.mk<span class="string">&quot;, <span class="subst">$(3)</span>中含有&quot;</span>PRODUCT_NAME<span class="string">&quot;,而core.mk中定义了PRODUCT_NAME:=core，则变量为：PRODUCT.build/target/product/core.mk.PRODUCT_NAME:=core。</span></span><br><span class="line"><span class="string">  import-nodes中还考虑了inherit（即继承）的问题，如果某个PRODUCT.xxx.xxx变量的值中有‘@inherit:&lt;mk文件&gt;’标识，则会把那个mk文件中相应的变量的属性添加到PRODUCT.xxx.xxx中。&#x27;@inherit:&lt;mk文件&gt;&#x27;是通过inherit-product命令添加的。这个函数定义在product.mk里面。 </span></span><br><span class="line"><span class="string">... </span></span><br><span class="line"><span class="string"># 定义其他对变量等的处理，没去细看，也不一一列出了</span></span><br></pre></td></tr></table></figure><h3 id="device-qcom-msm8916-32-Android-mk"><a href="#device-qcom-msm8916-32-Android-mk" class="headerlink" title="device\qcom\msm8916_32\Android.mk"></a>device\qcom\msm8916_32\Android.mk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include $(CLEAR_VARS)</span></span><br><span class="line"><span class="comment">#LOCAL_MODULE       := wpa_supplicant.conf</span></span><br><span class="line"><span class="comment">#LOCAL_MODULE_TAGS  := optional # 默认在所有版本下都编译</span></span><br><span class="line"><span class="comment">#LOCAL_MODULE_CLASS := ETC</span></span><br><span class="line"><span class="comment">#LOCAL_SRC_FILES    := $(LOCAL_MODULE)</span></span><br><span class="line"><span class="comment">#LOCAL_MODULE_PATH  := $(TARGET_OUT_ETC)/wifi</span></span><br><span class="line"><span class="comment">#include $(BUILD_PREBUILT)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include $(call all-makefiles-under,$(LOCAL_PATH)) # 导入所有mk文件</span></span><br></pre></td></tr></table></figure><blockquote><p>模块mk文件详见Android.mk解析：<a href="http://huaqianlee.github.io/2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/#more">Android.mk解析</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> 编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>About ActivityNotFoundException Unable to find explicit activity class &amp;&amp; Android.mk解析</title>
      <link href="2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/"/>
      <url>2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>　　<a href="http://huaqianlee.github.io/2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/">Android编译过程详解之一</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/">Android编译过程详解之二</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%89/">Android编译过程详解之三</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/">Android.mk解析</a></p><h2 id="ActivityNotFoundException"><a href="#ActivityNotFoundException" class="headerlink" title="ActivityNotFoundException 　"></a>ActivityNotFoundException 　</h2><p>　　最近将Android从4.4移植到5.1时，添加一个从拨号界面输入*#360*#进入battery info查看界面的功能时（如感兴趣，详情见<a href="http://huaqianlee.github.io/2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/">Android电池监控系统(bms)之一电池系统架构</a>），activity跳转部分代码如下： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(input.equals(BATTERY_INFO))</span><br><span class="line">&#123;<span class="comment">//added by lihuaqian</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ComponentName Component = <span class="keyword">new</span> ComponentName(<span class="string">&quot;com.android.settings&quot;</span>,<span class="string">&quot;com.android.settings.BatteryOemInfo&quot;</span>); </span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">        intent.setComponent(Component);</span><br><span class="line">        intent.setAction(Intent.ACTION_VIEW);   </span><br><span class="line">        context.startActivity(intent);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ActivityNotFoundException e) &#123;</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;no activity to battery cmd.&quot;</span>); </span><br><span class="line">        <span class="comment">//e.printStackTrace();   </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　遇到如下问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　ActivityNotFoundException : Unable to find explicit activity class; have you declared this activity <span class="keyword">in</span> your AndroidManifest.xml?</span><br></pre></td></tr></table></figure><a id="more"></a><p>　　我将流程检查了一遍又一遍，都完全没有问题，Google了很久也无结果。后灵光一现：是否Setting这个apk根本就没有安装成功，所以才导致找不到Activity。<br>　<br><strong>于是，我首先通过命令 adb install -r Setting.apk 手动安装，但总是提示安装失败，这时已有些小小兴奋，因为感觉自己快找到原因了。</strong><br>　<br><strong>然后，我将apk push进手机相应文件系统路径，重启，通过logcat打印log，后发现关键信息，如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Failed to parse /system/priv-app/Settings: Signature mismatch <span class="keyword">for</span> shared user : SharedUserSetting&#123;2a5b4702 android.uid.system/1000&#125; </span><br></pre></td></tr></table></figure><p>通过此log信息可知：系统没有能成功安装此apk，原因是app签名不匹配。 这样就找到了问题的根源。 向应用软件部同事了解情况后得知，是因为此项目客户指定Signature。<br>　<br><strong>所以，接下来我就有两种选择：</strong></p><ul><li>自己整编整个系统，然后刷机，但是整编时间太长，所以放弃。</li><li>将修改代码给出软件同事，让其帮忙编一apk。（我选择了此方式，然后测试OK了）　</li></ul><p><strong>当然，这种问题主要是做系统级APP，需要用到root权限或运行于系统进程时时才会遇到，其他一般都是如下几个情况：</strong></p><ol><li>如log中提示，没有在AndroidManifest.xml中定义此Activity。</li><li>包名或者类名书写错误，不统一。</li><li>自己定义的包名或者类名与系统自带类重复。</li></ol><h2 id="Android-mk解析"><a href="#Android-mk解析" class="headerlink" title="Android.mk解析"></a>Android.mk解析</h2><p>　　因为上面问题时由签名引起的，所以就深入看了一下什么地方指定签名，后发现在APP目录中的Android.mk中制定。Android.mk将source打包为如下几种modules：<br>　　　1. APK程序<br>  　　　　一般的Android程序，编译打包生成apk文件<br>　　　2. JAVA库<br>  　　　　java类库，编译打包生成jar文件<br>　　　3. C\C++应用程序<br> 　　　　可执行的C\C++应用程序<br>　　　4. C\C++静态库<br>　　　　编译生成C\C++静态库，并打包成.a文件，静态库则可被链接到动态库。<br>　　　5. C\C++动态库　　<br>　　　　编译生成共享库（动态链接库），并打包成.so文， 只有动态库才能被install or copy到apk。<br>　<br>　　在 Android Build 系统中，编译以模块（而不是文件）作为单位，每个模块都有一个唯一的名称，一个模块的依赖对象只能是另外一个模块，而不能是其他类型的对象。对于已经编译好的二进制库，如果要用来被当作是依赖对象，那么应当将这些已经编译好的库作为单独的模块。对于这些已经编译好的库使用 BUILD_PREBUILT 或 BUILD_MULTI_PREBUILT。例如：当编译某个 Java 库需要依赖一些 Jar 包时，并不能直接指定 Jar 包的路径作为依赖，而必须首先将这些 Jar 包定义为一个模块，然后在编译 Java 库的时候通过模块的名称来依赖这些 Jar 包。</p><p> 下面为Qualcomm Settings中的Android.mk （带“Lee:”为我自己加入以详解Android.mk）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">//通常以如下两行开头</span><br><span class="line">LOCAL_PATH:= $(call my-dir)   // 用于定位源码路径，my-dir即当前路径</span><br><span class="line"> /*CLEAR_VARS-清理除LOCAL_PATH外的很多LOCAL_XX变量,因变量皆为全局变量，清理后避免相互影响。*/</span><br><span class="line">include $(CLEAR_VARS)</span><br><span class="line"></span><br><span class="line">/*链接外部JAVA包*/</span><br><span class="line">LOCAL_JAVA_LIBRARIES := bouncycastle conscrypt telephony-common ims-common // 当前模块依赖的 Java 共享库</span><br><span class="line">LOCAL_STATIC_JAVA_LIBRARIES := android-support-v4 android-support-v13 jsr305 // 当前模块依赖的 Java 静态库</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  *user:       该模块只在user版本下才编译</span><br><span class="line">  *eng:        该模块只在eng版本下才编译</span><br><span class="line">  *debug:    该模块只在debug版本下才编译</span><br><span class="line">  *optional:  该模块在所有版本下都编译,默认标签</span><br><span class="line">  * development:  该模块在development版本下编译</span><br><span class="line"> **/</span><br><span class="line">LOCAL_MODULE_TAGS := optional //定义该模块什么情况被编译</span><br><span class="line"></span><br><span class="line">Lee: LOCAL_MODULE    :=    //名字唯一不含空格，编译的目标对象，即名字</span><br><span class="line">Lee: LOCAL_C_INCLUDES         //包含c/c++需要的头文件路径</span><br><span class="line">Lee: LOCAL_SRC_FILES：当前模块包含的所有源代码文件。</span><br><span class="line">Lee: LOCAL_STATIC_LIBRARIES：当前模块在静态链接时需要的库的名称。</span><br><span class="line">Lee: LOCAL_SHARED_LIBRARIES：当前模块在运行时依赖的动态库的名称。</span><br><span class="line">Lee: LOCAL_CFLAGS：提供给 C/C++ 编译器的额外编译参数。</span><br><span class="line">Lee: LOCAL_PACKAGE_NAME：当前 APK 应用的名称。</span><br><span class="line">Lee: LOCAL_CERTIFICATE：签署当前应用的证书名称。</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  *编译模块的源码</span><br><span class="line"> **/</span><br><span class="line">LOCAL_SRC_FILES := \</span><br><span class="line">        $(call all-java-files-under, src) \</span><br><span class="line">        src/com/android/settings/EventLogTags.logtags \</span><br><span class="line">        src/com/android/cabl/ICABLService.aidl</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  *编译模块的资源路径</span><br><span class="line"> **/</span><br><span class="line">LOCAL_RESOURCE_DIR := $(LOCAL_PATH)/res</span><br><span class="line"></span><br><span class="line">LOCAL_SRC_FILES += \</span><br><span class="line">        src/com/android/location/XT/IXTSrv.aidl \</span><br><span class="line">        src/com/android/location/XT/IXTSrvCb.aidl \</span><br><span class="line">        src/com/android/display/IPPService.aidl</span><br><span class="line">LOCAL_PACKAGE_NAME := Settings //apk名</span><br><span class="line">LOCAL_CERTIFICATE := platform  // 此处定义签名</span><br><span class="line">LOCAL_PRIVILEGED_MODULE := <span class="literal">true</span>//声明apk放到system/priv-app</span><br><span class="line"></span><br><span class="line">Lee:LOCAL_CFLAGS +=$(OEM_CFLAGS)  // 声明customer（客户文件）中定义的相关宏，以便c/c++中<span class="comment">#if defined </span></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  * external/proguard - 抑制apk反编译的，对class混淆处理的代码路径</span><br><span class="line">  * proguard.flags 指定不需要混淆处理的native方法和变量</span><br><span class="line"> **/</span><br><span class="line">LOCAL_PROGUARD_FLAG_FILES := proguard.flags//加载当前路径proguard.flags文件</span><br><span class="line"></span><br><span class="line">include frameworks/opt/setupwizard/navigationbar/common.mk //包含指定</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  *BUILD_STATIC_LIBRARY:  编译为静态库</span><br><span class="line">  *BUILD_SHARED_LIBRARY : 编译为动态库 </span><br><span class="line">  *BUILD_EXECUTABLE:    编译为Native C可执行程序</span><br><span class="line">  * BUILD_PACKAGE:  编译为apk</span><br><span class="line"> **/</span><br><span class="line">include $(BUILD_PACKAGE) //编译为apk</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use the following include to make our test apk.</span></span><br><span class="line">ifeq (,$(ONE_SHOT_MAKEFILE))</span><br><span class="line">include $(call all-makefiles-under,$(LOCAL_PATH)) <span class="comment">#表示需要编译该目录下文件，系统在当前路径查找Android.mk来编译</span></span><br><span class="line">endif</span><br><span class="line">Lee:还有很多其他定义和语法，这里就不一一分析，不过从变量名就能窥知一二</span><br></pre></td></tr></table></figure><h3 id="编译类型的说明"><a href="#编译类型的说明" class="headerlink" title="编译类型的说明"></a>编译类型的说明</h3><h4 id="eng"><a href="#eng" class="headerlink" title="eng"></a>eng</h4><ul><li>默认类型，该编译类型适用于开发阶段。</li><li>安装包含 eng, debug, user，development 标签的模块</li><li>安装所有没有标签的非APK模块</li><li>安装所有产品定义文件中指定的APK模块</li></ul><h4 id="user"><a href="#user" class="headerlink" title="user"></a>user</h4><ul><li>该编译类型适合用于最终发布阶段。</li><li>安装所有带有 user 标签的模块</li><li>安装所有没有标签的非 APK 模块</li><li>安装所有产品定义文件中指定的 APK 模块，APK 模块的标签将被忽略</li></ul><h4 id="userdebug"><a href="#userdebug" class="headerlink" title="userdebug"></a>userdebug</h4><p>该编译类型适合用于debug阶段。该类型和user一样，另：</p><ul><li>会安装包含debug标签的模块</li><li>编译出的系统具有root访问权限</li></ul><p>　　build/core/config.mk中已经定义好了各种类型模块的编译方式。所以要执行编译，只需通过常量的方式引入对应的 Make 文件即可。详见<a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/">Android编译过程详解之二</a>，例如，要编译一个 APK 文件，只需要在 Android.mk 文件中，加入“include $(BUILD_PACKAGE)。<br>　<br>　　除此以外，Build 系统中还定义了一些便捷的函数以便在 Android.mk 中使用，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(call my-dir)：获取当前文件夹路径。</span><br><span class="line">$(call all-java-files-under, &lt;src&gt;)：获取指定目录下的所有 Java 文件。</span><br><span class="line">$(call all-c-files-under, &lt;src&gt;)：获取指定目录下的所有 C 语言文件。</span><br><span class="line">$(call all-Iaidl-files-under, &lt;src&gt;) ：获取指定目录下的所有 AIDL 文件。</span><br><span class="line">$(call all-makefiles-under, &lt;folder&gt;)：获取指定目录下的所有 Make 文件。</span><br><span class="line">$(call intermediates-dir-for, &lt;class&gt;, &lt;app_name&gt;, &lt;host or target&gt;, &lt;common?&gt; )：获取 Build 输出的目标文件夹路径。</span><br></pre></td></tr></table></figure><h3 id="LOCAL-CERTIFICATE"><a href="#LOCAL-CERTIFICATE" class="headerlink" title="LOCAL_CERTIFICATE"></a>LOCAL_CERTIFICATE</h3><p>　　分析了Android.mk,再来详细说说我之前问题相关的一个属性：LOCAL_CERTIFICATE ，用于指定签名是使用的key，如不指定默认testkey。<br>　<br>分析这个属性就先得谈谈此apkAndroidManifest.xm了中的sharedUserId属性说起，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;manifest xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">        package=<span class="string">&quot;com.android.settings&quot;</span></span><br><span class="line">        coreApp=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:sharedUserId=<span class="string">&quot;android.uid.system&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>　　通过将sharedUserId配置为”android.uid.system”，即让程序运行在系统进程，而运行在系统进程则需要目标系统的platform key，Android.mk中的 LOCAL_CERTIFICATE := platform  即是声明相应签名key文件。key文件的源码路径在 build\target\product\security。通过这样处理的apk则只能在自己编译的系统里面才能使用，如若装到其他Android系统会提示：”Package … has no signatures that match those in shared user android.uid.system”。<br>　<br>　　另，android:sharedUserId属性不仅仅可以把apk放到系统进程中，也可以配置多个APK运行在一个进程中，这样可以共享数据，就会很有用处。就像我上面的Settings.apk。</p><p>在Android.mk中,LOCAL_CERTIFICATE可设置的值如下：</p><ul><li>LOCAL_CERTIFICATE := platform</li><li>LOCAL_CERTIFICATE := shared</li><li>LOCAL_CERTIFICATE := media　<br>然后，需要在APK源码的AndroidManifest.xml文件中的manifest节点添加如下内容：</li><li>android:sharedUserId=”android.uid.system”</li><li>android:sharedUserId=”android.uid.shared”</li><li>android:sharedUserId=”android.media”　<br>在Android源码的build/target/product/security/目录下有如下的4对KEY：<ol><li>media.pk8与media.x509.pem；</li><li>platform.pk8与platform.x509.pem；</li><li>shared.pk8与shared.x509.pem；</li><li>testkey.pk8与testkey.x509.pem；　</li></ol></li></ul><p>其中，”<em>.pk8”文件为私钥，”</em>.x509.pem”文件为公钥，这需要了解非对称加密方式。</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bug </tag>
            
            <tag> 编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android编译过程详解之一</title>
      <link href="2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/"/>
      <url>2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p>**　　Platform Information :<br>　　　System:    Ａndroid4.4.4<br>　　　Platform:  Qualcomm msm8916<br>　　　Author:     Andy Lee<br>　　　Email:        <a href="mailto:&#104;&#x75;&#x61;&#113;&#105;&#x61;&#110;&#x6c;&#x65;&#101;&#64;&#103;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;">&#104;&#x75;&#x61;&#113;&#105;&#x61;&#110;&#x6c;&#x65;&#101;&#64;&#103;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;</a>**</p><p><strong>欢迎指出错误，共同学习，共同进步</strong></p><p>　　<a href="http://huaqianlee.github.io/2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/">Android编译过程详解之一</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/">Android编译过程详解之二</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%89/">Android编译过程详解之三</a><br>　　<a href="http://huaqianlee.github.io/2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/">Android.mk解析</a><br>　<br>　　Google给出的编译环境和构建方法见：<a href="http://source.android.com/source/initializing.html">http://source.android.com/source/initializing.html</a>，过程见：<a href="http://source.android.com/source/building.html">http://source.android.com/source/building.html</a>，不过这是解释怎么编译一个通用的系统，没有详细描述细节，而且需要翻墙。接下来我就准备跟着高通平台的编译过程来详细了解一下。</p><p>我平时的编译步骤如下：<br>　1. source setup.sh project-name debug/release　加载命令配置环境　<br>　2. ./go.sh  [target] or make  [target]　编译</p><a id="more"></a>　<p>接下来就按照步骤来详细分析一下流程：</p><h2 id="source-setup-sh-project-name-debug"><a href="#source-setup-sh-project-name-debug" class="headerlink" title="source setup.sh project-name debug"></a>source setup.sh project-name debug</h2><p>　　setup.sh是自定义的一个脚本文件，用来配置环境变量，其主要内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/*配置用到的jdk、jre*/</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/workspace/bin/jdk1.6.0_37</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre </span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib </span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$&#123;JRE_HOME&#125;</span>/bin:<span class="variable">$PATH</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> build/envsetup.sh // 官网的第一步，加载命令，待会儿再详细解释</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -d /workspace/bin/eric-PAY4/links-8916 ];<span class="keyword">then</span></span><br><span class="line">    cp -a /workspace/bin/eric-PAY4/links-8916 links</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 2 ];<span class="keyword">then</span> <span class="comment"># 如命令行参数输入错误，打印提示信息</span></span><br><span class="line">    <span class="built_in">echo</span> You can input like <span class="string">&quot;source setup.sh s5_common [debug|release]&quot;</span></span><br><span class="line">    <span class="built_in">return</span> 1;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> product=<span class="variable">$1</span> var=<span class="variable">$2</span> //打印输入选择 project-name  debug/release</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$2</span> = <span class="string">&quot;debug&quot;</span> ];<span class="keyword">then</span>　// 根据参数选择编译项</span><br><span class="line">    choosecombo 2 msm8916_32 3 <span class="variable">$1</span> </span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$2</span> = <span class="string">&quot;release&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    choosecombo 1 msm8916_32 1 <span class="variable">$1</span></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Your input is wrong please check again&quot;</span></span><br></pre></td></tr></table></figure><h3 id="source-build-envsetup-sh"><a href="#source-build-envsetup-sh" class="headerlink" title="source build/envsetup.sh"></a>source build/envsetup.sh</h3><p>　　此命令是将envsetup.sh中的命令加载到环境变量，build位于Android源码路径根目录（本文提到所有路径都是以 Android 源码树作为背景的，“/”或顶层路径指的是源码树的根目录，与文件系统无关），主要命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- lunch:   指定编译项，即编译目标和编译类型（lunch &lt;product_name&gt;-&lt;build_variant&gt;）</span><br><span class="line">- tapas:   同choosecombo，设置编译参数（tapas [&lt;App1&gt; &lt;App2&gt; ...] [arm|x86|mips|armv5] [eng|userdebug|user]）</span><br><span class="line">- croot:   切换到根目录（Changes directory to the top of the tree.）</span><br><span class="line">- m:       从源码树根目录开始make（Makes from the top of the tree.）</span><br><span class="line">- mm:      编译当前目录下所有模块，但不包括依赖文件（Builds all of the modules <span class="keyword">in</span> the current directory, but not their dependencies.）</span><br><span class="line">- mmm:    编译指定目录下的所有模块，但不包括依赖文件（Builds all of the modules <span class="keyword">in</span> the supplied directories, but not their dependencies.）</span><br><span class="line">- mma:     编译当前目录下所有模块，包括依赖文件（Builds all of the modules <span class="keyword">in</span> the current directory, and their dependencies.）</span><br><span class="line">- mmma:    编译指定目录下的所有模块，包括依赖文件（Builds all of the modules <span class="keyword">in</span> the supplied directories, and their dependencies.）</span><br><span class="line">- cgrep:   在所有c/c++文件中查找（Greps on all <span class="built_in">local</span> C/C++ files.）</span><br><span class="line">- jgrep:   在所有java文件中查找（Greps on all <span class="built_in">local</span> Java files.）</span><br><span class="line">- resgrep: 在所有res/*.xml中查找（Greps on all <span class="built_in">local</span> res/*.xml files.）</span><br><span class="line">- godir:   跳转到包含某个文件的路径（Go to the directory containing a file.）</span><br><span class="line">- printconfig：显示当前Build的配置信息</span><br></pre></td></tr></table></figure><p>　　完整命令和关键源码如下：(英文为源码注释，中文部分是原本没有，自己根据理解添加的注释)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> get_abs_build_var()   <span class="comment"># Get the value of a build variable as an absolute path.</span></span><br><span class="line"><span class="keyword">function</span> get_build_var()   <span class="comment"># Get the exact value of a build variable.</span></span><br><span class="line"><span class="keyword">function</span> check_product()  <span class="comment"># check to see if the supplied product is one we can build</span></span><br><span class="line"><span class="keyword">function</span> check_variant()  <span class="comment"># check to see if the supplied variant is valid (variant：user userdebug eng)</span></span><br><span class="line"><span class="keyword">function</span> setpaths()   <span class="comment"># sets ANDROID_BUILD_PATHS</span></span><br><span class="line"><span class="keyword">function</span> printconfig()   <span class="comment"># 打印配置</span></span><br><span class="line"><span class="keyword">function</span> set_stuff_for_environment()   <span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="keyword">function</span> set_sequence_number()     <span class="comment"># 设置序列号</span></span><br><span class="line"><span class="keyword">function</span> settitle()   <span class="comment"># 设置标题</span></span><br><span class="line"><span class="keyword">function</span> addcompletions()    <span class="comment"># 添加sdk/bash_completion中bash</span></span><br><span class="line"><span class="keyword">function</span> choosetype()    <span class="comment"># 选择type （debug/release）</span></span><br><span class="line"><span class="keyword">function</span> chooseoemprj()    <span class="comment"># 自定义，设置TARGET_PRODUCT，即project-name</span></span><br><span class="line"><span class="keyword">function</span> chooseproduct()    <span class="comment">#  官方自带的设置TARGET_PRODUCT</span></span><br><span class="line"><span class="keyword">function</span> choosevariant()    <span class="comment"># 设置variant (user userdebug eng)</span></span><br><span class="line"><span class="keyword">function</span> choosecombo()    <span class="comment"># 设置并打印编译参数（choosetype、chooseproduct、choosevariant、chooseoemprj、set_stuff_for_environment）</span></span><br><span class="line"><span class="keyword">function</span> add_lunch_combo()    <span class="comment"># 添加lunch项，多次调用，用来添加Android编译选项</span></span><br><span class="line"><span class="keyword">function</span> print_lunch_menu()    <span class="comment"># 打印lunch列表</span></span><br><span class="line"><span class="keyword">function</span> lunch()    <span class="comment"># 配置lunch</span></span><br><span class="line"><span class="keyword">function</span> _lunch()      <span class="comment"># Tab completion for lunch.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configures the build to build unbundled apps.</span></span><br><span class="line"><span class="comment"># Run tapas with one ore more app names (from LOCAL_PACKAGE_NAME)</span></span><br><span class="line"><span class="keyword">function</span> tapas()     <span class="comment"># 同choosecombo</span></span><br><span class="line"><span class="keyword">function</span> gettop    <span class="comment"># 获取顶层路径</span></span><br><span class="line"><span class="keyword">function</span> m()    <span class="comment"># 从顶层树开始编译</span></span><br><span class="line"><span class="keyword">function</span> findmakefile()    <span class="comment"># 找到Makefile （Android.mk）</span></span><br><span class="line"><span class="keyword">function</span> mm()    <span class="comment"># 从当前路径开始编译，不加依赖</span></span><br><span class="line"><span class="keyword">function</span> mmm()     <span class="comment"># 从指定路径开始编译，不加依赖</span></span><br><span class="line"><span class="keyword">function</span> mma()    <span class="comment"># 从当前路径看是编译，包括依赖</span></span><br><span class="line"><span class="keyword">function</span> mmma()     <span class="comment"># 从指定路径开始编译，包括依赖</span></span><br><span class="line"><span class="keyword">function</span> croot()      <span class="comment"># 切换到顶层路径</span></span><br><span class="line"><span class="keyword">function</span> cproj()     <span class="comment"># 没看懂，切换到某一路径</span></span><br><span class="line"><span class="keyword">function</span> qpid()    <span class="comment"># 输出进程号和名字 （simplified version of ps; output in the form &lt;pid&gt; &lt;procname&gt;）</span></span><br><span class="line"><span class="keyword">function</span> pid()     <span class="comment"># 输出进程号和名字 </span></span><br><span class="line"><span class="keyword">function</span> systemstack()    <span class="comment"># systemstack - dump the current stack trace of all threads in the system process to the usual ANR traces file</span></span><br><span class="line"><span class="keyword">function</span> stacks()</span><br><span class="line"><span class="keyword">function</span> gdbwrapper()</span><br><span class="line"><span class="keyword">function</span> gdbclient()</span><br><span class="line"><span class="keyword">function</span> sgrep()     <span class="comment"># 查找c/h/cpp/S/java/xml/sh/mk文件</span></span><br><span class="line"><span class="keyword">function</span> gettargetarch    <span class="comment"># 获取TARGET_ARCH</span></span><br><span class="line"><span class="keyword">function</span> jgrep()    <span class="comment"># 查找java文件</span></span><br><span class="line"><span class="keyword">function</span> cgrep()    <span class="comment"># 查找c/c++文件</span></span><br><span class="line"><span class="keyword">function</span> resgrep()    <span class="comment"># 查找xml文件</span></span><br><span class="line"><span class="keyword">function</span> mangrep()     <span class="comment"># 查找out目录中AndroidManifest.xml文件</span></span><br><span class="line"><span class="keyword">function</span> sepgrep()    <span class="comment"># 查找out目录中sepolicy</span></span><br><span class="line"><span class="keyword">function</span> treegrep()                                </span><br><span class="line"><span class="keyword">function</span> mgrep()</span><br><span class="line"><span class="keyword">function</span> getprebuilt    <span class="comment"># 获取ANDROID_PREBUILTS（编译工具）</span></span><br><span class="line"><span class="keyword">function</span> tracedmdump()</span><br><span class="line"><span class="keyword">function</span> runhat()     <span class="comment"># communicate with a running device or emulator, set up necessary state, and run the hat command.</span></span><br><span class="line"><span class="keyword">function</span> getbugreports()</span><br><span class="line"><span class="keyword">function</span> getsdcardpath()</span><br><span class="line"><span class="keyword">function</span> getscreenshotpath()</span><br><span class="line"><span class="keyword">function</span> getlastscreenshot()</span><br><span class="line"><span class="keyword">function</span> startviewserver()</span><br><span class="line"><span class="keyword">function</span> stopviewserver()</span><br><span class="line"><span class="keyword">function</span> isviewserverstarted()</span><br><span class="line"><span class="keyword">function</span> key_home()</span><br><span class="line"><span class="keyword">function</span> key_back()</span><br><span class="line"><span class="keyword">function</span> key_menu()</span><br><span class="line"><span class="keyword">function</span> smoketest()</span><br><span class="line"><span class="keyword">function</span> runtest()    <span class="comment"># simple shortcut to the runtest command</span></span><br><span class="line"><span class="keyword">function</span> godir ()    <span class="comment"># 跳到指定目录</span></span><br><span class="line"><span class="keyword">function</span> set_java_home()    <span class="comment"># Force JAVA_HOME to point to java 1.6 if it isn&#x27;t already set</span></span><br><span class="line"><span class="keyword">function</span> pez     <span class="comment"># Print colored exit condition</span></span><br><span class="line"></span><br><span class="line">关键源码：</span><br><span class="line"><span class="comment"># Clear this variable.  It will be built up again when the vendorsetup.sh files are included at the end of this file.</span></span><br><span class="line"><span class="built_in">unset</span> LUNCH_MENU_CHOICES</span><br><span class="line"><span class="keyword">function</span> add_lunch_combo()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">local</span> new_combo=<span class="variable">$1</span>   <span class="comment"># 获取add_lunch_combo被调用时的参数</span></span><br><span class="line">    <span class="built_in">local</span> c</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> <span class="variable">$&#123;LUNCH_MENU_CHOICES[@]&#125;</span> ; <span class="keyword">do</span>   <span class="comment">#遍历LUNCH_MENU_CHOICES，第一次调用时为空</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$new_combo</span>&quot;</span> = <span class="string">&quot;<span class="variable">$c</span>&quot;</span> ] ; <span class="keyword">then</span>    <span class="comment"># 如果参数存在，则返回</span></span><br><span class="line">            <span class="built_in">return</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span> <span class="comment"># 如果参数不存在，则添加</span></span><br><span class="line">    LUNCH_MENU_CHOICES=(<span class="variable">$&#123;LUNCH_MENU_CHOICES[@]&#125;</span> <span class="variable">$new_combo</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the default one here  # 系统自动添加的默认编译项</span></span><br><span class="line">add_lunch_combo aosp_arm-eng  <span class="comment"># 调用add_lunch_combo()，传入参数</span></span><br><span class="line">add_lunch_combo aosp_x86-eng</span><br><span class="line">add_lunch_combo aosp_mips-eng</span><br><span class="line">add_lunch_combo vbox_x86-eng</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这段代码十分重要，主要在device目录查找vendorsetup.sh并加载，此文件主要添加自定义编译项，如：add_lunch_combo msm8916_32-userdebug </span></span><br><span class="line"><span class="comment"># Execute the contents of any vendorsetup.sh files we can find.</span></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> `<span class="built_in">test</span> -d device &amp;&amp; find device -maxdepth 4 -name <span class="string">&#x27;vendorsetup.sh&#x27;</span> 2&gt; /dev/null` \</span><br><span class="line">         `<span class="built_in">test</span> -d vendor &amp;&amp; find vendor -maxdepth 4 -name <span class="string">&#x27;vendorsetup.sh&#x27;</span> 2&gt; /dev/null`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;including <span class="variable">$f</span>&quot;</span></span><br><span class="line">    . <span class="variable">$f</span>  <span class="comment"># 执行找到的脚本</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">unset</span> f</span><br><span class="line"></span><br><span class="line">addcompletions  调用 addcompletions()</span><br></pre></td></tr></table></figure><p>因此可知，envsetup.sh主要有如下作用：<br>　1. 加载编译时需要的相应命令，如：help，lunch ，m，mm等。<br>　2. 添加系统默认编译项。<br>　3. 查找vendorsetup.sh文件，加载自定义编译项。</p><blockquote><p>注：有些Android版本中vendorsetup.sh文件在vendor目录　</p></blockquote><p>　　如要添加自己的产品，需要在device目录下新建一个自己公司名，新建一个vendorsetup.sh，加入自己的编译项。了解了这一条指令，再来看一下执行结果，将会更有体会，因为我所有命令都写到开始的setup.sh文件中了，所以不用想官方那样多步配置编译，如下：<br>　　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/20150711MakeAndroid.png" alt="Make"></p><h2 id="lunch"><a href="#lunch" class="headerlink" title="lunch"></a>lunch</h2><p>　　lunch是在envsetup.sh中定义的一个命令，让用户选择编译项，用来定义product和编译过程中用到的全局变量。关于编译项，前面只是列出，并未详解，如msm8916_32-userdebug，msm8916_32为产品名，userdebug为编译类型，详细如下：</p><ul><li><p>eng: 工程机，</p></li><li><p>user:最终用户机</p></li><li><p>userdebug:调试测试机</p></li><li><p>tests:测试机 。</p></li></ul><p>　　在build\core\main.mk中有说明，Android源码中，每一个目标目录都有一个Android.mk，此文件中LOCAL_MODULE_TAGS就是来指定当前目标编译到哪个分类或者要不要编译。配置好后，可以通过lunch xxx 重选编译项，如：lunch msm8916_32-userdebug。</p><p>ok，接下来分析一下lunch function：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> lunch()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">local</span> answer</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ] ; <span class="keyword">then</span> <span class="comment"># lunch 后带参数</span></span><br><span class="line">        answer=<span class="variable">$1</span>   </span><br><span class="line">    <span class="keyword">else</span>  <span class="comment"># lunch后若不带参数，则打印所以target_product and variant 供用户选择</span></span><br><span class="line">        print_lunch_menu</span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">&quot;Which would you like? [aosp_arm-eng] &quot;</span></span><br><span class="line">        <span class="built_in">read</span> answer</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">local</span> selection=</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$answer</span>&quot;</span> ]</span><br><span class="line">    <span class="keyword">then</span>  </span><br><span class="line">        selection=aosp_arm-eng <span class="comment"># 如果用户在菜单中没有选择，直接回车，则为系统缺省的aosp_arm-eng</span></span><br><span class="line">    <span class="keyword">elif</span> (<span class="built_in">echo</span> -n <span class="variable">$answer</span> | grep -q -e <span class="string">&quot;^[0-9][0-9]*$&quot;</span>) </span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$answer</span> -le <span class="variable">$&#123;#LUNCH_MENU_CHOICES[@]&#125;</span> ] <span class="comment"># 如果answer是选择菜单的数字，则获取该数字对应的字符串</span></span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            selection=<span class="variable">$&#123;LUNCH_MENU_CHOICES[$(($answer-1))]&#125;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">elif</span> (<span class="built_in">echo</span> -n <span class="variable">$answer</span> | grep -q -e <span class="string">&quot;^[^\-][^\-]*-[^\-][^\-]*$&quot;</span>)  <span class="comment"># 如果 answer字符串匹配 *-*模式(*的开头不能为-)</span></span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        selection=<span class="variable">$answer</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$selection</span>&quot;</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Invalid lunch combo: <span class="variable">$answer</span>&quot;</span></span><br><span class="line">        <span class="built_in">return</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">export</span> TARGET_BUILD_APPS=</span><br><span class="line"></span><br><span class="line">    <span class="built_in">local</span> product=$(<span class="built_in">echo</span> -n <span class="variable">$selection</span> | sed -e <span class="string">&quot;s/-.*$//&quot;</span>)  <span class="comment"># 将 product-variant模式中的product分离出来</span></span><br><span class="line">    check_product <span class="variable">$product</span>  <span class="comment"># 检查，调用关系 check_product()-&gt;get_build_var()-&gt;build/core/config.mk</span></span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;** Don&#x27;t have a product spec for: &#x27;<span class="variable">$product</span>&#x27;&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;** Do you have the right repo manifest?&quot;</span></span><br><span class="line">        product=</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">local</span> variant=$(<span class="built_in">echo</span> -n <span class="variable">$selection</span> | sed -e <span class="string">&quot;s/^[^\-]*-//&quot;</span>) <span class="comment"># 将 product-variant模式中的variant分离出来</span></span><br><span class="line">    check_variant <span class="variable">$variant</span> <span class="comment"># 检查，看看是否在 (user userdebug eng) 范围内</span></span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;** Invalid variant: &#x27;<span class="variable">$variant</span>&#x27;&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;** Must be one of <span class="variable">$&#123;VARIANT_CHOICES[@]&#125;</span>&quot;</span></span><br><span class="line">        variant=</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$product</span>&quot;</span> -o -z <span class="string">&quot;<span class="variable">$variant</span>&quot;</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span></span><br><span class="line">        <span class="built_in">return</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#  导出环境变量，这很重要，因为后面的编译系统都依赖于这里定义的几个变量</span></span><br><span class="line">    <span class="built_in">export</span> TARGET_PRODUCT=<span class="variable">$product</span></span><br><span class="line">    <span class="built_in">export</span> TARGET_BUILD_VARIANT=<span class="variable">$variant</span></span><br><span class="line">    <span class="built_in">export</span> TARGET_BUILD_TYPE=release</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line">    set_stuff_for_environment  <span class="comment"># 设置环境变量， 在shell输入set可查看</span></span><br><span class="line">    printconfig <span class="comment"># 打印部分变量，调用关系printconfig()-&gt;get_build_var()-&gt;build/core/config.mk-&gt;build/core/envsetup.mk</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tab completion for lunch.</span></span><br><span class="line"><span class="keyword">function</span> _lunch()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">local</span> cur prev opts</span><br><span class="line">    COMPREPLY=()</span><br><span class="line">    cur=<span class="string">&quot;<span class="variable">$&#123;COMP_WORDS[COMP_CWORD]&#125;</span>&quot;</span></span><br><span class="line">    prev=<span class="string">&quot;<span class="variable">$&#123;COMP_WORDS[COMP_CWORD-1]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    COMPREPLY=( $(compgen -W <span class="string">&quot;<span class="variable">$&#123;LUNCH_MENU_CHOICES[*]&#125;</span>&quot;</span> -- <span class="variable">$&#123;cur&#125;</span>) )</span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> 编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通 linear charger 驱动分析</title>
      <link href="2015/06/24/Android/linear-charger-driver/"/>
      <url>2015/06/24/Android/linear-charger-driver/</url>
      
        <content type="html"><![CDATA[<blockquote><p>File :  qpnp-linear-charger.c<br>acc: alam charger current (not sure, think so now)　</p></blockquote><h2 id="QPNP-Linear-Charger-Blocks"><a href="#QPNP-Linear-Charger-Blocks" class="headerlink" title="QPNP Linear Charger Blocks"></a>QPNP Linear Charger Blocks</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/linearcharger1.jpg" alt="lcb">        </p><a id="more"></a><h2 id="LBC-Initialization-Flowchart"><a href="#LBC-Initialization-Flowchart" class="headerlink" title="LBC Initialization Flowchart"></a>LBC Initialization Flowchart</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/linearcharger2.jpg" alt="lbc"><br>lbc - linear Battery charger  (not sure)</p><h2 id="架构分析"><a href="#架构分析" class="headerlink" title="架构分析"></a>架构分析</h2><h3 id="几个主要的结构体"><a href="#几个主要的结构体" class="headerlink" title="几个主要的结构体"></a>几个主要的结构体</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">          /*This is the client/device handle returned when a SPMI device  is registered with a controller. */</span><br><span class="line">struct spmi_device &#123;</span><br><span class="line">struct devicedev;                       // 设备结构体,在内核中用来描述每一个结构体</span><br><span class="line">const char*name;                  // 此设备在驱动中的名字</span><br><span class="line">struct spmi_controller*ctrl;      // 管理挂接此spmi设备的SMPI控制者</span><br><span class="line">struct spmi_resourceres;                // SMPI resource <span class="keyword">for</span> 主节点</span><br><span class="line">struct spmi_resource*dev_node; // array of SPMI resources when used with spmi-dev-container</span><br><span class="line">u32num_dev_node;         // 设备节点的数量</span><br><span class="line">u8sid;                               // 从设备ID</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct qpnp_lbc_chip &#123;    // device information</span><br><span class="line">struct device*dev;</span><br><span class="line">struct spmi_device*spmi;</span><br><span class="line">        ...</span><br><span class="line">&#125;</span><br><span class="line">struct power_supply &#123;</span><br><span class="line">const char *name;</span><br><span class="line">enum power_supply_type <span class="built_in">type</span>;</span><br><span class="line">enum power_supply_property *properties;</span><br><span class="line">...</span><br><span class="line">        int (*get_property)(...)</span><br><span class="line">        int (*set_property)(...)</span><br><span class="line">        ...       /* private */      struct device *dev;</span><br><span class="line">      ...</span><br><span class="line">&#125;</span><br><span class="line">/* Resources are tree-like, allowing nesting etc.. */(资源树,允许嵌套)</span><br><span class="line">struct resource &#123;</span><br><span class="line">resource_size_t start;</span><br><span class="line">resource_size_t end;</span><br><span class="line">const char *name;</span><br><span class="line">unsigned long flags;</span><br><span class="line">struct resource *parent, *sibling, *child;</span><br><span class="line">&#125;;</span><br><span class="line">struct spmi_resource &#123; //spmi_resource <span class="keyword">for</span> one device_node</span><br><span class="line">struct resource*resource;</span><br><span class="line">u32num_resources;</span><br><span class="line">struct device_node*of_node;</span><br><span class="line">const char*label;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Interface-between-QPNP-charger-and-device-tree"><a href="#Interface-between-QPNP-charger-and-device-tree" class="headerlink" title="Interface between QPNP charger and device tree"></a>Interface between QPNP charger and device tree</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">        - struct qpnp_lbc_chip // Stores device information obtained from the device tree </span><br><span class="line"></span><br><span class="line">        - ​SPMI register access API</span><br><span class="line">            qpnp_lbc_read(struct qpnp_lbc_chip *chip, u8 *val, u16 base, int count);</span><br><span class="line">            qpnp_lbc_write(struct qpnp_lbc_chip *chip, u8 *val, u16 base, int count);</span><br><span class="line">            qpnp_lbc_masked_write(struct qpnp_lbc_chip *chip, u8 *val,u16 base, int count);</span><br><span class="line">```            </span><br><span class="line"><span class="comment">### Power Supply Framework to Export Information to User Space</span></span><br><span class="line">```bash</span><br><span class="line">       - Three power supply interfaces are <span class="keyword">in</span> qpnp-linear-charger</span><br><span class="line">- Maintained by qpnp-linear-charger.c</span><br><span class="line">       struct power_supply batt_psy; – Used to update the battery status</span><br><span class="line">- Only updated by qpnp-linear-charger.c</span><br><span class="line">       struct power_supply usb_psy; – Used to update the USB status</span><br><span class="line">       struct power_supply bms_psy; – Indirectly calls the APIs implemented <span class="keyword">in</span> qpnp-vm-bms.c</span><br><span class="line">```       </span><br><span class="line"><span class="comment">### QPNP Charger – Update Power Supply Interfaces</span></span><br><span class="line">```bash</span><br><span class="line">power_supply_changed(chip-&gt;usb_psy);</span><br><span class="line">qpnp_lbc_usbin_valid_irq_handler()</span><br><span class="line">power_supply_set_present(chip-&gt;usb_psy, chip-&gt;usb_present);</span><br><span class="line">power_supply_changed(&amp;chip-&gt;batt_psy);</span><br><span class="line">qpnp_lbc_batt_pres_irq_handler()</span><br><span class="line">qpnp_lbc_fastchg_irq_handler()</span><br><span class="line">qpnp_lbc_chg_done_irq_handler()</span><br></pre></td></tr></table></figure><h3 id="Association-DTSI"><a href="#Association-DTSI" class="headerlink" title="Association DTSI"></a>Association DTSI</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/linearcharger3.jpg" alt="dts">      </p><h2 id="驱动分析"><a href="#驱动分析" class="headerlink" title="驱动分析"></a>驱动分析</h2><h3 id="主线一"><a href="#主线一" class="headerlink" title="主线一 :"></a>主线一 :</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">        入口函数: module_init(qpnp_lbc_init)</span><br><span class="line">                                _init qpnp_lbc_init(void)</span><br><span class="line">                                        spmi_driver_register(&amp;qpnp_lbc_driver); // 注册spmi 驱动</span><br><span class="line">        /*Driver Probe <span class="keyword">function</span>*/</span><br><span class="line">        static int qpnp_lbc_probe(struct spmi_device *spmi)</span><br><span class="line">                usb_psy = power_supply_get_by_name(<span class="string">&quot;usb&quot;</span>);  // 获取USB充电支持 struct power_supply *usb_psy;</span><br><span class="line">                        struct device *dev = class_find_device(power_supply_class, NULL, name,power_supply_match_device_by_name);</span><br><span class="line">                        dev_get_drvdata(dev) //<span class="built_in">return</span> dev-&gt;p-&gt;driver_data</span><br><span class="line">        chip = devm_kzalloc(&amp;spmi-&gt;dev, sizeof(struct qpnp_lbc_chip),GFP_KERNEL);//分配空间给struct qpnp_lbc_chip *chip;</span><br><span class="line">dev_set_drvdata(&amp;spmi-&gt;dev, chip);</span><br><span class="line">device_init_wakeup(&amp;spmi-&gt;dev, 1);</span><br><span class="line">        INIT_WORK(&amp;chip-&gt;vddtrim_work, qpnp_lbc_vddtrim_work_fn);  // 关联vdd调整<span class="keyword">function</span></span><br><span class="line">        alarm_init(&amp;chip-&gt;vddtrim_alarm, ALARM_REALTIME, vddtrim_callback) // Initialize an alarm structure</span><br><span class="line">        qpnp_charger_read_dt_props(chip)// Get all device-tree properties</span><br><span class="line">        spmi_for_each_container_dev(spmi_resource, spmi) // 遍历spmi dev</span><br><span class="line">                resource = spmi_get_resource(spmi, spmi_resource,IORESOURCE_MEM, 0); // get a resource <span class="keyword">for</span> a device</span><br><span class="line">                qpnp_lbc_read(chip, resource-&gt;start + PERP_SUBTYPE_REG,&amp;subtype, 1);  // Peripheral subtype <span class="built_in">read</span> 读取外围子设备</span><br><span class="line">                switch (subtype)</span><br><span class="line">                    .....  //根据不同的外围设备 进行get  irqs等操作</span><br><span class="line">        qpnp_disable_lbc_charger(chip)  // <span class="built_in">disable</span> externalcharger</span><br><span class="line">        /* Initialize h/w */</span><br><span class="line">        qpnp_lbc_misc_init(chip)</span><br><span class="line">        qpnp_lbc_chg_init(chip)</span><br><span class="line">        qpnp_lbc_bat_if_init(chip)</span><br><span class="line">        qpnp_lbc_usb_path_init(chip)</span><br><span class="line">        <span class="keyword">if</span> (chip-&gt;bat_if_base) // 如果电池接口外设存在</span><br><span class="line">                .../ chip 参数\<span class="keyword">function</span> association</span><br><span class="line">                qpnp_batt_power_get_property</span><br><span class="line">                qpnp_batt_power_set_property</span><br><span class="line">                qpnp_batt_property_is_writeable</span><br><span class="line">                qpnp_batt_external_power_changed</span><br><span class="line">                power_supply_register(chip-&gt;dev, &amp;chip-&gt;batt_psy) // power Supply device register</span><br><span class="line"></span><br><span class="line">                qpnp_lbc_jeita_adc_notification  // notification</span><br><span class="line">                qpnp_adc_tm_channel_measure(chip-&gt;adc_tm_dev,&amp;chip-&gt;adc_param); // request ADC</span><br><span class="line">        qpnp_lbc_bat_if_configure_btc(chip) // configure btc        </span><br><span class="line">        determine_initial_status(chip); /* Get/Set charger\<span class="string">&#x27;s initial status */</span></span><br><span class="line"><span class="string">        qpnp_lbc_request_irqs(chip); // initialize LBC MISC</span></span><br><span class="line"><span class="string">        /* Configure initial alarm for VDD trim */ 配置initial vdd调整报警</span></span><br><span class="line"><span class="string">        alarm_start_relative(&amp;chip-&gt;vddtrim_alarm, kt);//Sets a relative alarm to fire</span></span><br><span class="line"><span class="string">```   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### 主线二 : </span></span><br><span class="line"><span class="string">```bash</span></span><br><span class="line"><span class="string">            qpnp_batt_power_get_property</span></span><br><span class="line"><span class="string">                    get_prop_batt_status(chip); // 判断修改电池状态（充电 完成 等）</span></span><br><span class="line"><span class="string">if (qpnp_lbc_is_usb_chg_plugged_in(chip) &amp;&amp; chip-&gt;chg_done) //return POWER_SUPPLY_STATUS_FULL;</span></span><br><span class="line"><span class="string">rc = qpnp_lbc_read(chip, chip-&gt;chgr_base + INT_RT_STS_REG,&amp;reg_val, 1);</span></span><br><span class="line"><span class="string">                    get_prop_capacity(chip)</span></span><br><span class="line"><span class="string">                            battery_status = get_prop_batt_status(chip);   // 判断修改电池状态（充电 完成 等）</span></span><br><span class="line"><span class="string">      charger_in = qpnp_lbc_is_usb_chg_plugged_in(chip); //USB插入               </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> Power </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通 smb135x charger 驱动分析</title>
      <link href="2015/06/24/Android/smb135x-charger-driver/"/>
      <url>2015/06/24/Android/smb135x-charger-driver/</url>
      
        <content type="html"><![CDATA[<h2 id="analysis-log"><a href="#analysis-log" class="headerlink" title="analysis log"></a>analysis log</h2><!--mroe--><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;3&gt;[52515.763039] __smb135x_write: Writing 0x41=0x06</span><br><span class="line">&lt;3&gt;[52515.774459] __smb135x_write: Writing 0x41=0x26</span><br><span class="line">函数调用:    </span><br><span class="line">static int __smb135x_write(struct smb135x_chg *chip, int reg,u8 val)</span><br><span class="line">-&gt;smb135x_write(struct smb135x_chg *chip, int reg,u8 val) / smb135x_masked_write(struct smb135x_chg *chip, int reg,u8 mask, u8 val)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;3&gt;[52515.777868] fast_chg_handler: rt_stat = 0x00</span><br><span class="line">&lt;3&gt;[52515.782184] usbin_uv_handler: chip-&gt;usb_present = 1 usb_present = 0</span><br><span class="line">&lt;3&gt;[52515.788369] handle_usb_removal: setting usb psy <span class="built_in">type</span> = 0</span><br><span class="line">&lt;3&gt;[52515.793689] handle_usb_removal: setting usb psy present = 0</span><br><span class="line">&lt;3&gt;[52515.799241] power_ok_handler: rt_stat = 0x00</span><br><span class="line">&lt;3&gt;[52515.803472] src_detect_handler: chip-&gt;usb_present = 0 usb_present = 0</span><br><span class="line">函数调用: </span><br><span class="line">fast_chg_handler(struct smb135x_chg *chip, u8 rt_stat)</span><br><span class="line">usbin_uv_handler(struct smb135x_chg *chip, u8 rt_stat)</span><br><span class="line">handle_usb_removal(struct smb135x_chg *chip)</span><br><span class="line">(-&gt;usbin_uv_handler(struct smb135x_chg *chip, u8 rt_stat)/usbin_ov_handler(struct smb135x_chg *chip, u8 rt_stat)/determine_initial_status(struct smb135x_chg *chip))</span><br><span class="line">static struct irq_handler_info handlers[]= </span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">&quot;fast_chg&quot;</span>,</span><br><span class="line">.smb_irq= fast_chg_handler,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">&quot;usbin_uv&quot;</span>,</span><br><span class="line">.smb_irq= usbin_uv_handler,</span><br><span class="line">&#125;,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">-&gt;smb135x_irq_read(struct smb135x_chg *chip)</span><br><span class="line">/static irqreturn_t smb135x_chg_stat_handler(int irq, void *dev_id)</span><br><span class="line">-&gt;smb135x_chg_stat_handler(int irq, void *dev_id)</span><br><span class="line">-&gt;smb135x_main_charger_probe(struct i2c_client *client,const struct i2c_device_id *id)</span><br><span class="line"></span><br><span class="line">&lt;3&gt;[52515.809926] smb135x_chg_stat_handler: handler count = 4</span><br><span class="line">&lt;3&gt;[52515.815104] smb135x_chg_stat_handler: batt psy changed</span><br><span class="line">&lt;3&gt;[52515.820247] smb135x_chg_stat_handler: usb psy changed</span><br><span class="line">&lt;3&gt;[52515.825260] smb135x_chg_stat_handler: dc psy changed</span><br><span class="line">函数调用:</span><br><span class="line">smb135x_chg_stat_handler(int irq, void *dev_id)</span><br><span class="line">smb135x_external_power_changed(struct power_supply *psy)</span><br><span class="line">-&gt;  smb135x_main_charger_probe(struct i2c_client *client,const struct i2c_device_id *id)/(force_irq_set(void *data, u64 val)/smb135x_resume(struct device *dev))</span><br><span class="line"></span><br><span class="line">&lt;6&gt;[52515.836445] msm_hsusb msm_hsusb: CI13XXX_CONTROLLER_DISCONNECT_EVENT received</span><br><span class="line">函数调用:</span><br><span class="line">         kernel/drivers/usb/chipidea/ci13xxx_msm.c:186:dev_info(dev, <span class="string">&quot;CI13XXX_CONTROLLER_DISCONNECT_EVENT received\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&lt;3&gt;[52515.837146] smb135x_get_prop_batt_status: STATUS_4_REG=80</span><br><span class="line">&lt;3&gt;[52515.841747] smb135x_get_prop_batt_status: STATUS_4_REG=80</span><br><span class="line">函数调用:</span><br><span class="line">smb135x_get_prop_batt_status(struct smb135x_chg *chip)</span><br><span class="line">-&gt;smb135x_battery_get_property(struct power_supply *psy,enum power_supply_property prop,union power_supply_propval *val)/</span><br><span class="line">     smb135x_parallel_get_property(...)</span><br><span class="line"></span><br><span class="line">&lt;3&gt;[52515.847405] smb135x_external_power_changed: current_limit = 0</span><br><span class="line">函数调用:</span><br><span class="line">        smb135x_external_power_changed(struct power_supply *psy)</span><br><span class="line"></span><br><span class="line">.....</span><br></pre></td></tr></table></figure><h2 id="driver-architecture"><a href="#driver-architecture" class="headerlink" title="driver architecture"></a>driver architecture</h2><h3 id="the-important-structure"><a href="#the-important-structure" class="headerlink" title="the important structure"></a>the important structure</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">static struct i2c_driver smb135x_charger_driver = &#123;</span><br><span class="line">.driver= &#123;</span><br><span class="line">.name= <span class="string">&quot;smb135x-charger&quot;</span>,</span><br><span class="line">.owner= THIS_MODULE,</span><br><span class="line">.of_match_table= smb135x_match_table,    // get the dtsi profile</span><br><span class="line">.pm= &amp;smb135x_pm_ops,</span><br><span class="line">&#125;,</span><br><span class="line">.probe= smb135x_charger_probe,</span><br><span class="line">.remove= smb135x_charger_remove,</span><br><span class="line">.id_table= smb135x_charger_id,</span><br><span class="line">&#125;;</span><br><span class="line">           /*represent an I2C slave device*/</span><br><span class="line">struct i2c_client &#123;</span><br><span class="line">unsigned short flags;/* div., see below*/</span><br><span class="line">unsigned short addr;/* chip address - NOTE: 7bit*/</span><br><span class="line">/* addresses are stored <span class="keyword">in</span> the*/</span><br><span class="line">/* _LOWER_ 7 bits*/</span><br><span class="line">char name[I2C_NAME_SIZE];</span><br><span class="line">struct i2c_adapter *adapter;/* the adapter we sit on*/</span><br><span class="line">struct i2c_driver *driver;/* and our access routines*/</span><br><span class="line">struct device dev;/* the device structure*/</span><br><span class="line">int irq;/* irq issued by device*/</span><br><span class="line">struct list_head detected;</span><br><span class="line">&#125;;</span><br><span class="line">struct i2c_device_id &#123;</span><br><span class="line">char name[I2C_NAME_SIZE];</span><br><span class="line">kernel_ulong_t driver_data;/* Data private to the driver */</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct device_node &#123;</span><br><span class="line">const char *name;</span><br><span class="line">const char *<span class="built_in">type</span>;</span><br><span class="line">phandle phandle;</span><br><span class="line">const char *full_name;</span><br><span class="line">        ...</span><br><span class="line">&#125;</span><br><span class="line">struct smb135x_chg &#123;</span><br><span class="line">struct i2c_client*client;</span><br><span class="line">struct device*dev;</span><br><span class="line">struct mutexread_write_lock;</span><br><span class="line">        ...</span><br><span class="line">/* psy */</span><br><span class="line">struct power_supply*usb_psy;</span><br><span class="line">intusb_psy_ma;</span><br><span class="line">struct power_supplybatt_psy;</span><br><span class="line">struct power_supplydc_psy;</span><br><span class="line">struct power_supplyparallel_psy;</span><br><span class="line">struct power_supply*bms_psy;</span><br><span class="line">        ...</span><br><span class="line">&#125;</span><br><span class="line">struct power_supply &#123;</span><br><span class="line">const char *name;</span><br><span class="line">enum power_supply_type <span class="built_in">type</span>;</span><br><span class="line">enum power_supply_property *properties;</span><br><span class="line">...</span><br><span class="line">        int (*get_property)(...)</span><br><span class="line">        int (*set_property)(...)</span><br><span class="line">        ...       /* private */      struct device *dev;</span><br><span class="line">      ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="driver-analysis"><a href="#driver-analysis" class="headerlink" title="driver analysis"></a>driver analysis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册驱动:</span></span><br><span class="line"><span class="keyword">if</span> (is_parallel_charger(client))</span><br><span class="line">        smb135x_parallel_charger_probe(client, id);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">smb135x_main_charger_probe(client, id); // 驱动注册入口函数</span><br><span class="line">                chip = devm_kzalloc(&amp;client-&gt;dev, sizeof(*chip), GFP_KERNEL);</span><br><span class="line">        chip-&gt;client = client;</span><br><span class="line">        chip-&gt;dev = &amp;client-&gt;dev;   // get the dev</span><br><span class="line">                smb_parse_dt(chip)     // parse DT nodes</span><br><span class="line">      usb_psy = power_supply_get_by_name(<span class="string">&quot;usb&quot;</span>); // get usb Supply</span><br><span class="line">    struct device *dev = class_find_device(power_supply_class, NULL, name,power_supply_match_device_by_name);</span><br><span class="line">    dev_get_drvdata(dev)</span><br><span class="line">     INIT_DELAYED_WORK(&amp;chip-&gt;wireless_insertion_work,wireless_insertion_work);</span><br><span class="line">     smb135x_read(chip, CFG_4_REG, &amp;reg) // probe the device to check <span class="keyword">if</span> its actually connected</span><br><span class="line">     i2c_set_clientdata(client, chip);  // client-&gt;...-&gt;driver_datat = chip</span><br><span class="line">     smb135x_chip_version_and_revision(chip) // judge the chip version(smb1357/1358....)</span><br><span class="line">     dump_regs(chip) // <span class="built_in">read</span> and display the register<span class="string">&#x27;s value</span></span><br><span class="line"><span class="string">     smb135x_regulator_init(chip) // initialize regulator(稳压器)</span></span><br><span class="line"><span class="string">     smb135x_hw_init(chip) // initialize hardware(初始化芯片各种参数)</span></span><br><span class="line"><span class="string">     determine_initial_status(chip) //determine init status</span></span><br><span class="line"><span class="string">     .../* initialize Battery power_supply*/</span></span><br><span class="line"><span class="string">     chip-&gt;batt_psy.get_property= smb135x_battery_get_property;</span></span><br><span class="line"><span class="string">     chip-&gt;batt_psy.set_property= smb135x_battery_set_property;</span></span><br><span class="line"><span class="string">     chip-&gt;batt_psy.external_power_changed = smb135x_external_power_changed;   // register external power  update online function</span></span><br><span class="line"><span class="string">     chip-&gt;batt_psy.property_is_writeable = smb135x_battery_is_writeable;</span></span><br><span class="line"><span class="string">     power_supply_register(chip-&gt;dev, &amp;chip-&gt;batt_psy) // register Battery power Supply</span></span><br><span class="line"><span class="string">     ....// get the profile and register the function</span></span><br><span class="line"><span class="string">     power_supply_register(chip-&gt;dev, &amp;chip-&gt;dc_psy); // register dc psy  </span></span><br><span class="line"><span class="string">     devm_request_threaded_irq(struct device *dev, unsigned int irq, irq_handler_t handler, irq_handler_t thread_fn,unsigned long irqflags, </span></span><br><span class="line"><span class="string">                                                         const char *devname, void *dev_id)  // allocate(分配) an interrupt line for a managed device</span></span><br><span class="line"><span class="string">               enable_irq_wake(client-&gt;irq); // control irq power management wakeup</span></span><br><span class="line"><span class="string">               create_debugfs_entries(chip); // create debug </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> Power </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通电池管理系统（BMS）驱动分析</title>
      <link href="2015/06/24/Android/qaulcomm-bms-driver-analysis/"/>
      <url>2015/06/24/Android/qaulcomm-bms-driver-analysis/</url>
      
        <content type="html"><![CDATA[<blockquote><p>File: qpnp-vm-bms.c -  Battery monitor system　</p></blockquote><h2 id="简要"><a href="#简要" class="headerlink" title="简要"></a>简要</h2><p>BMS(Battery Monitoring System)主要提供如下功能：</p><ul><li><p>通过一定算法计算SOC(state of charge电量状态) or 剩余电量.</p></li><li><p>正在使用的电池电压, 开漏电压(OCV).</p></li></ul><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_1.png" alt="temp"></p><h2 id="硬件架构"><a href="#硬件架构" class="headerlink" title="硬件架构"></a>硬件架构</h2><a id="more"></a><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_2.jpg" alt="hw_arch"><br>硬件实现过冷过热检测停止充电：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_3.png" alt="temp_monitor"></p><!--more-->        <h2 id="工作状态机"><a href="#工作状态机" class="headerlink" title="工作状态机"></a>工作状态机</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_4.jpg" alt="bms_state"></p><h2 id="软件架构"><a href="#软件架构" class="headerlink" title="软件架构"></a>软件架构</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_5.jpg" alt="sw_arch"></p><p>SoC计算主要分为两部分:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Kernel space</span></span><br><span class="line">Hardware configuration</span><br><span class="line">Initial SoC calculation</span><br><span class="line">Shutdown OCV save</span><br><span class="line">Battery detection</span><br><span class="line">Set battery profile</span><br><span class="line">Interrupts handling</span><br><span class="line">Data <span class="built_in">read</span> from the hardware data (FIFO and accumulator)</span><br><span class="line">SoC lookup based on OCV (calculated <span class="keyword">in</span> user space) and batt_temp</span><br><span class="line">Driver <span class="built_in">source</span> code is available at /drivers/power/qpnp-vm-bms.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># User space</span></span><br><span class="line">OCV calculation using hardware data (FIFO and accumulator) <span class="built_in">read</span> from kernel space</span><br><span class="line">Updates the calculated OCV to kernel space through power supply class</span><br><span class="line">User space algorithm is shipped as a binary to the customers</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># BMS driver is mainly composed of two main areas:</span></span><br><span class="line">Interface</span><br><span class="line">    Purpose – To update/report when there is a change <span class="keyword">in</span> SoC</span><br><span class="line">     Important <span class="built_in">functions</span></span><br><span class="line">         get_prop_bms_capacity()</span><br><span class="line">         get_prop_bms_rbatt()</span><br><span class="line">         get_batt_therm()</span><br><span class="line">         report_voltage_based_soc()</span><br><span class="line">         report_vm_bms_soc()</span><br><span class="line">         report_eoc()</span><br><span class="line">Core engine</span><br><span class="line">    Purpose – Calculate and save the state of the battery</span><br><span class="line">    Important <span class="built_in">functions</span></span><br><span class="line">         qpnp_vm_bms_probe()</span><br><span class="line">         parse_bms_dt_properties()</span><br><span class="line">         config_battery_data()</span><br><span class="line">         battery_status_check()</span><br><span class="line">         calculate_initial_soc</span><br><span class="line">         bms_request_irqs()</span><br><span class="line">         monitor_soc_work()</span><br><span class="line">         report_state_of_charge()</span><br></pre></td></tr></table></figure><h2 id="驱动架构分析"><a href="#驱动架构分析" class="headerlink" title="驱动架构分析"></a>驱动架构分析</h2><h3 id="Interface-Mapping"><a href="#Interface-Mapping" class="headerlink" title="Interface Mapping"></a>Interface Mapping</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_6.jpg" alt="IM"><br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_7.jpg" alt="IM"></p><h3 id="几个主要的结构体"><a href="#几个主要的结构体" class="headerlink" title="几个主要的结构体"></a>几个主要的结构体</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">/*This is the client/device handle returned when a SPMI device  is registered with a controller. */</span><br><span class="line">struct spmi_device &#123;</span><br><span class="line">struct devicedev;                       // 设备结构体,在内核中用来描述每一个结构体</span><br><span class="line">const char*name;                  // 此设备在驱动中的名字</span><br><span class="line">struct spmi_controller*ctrl;      // 管理挂接此spmi设备的SMPI控制者</span><br><span class="line">struct spmi_resourceres;                // SMPI resource <span class="keyword">for</span> 主节点</span><br><span class="line">struct spmi_resource*dev_node; // array of SPMI resources when used with spmi-dev-container</span><br><span class="line">u32num_dev_node;         // 设备节点的数量</span><br><span class="line">u8sid;                               // 从设备ID</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/* struct spmi_controller: interface to the SPMI master controller */</span><br><span class="line">struct spmi_controller &#123;</span><br><span class="line">struct devicedev;</span><br><span class="line">unsigned intnr;                                                                         //  board-specific number identifier <span class="keyword">for</span> this controller/bus</span><br><span class="line">struct completiondev_released;                                            // 完成状态</span><br><span class="line">int(*cmd)(struct spmi_controller *, u8 opcode, u8 sid);// sends a non-data <span class="built_in">command</span> sequence on the SPMI bus.</span><br><span class="line">int(*read_cmd)(struct spmi_controller *,                          // sends a register <span class="built_in">read</span> <span class="built_in">command</span> sequence on the SPMI bus.</span><br><span class="line">u8 opcode, u8 sid, u16 addr, u8 bc, u8 *buf);</span><br><span class="line">int(*write_cmd)(struct spmi_controller *,                         // sends a register write <span class="built_in">command</span> sequence on the SPMI bus.</span><br><span class="line">u8 opcode, u8 sid, u16 addr, u8 bc, u8 *buf);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct qpnp_bms_chip &#123;</span><br><span class="line">struct device*dev;</span><br><span class="line">struct spmi_device*spmi;</span><br><span class="line">dev_tdev_no;</span><br><span class="line">u16base;</span><br><span class="line">u8revision[2];</span><br><span class="line">u32batt_pres_addr;</span><br><span class="line">u32chg_pres_addr;</span><br><span class="line"></span><br><span class="line">/* status variables */</span><br><span class="line">u8current_fsm_state;</span><br><span class="line">boollast_soc_invalid;</span><br><span class="line">        ....</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct device_node &#123;</span><br><span class="line">const char *name;</span><br><span class="line">const char *<span class="built_in">type</span>;</span><br><span class="line">phandle phandle;</span><br><span class="line">const char *full_name;</span><br><span class="line">        ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struct power_supply &#123;</span><br><span class="line">const char *name;</span><br><span class="line">enum power_supply_type <span class="built_in">type</span>;</span><br><span class="line">enum power_supply_property *properties;</span><br><span class="line">...</span><br><span class="line">        int (*get_property)(...)  </span><br><span class="line">        int (*set_property)(...)</span><br><span class="line">        ...</span><br><span class="line">       /* private */</span><br><span class="line">      struct device *dev;</span><br><span class="line">      ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="驱动分析"><a href="#驱动分析" class="headerlink" title="驱动分析"></a>驱动分析</h2><h3 id="主线一-initialization-probe"><a href="#主线一-initialization-probe" class="headerlink" title="主线一: initialization - probe"></a>主线一: initialization - probe</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_8.jpg" alt="probe"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">入口函数: static int qpnp_vm_bms_probe(struct spmi_device *spmi)    // 注册SMPI设备</span><br><span class="line">          chip = devm_kzalloc(&amp;spmi-&gt;dev, sizeof(*chip), GFP_KERNEL);   //给struct qpnp_bms_chip *chip(bms芯片设备)分配空间    </span><br><span class="line">          rc = bms_get_adc(chip, spmi); // 获取adc设备       </span><br><span class="line">                      chip-&gt;vadc_dev = qpnp_get_vadc(&amp;spmi-&gt;dev, <span class="string">&quot;bms&quot;</span>)// 获取vadc设备 spmi --&gt; spmi_device </span><br><span class="line">                      chip-&gt;iadc_dev = qpnp_get_iadc(&amp;spmi-&gt;dev, <span class="string">&quot;bms&quot;</span>)  // 获取iadc设备      </span><br><span class="line">                      chip-&gt;adc_tm_dev = qpnp_get_adc_tm(&amp;spmi-&gt;dev, <span class="string">&quot;bms&quot;</span>)  // 获取temp adc设备</span><br><span class="line">          revid_dev_node = of_parse_phandle(spmi-&gt;dev.of_node,<span class="string">&quot;qcom,pmic-revid&quot;</span>, 0);//获取struct device_node *revid_dev_node，解析dtsi配置文件(RREVID_REVID_PM8916寄存器（chip variant))。</span><br><span class="line">          chip-&gt;revid_data = get_revid_data(revid_dev_node)   //</span><br><span class="line">                       list_for_each_entry(revid_chip, &amp;revid_chips, link) // 遍历链表获取revid_data</span><br><span class="line">          rc = qpnp_pon_is_warm_reset(); //Checks <span class="keyword">if</span> the PMIC went through a warm reset.</span><br><span class="line">          chip-&gt;warm_reset = !!rc;  // converts not 0 to 1, 0  to 0</span><br><span class="line">          rc = parse_spmi_dt_properties(chip, spmi)  // 解析spmi的dtsi配置文件</span><br><span class="line">          rc = parse_bms_dt_properties(chip)    // 解析bms的dtsi配置文件</span><br><span class="line">          <span class="keyword">if</span> (chip-&gt;dt.cfg_disable_bms) </span><br><span class="line">                rc = qpnp_masked_write_base(chip, chip-&gt;base + EN_CTL_REG,BMS_EN_BIT, 0);  // <span class="built_in">disable</span> VMBMS</span><br><span class="line">          rc = qpnp_read_wrapper(chip, chip-&gt;revision,chip-&gt;base + REVISION1_REG, 2);//<span class="built_in">read</span> version register</span><br><span class="line">          dev_set_drvdata(&amp;spmi-&gt;dev, chip)  // 给spmi设备驱动赋值</span><br><span class="line">  device_init_wakeup(&amp;spmi-&gt;dev, 1) // device wakeup initialization</span><br><span class="line">  mutex_init(&amp;chip-&gt;bms_xxx) // 初始化一个 chip-&gt;bms_xxx mutex_t</span><br><span class="line">  init_waitqueue_head(&amp;chip-&gt;bms_wait_q) // 初始化等待序列头    </span><br><span class="line">          rc = set_battery_data(chip); //<span class="built_in">read</span> battery-id and select the battery profile                        </span><br><span class="line">              rc = config_battery_data(chip-&gt;batt_data) // <span class="built_in">set</span> the battery profile </span><br><span class="line">              wakeup_source_init(&amp;chip-&gt;vbms_xxx_source.source, name) // 根据name  prepare 一个wakeup <span class="built_in">source</span>(chip-&gt;vbms_xxx_source.source)并添加入链表</span><br><span class="line">              INIT_DELAYED_WORK(&amp;chip-&gt;monitor_soc_work, monitor_soc_work); // 注册电量监控函数并延时                             </span><br><span class="line">          INIT_DELAYED_WORK(&amp;chip-&gt;voltage_soc_timeout_work,voltage_soc_timeout_work);</span><br><span class="line"> bms_init_defaults(chip);  // chip 初始化为默认值</span><br><span class="line"> bms_load_hw_defaults(chip); // load 写入设置chip硬件默认值</span><br><span class="line">     setup_vbat_monitoring(chip); //vbat monitoring setup</span><br><span class="line">                    qpnp_adc_tm_channel_measure(chip-&gt;adc_tm_dev,&amp;chip-&gt;vbat_monitor_params)</span><br><span class="line">     bms_request_irqs(chip)  // chip 请求中断</span><br><span class="line"> battery_insertion_check(chip);// 电池插入检测</span><br><span class="line"> battery_status_check(chip); // 电池状态检测:charging start/stop/full, 并执行相应操作</span><br><span class="line">                charging_began(chip) // 开始充电</span><br><span class="line">                charging_ended(chip) // 停止充电</span><br><span class="line">     register_bms_char_device(chip) //character device to pass data to the userspace</span><br><span class="line">alloc_chrdev_region(&amp;chip-&gt;dev_no, 0, 1, <span class="string">&quot;vm_bms&quot;</span>)  // 为此设备分配空间</span><br><span class="line">cdev_init(&amp;chip-&gt;bms_cdev, &amp;bms_fops) // 初始化此设备</span><br><span class="line">cdev_add(&amp;chip-&gt;bms_cdev, chip-&gt;dev_no, 1) // 加入设备链表</span><br><span class="line">                chip-&gt;bms_class = class_create(THIS_MODULE, <span class="string">&quot;vm_bms&quot;</span>)  // create a class structure (class.c), be used <span class="keyword">in</span> calls to device_create();</span><br><span class="line">                chip-&gt;bms_device = device_create(chip-&gt;bms_class,NULL, chip-&gt;dev_no,NULL, <span class="string">&quot;vm_bms&quot;</span>);//creates a device and registers it with sysfs</span><br><span class="line">    calculate_initial_soc(chip) // calculate and initial the SOC （select  soc form cutoff soc and current soc）</span><br><span class="line">                 read_and_update_ocv(chip, batt_temp, <span class="literal">true</span>)</span><br><span class="line">                 ...</span><br><span class="line">                 rc = read_shutdown_ocv_soc(chip); // 读取上次关机电量</span><br><span class="line">       xx = lookup_soc_ocv(chip, est_ocv,batt_temp); // 读取电量给相关变量赋值</span><br><span class="line">       <span class="keyword">if</span>（chip-&gt;warm_reset） //重启</span><br><span class="line">          ...</span><br><span class="line">       <span class="keyword">if</span>(!shutdown_soc_invalid &amp;&amp;(abs(chip-&gt;shutdown_soc - chip-&gt;calculated_soc) &lt;chip-&gt;dt.cfg_shutdown_soc_valid_limit)  //如果关机SOC和现在的soc相差小于</span><br><span class="line">cfg_shutdown_soc_valid_limit  （msm-pm8916.dtsi 中定义：qcom,shutdown-soc-valid-limit = &lt;5&gt;;）</span><br><span class="line">         ...</span><br><span class="line">)</span><br><span class="line">   /* setup &amp; register the battery power supply */</span><br><span class="line">   ....  chip-&gt;bms_psy.xxx = xxx;    // 设置参数,  关联函数参照5.1</span><br><span class="line">               chip-&gt;bms_psy.getproperty= ppnp_vm_bms_power_get_property  // 调用方式  chip-&gt;bms_psy-&gt;get_property(chip-&gt;bms_psy,POWER_SUPPLY_PROP_CAPACITY, &amp;ret);   </span><br><span class="line">                      get_prop_bms_capacity(struct qpnp_bms_chip *chip)</span><br><span class="line">                               report_state_of_charge(chip)</span><br><span class="line">                                        report_vm_bms_soc(chip)</span><br><span class="line">   power_supply_register(chip-&gt;dev, &amp;chip-&gt;bms_psy)  // power_supply_register</span><br><span class="line">   get_battery_voltage(chip, &amp;vbatt)  // 获取电池电压      </span><br><span class="line">             chip-&gt;debug_root = debugfs_create_dir(<span class="string">&quot;qpnp_vmbms&quot;</span>, NULL)   // 创建debug路径</span><br><span class="line">   ent = debugfs_create_file(<span class="string">&quot;bms_data&quot;</span>, S_IFREG | S_IRUGO, chip-&gt;debug_root, chip,&amp;bms_data_debugfs_ops);// 创建debugfile</span><br><span class="line">   schedule_delayed_work(&amp;chip-&gt;monitor_soc_work, 0); // 调度 SoC监控函数</span><br><span class="line">       static void monitor_soc_work(struct work_struct *work)</span><br><span class="line">   /* schedule a work to check <span class="keyword">if</span> the userspace vmbms module has registered. Fall-back to voltage-based-soc reporting  <span class="keyword">if</span> it has not. */</span><br><span class="line">   schedule_delayed_work(&amp;chip-&gt;voltage_soc_timeout_work,msecs_to_jiffies(chip-&gt;dt.cfg_voltage_soc_timeout_ms)) </span><br><span class="line"></span><br><span class="line">/* Probe   Success */  </span><br></pre></td></tr></table></figure><h3 id="主线二-SoC-work-loop"><a href="#主线二-SoC-work-loop" class="headerlink" title="主线二: SoC work loop"></a>主线二: SoC work loop</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_9.jpg" alt="loop"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">      static void monitor_soc_work(struct work_struct *work)</span><br><span class="line">               /*将自定义设备结构体保存在文件指针的私有数据域中,以便访问设备时可以随时拿来使用*/</span><br><span class="line">             (根据结构体成员的指针 work 找到对应结构体的指针， qpnp_bms_chip整个结构体类型，结构体成员（第一个参数）的类型)</span><br><span class="line">               struct qpnp_bms_chip *chip = container_of(work,struct qpnp_bms_chip,monitor_soc_work.work); // 取出chip </span><br><span class="line">               bms_stay_awake(&amp;chip-&gt;vbms_soc_wake_source )//</span><br><span class="line">                          wakeup_source_report_event(ws) // Report wakeup event using the given <span class="built_in">source</span>.</span><br><span class="line">                calculate_delta_time(&amp;chip-&gt;tm_sec, &amp;chip-&gt;delta_time_s)  // 计算 delta time(elapsed_time 实耗时间)       </span><br><span class="line">                mutex_lock(&amp;chip-&gt;last_soc_mutex)</span><br><span class="line">                rc = get_battery_voltage(chip, &amp;vbat_uv)     // 如果电池存在,获取电池电压(vadc)</span><br><span class="line">                <span class="keyword">if</span> (chip-&gt;dt.cfg_use_voltage_soc)   // lihuaqian: <span class="keyword">if</span>( BMS device not opened )</span><br><span class="line">             calculate_soc_from_voltage(chip); // 通过电压计算SoC(state of charge 电量)</span><br><span class="line">                                   <span class="keyword">if</span> (voltage_based_soc == 100)</span><br><span class="line">              <span class="keyword">if</span> (chip-&gt;dt.cfg_report_charger_eoc)    </span><br><span class="line">            report_eoc(chip);  // 上报eoc</span><br><span class="line">               <span class="keyword">else</span>  </span><br><span class="line">      rc = get_batt_therm(chip, &amp;batt_temp);      // 获取电池热量</span><br><span class="line">                           new_soc = lookup_soc_ocv(chip, chip-&gt;last_ocv_uv,batt_temp);//  获得SoC(电量,见Battery Capacity Percent)</span><br><span class="line">      report_vm_bms_soc(chip);//update last_soc immediately </span><br><span class="line">                           power_supply_changed(&amp;chip-&gt;bms_psy)  // 修改电池信息</span><br><span class="line">pm_stay_awake(psy-&gt;dev);  //Notify the PM core that a wakeup event is being processed</span><br><span class="line">schedule_work(&amp;psy-&gt;changed_work);  //   schedule the changed_work <span class="keyword">function</span></span><br><span class="line">                          low_soc_check(chip)  // low SOC configuration</span><br><span class="line">              schedule_delayed_work(&amp;chip-&gt;monitor_soc_work,msecs_to_jiffies(get_calculation_delay_ms(chip)));// schedule the work only <span class="keyword">if</span> last_soc has not caught up with the calculated soc                                                                                                                                                                                                      or <span class="keyword">if</span> we are using voltage based soc</span><br></pre></td></tr></table></figure><h3 id="主线三-Report-SoC"><a href="#主线三-Report-SoC" class="headerlink" title="主线三: Report  SoC"></a>主线三: Report  SoC</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/bms_10.jpg" alt="report"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    static int report_vm_bms_soc(struct qpnp_bms_chip *chip)</span><br><span class="line">            soc = chip-&gt;calculated_soc</span><br><span class="line">            calculate_delta_time(&amp;last_change_sec, &amp;time_since_last_change_sec)</span><br><span class="line">            charging = is_battery_charging(chip)</span><br><span class="line">            <span class="keyword">if</span> (charging..)</span><br><span class="line">chip-&gt;catch_up_time_sec</span><br><span class="line">chip-&gt;charge_start_tm_sec = last_change_sec;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                   / * last_soc &lt; soc  ... <span class="keyword">if</span> we have not been charging at all since the last time this was called, report previous SoC. Otherwise, scale and catch up. */</span><br><span class="line">                        ...</span><br><span class="line">                        soc = scale_soc_while_chg(chip, charge_time_sec,chip-&gt;catch_up_time_sec,soc, chip-&gt;last_soc);  // scale and catch up</span><br><span class="line">           check_eoc_condition(chip);// 检测电池 条件状况</span><br><span class="line">rc = report_eoc(chip);</span><br><span class="line">           check_recharge_condition(chip) // 检测 充电 condition</span><br><span class="line">           backup_ocv_soc(chip, chip-&gt;last_ocv_uv, chip-&gt;last_soc) //Backup the actual ocv (last_ocv_uv) and not the last_soc-interpolated ocv.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> Power </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用及进阶命令总结</title>
      <link href="2015/06/11/Git/git%E5%B8%B8%E7%94%A8%E5%8F%8A%E8%BF%9B%E9%98%B6%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
      <url>2015/06/11/Git/git%E5%B8%B8%E7%94%A8%E5%8F%8A%E8%BF%9B%E9%98%B6%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>　　Git是Linux撞始人Linus Towards花一周写出来的分布式版本控制系统，大神终究是大神，这么牛逼的东西只需要一周。之前花了一百多刀买了Linus的原版自传《Just for fun》，基本上是他自己写的，很幽默，有兴趣可以看看。Linus很傲，但是傲得有资本，唯一能无视Jobs的现实扭曲力场，对Jobs的盛情邀请say no转身而去的人。　<br>　<br>　　言归正传，Git十分好用，应用也十分广泛,现在最好的代码托管网站Github就是基于git创建的，而且现在大多数公司及个人都在使用它进行代码管理，要熟练使用还是需要花一些苦功夫的，我现在也还只是会基本的应用，更深层次的使用还不熟悉。为了方便自己以后使用，将自己常用的一些命令加以总结，并Google了一些常用及进阶命令，一并列出，方便查询使用。</p><p><strong>最重要的命令: git <command> –help</strong></p><a id="more"></a><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;huaqianlee&quot;</span>   </span><br><span class="line">git config --global user.email <span class="string">&quot;huaqianlee@gmail.com&quot;</span> </span><br><span class="line">  </span><br><span class="line">git config --global color.ui <span class="literal">true</span></span><br><span class="line">git config --global alias.co checkout <span class="comment"># 配置别名，co 配为checkout 别名， 不过我没用</span></span><br><span class="line">git config --global alias.ci commit</span><br><span class="line">git config --global alias.st status</span><br><span class="line">git config --global alias.br branch</span><br><span class="line">git config --global core.editor <span class="string">&quot;mate -w&quot;</span>    <span class="comment"># 设置Editor使用textmate</span></span><br><span class="line">git config -l  <span class="comment"># 列举所有配置</span></span><br></pre></td></tr></table></figure><blockquote><p>用户的git配置文件~/.gitconfig</p></blockquote><h2 id="Git常用及进阶命令"><a href="#Git常用及进阶命令" class="headerlink" title="Git常用及进阶命令"></a>Git常用及进阶命令</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">help</span>  <span class="comment">#查看帮助，命令忘记了就靠它</span></span><br><span class="line">git init    <span class="comment">#初始化话目录为git仓库</span></span><br><span class="line">git clean -fd  <span class="comment"># 删除无用目录及文件</span></span><br><span class="line">git clean -fX  <span class="comment"># 删除无用文件</span></span><br><span class="line">git clean <span class="comment"># 删除所有untracked文件</span></span><br></pre></td></tr></table></figure><h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add file   <span class="comment">#添加文件到暂存区</span></span><br><span class="line">git add .        <span class="comment">#将所有修改或者新加文件添加到暂存区</span></span><br><span class="line">git add -A     <span class="comment"># 添加所有文件(除删除的文件,自动 git rm)  </span></span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git rm file         <span class="comment">#删除文件</span></span><br><span class="line">git rm &lt;file&gt; --cached  <span class="comment"># 从版本库中删除文件，但不删除文件</span></span><br></pre></td></tr></table></figure><h3 id="撤销回退"><a href="#撤销回退" class="headerlink" title="撤销回退"></a>撤销回退</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- xx  <span class="comment">#撤销xx文件修改</span></span><br><span class="line">git checkout .     <span class="comment">#撤销工作区修改</span></span><br><span class="line">git checkout <span class="variable">$&#123;commit&#125;</span> /path/to/file <span class="comment">#撤销指定文件到指定版本</span></span><br><span class="line">git revert &lt;<span class="variable">$id</span>&gt;    <span class="comment"># 恢复某次提交的状态，恢复动作本身也创建了一次提交对象</span></span><br><span class="line">git revert HEAD     <span class="comment"># 恢复最后一次提交的状态</span></span><br><span class="line">git reset &lt;file&gt;    <span class="comment"># 从暂存区恢复某一文件</span></span><br><span class="line">git reset -- .      <span class="comment"># 从暂存区恢复所有文件</span></span><br><span class="line">git reset  –hard HEAD^/HEAD~  <span class="comment">#回退到上一版本</span></span><br><span class="line">git reset  –hard &lt;commit_id&gt;    <span class="comment">#回退到指定版本</span></span><br><span class="line">git reset HEAD file  <span class="comment">#取消add文件</span></span><br><span class="line"></span><br><span class="line">git revert &lt;commit&gt;  <span class="comment"># 撤销提交</span></span><br><span class="line">git add (--all)/git rm/... <span class="comment"># 当上次提交异常时，不能成功撤销，需要针对冲突进行处理，LOG 也会相应提示</span></span><br><span class="line">git revert --<span class="built_in">continue</span> <span class="comment"># 处理完后，重新提交</span></span><br></pre></td></tr></table></figure><h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git commit  &lt;file&gt; <span class="comment">#提交单个文件</span></span><br><span class="line">git commit –m “description”   <span class="comment">#提交暂存区到服务器</span></span><br><span class="line">git commit -a           <span class="comment"># 等同执行git add、 git rm及git commit</span></span><br><span class="line">git commit -am <span class="string">&quot;some comments&quot;</span></span><br><span class="line">git commit --amend      <span class="comment"># 修改最后一次提交记录</span></span><br></pre></td></tr></table></figure><h3 id="查看状态记录"><a href="#查看状态记录" class="headerlink" title="查看状态记录"></a>查看状态记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git status        <span class="comment">#查看仓库状态</span></span><br><span class="line">git show (<span class="variable">$id</span>)  <span class="comment"># 显示某次提交的内容</span></span><br><span class="line">git <span class="built_in">log</span>   (file)       <span class="comment">#查看（文件）提交记录</span></span><br><span class="line">git <span class="built_in">log</span> -p &lt;file&gt;   <span class="comment"># 查看每次详细修改内容的diff</span></span><br><span class="line">git <span class="built_in">log</span> -p -2       <span class="comment"># 查看最近两次详细修改内容的diff</span></span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span>      <span class="comment"># 查看提交统计信息</span></span><br><span class="line">git reflog       <span class="comment">#查看历史版本号</span></span><br><span class="line">git <span class="built_in">log</span> -g <span class="comment">#同上，用&#x27;log&#x27;格式输出</span></span><br><span class="line">git <span class="built_in">log</span> -- grep <span class="string">&quot;name&quot;</span> <span class="comment"># 搜索包含name的log </span></span><br><span class="line">git <span class="built_in">log</span> record-ID  -l -p <span class="comment">#查看指定ID记录，-l:显示一行，-p:显示详细修改</span></span><br></pre></td></tr></table></figure><h3 id="查看差异"><a href="#查看差异" class="headerlink" title="查看差异"></a>查看差异</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git diff &lt;file&gt;     <span class="comment"># 比较当前文件和暂存区文件差异</span></span><br><span class="line">git diff   <span class="comment">#比较所有文件</span></span><br><span class="line">git diff master..Andylee-Github/master <span class="comment">#比较本地和远端仓库</span></span><br><span class="line">git diff &lt;<span class="variable">$id1</span>&gt; &lt;<span class="variable">$id2</span>&gt;   <span class="comment"># 比较两次提交之间的差异</span></span><br><span class="line">git diff &lt;branch1&gt;..&lt;branch2&gt; <span class="comment">#比较分支</span></span><br><span class="line">git diff --staged   <span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git diff --cached   <span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git diff --<span class="built_in">stat</span>     <span class="comment"># 仅仅比较统计信息</span></span><br></pre></td></tr></table></figure><h3 id="本地分支管理"><a href="#本地分支管理" class="headerlink" title="本地分支管理"></a>本地分支管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">git branch  <span class="comment">#查看本地分支</span></span><br><span class="line">git branch  -r    <span class="comment"># 查看远程分支</span></span><br><span class="line">git branch  -a     <span class="comment">#查看包括远程文件在内的所有分支 </span></span><br><span class="line">git branch   &lt;new_branch&gt; <span class="comment"># 创建新分支</span></span><br><span class="line">git branch   -v           <span class="comment"># 查看各个分支最后提交信息</span></span><br><span class="line">git branch   --merged     <span class="comment"># 查看已经被合并到当前分支的分支</span></span><br><span class="line">git branch   --no-merged  <span class="comment"># 查看尚未被合并到当前分支的分支</span></span><br><span class="line"></span><br><span class="line">git checkout &lt;branch&gt;  <span class="comment">#切换分支</span></span><br><span class="line">git checkout –b &lt;new_branch&gt;<span class="comment">#创建新分支，并切换到新分支</span></span><br><span class="line">git merge dev    <span class="comment">#在当前的分支上合并dev分支</span></span><br><span class="line">git checkout -b &lt;new_branch&gt; &lt;branch&gt;  <span class="comment"># 基于branch创建新的new_branch</span></span><br><span class="line">git checkout  <span class="variable">$id</span>          <span class="comment"># 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span></span><br><span class="line">git checkout  <span class="variable">$id</span> -b &lt;new_branch&gt;  <span class="comment"># 把某次历史提交记录checkout出来，创建成一个分支</span></span><br><span class="line"></span><br><span class="line">git branch-d &lt;branch&gt;  <span class="comment"># 删除分支</span></span><br><span class="line">git branch-D &lt;branch&gt;  <span class="comment"># 强制删除分支 (未被合并的分支被删除的时需要强制)</span></span><br><span class="line"></span><br><span class="line">git merge &lt;branch&gt;               <span class="comment"># 将branch分支合并到当前分支</span></span><br><span class="line">git merge origin/master --no-ff  <span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></span><br><span class="line">git rebase master &lt;branch&gt;       <span class="comment"># 将master rebase到branch，等同于：</span></span><br><span class="line"><span class="comment">#git checkout   &lt;branch&gt; + git rebase master + git checkout  master + git merge &lt;branch&gt;</span></span><br><span class="line"></span><br><span class="line">git cherry-pick &lt;commit&gt;  <span class="comment"># 合并其它分支的某一次提交</span></span><br><span class="line"><span class="comment"># 合并其它分支一系列提交，first_commit ~ last_commit</span></span><br><span class="line">git checkout -b newbranch &lt;last_commit&gt; <span class="comment"># 依据需要合并的最后一条 commit 创建新分支</span></span><br><span class="line">git rebase --onto master &lt;first_commit&gt;^  <span class="comment"># 从新分支中需要合并的第一条 commit 开始合并</span></span><br></pre></td></tr></table></figure><h3 id="补丁应用"><a href="#补丁应用" class="headerlink" title="补丁应用"></a>补丁应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff &gt; ../sync.patch         <span class="comment"># 生成补丁</span></span><br><span class="line">git apply ../sync.patch          <span class="comment"># 打补丁</span></span><br><span class="line">git apply --check ../sync.patch  <span class="comment"># 测试补丁能否成功</span></span><br></pre></td></tr></table></figure><h3 id="暂存管理"><a href="#暂存管理" class="headerlink" title="暂存管理"></a>暂存管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git stash  <span class="comment">#暂存当前工作，恢复现场后可继续工作</span></span><br><span class="line">git stash list  <span class="comment">#查看暂存文件列表</span></span><br><span class="line">git stash apply  <span class="comment">#恢复暂存内容，暂存区不删除</span></span><br><span class="line">git stash drop  <span class="comment">#删除暂存文件</span></span><br><span class="line">git stash pop  <span class="comment">#恢复并删除文件</span></span><br></pre></td></tr></table></figure><h3 id="远程分支管理"><a href="#远程分支管理" class="headerlink" title="远程分支管理"></a>远程分支管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git pull                         <span class="comment"># 抓取远程仓库所有分支更新并合并到本地</span></span><br><span class="line">git pull --no-ff                 <span class="comment"># 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span></span><br><span class="line">git fetch origin                 <span class="comment"># 抓取远程仓库更新，加下一条指令等同于git pull</span></span><br><span class="line">git merge origin/master          <span class="comment"># 将远程主分支合并到本地当前分支</span></span><br><span class="line">git checkout   --track origin/branch     <span class="comment"># 跟踪某个远程分支创建相应的本地分支</span></span><br><span class="line">git checkout   -b &lt;local_branch&gt; origin/&lt;remote_branch&gt;  <span class="comment"># 基于远程分支创建本地分支，功能同上</span></span><br><span class="line"></span><br><span class="line">git push                         <span class="comment"># push所有分支</span></span><br><span class="line">git push origin branch   <span class="comment"># 将本地分支推到远程分支</span></span><br><span class="line">git push –u origin branch   <span class="comment">#推送本地分支到远程仓库，首次提交需要加-u </span></span><br><span class="line">git push origin &lt;local_branch&gt;   <span class="comment"># 创建远程分支， origin是远程仓库名</span></span><br><span class="line">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt;  <span class="comment"># 创建远程分支</span></span><br><span class="line">git push origin :&lt;remote_branch&gt;  <span class="comment">#先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span></span><br></pre></td></tr></table></figure><h3 id="远程仓库管理"><a href="#远程仓库管理" class="headerlink" title="远程仓库管理"></a>远程仓库管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git remote  <span class="comment">#查看远程库的信息</span></span><br><span class="line">git remote –v  <span class="comment">#查看远程库地址和名称</span></span><br><span class="line">git remote show origin           <span class="comment"># 查看远程服务器仓库状态</span></span><br><span class="line">git remote add origin git@github:robbin/robbin_site.git         <span class="comment"># 添加远程仓库地址</span></span><br><span class="line">git remote set-url origin git@github.com:robbin/robbin_site.git <span class="comment"># 设置远程仓库地址(用于修改远程仓库地址)</span></span><br><span class="line">git remote rm &lt;repository&gt;       <span class="comment"># 删除远程仓库</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/AndyLee-Github/cartboon.git   <span class="comment">#从远程仓库中克隆</span></span><br><span class="line">git <span class="built_in">clone</span> --bare robbin_site robbin_site.git  <span class="comment"># 用带版本的项目创建纯版本仓库</span></span><br><span class="line">scp -r my_project.git git@git.csdn.net:~      <span class="comment"># 将纯仓库上传到服务器上</span></span><br><span class="line"></span><br><span class="line">mkdir robbin_site.git + <span class="built_in">cd</span> robbin_site.git + git --bare init <span class="comment"># 在服务器创建纯仓库</span></span><br><span class="line">git remote add origin git@github.com:robbin/robbin_site.git    <span class="comment"># 设置远程仓库地址</span></span><br><span class="line">git push -u origin master                                      <span class="comment"># 客户端首次提交</span></span><br><span class="line">git push -u origin develop  <span class="comment"># 首次将本地develop分支提交到远程develop分支，并且track</span></span><br><span class="line">git remote set-head origin master   <span class="comment"># 设置远程仓库的HEAD指向master分支</span></span><br></pre></td></tr></table></figure><h3 id="命令设置跟踪远程库和本地库"><a href="#命令设置跟踪远程库和本地库" class="headerlink" title="命令设置跟踪远程库和本地库"></a>命令设置跟踪远程库和本地库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream master origin/master</span><br><span class="line">git branch --set-upstream develop origin/develop</span><br></pre></td></tr></table></figure><h3 id="create-a-new-repository-on-the-command-line"><a href="#create-a-new-repository-on-the-command-line" class="headerlink" title="create a new repository on the command line"></a>create a new repository on the command line</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# hexo-theme&quot;</span> &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin git@github.com:huaqianlee/hexo-theme.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="push-an-existing-repository-from-the-command-line"><a href="#push-an-existing-repository-from-the-command-line" class="headerlink" title="push an existing repository from the command line"></a>push an existing repository from the command line</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:huaqianlee/hexo-theme.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><blockquote><p>目前先这么多，后续再补充更高级的命令， 也可参考：<a href="http://www.imooc.com/article/1089">git进阶</a>，<a href="https://github.com/xirong/my-git">git资料整理</a>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android电池监控系统(BMS)之一电池系统架构</title>
      <link href="2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/"/>
      <url>2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p><em>Platform Information :<br>　System:    Ａndroid4.4.4<br>　Platform:  Qualcomm msm8916<br>　Author:     Andy Lee<br>　Email:        <a href="mailto:&#x68;&#x75;&#x61;&#x71;&#x69;&#x61;&#x6e;&#x6c;&#101;&#101;&#64;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;">&#x68;&#x75;&#x61;&#x71;&#x69;&#x61;&#x6e;&#x6c;&#101;&#101;&#64;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;</a></em></p><p><strong>如有错误欢迎指出，共同学习，共同进步</strong><br>　<br>　　电池对移动设备的重要性不言而喻，所以电池监控系统也是Android的重中之重。今天就结合工作中的内容来分析一下电池监控系统。<br>##电池系统架构<br>　　Android中的电池使用方式包括AC（即电源适配器）、Wireless（无线充电）、USB、Battery 等不同的模式。在APP层，通常包括电池状态显示等功能。在framework层 ，主要包括从底层获取电池信息、电池管理、LED控制、绘制更新充电图标等功能。因此，bms主要负责电池状态信息读取和更新相应状态。其架构如下：　<br>　<br>　　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/201566Android-bms-arch.png" alt="电池系统架构"></p><p>自上而下，Android电池监控系统分为如下几个部分：</p><p>###电池信息查看APP<br>　　此部分主要是指查看电池信息的APP，比如电池医生、手机内置的电池信息查看APP等。这里就用工作的为例，在拨号状态下输入*#360*#，则会打开电池信息查看APP。如下所示：</p><a id="more"></a>　<p>　　　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/201566battery-info.png" alt="电池信息"></p><p>　　代码主要路径：</p><ul><li>packages\apps\Settings\src\com\android\settings\BatteryOemInfo.java  //APP</li><li>packages\apps\Dialer\src\com\android\dialer\SpecialCharSequenceMgr.java   // 命令 配置</li></ul><p>　　在手机 /sys/class/power_supply/bms/、/sys/class/power_supply/battery/文件夹中保存了电池的所有相关信息节点，这些节点是由Linux内核创建，待会儿驱动部分将讲到此内容。此APP比较简单，主要就是读取这些文件节点、接收电池信息广播（后面将讲到此广播由BatteryService.java中发出Intent.ACTION_BATTERY_CHANGED），电池信息包括充电设备等信息，然后将这些内容更新到UI界面加以显示，SpecialCharSequenceMgr.Java中主要实现通过判断拨号命令掉用此APP。</p><p>###Java框架及本地框架<br>　　此部分的核心文件是BatteryService.java，作为电池、充电相关的服务，其监听Uevent、读取sysfs 中的状态 、广播Intent.ACTION_BATTERY_CHANGED。此部分代码路径如下：</p><p><strong>frameworks\base\services\java\com\android\server</strong></p><ul><li>frameworks\base\services\java\com\android\server\BatteryService.java   // 电池管理，开机充电led控制</li><li>frameworks\base\services\java\com\android\server\am\BatteryStatsService.java // 影响电池的所有信息及操作，如：关机，屏幕亮度、wakelock、GPS等。</li></ul><p><strong>frameworks\base\core\java\android\os</strong></p><ul><li><p>frameworks\base\core\java\android\os\BatteryManager.java // 电池信息广播Intent（ACTION_BATTERY_CHANGED）用到的字符串和常量</p></li><li><p>frameworks\base\core\java\android\os\BatteryStats.java  // 存取电池使用情况统计，包括wakelocks, processes, packages, and services等</p></li><li><p>frameworks\base\core\java\android\os\BatteryProperties.java  // 打包电池信息读写代码，与下BatteryProperties.cpp同步</p></li><li><p>frameworks\base\core\java\com\android\internal\os\BatteryStatsImpl.java // 影响电池的所有信息及操作，时间以ms为单位</p></li><li><p>frameworks\base\core\java\com\android\internal\app\IBatteryStats.aidl    // .aidl为接口定义文件， 定义电池状态信息及相关操作方法。</p></li></ul><p><strong>frameworks\base\packages\SystemUI\src\com\android\systemui</strong></p><ul><li>frameworks\base\packages\SystemUI\src\com\android\systemui\BatteryMeterView.java // 创建系统广播接收器，接收电池信息广播，绘制电池状态图标</li><li>frameworks\base\packages\SystemUI\src\com\android\systemui\statusbar\policy\BatteryController.java // 定义一个广播接收器并在构造器里注册接收电池信息广播，收到自己广播后回调修改pluged、level</li><li>frameworks\base\packages\SystemUI\src\com\android\systemui\statusbar\policy\BatteryLevel.java // 定义电量百分比显示TextView类</li><li>frameworks\base\packages\SystemUI\src\com\android\systemui\power\PowerUI.java // 创建系统广播接收器，接收电池信息广播，弹出低电警告等</li></ul><p><strong>frameworks\native\services</strong></p><ul><li>frameworks\native\services\sensorservice\BatteryService.cpp // 定义BatteryService.h中创建的BatteryService类的成员函数</li><li>frameworks\native\services\batteryservice\BatteryProperties.cpp // 打包电池信息读写代码,与上BatteryProperties.java同步</li><li>frameworks\native\services\batteryservice\IBatteryPropertiesListener.cpp // 监听电池信息  ，和下文件一起为BatteryService.java中的update(BatteryProperties)服务</li><li>frameworks\native\services\batteryservice\IBatteryPropertiesRegistrar.cpp  // 注册电池监听</li></ul><p><strong>system\core\healthd</strong></p><ul><li>system\core\healthd\BatteryMonitor.cpp // 从/sys/class/power_supply中获取电池信息，并update BatteryProperties</li><li>system\core\healthd\BatteryPropertiesRegistrar.cpp // 好像系统没有用到，暂时还不知道此文件的用处</li><li>system\core\healthd\healthd.cpp // 监听底层上报事件，调用BatteryMonitor.cpp中的update</li></ul><p>// BatteryService.java<br>processValuesLocked   connect /dis/ led   广播<br>sendIntentLocked() 电池状态改变，广播</p><p>mBatteryPropertiesRegistrar = IBatteryPropertiesRegistrar.Stub.asInterface(b); 注册<br>    BatteryService.this.update(props)<br>      update()<br>        processValuesLocked(); </p><p> mBatteryPropertiesRegistrar.registerListener(mBatteryPropertiesListener);<br>frameworks\native\services\batteryservice\IBatteryPropertiesRegistrar.cpp<br>frameworks\native\services\batteryservice\IBatteryPropertiesListener.cpp</p><p>　<br>未完待续….</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码分析 </tag>
            
            <tag> 电源管理 </tag>
            
            <tag> Power </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 电源管理架构</title>
      <link href="2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/"/>
      <url>2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>　　对于移动设备，电源管理是相当重要的一部分，因为现在在公司主要负责电源管理部分，所以借用Google对其研究了一下，再结合自己的工作经验，准备接下来写一系列相关的文章。因为现在还研究得不够，所以最初的文章会不够深入。不过我会慢慢研究，然后写一些比较详细的解读。</p><h2 id="高通的引导体系结构"><a href="#高通的引导体系结构" class="headerlink" title="高通的引导体系结构"></a>高通的引导体系结构</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/20155304921b788-8a63-472f-be7c-2220a98cf428.jpg" alt="boot"><br><strong>SBL- Second BootLoader</strong></p><a id="more"></a><h2 id="电源管理框图"><a href="#电源管理框图" class="headerlink" title="电源管理框图"></a>电源管理框图</h2><p>　　这里先借用网上一张老版本的图片，后面再自己绘制一张详细的框图补上来。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/20155305061d93f-df42-46c4-ae36-bd18648583b1.jpg" alt="power"></p><h2 id="主要文件及路径"><a href="#主要文件及路径" class="headerlink" title="主要文件及路径"></a>主要文件及路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kernel\kernel\power\*</span><br><span class="line">   arch\arm\match-xxx\pm.c</span><br><span class="line">   driver\power\*</span><br><span class="line">   system\core\charger\charger.c   - 关机充电信息，显示充电<span class="built_in">log</span>等</span><br><span class="line">   上层文件太分散，待后期文件详解再一一列出</span><br></pre></td></tr></table></figure><h2 id="Android结构"><a href="#Android结构" class="headerlink" title="Android结构"></a>Android结构</h2><p>　　Android的电源管理主要通过锁和定时器来切换系统的状态(即三种低功耗状态)，使系统功耗降到最低。 电源管理架构分为四大部分： APP，Framework，Hal，Kernel。</p><h3 id="应用层-APP"><a href="#应用层-APP" class="headerlink" title="应用层(APP)"></a>应用层(APP)</h3><p>　　应用层主要指应用程序及其他使用电源管理的service。</p><h3 id="架构层-Framework"><a href="#架构层-Framework" class="headerlink" title="架构层(Framework)"></a>架构层(Framework)</h3><p>　　Framework层为APP提供API接口及协调电源的管理工作，主要包含：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PowerManager.java  // 提供给应用层调用</span><br><span class="line">PowerManagerService.java  // 核心文件</span><br><span class="line">com_android_server_PowerManagerService.cpp、</span><br><span class="line">Power.java  // 提供底层的函数接口,与JNI交互</span><br><span class="line">android_os_Power.cpp  //jni交互文件</span><br></pre></td></tr></table></figure><p>　　这一层的功能相对比较复杂,比如系统状态的切换，背光的调节及开关，Wake Lock的申请和释放等等，但这一层跟硬件平台无关。</p><h3 id="Hal层"><a href="#Hal层" class="headerlink" title="Hal层"></a>Hal层</h3><p>　　Hal层为一个Power.c文件，该文件通过sysfs的方式与kernel进行通信。主要功能有申请wake_lock，释放wake_lock，设置屏幕状态等。所有对电源管理的调用应通过Android的PowerManager API来完成。</p><h3 id="Kernel层"><a href="#Kernel层" class="headerlink" title="Kernel层"></a>Kernel层</h3><p>　　Kernel层的电源管理方案实现主要包含三部分：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Kernel\power\：实现了系统电源管理框架机制</span><br><span class="line">Arch\arm(or mips or powerpc)\mach-XXX\pm.c:实现对特定板的处理器电源管理</span><br><span class="line">drivers\power:是设备电源管理的基础框架，为驱动提供了电源管理接口. 实现了针对所有设备的sysfs操作函数.</span><br></pre></td></tr></table></figure><p>　　android提供了三种低功耗状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">earlysuspend //让某些设备选择进入某种功耗较低的状态，如LCD灭掉</span><br><span class="line"><span class="built_in">suspend</span> // 除电源模块以外的外围模块和CPU均不工作，只有内存保持自刷新的一个工作状态</span><br><span class="line">hibernation// 所有内存镜像都被写入到磁盘中，然后系统关机，重启后系统将恢复到关机之前的状态</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title="　"></a>　</h2><p>　</p><h3 id="电源管理机制"><a href="#电源管理机制" class="headerlink" title="电源管理机制"></a>电源管理机制</h3><p>　　Android的电源管理主要通过锁和定时器来切换系统的状态(如上述三种低功耗状态),使系统功耗降到最低.　</p><h4 id="实现流程"><a href="#实现流程" class="headerlink" title="实现流程"></a>实现流程</h4><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/2015530390bc951-ede6-47dd-83ce-c1a6aced6e82.png" alt="framework">　</p><h4 id="状态切换流程"><a href="#状态切换流程" class="headerlink" title="状态切换流程"></a>状态切换流程</h4><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/201553020e46e8e-7570-483b-9ea2-375cf4ae59d2.png" alt="state"></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> 电源管理 </tag>
            
            <tag> Power </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Stdudio Linux/windows/mac常用快捷键</title>
      <link href="2015/05/29/Android/Android-Stdudio-Linux-windows-mac%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>2015/05/29/Android/Android-Stdudio-Linux-windows-mac%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p>　　前些时间把Android Studio的环境折腾好，典型的geek风一下子完全吸引了我，比eclipse好用太多了，有很多意外的功能,快捷键可以自定义，但我基本都用的默认的。或许用Macbook Pro做Android开发是最好的选择，但自己平时要搞Linux/Android底层相关的东西，thinkpad就成为最好的选择，所以就入手了thinkpad，用着Ubuntu和Windows，先总结我使用环境下的快捷键。</p><a id="more"></a>　　<h2 id="AS-快捷键"><a href="#AS-快捷键" class="headerlink" title="AS 快捷键"></a>AS 快捷键</h2><table><thead><tr><th>Action</th><th>Win/Linux</th><th>Mac</th></tr></thead><tbody><tr><td><strong>Common：</strong></td><td></td><td></td></tr><tr><td>搜索AS动作</td><td>Ctrl + Shift + A</td><td>Cmd + Shift + A</td></tr><tr><td>切换书签</td><td>F11</td><td>F3</td></tr><tr><td>显示书签</td><td>Shift + F11</td><td>Cmd + F3</td></tr><tr><td>编译工程</td><td>Ctrl+F9</td><td></td></tr><tr><td>运行</td><td>Alt+Shift+X</td><td></td></tr><tr><td>调试运行</td><td>Alt+Shift+D</td><td></td></tr><tr><td>git push</td><td>Ctrl+Shift+K</td><td></td></tr><tr><td>打开Project Structure</td><td>Ctrl+Alt+Shift+S</td><td></td></tr><tr><td>打开settings</td><td>Ctrl+Alt+S</td><td></td></tr><tr><td>重命名</td><td>Shift +F６</td><td></td></tr><tr><td>查找</td><td>Ctrl+F</td><td></td></tr><tr><td>全局查找</td><td>Ctrl+Shift+F</td><td></td></tr><tr><td>文件查找</td><td>双击Shift</td><td></td></tr><tr><td>最近文件</td><td>Ctrl+E</td><td></td></tr><tr><td>最近编辑文件</td><td>Ctrl+Shift+E</td><td></td></tr><tr><td>查看继承类</td><td>F4</td><td></td></tr><tr><td><strong>Code：</strong></td><td></td><td></td></tr><tr><td>导入包</td><td>Alt+Enter</td><td></td></tr><tr><td>注释代码(//)</td><td>Ctrl + /</td><td>Cmd + /</td></tr><tr><td>注释代码(/**/)</td><td>Ctrl + Shift + /</td><td>Cmd + Option + /</td></tr><tr><td>格式化代码</td><td>Ctrl + Alt + L</td><td>Cmd + Option + L</td></tr><tr><td>清除无效包引用</td><td>Alt + Ctrl + O</td><td>Option + Control + O</td></tr><tr><td>高亮当前文件所有存在</td><td>Ctrl + Shift + F7</td><td>Cmd + Shift + F7</td></tr><tr><td>定位高亮位置</td><td>F3/Shift + F3</td><td>F3/Shift + F3</td></tr><tr><td>在方法或内部类之间跳转</td><td>Alt + Up/Down</td><td>Ctrl + Up/Down</td></tr><tr><td>显示类大纲</td><td>Ctrl + F12</td><td>Cmd + F12</td></tr><tr><td>层级结构查询</td><td>Ctrl + Alt + H</td><td>Ctrl + Alt + H</td></tr><tr><td>快速定义查询</td><td>Ctrl + Shift + I</td><td>Alt + Space</td></tr><tr><td>整行代码移动</td><td>Ctrl/Alt + Shift + Up/Down</td><td>Cmd/Alt + Shift + Up/Down</td></tr><tr><td>伸缩代码块</td><td>Ctrl + Shift + Plus/Minus</td><td>Alt + Plus/Minus</td></tr><tr><td>查找</td><td>Ctrl + F</td><td>Cmd + F</td></tr><tr><td>查找+替换</td><td>Ctrl + R</td><td>Cmd + R</td></tr><tr><td>上下移动代码</td><td>Alt + Shift + Up/Down</td><td>Option + Shift + Up/Down</td></tr><tr><td>撤销恢复</td><td>Ctrl + Z/Ctrl + Shift + Z</td><td></td></tr><tr><td>删除行</td><td>Ctrl + Y</td><td>Cmd + Delete/Backspace</td></tr><tr><td>重命名</td><td>Ctrl+Shift+R</td><td></td></tr><tr><td>以代码块单位移动光标</td><td>Alt+Up/Down</td><td></td></tr><tr><td>扩大缩小选中范围</td><td>Ctrl + W/Ctrl + Shift + W</td><td>Option + Up/Down</td></tr><tr><td>快捷生成结构体</td><td>Ctrl + Alt + T</td><td>Cmd + Option + T</td></tr><tr><td>快捷覆写方法</td><td>Ctrl + O</td><td>Cmd + O</td></tr><tr><td>快捷定位到行首/尾</td><td>Ctrl + Left/Right</td><td>Cmd + Left/Right</td></tr><tr><td>快速切换到上/下一视图</td><td>Alt + Left/Right</td><td>Option + Left/Right</td></tr><tr><td>折叠展开代码块</td><td>Ctrl + Plus/Minus(+/-)</td><td>Cmd + Plus/Minus</td></tr><tr><td>折叠展开全部代码块</td><td>Ctrl + Shift + Plus/Minus</td><td>Cmd + Shift + Plus/Minus</td></tr><tr><td>文件方法结构</td><td>Ctrl + F12</td><td>Cmd + F12</td></tr><tr><td>查找调用的位置</td><td>Ctrl + Alt + H</td><td>Ctrl + Option + H</td></tr><tr><td>大小写转换</td><td>Ctrl + Shift + U</td><td>Cmd + Shift + U</td></tr><tr><td><strong>Debug：</strong></td><td></td><td></td></tr><tr><td>单步调试，进入函数</td><td>F5</td><td></td></tr><tr><td>单步调试，不进入函数</td><td>F6</td><td></td></tr><tr><td>跳出函数</td><td>F7</td><td></td></tr><tr><td>执行到下一断点</td><td>F8</td><td></td></tr></tbody></table><p>……</p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> App </tag>
            
            <tag> Android Studio </tag>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在内核里操作文件(create/open/read/write)</title>
      <link href="2015/03/17/Linux/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%86%85%E6%A0%B8%E9%87%8C%E6%93%8D%E4%BD%9C%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6-create-open-read-write/"/>
      <url>2015/03/17/Linux/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%86%85%E6%A0%B8%E9%87%8C%E6%93%8D%E4%BD%9C%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6-create-open-read-write/</url>
      
        <content type="html"><![CDATA[<p>　　因之前工作需要在kernel里存取数据到文件中，特意研究了一下怎么做，我们应尽可能避免直接操作文件I/O，选择通过调用VFS（虚拟文件系统）的函数来实现，我的实现demo如下：</p><p>##Includes</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/fs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/segment.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/uaccess.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/buffer_head.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>##Opening a file </p><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">struct file* <span class="title">file_open</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* path, <span class="keyword">int</span> flags, <span class="keyword">int</span> rights)</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">file</span>* <span class="title">filp</span> = <span class="title">NULL</span>;</span></span><br><span class="line">    <span class="keyword">mm_segment_t</span> oldfs;</span><br><span class="line">    <span class="keyword">int</span> err = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 内核中进行系统调用（如文件操作）时，必须调用下面两句，对其进行保护，其作用是让内核能访问用户空间 */</span></span><br><span class="line">    oldfs = get_fs();  <span class="comment">// 备份当前进程地址空间</span></span><br><span class="line">    set_fs(get_ds()); <span class="comment">// 设置进程地址空间为虚拟地址空间上限，#define get_ds() (KERNEL_DS) ,</span></span><br><span class="line">    filp = filp_open(path, flags, rights); <span class="comment">// 调用文件打开函数</span></span><br><span class="line">    set_fs(oldfs); <span class="comment">//恢复进程地址空间</span></span><br><span class="line">    <span class="keyword">if</span>(IS_ERR(filp)) &#123;</span><br><span class="line">        err = PTR_ERR(filp);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> filp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##Close a file </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">file_close</span><span class="params">(struct file* file)</span> </span>&#123;</span><br><span class="line">    filp_close(file, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##Reading from a file</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">file_read</span><span class="params">(struct file* file, <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> offset, <span class="keyword">unsigned</span> <span class="keyword">char</span>* data, <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">mm_segment_t</span> oldfs;</span><br><span class="line">    <span class="keyword">int</span> ret;</span><br><span class="line"></span><br><span class="line">    oldfs = get_fs();</span><br><span class="line">    set_fs(get_ds());</span><br><span class="line"></span><br><span class="line">    ret = vfs_read(file, data, size, &amp;offset);  <span class="comment">// 读取文件，文件存在用户空间</span></span><br><span class="line"></span><br><span class="line">    set_fs(oldfs);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure><p>##Writing to a file </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">file_write</span><span class="params">(struct file* file, <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> offset, <span class="keyword">unsigned</span> <span class="keyword">char</span>* data, <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">mm_segment_t</span> oldfs;</span><br><span class="line">    <span class="keyword">int</span> ret;</span><br><span class="line"></span><br><span class="line">    oldfs = get_fs();</span><br><span class="line">    set_fs(get_ds());</span><br><span class="line"></span><br><span class="line">    ret = vfs_write(file, data, size, &amp;offset); <span class="comment">// 写文件</span></span><br><span class="line"></span><br><span class="line">    set_fs(oldfs);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##Syncing changes a file</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">file_sync</span><span class="params">(struct file* file)</span> </span>&#123;</span><br><span class="line">    vfs_fsync(file, <span class="number">0</span>); <span class="comment">// 同步文件，确定文件写到硬盘</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kernel </tag>
            
            <tag> 文件IO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android不带电量计的电量计算</title>
      <link href="2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/"/>
      <url>2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>　　一直比较好奇，Android的电量是怎么计算出来的，今天就借用qualcomm平台的8916芯片研究了一下，因为其不带电量计，所以是通过一个bms系统计算出来的，下面就来详细分析一下计算方法。</p><h2 id="SOC（state-of-charge-荷电状态-电量）"><a href="#SOC（state-of-charge-荷电状态-电量）" class="headerlink" title="SOC（state of charge 荷电状态 - 电量）"></a>SOC（state of charge 荷电状态 - 电量）</h2><p>英文缩写:<br>FCC　　Full-charge capacity<br>RC 　　Remaining capacity (剩余电量)<br>CC 　　Coulumb counter<br>UUC　　Unusable capacity<br>RUC　　Remaining usable capacity<br>SoC　　State of charge<br>OCV　　Open circuit voltage</p><a id="more"></a><p>SOC=(RC-CC-UUC)/(FCC-UUC)<br>RUC=RC-CC-UUC</p><h2 id="电池电量决定因素"><a href="#电池电量决定因素" class="headerlink" title="电池电量决定因素"></a>电池电量决定因素</h2><p>　　电池电量百分比主要有电池dtsi文件中百分比参数计算而得，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">qcom,pc-temp-ocv-lut &#123;</span><br><span class="line">qcom,lut-col-legend = &lt;(-10) 0 25 50&gt;;  // Temperature      lut-data（电池OCV ）的column</span><br><span class="line">qcom,lut-row-legend =  &lt;100 89 78&gt;,     // Capacity Percent        row</span><br><span class="line">&lt;67 56 45&gt;,</span><br><span class="line">&lt;34 23 14&gt;,</span><br><span class="line">&lt;8 4 0&gt;;</span><br><span class="line">...</span><br><span class="line">qcom,lut-data = </span><br><span class="line">&lt;4290428543274328&gt;,</span><br><span class="line">&lt;4151416241934208&gt;,</span><br><span class="line">&lt;4064407240804016&gt;,</span><br><span class="line">&lt;3928394339633980&gt;,</span><br><span class="line">&lt;3874388138813894&gt;,</span><br><span class="line">&lt;3809383438233820&gt;,</span><br><span class="line"></span><br><span class="line">&lt;3768378537933792&gt;, </span><br><span class="line">&lt;3733375637843785&gt;, </span><br><span class="line">&lt;3701372337623761&gt;, </span><br><span class="line">&lt;3624364337393738&gt;, </span><br><span class="line">&lt;3614362336893688&gt;, </span><br><span class="line">&lt;3510349934553458&gt;; </span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="关键结构"><a href="#关键结构" class="headerlink" title="关键结构"></a>关键结构</h2><h3 id="dts-table-structure："><a href="#dts-table-structure：" class="headerlink" title="dts table structure："></a>dts table structure：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * struct pc_temp_ocv_lut -</span><br><span class="line"> * @rows:number of percent charge entries should be &lt;= PC_TEMP_ROWS</span><br><span class="line"> * @cols:number of temperature entries should be &lt;= PC_TEMP_COLS</span><br><span class="line"> * @temp:the temperatures at <span class="built_in">which</span> ocv data is available <span class="keyword">in</span> the table</span><br><span class="line"> *The temperatures must be <span class="keyword">in</span> increasing order from 0 to rows.</span><br><span class="line"> * @percent:the percent charge at <span class="built_in">which</span> ocv data is available <span class="keyword">in</span> the table</span><br><span class="line"> *The  percentcharge must be <span class="keyword">in</span> decreasing order from 0 to cols.</span><br><span class="line"> * @ocv:the open circuit voltage</span><br><span class="line"> */</span><br><span class="line">struct pc_temp_ocv_lut &#123;</span><br><span class="line">int rows;</span><br><span class="line">int cols;</span><br><span class="line">int temp[PC_TEMP_COLS];</span><br><span class="line">int percent[PC_TEMP_ROWS];</span><br><span class="line">int ocv[PC_TEMP_ROWS][PC_TEMP_COLS];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="calculate-percentcharge-function"><a href="#calculate-percentcharge-function" class="headerlink" title="calculate percentcharge  function"></a>calculate percentcharge  function</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int linear_interpolate(int y0, int x0, int y1, int x1, int x)</span><br><span class="line"><span class="keyword">if</span> (y0 == y1 || x == x0)<span class="built_in">return</span> y0;</span><br><span class="line"><span class="keyword">if</span> (x1 == x0 || x == x1)<span class="built_in">return</span> y1;</span><br><span class="line"><span class="built_in">return</span> y0 + ((y1 - y0) * (x - x0) / (x1 - x0));</span><br></pre></td></tr></table></figure><h2 id="驱动分析"><a href="#驱动分析" class="headerlink" title="驱动分析"></a>驱动分析</h2><h3 id="关键函数："><a href="#关键函数：" class="headerlink" title="关键函数："></a>关键函数：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// File:  qpnp-vm-bms.c</span><br><span class="line">    lookup_soc_ocv(struct qpnp_bms_chip *chip, int ocv_uv, int batt_temp)、</span><br><span class="line">soc_ocv = interpolate_pc(chip-&gt;batt_data-&gt;pc_temp_ocv_lut,batt_temp, ocv_uv / 1000);  //calculate the  capacity percent</span><br><span class="line">soc_cutoff = interpolate_pc(chip-&gt;batt_data-&gt;pc_temp_ocv_lut,batt_temp, chip-&gt;dt.cfg_v_cutoff_uv / 1000);</span><br><span class="line">soc_final = DIV_ROUND_CLOSEST(100 * (soc_ocv - soc_cutoff),(100 - soc_cutoff));</span><br><span class="line">      DIV_ROUND_CLOSEST(x,y)    ---&gt;    (x-1&gt;0) || (y-1&gt;0) || x&gt;0  ? (x+y/2)/y : (x-y/2)/y</span><br><span class="line"><span class="keyword">if</span> (!is_battery_charging(chip) &amp;&amp; chip-&gt;current_now &gt; 0) // 没有充电 重新计算电量</span><br><span class="line">        iavg_ma = calculate_uuc_iavg(chip);</span><br><span class="line">        fcc = interpolate_fcc(chip-&gt;batt_data-&gt;fcc_temp_lut,batt_temp);</span><br><span class="line">        acc = interpolate_acc(chip-&gt;batt_data-&gt;ibat_acc_lut,batt_temp, iavg_ma);</span><br><span class="line">    both call ：</span><br><span class="line">linear_interpolate(int y0, int x0, int y1, int x1, int x)</span><br><span class="line">        soc_uuc = ((fcc - acc) * 100) / fcc;</span><br><span class="line">soc_uuc = adjust_uuc(chip, soc_uuc);</span><br><span class="line">soc_acc = DIV_ROUND_CLOSEST(100 * (soc_ocv - soc_uuc),(100 - soc_uuc));</span><br><span class="line">        soc_final = soc_acc;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        ... // charging - reset all the counters</span><br><span class="line">soc_final = bound_soc(soc_final) // 最终电量</span><br></pre></td></tr></table></figure><h3 id="百分比计算函数："><a href="#百分比计算函数：" class="headerlink" title="百分比计算函数："></a>百分比计算函数：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">   interpolate_pc(chip-&gt;batt_data-&gt;pc_temp_ocv_lut,batt_temp, ocv_uv / 1000);  //calculate the  capacity percent</span><br><span class="line"><span class="keyword">if</span> (batt_temp == pc_temp_ocv-&gt;temp[j] * DEGC_SCALE) &#123;  /* found an exact match <span class="keyword">for</span> temp <span class="keyword">in</span> the table */</span><br><span class="line"><span class="keyword">for</span> (i = 0; i &lt; rows; i++)    // i: rows- Capacity Percent  j: columns-Temperature</span><br><span class="line">                   ...</span><br><span class="line">    pc = linear_interpolate(pc_temp_ocv-&gt;percent[i],pc_temp_ocv-&gt;ocv[i][j],pc_temp_ocv-&gt;percent[i - 1],pc_temp_ocv-&gt;ocv[i - 1][j],ocv); // calculate 不匹配dts表格的percentcharge </span><br><span class="line">                   转换为公式见下公式一;                                </span><br><span class="line"></span><br><span class="line">  /* batt_temp is within temperature <span class="keyword">for</span> column j-1 and j */</span><br><span class="line"> is_between(pc_temp_ocv-&gt;ocv[i][j],pc_temp_ocv-&gt;ocv[i+1][j], ocv)   // caculate temp1 percentcharge</span><br><span class="line">        pcj = linear_interpolate(pc_temp_ocv-&gt;percent[i],pc_temp_ocv-&gt;ocv[i][j],pc_temp_ocv-&gt;percent[i + 1],pc_temp_ocv-&gt;ocv[i+1][j],ocv);</span><br><span class="line">                  转换为公式见下公式二;                         </span><br><span class="line">           is_between(pc_temp_ocv-&gt;ocv[i][j-1],pc_temp_ocv-&gt;ocv[i+1][j-1], ocv)) // caculate temp2 percentcharge</span><br><span class="line">    pcj_minus_one = linear_interpolate(pc_temp_ocv-&gt;percent[i],pc_temp_ocv-&gt;ocv[i][j-1],pc_temp_ocv-&gt;percent[i + 1],pc_temp_ocv-&gt;ocv[i+1][j-1],ocv);</span><br><span class="line">                   转换为公式见下公式三;                       </span><br><span class="line">          <span class="keyword">if</span> (pcj &amp;&amp; pcj_minus_one) // temp1 and temp2 都存在，calculate percentcharge </span><br><span class="line">                   pc = linear_interpolate(pcj_minus_one,pc_temp_ocv-&gt;temp[j-1] * DEGC_SCALE,pcj,pc_temp_ocv-&gt;temp[j] * DEGC_SCALE,batt_temp);</span><br><span class="line">                   转换为公式见下公式四;                      </span><br><span class="line">           否则：<span class="built_in">return</span> pcj 、pcj_minus_one、其他临界值</span><br></pre></td></tr></table></figure><h3 id="公式一"><a href="#公式一" class="headerlink" title="公式一"></a>公式一</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F1.png" alt="公式一"></p><h3 id="公式二"><a href="#公式二" class="headerlink" title="公式二"></a>公式二</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F2.png" alt="公式二"></p><h3 id="公式三"><a href="#公式三" class="headerlink" title="公式三"></a>公式三</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F3.png" alt="公式三"></p><h3 id="公式四"><a href="#公式四" class="headerlink" title="公式四"></a>公式四</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F4.png" alt="公式四"></p>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Kernel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> Power </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JUnit-test的用法</title>
      <link href="2015/01/20/Java/JUnit-test%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>2015/01/20/Java/JUnit-test%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>为了方便调试，不用每写一个类都需要写一个main方法对其测试，所以Java编写会经常用到JUnit测试。</p><h3 id="新建一个JUnit-test测试包，如下图"><a href="#新建一个JUnit-test测试包，如下图" class="headerlink" title="新建一个JUnit.test测试包，如下图:"></a>新建一个JUnit.test测试包，如下图:</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blognewjunit.png" alt="new"></p><h3 id="JUnit测试"><a href="#JUnit测试" class="headerlink" title="JUnit测试"></a>JUnit测试</h3><p>可以在原文件类的方法上面加上@Test作为JUnit测试单元运行，也可以新建JUnit文件测试，编写方法如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">public class PersonTest &#123;</span><br><span class="line"></span><br><span class="line">@BeforeClass // 测试类加载之前运行</span><br><span class="line">public static void setUpBeforeClass() throws Exception &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Before&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Before  // 每个测试方法运行前运行， 常用</span><br><span class="line">public void setUp() throws Exception &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;所有的测试方法运行之前运行！！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Test  // 注解，给程序看</span><br><span class="line">public void <span class="function"><span class="title">testEat</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">cn.itcast.Person p = new cn.itcast.Person();</span><br><span class="line">p.eat();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line">public void <span class="function"><span class="title">testRun</span></span>()&#123;</span><br><span class="line">cn.itcast.Person p = new cn.itcast.Person();</span><br><span class="line">p.run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@After // 每个测试方法运行后运行 ，常用</span><br><span class="line">public void tearDown() throws Exception &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;所有的测试方法运行之后运行！！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    @AfterClass //测试类加载之后运行</span><br><span class="line">public static void tearDownAfterClass() throws Exception &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;After&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行JUnit"><a href="#运行JUnit" class="headerlink" title="运行JUnit"></a>运行JUnit</h3><p>可以单独运行某个测试方法,也可以选中类,运行所以的测试方法,如下图:<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogrunjunit.png" alt="run"></p>]]></content>
      
      
      <categories>
          
          <category> Programming Language </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml文件约束与解析</title>
      <link href="2015/01/19/Web/xml%E6%96%87%E4%BB%B6%E7%BA%A6%E6%9D%9F%E4%B8%8E%E8%A7%A3%E6%9E%90/"/>
      <url>2015/01/19/Web/xml%E6%96%87%E4%BB%B6%E7%BA%A6%E6%9D%9F%E4%B8%8E%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>在XML技术里，可以编写一个文档来约束一个XML文档的书写规范，这称之为XML约束,常用的约束技术:<br>　1.  XML DTD<br>　2.  XML Schema</p><p>#DTD </p><p>##DTD格式<br>DTD(Document Type Definition)，全称为文档类型定义。 DTD文件应使用UTF-8或Unicode。格式如下:<br>　<br>###外部文件</p><p>　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogdtd.png"></p><blockquote><p>#PCDATA:放置字符数据　</p></blockquote><a id="more"></a><p>###内部编写方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> standalone=<span class="string">&quot;yes&quot;</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE 书架 [</span><br><span class="line">  &lt;!ELEMENT 书架 (书+)&gt; // 如果写EMPTY - 空元素，不能有子标签  ANY - 任何子标签</span><br><span class="line">  &lt;!ELEMENT 书 (书名,作者,售价)&gt;</span><br><span class="line">  &lt;!ELEMENT 书名 (<span class="comment">#PCDATA)&gt;</span></span><br><span class="line">  &lt;!ELEMENT 作者 (<span class="comment">#PCDATA)&gt;</span></span><br><span class="line">  &lt;!ELEMENT 售价 (<span class="comment">#PCDATA)&gt;</span></span><br><span class="line">]&gt;</span><br><span class="line">&lt;书架&gt;</span><br><span class="line">  &lt;书&gt;</span><br><span class="line">  &lt;书名&gt;Java就业培训教程&lt;/书名&gt;</span><br><span class="line">  &lt;作者&gt;张孝祥&lt;/作者&gt;</span><br><span class="line">  &lt;售价&gt;39.00元&lt;/售价&gt;</span><br><span class="line">  &lt;/书&gt;</span><br><span class="line">      ...</span><br><span class="line">&lt;/书架&gt;</span><br></pre></td></tr></table></figure><p>##编程验证DTD</p><p>编写方式如下：<br>外部文件方式：validate.html</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var xmldoc = new ActiveXObject(<span class="string">&quot;Microsoft.XMLDOM&quot;</span>);  // 创建XML文档解析对象 IE5以上内置 Microsoft.XMLDOM 解析工具</span><br><span class="line">xmldoc.validateOnParse=<span class="literal">true</span>; // 开启XML校验</span><br><span class="line">xmldoc.load(<span class="string">&quot;catalog.xml&quot;</span>);  // 装载XML文件</span><br><span class="line"></span><br><span class="line">                /*打印错误信息*/</span><br><span class="line">document.write(<span class="string">&quot;错误的原因：&quot;</span> + xmldoc.parseError.reason + <span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">document.write(<span class="string">&quot;错误的行号：&quot;</span> + xmldoc.parseError.line + <span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>##引用DTD约束</p><p>XML中使用DOCTYPE声明语句来指明所遵循的DTD文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE 文档根结点 SYSTEM <span class="string">&quot;DTD文件的URL&quot;</span>&gt; // 引用本地DTD文件</span><br><span class="line">&lt;!DOCTYPE 文档根结点 PUBLIC <span class="string">&quot;DTD名称&quot;</span> <span class="string">&quot;DTD文件的URL&quot;</span>&gt; // 引用公共文件（比如某网站的DTD文件）</span><br></pre></td></tr></table></figure><p>##DTD约束语法</p><p>###元素定义</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">格式：&lt;!ELEMENT 元素名称 元素类型&gt;</span><br><span class="line">如为元素内容：则需要使用()括起来，如</span><br><span class="line">&lt;!ELEMENT 书架 (书名，作者，售价)&gt;</span><br><span class="line">&lt;!ELEMENT 书名 (<span class="comment">#PCDATA)&gt;</span></span><br><span class="line">如为元素类型，则直接书写，DTD规范定义了如下几种类型：</span><br><span class="line">EMPTY：用于定义空元素，例如&lt;br/&gt; &lt;hr/&gt;</span><br><span class="line">ANY：表示元素内容为任意类型 </span><br></pre></td></tr></table></figure><p>###元素组成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT MYFILE (TITLE,AUTHOR,EMAIL)&gt;  // 内容与此什么顺序一致</span><br><span class="line">&lt;!ELEMENT MYFILE (TITLE|AUTHOR|EMAIL)&gt; // 只能出现其中一个</span><br><span class="line">&lt;!ELEMENT MYFILE (TITLE|AUTHOR|EMAIL)&gt;* //出现一个或者多个</span><br><span class="line"> +: 一次或多次 (书+)</span><br><span class="line">  ?: 0次或一次 (书?)</span><br><span class="line">  *: 0次或多次  (书*)</span><br><span class="line">           eg： </span><br><span class="line">                &lt;!ELEMENT MYFILE ((TITLE*, AUTHOR?, EMAIL)* | COMMENT)&gt;</span><br></pre></td></tr></table></figure><p>###属性定义</p><p>####属性定义方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">属性格式：</span><br><span class="line">&lt;!ATTLIST 元素名</span><br><span class="line">  属性名1 属性值类型 设置说明</span><br><span class="line">  属性名2 属性值类型 设置说明</span><br><span class="line">  ……</span><br><span class="line">  &gt;</span><br><span class="line">属性说明：</span><br><span class="line"><span class="comment">#REQUIRED：必须设置该属性</span></span><br><span class="line"><span class="comment">#IMPLIED：可以设置也可以不设置</span></span><br><span class="line"><span class="comment">#FIXED：说明该属性的取值固定为一个值，在 XML 文件中不能为该属性设置其它值。但需要为该属性提供这个值</span></span><br><span class="line">直接使用默认值：在 XML 中可以设置该值也可以不设置该属性值。若没设置则使用默认值。  </span><br><span class="line">eg：</span><br><span class="line">       &lt;!ATTLIST 页面作者</span><br><span class="line">姓名 CDATA <span class="comment">#IMPLIED</span></span><br><span class="line">年龄 CDATA <span class="comment">#IMPLIED</span></span><br><span class="line">联系信息 CDATA <span class="comment">#REQUIRED</span></span><br><span class="line">网站职务 CDATA <span class="comment">#FIXED &quot;页面作者&quot;</span></span><br><span class="line">个人爱好 CDATA <span class="string">&quot;上网&quot;</span> // 默认值：上网</span><br><span class="line">&gt; </span><br></pre></td></tr></table></figure><p>####常用属性值类型</p><ol><li>CDATA 文本字符串</li><li>ENUMERATED 枚举型<br>eg:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version = <span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;GB2312&quot;</span> standalone=<span class="string">&quot;yes&quot;</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE 购物篮 [</span><br><span class="line">  &lt;!ELEMENT 肉 EMPTY&gt;</span><br><span class="line">  &lt;!ATTLIST 肉 品种 ( 鸡肉 | 牛肉 | 猪肉 | 鱼肉 ) <span class="string">&quot;鸡肉&quot;</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;购物篮&gt;</span><br><span class="line">  &lt;肉 品种=<span class="string">&quot;鱼肉&quot;</span>/&gt;</span><br><span class="line">  &lt;肉 品种=<span class="string">&quot;牛肉&quot;</span>/&gt;</span><br><span class="line">  &lt;肉/&gt;</span><br><span class="line">&lt;/购物篮&gt;</span><br></pre></td></tr></table></figure>####ID<br>ID只能由字母或者下划线开头.eg:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version = <span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;GB2312&quot;</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE 联系人列表[</span><br><span class="line">  &lt;!ELEMENT 联系人列表 ANY&gt;</span><br><span class="line">  &lt;!ELEMENT 联系人(姓名,EMAIL)&gt;</span><br><span class="line">  &lt;!ELEMENT 姓名(<span class="comment">#PCDATA)&gt;</span></span><br><span class="line">  &lt;!ELEMENT EMAIL(<span class="comment">#PCDATA)&gt;</span></span><br><span class="line">  &lt;!ATTLIST 联系人 编号 ID <span class="comment">#REQUIRED&gt;</span></span><br><span class="line">]&gt;</span><br><span class="line">&lt;联系人列表&gt;</span><br><span class="line">  &lt;联系人 编号=<span class="string">&quot;a1&quot;</span>&gt;</span><br><span class="line">  &lt;姓名&gt;张三&lt;/姓名&gt;</span><br><span class="line">  &lt;EMAIL&gt;zhang@it315.org&lt;/EMAIL&gt;</span><br><span class="line">          &lt;/联系人&gt;</span><br><span class="line"> &lt;联系人 编号=<span class="string">&quot;a2&quot;</span>&gt;</span><br><span class="line">  &lt;姓名&gt;李四&lt;/姓名&gt;</span><br><span class="line">  &lt;EMAIL&gt;li@it315.org&lt;/EMAIL&gt;</span><br><span class="line">  &lt;/联系人&gt;</span><br><span class="line">&lt;/联系人列表&gt; </span><br></pre></td></tr></table></figure>####实体定义</li></ol><p>在DTD文件中,<!ENTITY …>语句用于定义一个实体(相当于一个变量).<br>#####引用实体</p><p>引用实体主要在XML文件中使用,格式如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&lt;!ENTITY 实体名称 “实体内容” &gt;</span></span><br><span class="line"><span class="comment">#eg:</span></span><br><span class="line">&lt;!ENTITY copyright “I am a programmer<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">……</span></span><br><span class="line"><span class="string">&amp;copyright;//XML中以此形式引用</span></span><br></pre></td></tr></table></figure><p>#####参数实体</p><p>参数实体主要为DTD文件自己使用,格式如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % 实体名称 <span class="string">&quot;实体内容&quot;</span> &gt;</span><br><span class="line"><span class="comment">#eg1:</span></span><br><span class="line">&lt;!ENTITY % TAG_NAMES <span class="string">&quot;姓名 | EMAIL | 电话 | 地址&quot;</span>&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!ELEMENT 个人信息 (%TAG_NAMES; | 生日)&gt;</span><br><span class="line">&lt;!ELEMENT 客户信息 (%TAG_NAMES; | 公司名)&gt;</span><br><span class="line"><span class="comment">#eg2:</span></span><br><span class="line">&lt;!ENTITY % common.attributes   </span><br><span class="line"> <span class="string">&quot; id ID #IMPLIED   </span></span><br><span class="line"><span class="string">   account CDATA #REQUIRED &quot;</span> &gt;</span><br><span class="line">...</span><br><span class="line">&lt;!ATTLIST purchaseOrder %common.attributes;&gt;</span><br><span class="line">&lt;!ATTLIST item %common.attributes;&gt;</span><br></pre></td></tr></table></figure><p>　<br>##xml编程<br>　<br>XML CRUD - create read update delete。JAXP包，J2SE的一部分，包含xml解析器对象。</p><p>###XML解析方式</p><p>XML解析方式分为两种：DOM（w3c推荐） 和 SAX(只能做查询)。两种区别如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogsaxdom.png" alt="dif"></p><p>###使用JAXP包进行DOM解析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line">public class Demo &#123;</span><br><span class="line"></span><br><span class="line">/**使用jaxp操作xml文档</span><br><span class="line"> * @param args</span><br><span class="line"> * @throws ParserConfigurationException </span><br><span class="line"> * @throws IOException </span><br><span class="line"> * @throws SAXException </span><br><span class="line"> */</span><br><span class="line">public static void main(String[] args) throws ParserConfigurationException, SAXException, IOException &#123;</span><br><span class="line"></span><br><span class="line">//1.获取DOM解析器的工厂</span><br><span class="line">DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();</span><br><span class="line"></span><br><span class="line">//2.得到DOM解析器对象</span><br><span class="line">DocumentBuilder builder = factory.newDocumentBuilder();</span><br><span class="line"></span><br><span class="line">//3.解析xml文档，得到代表文档的document</span><br><span class="line">Document document = builder.parse(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">//4.遍历所有节点</span><br><span class="line">list(document);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//得到售价结点的值</span><br><span class="line">@Test</span><br><span class="line">public void <span class="built_in">read</span>() throws Exception&#123;</span><br><span class="line">DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();</span><br><span class="line">DocumentBuilder builder = factory.newDocumentBuilder();</span><br><span class="line">Document document = builder.parse(new File(<span class="string">&quot;src/book.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">NodeList list = document.getElementsByTagName(<span class="string">&quot;售价&quot;</span>);  </span><br><span class="line">Node price = list.item(0);</span><br><span class="line"></span><br><span class="line">String value = price.getTextContent();</span><br><span class="line">System.out.println(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//修改结点的值:&lt;售价&gt;39.00元&lt;/售价&gt;改为109</span><br><span class="line">@Test</span><br><span class="line">public  void update() throws Exception&#123;</span><br><span class="line"></span><br><span class="line">DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();</span><br><span class="line">DocumentBuilder  builder = factory.newDocumentBuilder();</span><br><span class="line">Document document = builder.parse(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Node price = document.getElementsByTagName(<span class="string">&quot;售价&quot;</span>).item(0);</span><br><span class="line">price.setTextContent(<span class="string">&quot;109&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//把内存中的document写到xml文档</span><br><span class="line">TransformerFactory tf = TransformerFactory.newInstance();</span><br><span class="line">//得到转换器</span><br><span class="line">Transformer ts = tf.newTransformer();</span><br><span class="line">ts.transform(new DOMSource(document), new StreamResult(new File(<span class="string">&quot;src/book1.xml&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//向指定节点中增加孩子节点（售价节点）</span><br><span class="line">@Test</span><br><span class="line">public void add() throws Exception&#123;</span><br><span class="line">DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();</span><br><span class="line">DocumentBuilder  builder = factory.newDocumentBuilder();</span><br><span class="line">Document document = builder.parse(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">//创建需要增加的节点</span><br><span class="line">Node price = document.createElement(<span class="string">&quot;售价&quot;</span>);</span><br><span class="line">price.setTextContent(<span class="string">&quot;59元&quot;</span>);</span><br><span class="line"></span><br><span class="line">//得到需要增加的节点的父亲</span><br><span class="line">Node parent = document.getElementsByTagName(<span class="string">&quot;书&quot;</span>).item(0);</span><br><span class="line"></span><br><span class="line">//把需要增加的节点挂到父结点上</span><br><span class="line">parent.appendChild(price);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TransformerFactory tf = TransformerFactory.newInstance();</span><br><span class="line">Transformer ts = tf.newTransformer();</span><br><span class="line">ts.transform(new DOMSource(document), new StreamResult(new File(<span class="string">&quot;src/book1.xml&quot;</span>)));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//向指定位置上插入售价节点</span><br><span class="line">@Test</span><br><span class="line">public void add2() throws Exception&#123;</span><br><span class="line">DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();</span><br><span class="line">DocumentBuilder  builder = factory.newDocumentBuilder();</span><br><span class="line">Document document = builder.parse(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Node node = document.createElement(<span class="string">&quot;售价&quot;</span>);</span><br><span class="line">node.setTextContent(<span class="string">&quot;39元&quot;</span>);</span><br><span class="line"></span><br><span class="line">Node parent = document.getElementsByTagName(<span class="string">&quot;书&quot;</span>).item(0);</span><br><span class="line">parent.insertBefore(node, document.getElementsByTagName(<span class="string">&quot;书名&quot;</span>).item(0));</span><br><span class="line"></span><br><span class="line">TransformerFactory tf = TransformerFactory.newInstance();</span><br><span class="line">Transformer ts = tf.newTransformer();</span><br><span class="line">ts.transform(new DOMSource(document), new StreamResult(new File(<span class="string">&quot;src/book1.xml&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//删除xml文档的售价结点</span><br><span class="line">@Test</span><br><span class="line">public void delete() throws Exception&#123;</span><br><span class="line">DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();</span><br><span class="line">DocumentBuilder  builder = factory.newDocumentBuilder();</span><br><span class="line">Document document = builder.parse(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Node node = document.getElementsByTagName(<span class="string">&quot;售价&quot;</span>).item(2);</span><br><span class="line">node.getParentNode().removeChild(node);</span><br><span class="line"></span><br><span class="line">TransformerFactory tf = TransformerFactory.newInstance();</span><br><span class="line">Transformer ts = tf.newTransformer();</span><br><span class="line">ts.transform(new DOMSource(document), new StreamResult(new File(<span class="string">&quot;src/book1.xml&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//操作xml文档属性</span><br><span class="line">@Test</span><br><span class="line">public void updateAttribute() throws Exception&#123;</span><br><span class="line">DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();</span><br><span class="line">DocumentBuilder  builder = factory.newDocumentBuilder();</span><br><span class="line">Document document = builder.parse(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//操作xml文档的元素时，一般都把元素当作node对象，但是程序员如果发现node不好使时，就应把node强转成相应类型</span><br><span class="line">Node node  = document.getElementsByTagName(<span class="string">&quot;书&quot;</span>).item(0);</span><br><span class="line">Element book = null;</span><br><span class="line"><span class="keyword">if</span>(node.getNodeType()==Node.ELEMENT_NODE)&#123;  //在作结点转换之前，最好先判断结点类型</span><br><span class="line">book  = (Element)node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">book.setAttribute(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;yyyyyyy&quot;</span>);</span><br><span class="line">book.setAttribute(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line">book.removeAttribute(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">TransformerFactory tf = TransformerFactory.newInstance();</span><br><span class="line">Transformer ts = tf.newTransformer();</span><br><span class="line">ts.transform(new DOMSource(document), new StreamResult(new File(<span class="string">&quot;src/book1.xml&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//遍历</span><br><span class="line">public static void list(Node node)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(node.getNodeType()==Node.ELEMENT_NODE)&#123;</span><br><span class="line">System.out.println(node.getNodeName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NodeList list = node.getChildNodes();</span><br><span class="line"><span class="keyword">for</span>(int i=0;i&lt;list.getLength();i++)&#123;</span><br><span class="line">Node child = list.item(i);</span><br><span class="line">list(child);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###SAX解析<br> 　<img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogsax.jpg" alt="sax"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#常用方法： startElement（） endElement（） characters（）；</span></span><br><span class="line">public class Demo1 &#123;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *sax方式解析book1.xml文件</span><br><span class="line"> * @throws SAXException </span><br><span class="line"> * @throws ParserConfigurationException </span><br><span class="line"> * @throws IOException </span><br><span class="line"> */</span><br><span class="line">public static void main(String[] args) throws ParserConfigurationException, SAXException, IOException &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//1.创建sax工厂</span><br><span class="line">SAXParserFactory factory = SAXParserFactory.newInstance();</span><br><span class="line"></span><br><span class="line">//2.用工厂创建解析器</span><br><span class="line">SAXParser sp = factory.newSAXParser();</span><br><span class="line"></span><br><span class="line">//3.利用解析器得到reader</span><br><span class="line">XMLReader reader = sp.getXMLReader();</span><br><span class="line"></span><br><span class="line">//4.在解析xml文档之前，设置好事件处理器,事件处理器为程序员设计来对解析xml进行处理</span><br><span class="line">reader.setContentHandler(new MyContentHandler2()); </span><br><span class="line"></span><br><span class="line">//5.利用reader读取 xml文档</span><br><span class="line">reader.parse(<span class="string">&quot;src/book1.xml&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//得到xml文档内容的事件处理器，实现接口</span><br><span class="line">class MyContentHandler implements ContentHandler&#123;</span><br><span class="line"></span><br><span class="line">public void startElement(String uri, String localName, String name,Attributes atts) throws SAXException &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;当前解析到了:&quot;</span> + name + <span class="string">&quot;,这个标签是开始标签&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(int i=0;i&lt;atts.getLength();i++)&#123;</span><br><span class="line">String attname = atts.getQName(i);</span><br><span class="line">String attvalue = atts.getValue(i);</span><br><span class="line"></span><br><span class="line">System.out.println(attname + <span class="string">&quot;=&quot;</span> + attvalue);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void endElement(String uri, String localName, String name) throws SAXException &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;当前解析到了:&quot;</span> + name + <span class="string">&quot;,这个标签是结束标签&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void characters(char[] ch, int start, int length)throws SAXException &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;当前解析到了内容：&quot;</span> + new String(ch,start,length));</span><br><span class="line">&#125;</span><br><span class="line">.... // 实现接口其他方法</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//用于获取第一个售价节点的值：&lt;售价&gt;109&lt;/售价&gt; ,用继承的方式实现事件处理器，不用对接口每个方法进行实现</span><br><span class="line">class MyContentHandler2 extends DefaultHandler&#123;</span><br><span class="line"></span><br><span class="line">private boolean isOk = <span class="literal">false</span>;</span><br><span class="line">private int index = 1;</span><br><span class="line">@Override</span><br><span class="line">public void characters(char[] ch, int start, int length)throws SAXException &#123;</span><br><span class="line"><span class="keyword">if</span>(isOk==<span class="literal">true</span> &amp;&amp; index==1)&#123;</span><br><span class="line">System.out.println(new String(ch,start,length));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void startElement(String uri, String localName, String name,Attributes attributes) throws SAXException &#123;</span><br><span class="line"><span class="keyword">if</span>(name.equals(<span class="string">&quot;售价&quot;</span>))&#123;</span><br><span class="line">isOk = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void endElement(String uri, String localName, String name)</span><br><span class="line">throws SAXException &#123;</span><br><span class="line"><span class="keyword">if</span>(name.equals(<span class="string">&quot;售价&quot;</span>))&#123;</span><br><span class="line">isOk = <span class="literal">false</span>;</span><br><span class="line">index++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##Dom4j解析</p><p>DOM4j中，获得Document对象的方式有三种：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.读取XML文件,获得document对象            </span></span><br><span class="line">SAXReader reader = new SAXReader();</span><br><span class="line">Document   document = reader.read(new File(<span class="string">&quot;input.xml&quot;</span>));</span><br><span class="line"><span class="comment">#2.解析XML形式的文本,得到document对象.</span></span><br><span class="line">String text = <span class="string">&quot;&lt;members&gt;&lt;/members&gt;&quot;</span>;</span><br><span class="line">Document document = DocumentHelper.parseText(text);</span><br><span class="line"><span class="comment">#3.主动创建document对象.</span></span><br><span class="line">Document document = DocumentHelper.createDocument();            //创建根节点</span><br><span class="line">Element root = document.addElement(<span class="string">&quot;members&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>注意dom4j库及docs。参考<a href="http://zvon.org/xxl/XPathTutorial/General/examples.html">XPath Tutorial</a>　</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">public class Demo1 &#123;</span><br><span class="line">//读取xml文档数据：&lt;书名&gt;Java就业培训教程&lt;/书名&gt;</span><br><span class="line">@Test</span><br><span class="line">public void <span class="built_in">read</span>() throws Exception&#123;</span><br><span class="line"></span><br><span class="line">SAXReader reader = new SAXReader();</span><br><span class="line">Document document = reader.read(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Element root = document.getRootElement();</span><br><span class="line">Element bookname = root.element(<span class="string">&quot;书&quot;</span>).element(<span class="string">&quot;书名&quot;</span>);</span><br><span class="line">System.out.println(bookname.getText());</span><br><span class="line">&#125;</span><br><span class="line">//&lt;书 name=<span class="string">&quot;yyyyyyy&quot;</span>&gt;</span><br><span class="line">@Test</span><br><span class="line">public void readAttr() throws Exception&#123;</span><br><span class="line"></span><br><span class="line">SAXReader reader = new SAXReader();</span><br><span class="line">Document document = reader.read(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Element root = document.getRootElement();</span><br><span class="line">String value = root.element(<span class="string">&quot;书&quot;</span>).attributeValue(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">System.out.println(value);</span><br><span class="line">&#125;</span><br><span class="line">//向xml文档中添加&lt;售价&gt;19元&lt;/售价&gt;</span><br><span class="line">@Test</span><br><span class="line">public void add() throws Exception&#123;</span><br><span class="line">SAXReader reader = new SAXReader();</span><br><span class="line">Document document = reader.read(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Element price = DocumentHelper.createElement(<span class="string">&quot;售价&quot;</span>);</span><br><span class="line">price.setText(<span class="string">&quot;19元&quot;</span>);</span><br><span class="line"></span><br><span class="line">document.getRootElement().element(<span class="string">&quot;书&quot;</span>).add(price);</span><br><span class="line"></span><br><span class="line">                // 将修改从内存中存入xml</span><br><span class="line">OutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class="line">format.setEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">XMLWriter writer = new XMLWriter(new FileOutputStream(<span class="string">&quot;src/book1.xml&quot;</span>),format);</span><br><span class="line">writer.write(document);  //utf-8</span><br><span class="line">writer.close();</span><br><span class="line">&#125;</span><br><span class="line">//修改：&lt;售价&gt;109&lt;/售价&gt;  为209</span><br><span class="line">@Test</span><br><span class="line">public void update() throws Exception&#123;</span><br><span class="line">SAXReader reader = new SAXReader();</span><br><span class="line">Document document = reader.read(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Element price = (Element) document.getRootElement().element(<span class="string">&quot;书&quot;</span>).elements(<span class="string">&quot;售价&quot;</span>).get(1);</span><br><span class="line">price.setText(<span class="string">&quot;209元&quot;</span>);</span><br><span class="line"></span><br><span class="line">OutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class="line">format.setEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">XMLWriter writer = new XMLWriter(new FileOutputStream(<span class="string">&quot;src/book1.xml&quot;</span>),format);</span><br><span class="line">writer.write(document);  //utf-8</span><br><span class="line">writer.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//删除：&lt;售价&gt;109&lt;/售价&gt;</span><br><span class="line">@Test</span><br><span class="line">public void delete() throws Exception&#123;</span><br><span class="line">SAXReader reader = new SAXReader();</span><br><span class="line">Document document = reader.read(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Element price = (Element) document.getRootElement().element(<span class="string">&quot;书&quot;</span>).elements(<span class="string">&quot;售价&quot;</span>).get(0);</span><br><span class="line">price.getParent().remove(price);</span><br><span class="line"></span><br><span class="line">OutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class="line">format.setEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">XMLWriter writer = new XMLWriter(new FileOutputStream(<span class="string">&quot;src/book1.xml&quot;</span>),format);</span><br><span class="line">writer.write(document);  //utf-8</span><br><span class="line">writer.close();</span><br><span class="line">&#125;</span><br><span class="line">//向指定位置增加售价结点</span><br><span class="line">@Test</span><br><span class="line">public void add2() throws Exception&#123;</span><br><span class="line">SAXReader reader = new SAXReader();</span><br><span class="line">Document document = reader.read(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Element price = DocumentHelper.createElement(<span class="string">&quot;售价&quot;</span>);</span><br><span class="line">price.setText(<span class="string">&quot;19元&quot;</span>);</span><br><span class="line"></span><br><span class="line">List list = document.getRootElement().element(<span class="string">&quot;书&quot;</span>).elements();</span><br><span class="line">list.add(1, price);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class="line">format.setEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">XMLWriter writer = new XMLWriter(new FileOutputStream(<span class="string">&quot;src/book1.xml&quot;</span>),format);</span><br><span class="line">writer.write(document);  //utf-8</span><br><span class="line">writer.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">        //XPATH 编写</span><br><span class="line">@Test</span><br><span class="line">public void findWithXpath() throws Exception&#123;</span><br><span class="line">SAXReader reader = new SAXReader();</span><br><span class="line">Document document = reader.read(new File(<span class="string">&quot;src/book1.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Element e = (Element) document.selectNodes(<span class="string">&quot;//书名&quot;</span>).get(1); // search 书名node 并获得第一个</span><br><span class="line">System.out.println(e.getText());</span><br><span class="line">&#125;</span><br><span class="line">@Test</span><br><span class="line">public void findUser() throws Exception&#123;</span><br><span class="line">String username = <span class="string">&quot;aaa&quot;</span>;</span><br><span class="line">String password = <span class="string">&quot;1233&quot;</span>;</span><br><span class="line"></span><br><span class="line">SAXReader reader = new SAXReader();</span><br><span class="line">Document document = reader.read(new File(<span class="string">&quot;src/users.xml&quot;</span>));</span><br><span class="line"></span><br><span class="line">Element e = (Element) document.selectSingleNode(<span class="string">&quot;//user[@username=&#x27;&quot;</span>+username+<span class="string">&quot;&#x27; and @password=&#x27;&quot;</span>+password+<span class="string">&quot;&#x27;]&quot;</span>); //search 匹配的用户名和密码 node</span><br><span class="line"><span class="keyword">if</span>(e!=null)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;用户登陆成功！！&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;用户名和密码不正确！！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;     </span><br></pre></td></tr></table></figure><p>##XML schema</p><p>xml schema 也是一种定义和描述xml结构与内容的模式语言，其出现是为了克服DTD的局限性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">//File:book.xsd</span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt; </span><br><span class="line">//必须以 schema 开始和结束</span><br><span class="line">&lt;xs:schema xmlns:xs=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>        // 声明xs出处</span><br><span class="line">      targetNamespace=<span class="string">&quot;http://www. itcast.cn&quot;</span>   // 声明指定一个名称空间 http://www. itcast.cn， 将xsd中所有节点绑定到此空间，然后xml就可以根据此URL（名称空间）告知解析器  </span><br><span class="line">                              elementFormDefault=<span class="string">&quot;qualified&quot;</span>&gt; elementFormDefault指定schema属性都属于targetNamespace指定的名称空间</span><br><span class="line">&lt;xs:element name=<span class="string">&#x27;书架&#x27;</span> &gt; </span><br><span class="line">&lt;xs:complexType&gt;</span><br><span class="line">&lt;xs:sequence maxOccurs=<span class="string">&#x27;unbounded&#x27;</span> &gt;</span><br><span class="line">&lt;xs:element name=<span class="string">&#x27;书&#x27;</span> &gt;</span><br><span class="line">&lt;xs:complexType&gt;</span><br><span class="line">&lt;xs:sequence&gt;</span><br><span class="line">&lt;xs:element name=<span class="string">&#x27;书名&#x27;</span> <span class="built_in">type</span>=<span class="string">&#x27;xs:string&#x27;</span> /&gt;</span><br><span class="line">&lt;xs:element name=<span class="string">&#x27;作者&#x27;</span> <span class="built_in">type</span>=<span class="string">&#x27;xs:string&#x27;</span> /&gt;</span><br><span class="line">&lt;xs:element name=<span class="string">&#x27;售价&#x27;</span> <span class="built_in">type</span>=<span class="string">&#x27;xs:string&#x27;</span> /&gt;</span><br><span class="line">&lt;/xs:sequence&gt;</span><br><span class="line">&lt;/xs:complexType&gt;</span><br><span class="line">&lt;/xs:element&gt;</span><br><span class="line">&lt;/xs:sequence&gt;</span><br><span class="line">&lt;/xs:complexType&gt;</span><br><span class="line">&lt;/xs:element&gt;</span><br><span class="line">&lt;/xs:schema&gt;</span><br><span class="line"></span><br><span class="line">//File: book.xml</span><br><span class="line"><span class="comment">#a. 入门案例</span></span><br><span class="line"> &lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;itcast:书架 xmlns:itcast=<span class="string">&quot;http://www.itcast.cn&quot;</span>    //声明指定上xsd文件中定义的名称空间</span><br><span class="line">    xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> // 指定下面schemaLocation属性出处</span><br><span class="line">    xsi:schemaLocation=“http://www.itcast.cn book.xsd<span class="string">&quot;&gt; // 指定名称空间的schema</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;itcast:书&gt;</span></span><br><span class="line"><span class="string">&lt;itcast:书名&gt;JavaScript网页开发&lt;/itcast:书名&gt;</span></span><br><span class="line"><span class="string">&lt;itcast:作者&gt;张孝祥&lt;/itcast:作者&gt;</span></span><br><span class="line"><span class="string">&lt;itcast:售价&gt;28.00元&lt;/itcast:售价&gt;</span></span><br><span class="line"><span class="string">&lt;/itcast:书&gt;</span></span><br><span class="line"><span class="string">&lt;/itcast:书架&gt;</span></span><br><span class="line"><span class="string">    b. 使用默认命名空间  </span></span><br><span class="line"><span class="string">&lt;书架 xmlns=&quot;</span>http://www.itcast.cn<span class="string">&quot;</span></span><br><span class="line"><span class="string">xmlns:xsi=&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="string">&quot;</span></span><br><span class="line"><span class="string">xsi:schemaLocation=“http://www.itcast.cn book.xsd&quot;</span>&gt;</span><br><span class="line">&lt;书&gt;</span><br><span class="line">&lt;书名&gt;JavaScript网页开发&lt;/书名&gt;</span><br><span class="line">&lt;作者&gt;张孝祥&lt;/作者&gt;</span><br><span class="line">&lt;售价&gt;28.00元&lt;/售价&gt;</span><br><span class="line">&lt;/书&gt;</span><br><span class="line">&lt;书架&gt;</span><br><span class="line"><span class="comment">#c. 使用多个命名空间</span></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;书架 xmlns=<span class="string">&quot;http://www.it315.org/xmlbook/schema&quot;</span> </span><br><span class="line">xmlns:demo=<span class="string">&quot;http://www.it315.org/demo/schema&quot;</span></span><br><span class="line">xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">xsi:schemaLocation=<span class="string">&quot;http://www.it315.org/xmlbook/schema http://www.it315.org/xmlbook.xsd //命名空间1</span></span><br><span class="line"><span class="string">http://www.it315.org/demo/schema http://www.it315.org/demo.xsd&quot;</span>&gt; //命名空间2</span><br><span class="line">&lt;书&gt;</span><br><span class="line">&lt;书名&gt;JavaScript网页开发&lt;/书名&gt;</span><br><span class="line">&lt;作者&gt;张孝祥&lt;/作者&gt;</span><br><span class="line">&lt;售价 demo:币种=”人民币”&gt;28.00元&lt;/售价&gt;</span><br><span class="line">&lt;/书&gt;</span><br><span class="line">&lt;/书架&gt;</span><br><span class="line"><span class="comment">#d. 不使用名称空间</span></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;书架 xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">xsi:noNamespaceSchemaLocation=<span class="string">&quot;xmlbook.xsd&quot;</span>&gt;</span><br><span class="line">&lt;书&gt;</span><br><span class="line">&lt;书名&gt;JavaScript网页开发&lt;/书名&gt;</span><br><span class="line">&lt;作者&gt;张孝祥&lt;/作者&gt;</span><br><span class="line">&lt;售价&gt;28.00元&lt;/售价&gt;</span><br><span class="line">&lt;/书&gt;</span><br><span class="line">&lt;/书架&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml基础</title>
      <link href="2015/01/18/Web/xml%E5%9F%BA%E7%A1%80/"/>
      <url>2015/01/18/Web/xml%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>XML 是有w3c组织发布的一种可扩展标记语言(Extensible Markup Language)。</p><p>##XML 的常见应用</p><p>XML常见的应用场景：　</p><ol><li>XML技术除用于保存有关系的数据之外，它还经常用作软件配置文件，以描述程序模块之间的关系。</li><li>在一个软件系统中，为提高系统的灵活性，它所启动的模块通常由其配置文件决定<br>　<br>例如一个软件在启动时，它需要启动Ａ、Ｂ两个模块，而A、Ｂ这两个模块在启动时，又分别需要A1、A2和B1、B2模块的支持，为了准确描述这种关系，此时使用ＸＭＬ文件最为合适不过。</li></ol><p>##XML的语法</p><p>###文档的声明</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;GB2312&quot;</span>  standalone=<span class="string">&quot;yes&quot;</span> ?&gt;</span><br><span class="line">    encoding - 文档的字符编码。（代码里面写什么格式，一般就将文档存为什么格式，一般通用“UTF-8”）</span><br><span class="line">    standalone - 文档是否为独立的，有依赖</span><br><span class="line">```    </span><br><span class="line"><span class="comment">###元素</span></span><br><span class="line"></span><br><span class="line">元素指XML中的标签,可以嵌套,只有一个主标签,两种书写方式如下:</span><br><span class="line">•包含标签体：&lt;a&gt;www.itcast.cn&lt;/a&gt;</span><br><span class="line">•不含标签体的：&lt;a&gt;&lt;/a&gt;, 简写为：&lt;a/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">###属性</span></span><br><span class="line">属性值必须用<span class="string">&quot;&quot;</span> 或<span class="string">&#x27;&#x27;</span> 引起来,如:</span><br><span class="line">```bash</span><br><span class="line">&lt;input name=“text”&gt;</span><br><span class="line">也可以:(XML将空格也当做内容,不过现在浏览器都会执行处理,调用trim())</span><br><span class="line">&lt;input&gt;</span><br><span class="line">   &lt;name&gt;text&lt;/name&gt;</span><br><span class="line">&lt;/input&gt;</span><br></pre></td></tr></table></figure><p>###注释<br>&lt;!–注释–&gt;  // 注释语句必须写在XML声明语句后面</p><p>###CDATA区</p><p>CDATA(character data)区用于让解析引擎不对其进行处理,按照原始内容显示. </p><pre><code class="bash">格式:&lt;![CDATA[ 内容 ]]&gt;eg:  &lt;![CDATA[      &lt;itcast&gt;          &lt;br/&gt;      &lt;/itcast&gt;  ]]&gt;</code></pre><p>###转义字符<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogxml.png" alt="escape"><br>###处理指令</p><p>处理指令，简称PI （processing instruction）。处理指令用来指挥解析引擎如何解析XML文档内容。例如，在XML文档中可以使用xml-stylesheet指令，通知XML解析引擎，应用css文件显示xml文档内容。<br><?xml-stylesheet type="text/css" href="1.css"?><br>处理指令必须以“<?”作为开头，以“?>”作为结尾，XML声明语句就是最常见的一种处理指令。 </p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用快捷键及命令总结</title>
      <link href="2014/12/21/Linux/Linux%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%8F%8A%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
      <url>2014/12/21/Linux/Linux%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%8F%8A%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>　　或许我是一个geek范的人，又或许是想显得很有逼格， whatever， 反正我就喜欢Linux的命令行，喜欢黑黑的geek风，这样完全体现出了技术的酷炫。现将一些自己觉得很有用能让自己显得很牛的装X快捷键和指令总结如下，其中有一部分相当有用，使用后逼格瞬间提升，不信看文章最后的后记。</p><h2 id="Shell终端常用快捷键"><a href="#Shell终端常用快捷键" class="headerlink" title="Shell终端常用快捷键"></a>Shell终端常用快捷键</h2><p>　　当进行命令行操作时，使用快捷键将极大提高工作效率，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + U – 剪切光标前的内容</span><br><span class="line">Ctrl + K – 剪切光标至行末的内容</span><br><span class="line">Ctrl + Y – 粘贴</span><br><span class="line">Ctrl + E – 移动光标到行末</span><br><span class="line">Ctrl + A – 移动光标到行首</span><br><span class="line">ALT + F – 跳向下一个空格</span><br><span class="line">ALT + B – 跳回上一个空格</span><br><span class="line">ALT + Backspace – 删除前一个单词</span><br><span class="line">Ctrl + W – 剪切光标前一个单词</span><br><span class="line">Ctrl + Insert – 复制</span><br><span class="line">Shift + Insert – 粘贴</span><br><span class="line"><span class="comment"># 下面两个命令的用法，如： 在shell终端输入vi main.c进入vi界面后，想切换到命令行，可以通过Ctrl+Z</span></span><br><span class="line">Ctrl + Z – 暂停应用程序</span><br><span class="line"><span class="built_in">fg</span> – 重新将程序唤到前台</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="常用Shell命令"><a href="#常用Shell命令" class="headerlink" title="常用Shell命令"></a>常用Shell命令</h2><p>　　使用Linux，最酷炫的就是命令行操作，所以熟悉命令是必须，现将常用的Shell命令总结如下：</p><h3 id="硬件相关命令"><a href="#硬件相关命令" class="headerlink" title="硬件相关命令"></a>硬件相关命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">lscpu                   <span class="comment">#查看的是cpu信息.</span></span><br><span class="line">cat /proc/cpuinfo       <span class="comment">#查看CPU信息详细信息</span></span><br><span class="line">free -m                 <span class="comment">#概要查看内存情况，单位MB  -g GB</span></span><br><span class="line">cat /proc/meminfo       <span class="comment">#查看内存详细信息</span></span><br><span class="line">lsblk                   <span class="comment">#查看硬盘和分区分布</span></span><br><span class="line">df -h                   <span class="comment">#查看各分区使用情况</span></span><br><span class="line">cat /proc/partitions    <span class="comment">#查看硬盘和分区</span></span><br><span class="line">mount | column -t       <span class="comment">#查看挂接的分区状态</span></span><br><span class="line">lspci | grep -i <span class="string">&#x27;eth&#x27;</span>   <span class="comment">#查看网卡硬件信息</span></span><br><span class="line">ifconfig -a             <span class="comment">#查看系统的所有网络接口</span></span><br><span class="line">ethtool eth0            <span class="comment">#如果要查看某个网络接口的详细信息，例如eth0的详细参数和指标</span></span><br></pre></td></tr></table></figure><h3 id="系统相关命令"><a href="#系统相关命令" class="headerlink" title="系统相关命令"></a>系统相关命令</h3><hr><h4 id="通用命令"><a href="#通用命令" class="headerlink" title="通用命令"></a>通用命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cmd --<span class="built_in">help</span>              <span class="comment">#查看命令详细信息</span></span><br><span class="line">man cmd                 <span class="comment">#显示命令手册</span></span><br><span class="line">whatis cmd              <span class="comment">#查看命令简述</span></span><br><span class="line"><span class="built_in">exit</span>                    <span class="comment">#退出终端</span></span><br><span class="line">ping &lt;remote host address&gt; <span class="comment">#ping网络状态</span></span><br><span class="line">who                     <span class="comment">#查看当前登陆用户名</span></span><br><span class="line">su/sudo                 <span class="comment">#获取管理员权限</span></span><br><span class="line">su user                 <span class="comment">#切换用户</span></span><br><span class="line">uname                   <span class="comment">#显示系统重要信息</span></span><br><span class="line">shutdown -r             <span class="comment">#关键并重启</span></span><br></pre></td></tr></table></figure><h4 id="内核相关命令"><a href="#内核相关命令" class="headerlink" title="内核相关命令"></a>内核相关命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uname -a                <span class="comment">#查看版本当前操作系统内核信息）</span></span><br><span class="line">cat /proc/version       <span class="comment">#查看当前操作系统版本信息</span></span><br><span class="line">cat /etc/issue          <span class="comment">#查看版本当前操作系统发行版信息</span></span><br><span class="line">cat /etc/redhat-release <span class="comment">#同上</span></span><br><span class="line">cat /etc/SuSE-release   <span class="comment">#suse系统下才可使用</span></span><br><span class="line">lsb_release -a          <span class="comment">#用来查看linux兼容性的发行版信息</span></span><br><span class="line">lsmod                   <span class="comment">#列出加载的内核模块</span></span><br></pre></td></tr></table></figure><h4 id="网络常用命令"><a href="#网络常用命令" class="headerlink" title="网络常用命令"></a>网络常用命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ssh -l remote_username(root) remote_ip   <span class="comment">#远程登录</span></span><br><span class="line">scp -r dir/file (remote_username:)remote_ip:dir <span class="comment">#从本地copy到远端</span></span><br><span class="line">ifconfig                <span class="comment">#查看所有网络接口的属性</span></span><br><span class="line">iptables -L             <span class="comment">#查看防火墙设置</span></span><br><span class="line">service iptables status <span class="comment">#查看防火墙状态</span></span><br><span class="line">service iptables stop   <span class="comment">#关闭防火墙</span></span><br><span class="line">route -n                <span class="comment">#查看路由表</span></span><br><span class="line">netstat -lntp           <span class="comment">#查看所有监听端口</span></span><br><span class="line">netstat -antp           <span class="comment">#查看所有已经建立的连接</span></span><br><span class="line">netstat -s              <span class="comment">#查看网络统计信息进程</span></span><br><span class="line">netstat -at             <span class="comment">#列出所有tcp端口</span></span><br><span class="line">netstat -au             <span class="comment">#列出所有udp端口</span></span><br><span class="line">netstat -lt             <span class="comment">#只列出所有监听tcp端口</span></span><br></pre></td></tr></table></figure><h4 id="管理常用命令"><a href="#管理常用命令" class="headerlink" title="管理常用命令"></a>管理常用命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">top                     <span class="comment">#查看系统所有进程的详细信息，比如CPU、内存等,信息很多！</span></span><br><span class="line">df -lh                  <span class="comment">#查看硬盘大小及使用率</span></span><br><span class="line">mount                   <span class="comment">#挂接远程目录、NFS、本地共享目录到linux下</span></span><br><span class="line">hostname                <span class="comment">#查看/修改计算机名</span></span><br><span class="line">w                       <span class="comment">#查看活动用户</span></span><br><span class="line">id                      <span class="comment">#查看指定用户信息</span></span><br><span class="line">last                    <span class="comment">#查看用户登录日志</span></span><br><span class="line">cut -d: -f1 /etc/passwd <span class="comment">#查看系统所有用户</span></span><br><span class="line">cut -d: -f1 /etc/group  <span class="comment">#查看系统所有组</span></span><br><span class="line">crontab -l              <span class="comment">#查看当前用户的计划任务服务</span></span><br><span class="line">chkconfig –list         <span class="comment">#列出所有系统服务</span></span><br><span class="line">chkconfig –list | grep on <span class="comment">#列出所有启动的系统服务程序</span></span><br><span class="line">rpm -qa                 <span class="comment">#查看所有安装的软件包</span></span><br><span class="line">uptime                  <span class="comment">#查看系统运行时间、用户数、负载    </span></span><br><span class="line">/sbin/chkconfig --list  <span class="comment">#查看系统自动启动列表</span></span><br><span class="line">/sbin/chkconfig　–add　mysql <span class="comment">#把MySQL添加到系统的启动服务组里面</span></span><br></pre></td></tr></table></figure><h4 id="文件操作常用命令"><a href="#文件操作常用命令" class="headerlink" title="文件操作常用命令"></a>文件操作常用命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ranger               <span class="comment">#文件浏览系统，需要先安装ranger，超级方便，用了就知道</span></span><br><span class="line">ls -lht                 <span class="comment">#列出一个文件夹下所有文件及大小、访问权限</span></span><br><span class="line">du -sh &lt;dir&gt;            <span class="comment">#查看指定目录的大小 </span></span><br><span class="line">du -lh &lt;dir&gt;            <span class="comment">#查看指定目录及各文件的大小 </span></span><br><span class="line">ln -s                   <span class="comment">#建立软链接</span></span><br><span class="line">ls -lh                  <span class="comment">#以M为单位显示文件大小，去掉h，则单位为k</span></span><br><span class="line">du -skh  file        <span class="comment">#以M为单位显示文件大小 </span></span><br><span class="line">rmdir &lt;dir&gt;          <span class="comment">#删除目录</span></span><br><span class="line">rm file              <span class="comment">#删除文件</span></span><br><span class="line">rm -r &lt;dir&gt;          <span class="comment">#递归删除整个目录</span></span><br><span class="line">cp (-r) <span class="built_in">source</span> dest  <span class="comment">#负责文件或文件夹</span></span><br><span class="line">mv <span class="built_in">source</span> dest       <span class="comment">#移动或重命名文件文件夹</span></span><br><span class="line">cat file             <span class="comment">#查看file内容</span></span><br><span class="line">tail (-n N) file     <span class="comment">#查看文件末尾10行(N行)</span></span><br><span class="line">less file            <span class="comment">#分页查看文件, Ctrl+F 向前翻页   Ctrl+B 向后翻页</span></span><br><span class="line">grep [option] <span class="string">&quot;string&quot;</span> file <span class="comment">#查找字符串 ,-i  不区分大小写</span></span><br><span class="line">find &lt;dir&gt; -name file <span class="comment">#查找文件,-iname 不区分大小写</span></span><br><span class="line">split -l 300 large_file.log new_file_prefix  将文本文件分割为300行的n个新文件</span><br><span class="line">split -b 10m server.log server_prefix    将二进制文件分割为10M的n个新文件</span><br><span class="line">split -b 10m file.tar.gz file_   把文件file.tar.gz拆分成以“file_”为文件名前缀，大小为10M的文件</span><br><span class="line">cat small_files* &gt; large_file  合并拆分的文件</span><br><span class="line">cat file_* &gt; file.tar.gz   合并拆分的文件</span><br></pre></td></tr></table></figure><h4 id="进程相关命令"><a href="#进程相关命令" class="headerlink" title="进程相关命令"></a>进程相关命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">htop                      <span class="comment">#在终端以列表形式查看进程，需要安装htop，比ps好看好用太多了</span></span><br><span class="line">pstree -p pid           <span class="comment">#查看一个进程下的所有线程</span></span><br><span class="line">pstree  -a              <span class="comment">#显示所有进程的所有详细信息，遇到相同的进程名可以压缩显示。</span></span><br><span class="line">ps -ef                  <span class="comment">#查看所有进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 pid             <span class="comment">#杀死进程</span></span><br><span class="line"><span class="built_in">kill</span> all <span class="built_in">test</span>           <span class="comment">#杀死进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 `pgrep <span class="built_in">test</span>`    <span class="comment">#杀死进程</span></span><br><span class="line">./test.sh &amp;             <span class="comment">#使程序在后台运行</span></span><br><span class="line">nohup ./test.sh &amp;       <span class="comment">#使程序在后台运行</span></span><br></pre></td></tr></table></figure><h4 id="压缩解压缩"><a href="#压缩解压缩" class="headerlink" title="压缩解压缩"></a>压缩解压缩</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gzip file1.txt file2.txt  <span class="comment">#压缩文件 </span></span><br><span class="line">gzip -d file1.txt <span class="comment">#提取文件</span></span><br><span class="line">zip -r dir.zip dir file  <span class="comment">#将目录dir、文件file等压缩到zip包,</span></span><br><span class="line">zip -re dir.zip dir file <span class="comment">#创建zip包，且加密</span></span><br><span class="line">unzip dir.zip            <span class="comment">#解压</span></span><br><span class="line">unzip -l dir.zip         <span class="comment">#查看压缩包类容</span></span><br><span class="line">tar -zcvf dir.tar.gz dir file    <span class="comment">#将目录dir、文件file等压缩到tar包</span></span><br><span class="line">tar -xvf dir.tar.gz       <span class="comment">#解压</span></span><br><span class="line">tar -tvf dir.tar.gz          <span class="comment">#查看压缩文件</span></span><br></pre></td></tr></table></figure><h4 id="screen-命令"><a href="#screen-命令" class="headerlink" title="screen 命令"></a>screen 命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#screen命令，screen命令运行的服务不受shell终端影响，即使shell终端关闭仍存在</span></span><br><span class="line">screen -S <span class="built_in">test</span>          <span class="comment">#创建一个名字为test的screen</span></span><br><span class="line">screen -r <span class="built_in">test</span>          <span class="comment">#打开名字为test的screen</span></span><br><span class="line">screen -r pid           <span class="comment">#打开进程号为pid的screen</span></span><br><span class="line">screen -ls              <span class="comment">#列出所有的screen</span></span><br><span class="line">ctrl + a,d              <span class="comment">#当在一个screen时，退出screen</span></span><br><span class="line">ctrl + a,n              <span class="comment">#当在一个screen时，切换到下一个窗口</span></span><br><span class="line">ctrl + a,c              <span class="comment">#当在一个screen时，创建一个新的窗口</span></span><br></pre></td></tr></table></figure><h4 id="远程拷贝"><a href="#远程拷贝" class="headerlink" title="远程拷贝"></a>远程拷贝</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp local_file remote_username@remote_ip:remote_dir    <span class="comment">#拷贝本地文件到远程机器上</span></span><br><span class="line">scp -r local_dir remote_username@remote_ip:remote_dir  <span class="comment">#拷贝本地整个目录到远程机器上</span></span><br></pre></td></tr></table></figure><h3 id="软件包安装"><a href="#软件包安装" class="headerlink" title="软件包安装"></a>软件包安装</h3><p>　　如下为Ubuntu下的是命令，如果账户没有root权限的话，需要在前面添加sudo以获取root权限。其实不知道命令的话，只需要输入软件名，终端将会打印出下载安装的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get install package     <span class="comment">#安装</span></span><br><span class="line">apt-get update package      <span class="comment">#更新</span></span><br><span class="line">apt-get remove package      <span class="comment">#删除    </span></span><br><span class="line">apt-cache search package    <span class="comment">#搜索软件包</span></span><br><span class="line">dpkg -i package.deb         <span class="comment">#安装deb包</span></span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>　　为了让大家相信使用了这些命令或快捷键确实会逼格提升，专门贴图两张，哈哈。。。</p><h3 id="图一-执行htop（进程管理）"><a href="#图一-执行htop（进程管理）" class="headerlink" title="图一 执行htop（进程管理）"></a>图一 执行htop（进程管理）</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/bloghtop.png" alt="htop"></p><h3 id="图二-执行ranger-（文件浏览）"><a href="#图二-执行ranger-（文件浏览）" class="headerlink" title="图二 执行ranger （文件浏览）"></a>图二 执行ranger （文件浏览）</h3><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogranger.png" alt="ranger"></p><p>　　有很多命令引用自<a href="http://www.xprogrammer.com/1799.html">Linux常用的shell命令</a>，感谢此文作者.</p>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件I/O操作及网络架构</title>
      <link href="2014/11/17/Linux/Linux%E6%96%87%E4%BB%B6IO%E6%93%8D%E4%BD%9C%E5%8F%8A%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84/"/>
      <url>2014/11/17/Linux/Linux%E6%96%87%E4%BB%B6IO%E6%93%8D%E4%BD%9C%E5%8F%8A%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>图片摘自网络，这些图片清晰的描述出了文件I/O和网络操作的脉络。</p><a id="more"></a><p>##网络交互模型<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog%E7%BD%91%E7%BB%9C%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%9E%8B.jpg" alt="网络交互模型"></p><p>##read-recv-recvfrom<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogread-recv-recvfrom.jpg" alt="read-recv-recvfrom"></p><p>##write-send-sendto<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogwrite-send-sendto.jpg" alt="write-send-sendto"></p><p>##socket-bind-listen-accept-close-connect<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blogsocket-bind-listen-accept-close-connect.jpg" alt="socket-bind-listen-accept-close-connect"></p>]]></content>
      
      
      <categories>
          
          <category> Linux Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kernel </tag>
            
            <tag> 文件IO </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to read</title>
      <link href="2014/11/01/Think/How-to-read/"/>
      <url>2014/11/01/Think/How-to-read/</url>
      
        <content type="html"><![CDATA[<p>　　我这里想谈的是关于技术等方面学习的阅读. 不知道其他人怎么样,关于我一直以来总是有一个错误的方法去阅读书籍.　　</p><p>　　从初中伊始,我对于学习就有了一个错误的想法:想一步步的认真学好每个知识点,掌握每个知识点;因为这个想法让我一直学得很累.当我上了大学后,开始接触单片机、c语言、PCB等新鲜而有趣的知识，但是我还是秉承着错误的学习方法。所以在大学阶段虽然自己很认真的在学习，可是最终发现这样效果并不好，反而在一直消磨着自己的兴趣。这一度都让我怀疑自己的能力。不过幸好，我一直没有放弃，一直在坚持学习，直到后面学习Linux、Java及Android之后，终于深刻意识到自己之前的错误方法。　　</p><a id="more"></a><p>　　学习其实不是那样子学习的,尤其是作为我们IT行业的人来说,要学习的东西太多太多了,那样永远学不好的. 　　<br>　<br>现将自己的体会总结如下:</p><ol><li><p>新接触一种技术,如Android,可以找官方文档(看英文原版更好)大致浏览一下overview,然后按照官方例程跑一些demo,对其有一个大致的认识.接下来就是对自己感兴趣的部分再进行深入研究,如此这般,当自己多做几个项目多深入研究几次也就掌握得差不多了.</p></li><li><p>对于自己已经有一定了解的技术,然后想看一些提升自己的经典书籍,尤其那些超厚的书籍,不要从头至尾去细读,这样效率不高,而且没那么多时间,尤其是对于已经参加工作的人,这个时候最好的方式就是,浏览书的目录,快速浏览一下此书的大概内容,然后在实际运用中遇到了想详细了解时,找出书翻到那个地方开始研究.　　</p></li><li><p>阅读源代码,这个对于从事编程工作的人是十分重要的.每个人都要看很多源代码才能真正提升自己的技能,但是看源代码也得有方法,不然一头扎进去,什么都不能学到.比如对于Linux源代码来讲,如果要深入每一个细节,估计终其一生也不能理解Linux的精华.这个时候就是看框架,遇到重要的感兴趣的再去研究细节.</p></li></ol><p>其实总结起来,最重要的就是不要去研究细节,而是遇到问题-学习-解决问题,这是最好的方式.　　</p>]]></content>
      
      
      <categories>
          
          <category> Balderdash </category>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The document convetions for Java</title>
      <link href="2014/10/27/Java/The-document-convetions-for-Java/"/>
      <url>2014/10/27/Java/The-document-convetions-for-Java/</url>
      
        <content type="html"><![CDATA[<p>　　注释一直是编程最重要的部分之一,学习Java很长一段时间了,由于之前一直没有很正式的写过项目，所以一直也就没怎么认真的写过注释．因为注释又是如此的重要，所以今天对Java的注释规范加以总结，也促使自己以后写代码注意注释．</p><h2 id="注释的地方"><a href="#注释的地方" class="headerlink" title="注释的地方"></a>注释的地方</h2><ol><li>每个源文件开头应该有一段注释,介绍代码的作者\时间等信息.</li><li>当代码比较长,嵌套较深时,应该在某些花括号末尾注明花括号对应的起点.</li><li>重要的属性需要添加注释,每个方法需要添加注释.</li><li>典型的算法等需要特别注意的地方需要添加注释.</li><li>有bug的地方需要加以注释,修改过的代码需要加修改标志注释.</li></ol><a id="more"></a><h2 id="注释的方法"><a href="#注释的方法" class="headerlink" title="注释的方法"></a>注释的方法</h2><ol><li>单行注释 // </li><li>多行注释 /**/</li><li>文档注释<br>这是最重要的注释方式，并且用此方式注释后能生成Java doc，例如下面是一个servlet创建后生成的一个注释文档:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * The doGet method of the servlet. &lt;br&gt;</span><br><span class="line"> *</span><br><span class="line"> * This method is called when a form has its tag value method equals to get.</span><br><span class="line"> * </span><br><span class="line"> * @param request the request send by the client to the server</span><br><span class="line"> * @param response the response send by the server to the client</span><br><span class="line"> * @throws ServletException <span class="keyword">if</span> an error occurred</span><br><span class="line"> * @throws IOException <span class="keyword">if</span> an error occurred</span><br><span class="line"> */</span><br><span class="line">public void doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">        throws ServletException, IOException &#123;</span><br><span class="line">                    doPost();</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>a.类注释</li></ol><p>在myEclipse中，可以通过快捷键Alt+Shift+J生成，注释的内容可以通过Eclipse -&gt; Window -&gt; Preferences -&gt; Java -&gt; Code Style -&gt; Code Templates -&gt; Comments -&gt; Types -&gt; Edt 设置,格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author </span><br><span class="line"> *</span><br><span class="line"> * @Time </span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>b.类的英文注释模板</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/***************************************************************************************** </span><br><span class="line"> *</span><br><span class="line"> *</span><br><span class="line"> * CopyRright (c)2014-xxxx:                          </span><br><span class="line"> * Project:               &lt;项目工程名 &gt;                                          </span><br><span class="line"> * Module ID:             &lt;(模块)类编号，可以引用系统设计中的类编号&gt;    </span><br><span class="line"> * Comments:              &lt;对此类的描述，可以引用系统设计中的描述&gt;                                           </span><br><span class="line"> * JDK version used:      &lt;jdk1.7&gt;                              </span><br><span class="line"> * Namespace:             &lt;命名空间&gt;                              </span><br><span class="line"> * Author：                       </span><br><span class="line"> * Create Date：  </span><br><span class="line"> * Modified By：                                           </span><br><span class="line"> * Modified Date:                                     </span><br><span class="line"> * Why &amp; What is modified:     </span><br><span class="line"> * Version:                                       </span><br><span class="line"> ****************************************************************************************/ </span><br></pre></td></tr></table></figure><p>c.构造函数注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/** </span><br><span class="line"> * 构造方法 的描述 </span><br><span class="line"> * @param </span><br><span class="line"> *       </span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>d.方法注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/** </span><br><span class="line"> * 方法描述 </span><br><span class="line"> * @param </span><br><span class="line"> * @<span class="built_in">return</span>  </span><br><span class="line"> * @exception  (方法有异常的话加) </span><br><span class="line"> * @author  </span><br><span class="line"> * @Time  </span><br><span class="line"> */</span><br></pre></td></tr></table></figure><p>e.成员变量注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/** The count is the number of charactersin the String. */</span><br><span class="line">private int count;</span><br></pre></td></tr></table></figure><p>有必要时要说明变量功能，涉及到的方法等等。</p><h2 id="javadoc参数说明："><a href="#javadoc参数说明：" class="headerlink" title="javadoc参数说明："></a>javadoc参数说明：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@see 生成文档中的“参见xx 的条目”的超链接，后边可以加上：<span class="string">&quot;类名&quot;</span>、<span class="string">&quot;完整类名&quot;</span>、<span class="string">&quot;完整类名#方法&quot;</span>。可用于：类、方法、变量注释。 </span><br><span class="line">@param 参数的说明。可用于：方法注释。 </span><br><span class="line">@<span class="built_in">return</span> 返回值的说明。可用于：方法注释。 </span><br><span class="line">@exception 可能抛出异常的说明。可用于：方法注释。 </span><br><span class="line">@version 版本信息。可用于：类注释。 </span><br><span class="line">@author 作者名。可用于：类注释。 </span><br><span class="line">@deprecated 对类或方法的说明 该类或方法不建议使用,引起不推荐使用的警告 </span><br><span class="line">@note 表示注解，暴露给源码阅读者的文档 </span><br><span class="line">@remark 表示评论，暴露给客户程序员的文档 </span><br><span class="line">@since 表示从那个版本起开始有了这个函数 </span><br><span class="line">@see 表示交叉参考</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming Language </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Program Kill </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Build person blog with hexo and  github</title>
      <link href="2014/10/24/Hexo/build-person-blog-with-hexo/"/>
      <url>2014/10/24/Hexo/build-person-blog-with-hexo/</url>
      
        <content type="html"><![CDATA[<p>　　基于Hexo和Github的个人博客构建，我参照<a href="http://ibruce.info/2013/11/22/hexo-your-blog/">hexo你的博客</a>、<a href="http://hexo.io/docs/">hexo官方文档</a>及<a href="https://help.github.com/articles/set-up-git/">github官方文档</a>完成了自己的个人blog。通过前段时间学习Android和这些天build自己的github、个人blog，关于学习新东西有一个新的体会，就是官方文档和帮助是最好的资料，虽然是英文的，但是看官方的源文档能提升自己的效率。</p><p>现在写博客只需要几个简单的命令就能完成发布了．</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br><span class="line">$ hexo generat</span><br><span class="line">$ hexo deploy</span><br><span class="line">也可以直接简写为：</span><br><span class="line">$ hexo n <span class="string">&quot;My New Post&quot;</span></span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><a id="more"></a><p>博客内容编辑语法教程：</p><ul><li><a href="http://daringfireball.net/projects/markdown/syntax.php">Markdown_en</a></li><li><a href="http://wowubuntu.com/markdown/#overview">Markdown_cn</a></li></ul><hr><h2 id="Github"><a href="#Github" class="headerlink" title="Github　　"></a>Github　　</h2><p>要成功构建blog首先得有Github账号和Github　Pages. 　　</p><ul><li>首先注册一个 <a href="https://github.com/">github</a>账号　　</li><li>建立一个与用户名对应的repository来构建Github　pages,仓库名必须为your_user_name.github.com或者your_user_name.github.io．也可以<a href="https://help.github.com/articles/creating-pages-with-the-automatic-generator/">creating pages with the automatic generator</a>.</li><li><a href="https://help.github.com/articles/generating-ssh-keys/">添加ssh公钥到Github</a>,如果安装<a href="https://windows.github.com/">Github for windows</a>可以省掉这一步,因为软件已经自动生成了.</li></ul><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装　　"></a>环境安装　　</h2><p>安装hexo十分容易，不过在安装之前需要先做一些准备工作：　　</p><ul><li><a href="http://nodejs.org/">Node.js</a></li><li><a href="http://git-scm.com/">Git</a>　　</li></ul><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git　　"></a>安装git　　</h3><p>关于Git版本我个人安装<a href="http://msysgit.github.io/">msysgit</a>；如果装<a href="https://windows.github.com/">Github for windows</a>，其会自动为电脑安装git，而且还有另外一个好处，它会自动为github创建一个ssh密匙，为我们省去很多工作。　　</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js　　"></a>安装Node.js　　</h3><p>最好的方法是通过<a href="https://github.com/creationix/nvm">nvm</a>安装.　　</p><p>cURL:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>Wget:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装成功后,重启terminal终端,然后运行接下来命令安装Node.js　　</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install 0.10  <span class="comment">#版本号</span></span><br></pre></td></tr></table></figure><p>当然也可以通过上面Node.js下载安装.　　</p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo　　"></a>安装hexo　　</h3><p>当上面的所有准备工作做好后,可以安装hexo通过npm.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$npm</span> install -g hexo</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>当Hexo安装完成后,运行接下来的命令,hexo将编译所有需要的文件到目标路径.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>编译完成后,工程目录如下:</p><p>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── scripts<br>├── source<br>|├── _drafts<br>|└── _posts<br>└── themes</p><p>详细配置信息及文件内容格式参照 <a href="http://hexo.io/docs/setup.html">hexo configuration</a></p><h3 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h3><p>进入hexo目标目录,执行如下命令,生成静态文件至hexo\pulbic.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo generate / hexo g</span><br><span class="line">* 必须在init目录下(hexo目录)执行.</span><br><span class="line">*当修改文章Tag或内容，不能正确重新生成内容，可以删除hexo\db.json后重试，还不行就到public目录删除对应的文件，重新生成。</span><br></pre></td></tr></table></figure><p>执行如下命令,将启动本地服务,进行文章预览调试.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>在浏览器输入<a href="http://localhost:4000/">http://localhost:4000</a>即可看到效果.</p><h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><p>执行如下命令,生成制定名称的文章至hexo\source_post\pstName.md.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] <span class="string">&quot;postName&quot;</span> </span><br><span class="line">*postName为文件名,如果包含空格,则必须加<span class="string">&quot;&quot;</span>,其将出现在文章的URL中.</span><br></pre></td></tr></table></figure><p>*layout为可选参数,默认为post,详细见scaffolds目录,若添加自己的layout,只需新建一个文件在scaffolds目录即可,也可以编辑现有的layout,比如修改默认的post.md,想添加一个categories分类,让每次生成文章时能自动添加分类栏目,就只需在—上面添加categories.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">categories:</span><br><span class="line">- Tools</span><br><span class="line">- <span class="comment"># 添加</span></span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line">*注意大括号之间多加了空格,否则会被转义,而不能正常显示</span><br><span class="line">* 所有文件后面必须有个一个空格,否则会报错</span><br></pre></td></tr></table></figure><h3 id="fancybox-此段摘录自hexo你的博客"><a href="#fancybox-此段摘录自hexo你的博客" class="headerlink" title="fancybox (此段摘录自hexo你的博客)"></a>fancybox (此段摘录自<a href="http://ibruce.info/2013/11/22/hexo-your-blog/">hexo你的博客</a>)</h3><p>可能有人对这个Reading页面中图片的fancybox效果感兴趣，这个是怎么做的呢。<br>很简单，只需要在你的文章*.md文件的头上添加photos项即可，然后一行行添加你要展示的照片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">layout: photo</span><br><span class="line">title: 我的阅历</span><br><span class="line">date: 2085-01-16 07:33:44</span><br><span class="line">tags: [hexo]</span><br><span class="line">photos:</span><br><span class="line">- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-0.jpg</span><br><span class="line">- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-1.jpg</span><br><span class="line">*经过测试，文件头上的layout: photo可以省略。</span><br></pre></td></tr></table></figure><p>不想每次都手动添加怎么办？同样的，打开您的hexo\scaffolds\photo.md</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">layout: &#123; &#123; layout &#125; &#125;</span><br><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">tags: </span><br><span class="line">photos: </span><br><span class="line">- </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>然后每次可以执行带layout的new命令生成照片文章：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new photo <span class="string">&quot;photoPostName&quot;</span> <span class="comment">#新建照片文章</span></span><br></pre></td></tr></table></figure><h4 id="description"><a href="#description" class="headerlink" title="description"></a>description</h4><p>markdown文件头中也可以添加description，以覆盖全局配置文件中的description内容，请参考下文_config.yml的介绍。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">title: hexo你的博客</span><br><span class="line">date: 2013-11-22 17:11:54</span><br><span class="line">categories:</span><br><span class="line">- Tools</span><br><span class="line">- default</span><br><span class="line">tags: [hexo]</span><br><span class="line">description: 你对本页的描述</span><br><span class="line">---</span><br><span class="line">*hexo默认会处理全部markdown和html文件，如果不想让hexo处理你的文件，可以在文件头中加入layout: <span class="literal">false</span>。</span><br></pre></td></tr></table></figure><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>在需要显示摘要的地方添加如下代码即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以上是摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure><p>more以上内容即是文章摘要，在主页显示，more以下内容点击『&gt; Read More』链接打开全文才显示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo中所有文件的编码格式均是UTF-8。</span><br></pre></td></tr></table></figure><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>到hexo的主题列表<a href="https://github.com/hexojs/hexo/wiki/Themes">Hexo Themes</a>安装自己中意的主题.我比较喜欢简洁版的,所以clone安装的<a href="https://github.com/winterland1989/hexo-theme-winterland">winterland</a>.主题的安装方法基本每个主题的READEM.md都有描述.</p><p>*自己最初clone了<a href="https://github.com/halfer53/metro-light">metro-light</a>,结果主题未完善,发表博文是格式总是不对,浪费了自己大半天的时间,后面换个主题就行了.在警示一下自己.</p><p>未完待续…</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*到这为至,自己的个人blog基本完成,能满足基本需求.</span><br><span class="line">*我会在使用blog的过程中不断加入自己喜欢的元素,到时再继续.</span><br></pre></td></tr></table></figure><p>##附 补充一下出错解决方法<br>搞软件总是会出现很多错误,很多时候各种方法试尽仍不能解决,从头再来很多时候问题就解决了.如果遇到怎么都不能解决的问题可以试试如下方式.</p><ol><li>备份自己的配置文件(_config.yml source文件夹 themes文件夹).然后删除Hexo目录下的所有文件.</li></ol><p>2.rebuild Hexo文件夹,进入Hexo文件夹执行如下命令.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>3.执行如下命令,在浏览器输入 localhost:4000,预览测试博客.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>4.如果3成功则将备份文件copy回来,再通过3测试.</p><p>Hexo 升级时总是很容导致很多问题， 有时会比较麻烦，如果想降级回去，可以通过如下方式装回老版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo@3.x.x</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2014/10/20/Hexo/hello-world/"/>
      <url>2014/10/20/Hexo/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="http://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【置顶】Android 系统源码分析综述：整理总结源码分析的所有博客</title>
      <link href="2013/09/19/Android/A-summary-of-Android-source-analysis/"/>
      <url>2013/09/19/Android/A-summary-of-Android-source-analysis/</url>
      
        <content type="html"><![CDATA[<blockquote><p>工作、生活重心等都发生了较大变化，不会计划性更新此部分了，先取消置顶，但有空也会写写，等有较高质量的时候再考虑恢复置顶。  </p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前的几篇高通的博客是基于Android 4.4 分析，现在准备通过工作时 MTK 平台 Android 7.0 的源码来进行分析，不过也会将以前基于高通的博客归类于此文。</p><a id="more"></a><p>以前看代码，喜欢按照调用流程一步步的完整跟下来，这样比较费时间，尤其觉得对于驱动部分不是很必要，所以这次就准备主要专注于关键文件和关键函数，以及软件框架。</p><h1 id="Android架构"><a href="#Android架构" class="headerlink" title="Android架构"></a>Android架构</h1><h1 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h1><p>准备从三个方向来分析源码，一是从工作相关的方向，将所有外设，从最底层到最上层；二是针对某些模块的代码进行分析；三是根据系统源码架构和结构一层一层分析原理。</p><h2 id="外设方向"><a href="#外设方向" class="headerlink" title="外设方向"></a>外设方向</h2><table><thead><tr><th>文章名</th><th>概述</th></tr></thead><tbody><tr><td><a href="http://huaqianlee.github.io/2017/11/13/Android/What-is-fast-charge-now/">常用的快充技术简介</a></td><td></td></tr><tr><td><a href="http://huaqianlee.github.io/2019/08/27/Android/USB-port-error/">UFP was modified as DRP when we unplug OTG</a></td><td>Type-c 端口模型</td></tr><tr><td><a href="http://huaqianlee.github.io/2019/05/15/Android/pmic-voter/">pmic voter</a></td><td>PMIC 投票机制</td></tr><tr><td><a href="http://huaqianlee.github.io/2018/08/23/Android/Three-ways-to-dump-usb-register/">Three ways to dump usb registers</a></td><td>获取 USB register values 的三种方式</td></tr><tr><td><a href="http://huaqianlee.github.io/2017/12/17/Android/android-sensor-arch-analysis/">Android传感器（Sensor）架构简析 (╯_╰)</a></td><td>MTK 传感器架构简析 (╯_╰)</td></tr><tr><td><a href="http://huaqianlee.github.io/2017/11/23/Android/Android-Linux-input-system-analysis/">Android(Linux) 输入子系统解析</a></td><td>从 HW 到 Framework 分析输入子系统</td></tr><tr><td><a href="http://huaqianlee.github.io/2017/12/03/Android/Android-Linux-i2c-driver-arch/">Android/Linux  I2C 驱动架构分析</a></td><td>I2C驱动架构分析</td></tr><tr><td><a href="http://huaqianlee.github.io/2017/11/21/Android/BMS-of-Android-Power-Management/">Android 电源管理之电池管理系统(BMS)</a></td><td>从 HW 到 APP 分析 BMS 系统</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/">Android不带电量计的电量计算</a></td><td>高通不带库仑计电池电量算法</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/">Android 电源管理架构</a></td><td>高通PMU架构与电源管理机制简析</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/">Android电池监控系统-BMS (有坑未填)</a></td><td>高通BMS系统源码简析</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/06/24/Android/qaulcomm-bms-driver-analysis/">高通电池管理系统（BMS）驱动分析</a></td><td>高通 BMS 系统与驱动分析</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/06/24/Android/smb135x-charger-driver/">高通 smb135x charger 驱动分析</a></td><td>高通 smb135x 驱动简析</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/06/24/Android/qcom-pmic-driver/">高通 PMIC 架构简析</a></td><td>高通 PMIC 架构</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/06/24/Android/linear-charger-driver/">高通 linear charger 驱动分析</a></td><td>高通 linear charger 驱动简析</td></tr></tbody></table><h2 id="代码模块方向"><a href="#代码模块方向" class="headerlink" title="代码模块方向"></a>代码模块方向</h2><h3 id="系统方向"><a href="#系统方向" class="headerlink" title="系统方向"></a>系统方向</h3><table><thead><tr><th>文章名</th><th>概述</th></tr></thead><tbody><tr><td><a href="http://huaqianlee.github.io/2019/05/16/Android/A-little-knowledge-about-health/">一个 health service 不生效问题引出的一点知识</a></td><td>Healthd 重载</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/08/23/Android/%E9%AB%98%E9%80%9AAndroid%E8%AE%BE%E5%A4%87%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-%E4%BB%8Epower-on%E4%B8%8A%E7%94%B5%E5%88%B0Home-Lanucher%E5%90%AF%E5%8A%A8/">高通Android设备启动流程分析</a></td><td>从power-on上电到Home Lanucher启动</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/07/18/Android/%E6%80%8E%E4%B9%88%E7%94%A8Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8E%BB%E8%B0%83%E8%AF%95-How-to-debug-with-Android-logging/">怎么用Android日志系统更好地去调试</a></td><td>解析 log 实现代码及实战 demo</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/07/19/Android/%E6%80%8E%E4%B9%88%E6%8A%93%E5%8F%96Android%E6%B5%8B%E8%AF%95%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-How-to-get-android-log-file/">怎么抓取Android测试日志文件</a></td><td>解析 logcat 命令 和 log的抓取</td></tr></tbody></table><h3 id="BootLoader部分"><a href="#BootLoader部分" class="headerlink" title="BootLoader部分"></a>BootLoader部分</h3><table><thead><tr><th>文章名</th><th>概述</th></tr></thead><tbody><tr><td><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/">高通平台Android源码bootloader分析之sbl1(一)</a></td><td>高通boot架构和sbl源码执行流程</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/">高通平台Android源码bootloader分析之sbl1(二)</a></td><td>CDT解析</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/">高通平台Android源码bootloader分析之sbl1(三)</a></td><td>log系统和下载升级</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/07/25/Android/Android%E6%BA%90%E7%A0%81bootable%E8%A7%A3%E6%9E%90%E4%B9%8BLK-bootloader-little-kernel/">Android源码bootable解析之bootloader LK(little kernel)</a></td><td>LK目录和LK源码流程</td></tr></tbody></table><h3 id="Kernel部分"><a href="#Kernel部分" class="headerlink" title="Kernel部分"></a>Kernel部分</h3><table><thead><tr><th>文章名</th><th>概述</th></tr></thead><tbody><tr><td><a href="http://huaqianlee.github.io/2017/11/23/Android/Android-Linux-input-system-analysis/">Android(Linux) 输入子系统解析</a></td><td>从 HW 到 Framework 分析输入子系统</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/08/19/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BLinux%E5%86%85%E6%A0%B8%E8%AE%BE%E5%A4%87%E6%A0%91-DT-Device-Tree-dts%E6%96%87%E4%BB%B6/">Linux内核设备树(DT - Device Tree)</a></td><td>基于高通平台分析设备树</td></tr><tr><td><a href="http://huaqianlee.github.io/2017/11/14/Android/Android-SELinux-Permison-and-Question/">Android Selinux 权限及问题</a></td><td>SELinux权限介绍及问题解决</td></tr></tbody></table><h3 id="日志系统"><a href="#日志系统" class="headerlink" title="日志系统"></a>日志系统</h3><table><thead><tr><th>文章名</th><th>概述</th></tr></thead><tbody><tr><td><a href="http://huaqianlee.github.io/2015/07/18/Android/Android-Logging-system-Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/">Android日志系统详解</a></td><td>logging system</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/07/18/Android/%E6%80%8E%E4%B9%88%E7%94%A8Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8E%BB%E8%B0%83%E8%AF%95-How-to-debug-with-Android-logging/">怎么用Android日志系统更好地去调试</a></td><td>代码中的 log</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/07/19/Android/%E6%80%8E%E4%B9%88%E6%8A%93%E5%8F%96Android%E6%B5%8B%E8%AF%95%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-How-to-get-android-log-file/">怎么抓取Android测试日志文件</a></td><td>logcat 简析</td></tr></tbody></table><h3 id="编译系统"><a href="#编译系统" class="headerlink" title="编译系统"></a>编译系统</h3><table><thead><tr><th>文章名</th><th>概述</th></tr></thead><tbody><tr><td><a href="http://huaqianlee.github.io/2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/">Android编译过程详解之一</a></td><td>高通自定义脚本与lunch</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/">Android编译过程详解之二</a></td><td>Build系统及.mk文件解析</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%89/">Android编译过程详解之三</a></td><td>客制化解析</td></tr><tr><td><a href="http://huaqianlee.github.io/2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/">Android.mk解析</a></td><td>一个bug及Android.mk文件详解</td></tr></tbody></table><h2 id="架构原理方向"><a href="#架构原理方向" class="headerlink" title="架构原理方向"></a>架构原理方向</h2>]]></content>
      
      
      <categories>
          
          <category> Android Tree </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qualcomm </tag>
            
            <tag> 源码分析 </tag>
            
            <tag> MTK </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
