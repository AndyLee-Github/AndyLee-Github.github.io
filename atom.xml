<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andy.Lee&#39;s  Blog</title>
  <subtitle>Good good study, day day up !</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huaqianlee.github.io/"/>
  <updated>2017-05-11T13:02:29.567Z</updated>
  <id>http://huaqianlee.github.io/</id>
  
  <author>
    <name>Andy.Lee</name>
    <email>huaqianlee@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第一行代码之Material Design</title>
    <link href="http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Material-Design/"/>
    <id>http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Material-Design/</id>
    <published>2017-05-10T13:31:27.000Z</published>
    <updated>2017-05-11T13:02:29.567Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Toolbar控件">Toolbar控件</h2><h3 id="主题定义">主题定义</h3><p>对应于ActionBar，由于ActionBar被限定于活动顶部，不能实现一些Material Design效果，因此已不推荐使用了。</p>
<p>ActionBar来自项目指定的主题定义的显示，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line">android:theme="@style/AppTheme"</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>主题的定义：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># res/values/styles.xml</span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"AppTheme"</span> <span class="attribute">parent</span> = "<span class="attribute">Theme.AppCompat.Light.DarkActionBar</span>"&gt;</span><span class="css"> # 定义指定父主题</span><br><span class="line">    &lt;!<span class="tag">--</span> <span class="tag">Customize</span> <span class="tag">your</span> <span class="tag">theme</span> <span class="tag">here</span>. <span class="tag">--</span>&gt;</span><br><span class="line">    &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">colorPrimary</span>"&gt;<span class="at_rule">@<span class="keyword">color/colorPrimary&lt;/item&gt;</span></span><br><span class="line">    &lt;item name=<span class="string">"colorPrimaryDark"</span>&gt;@color/colorPrimaryDark&lt;/item&gt;</span><br><span class="line">    &lt;item name=<span class="string">"colorAccent"</span>&gt;@color/colorAccent&lt;/item&gt;</span><br><span class="line">&lt;/resources&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>父主题Theme.AppCompat.Light.DarkActionBar自带了ActionBar，使用Toolbar则需要将父主题替换，主要有如下两种可选主题：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Theme.AppCompat.Light.NoActionBar : 淡色主题，主题颜色设为淡色，陪衬颜色设为深色</span><br><span class="line">Theme.AppCompat.NoActionBar: 深色主题，界面主题颜色设为深色，陪衬颜色设为淡色</span><br></pre></td></tr></table></figure></p>
<p>为了使用Toolbar修改主题定义：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"AppTheme"</span> <span class="attribute">parent</span> = "<span class="attribute">Theme.AppCompat.Light.NoActionBar</span>"&gt;</span><span class="css"> # 定义指定父主题</span><br><span class="line">    &lt;!<span class="tag">--</span> <span class="tag">Customize</span> <span class="tag">your</span> <span class="tag">theme</span> <span class="tag">here</span>. <span class="tag">--</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/<span class="tag">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>主题中的颜色控制属性，主要如下几种：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">colorPrimary       指定标题栏背影色</span><br><span class="line">colorPrimaryDrak   指定状态栏颜色</span><br><span class="line">textColorPrimary   指定标题文字颜色</span><br><span class="line">windowBackground   背景色</span><br><span class="line">navigationBarColor 指定状态导航条颜色</span><br><span class="line">colorAccent        指定浮动按钮颜色以及一些控件选择状态</span><br></pre></td></tr></table></figure></p>
<p>每个属性指定颜色的位置如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/toolbar_anay.jpg" alt="各属性指定颜色位置"></p>
<h3 id="引入Toolbar">引入Toolbar</h3><p>Toolbar控件是由appcompat-v7库提供，引入布局：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;FrameLayout ...</span><br><span class="line"> xmlns:app="http://schemas.android.com/apk/res-auto"</span><br><span class="line"> //引入app命名空间，因为android:attribute之类属性只支持5.0及以上系统，5.0以下需要使用app:xx来兼容</span><br><span class="line"> </span><br><span class="line"> &lt;android.support.v7.widget.Toolbar</span><br><span class="line">    android:id="@+id/toolbar"</span><br><span class="line">    android:layout_width="match_parent"</span><br><span class="line">    android:layout_height="?attr/actionBarSize" // 高度设置为actionBar的高度</span><br><span class="line">    android:background="?attr/colorPrimary"</span><br><span class="line">    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span><br><span class="line">    // 为了Toolbar单独使用深色主题让效果更好，通过此属性设置，如不设置这使用默认的浅色主题效果</span><br><span class="line">    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"</span><br><span class="line">    // 将Toolbar中菜单按钮弹出的菜单项设为浅色主题</span><br><span class="line">    app:layout_scrollFlags="enterAlways|snap|scroll"</span><br><span class="line">    /&gt;</span><br><span class="line">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>加入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">setSupportActionBar(toolbar);</span><br></pre></td></tr></table></figure></p>
<h3 id="美化Toolbar">美化Toolbar</h3><p>修改标题栏显示内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">  <span class="attribute">...</span></span><br><span class="line">  <span class="attribute">android:label</span>=<span class="value">"Fruits"</span>&gt;</span></span><br><span class="line">  // 未指定的话，则显示application中android:label指定的内容</span><br><span class="line"> <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>添加action按钮：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"># 引入布局</span><br><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"</span><br><span class="line">    xmlns:app="http://schemas.android.com/apk/res-auto"&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id="@+id/backup"</span><br><span class="line">        android:icon="@drawable/ic_backup"</span><br><span class="line">        android:title="Backup"</span><br><span class="line">        app:showAsAction="always"/&gt; </span><br><span class="line">        //指定显示位置,永远显示在Toolbar中，屏幕不够则隐藏</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id="@+id/del"</span><br><span class="line">        android:icon="@drawable/ic_delete"</span><br><span class="line">        android:title="Delete"</span><br><span class="line">        app:showAsAction="ifRoom"/&gt;</span><br><span class="line">        //如果屏幕空间足够则显示，不够则显示在菜单中</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id="@+id/setting"</span><br><span class="line">        android:icon="@drawable/ic_settings"</span><br><span class="line">        android:title="Setting"</span><br><span class="line">        app:showAsAction="never"/&gt;</span><br><span class="line">        //永远隐藏，显示在菜单中</span><br><span class="line">&lt;/menu&gt;</span><br><span class="line"></span><br><span class="line"># 加入代码</span><br><span class="line">    @Override</span><br><span class="line">    public boolean onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        // 加载toolbal.xml</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean onOptionsItemSelected(MenuItem item) &#123;</span><br><span class="line">        switch (item.getItemId()) &#123;</span><br><span class="line">            case R.id.backup:</span><br><span class="line">                //Toolbar上按钮响应逻辑</span><br><span class="line">                break;</span><br><span class="line">            case R.id.del:</span><br><span class="line">                break;</span><br><span class="line">            case R.id.setting:</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>效果如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/toolbar_xiaoguo.jpg" alt="带action按钮的Toolbar"></p>
<h2 id="滑动菜单">滑动菜单</h2><h3 id="DrawerLayout">DrawerLayout</h3><p>DrawerLayout是一个布局，允许放入两个子控件，第一个控件是主屏幕中显示的内容，第二个子控件是滑动菜单中显示的内容。<br>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v4.widget.DrawerLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/drawer_layout"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="tag">&lt;<span class="title">FrameLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span>    </span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">                <span class="attribute">...</span></span><br><span class="line">                /&gt;</span></span><br><span class="line">                </span><br><span class="line">    <span class="tag">&lt;/<span class="title">FrameLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> </span><br><span class="line">        <span class="attribute">android:layout_gravity</span>=<span class="value">"start"</span> </span><br><span class="line">        //表示根据系统语言判断第二界面隐藏在左边还是右边，比如英语和中文从左边开始，就为左边，也可指定“<span class="attribute">right</span>" "<span class="attribute">left</span>" "<span class="attribute">end</span>"</span><br><span class="line">        <span class="attribute">...</span>/&gt;</span> //滑动界面先加载一个TextView</span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入导航按钮：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> DrawerLayout mlayout;</span><br><span class="line"></span><br><span class="line">mlayout = (DrawerLayout) findViewById(R.id.drawer_layout);</span><br><span class="line">ActionBar actionBar = getSupportActionBar();<span class="comment">//获得ActionBar(其实是Toolbar)</span></span><br><span class="line"><span class="keyword">if</span> (actionBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">    actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>); <span class="comment">// 显示导航按钮(HomeAsUp按钮)，默认是一个返回箭头</span></span><br><span class="line">    actionBar.setHomeAsUpIndicator(R.drawable.ic_menu);<span class="comment">//设置图标</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">        mlayout.openDrawer(GravityCompat.START);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p>
<h3 id="NavigationView">NavigationView</h3><p>NavigationView是Design Support提供的一个空间，可以让滑动菜单设计好看又简单，首先需要加入依赖：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:design:24.2.1'</span> <span class="comment">//Design Support库</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'de.hdodenhof:circleimageview:2.1.0'</span> <span class="comment">// Circleimageview，实现图片圆形化功能，用于头像</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><a href="https://github.com/hdodenhof/Circleimageview" target="_blank" rel="external">Circleimageview项目主页地址</a></p>
</blockquote>
<p>准备滑动菜单页面布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"># menu  </span><br><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">menu</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">group</span> <span class="attribute">android:checkableBehavior</span>=<span class="value">"single"</span>&gt;</span> //指定这一组菜单项单选</span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_call"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_call"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Call"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_friends"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_friends"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Friends"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_location"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_location"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Location"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_mail"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_mail"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Mail"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_task"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_task"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Tasks"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">menu</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># headerLayout</span><br><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"180dp"</span></span><br><span class="line">    <span class="attribute">android:padding</span>=<span class="value">"10dp"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"?attr/colorPrimary"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">de.hdodenhof.circleimageview.CircleImageView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/icon_image"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"70dp"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"70dp"</span></span><br><span class="line">        <span class="attribute">android:src</span>=<span class="value">"@drawable/nav_icon"</span></span><br><span class="line">        <span class="attribute">android:layout_centerInParent</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/mail"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_alignParentBottom</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"huaqinalee@gmail.com"</span></span><br><span class="line">        <span class="attribute">android:textColor</span>=<span class="value">"#FFF"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"14sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/usr_name"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_above</span>=<span class="value">"@+id/mail"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"Andy Lee"</span></span><br><span class="line">        <span class="attribute">android:textColor</span>=<span class="value">"#fff"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"14sp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>引入滑动菜单页面布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 将前面的TextView换为NavigationView</span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.NavigationView</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/nav_view"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_gravity</span>=<span class="value">"start"</span></span><br><span class="line">    <span class="attribute">app:menu</span>=<span class="value">"@menu/nav_menu"</span>  // 引入<span class="attribute">menu</span></span><br><span class="line">    <span class="attribute">app:headerLayout</span>=<span class="value">"@layout/nav_header"</span> // 引入<span class="attribute">headerLayout</span></span><br><span class="line">    /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入响应代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">NavigationView navView = (NavigationView) findViewById(R.id.nav_view);</span><br><span class="line"><span class="comment">//navView.setCheckedItem(R.id.nav_call); //设置菜单默认选中项</span></span><br><span class="line">navView.setNavigationItemSelectedListener(<span class="keyword">new</span> NavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNavigationItemSelected</span><span class="params">(@NonNull MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//添加菜单项响应逻辑</span></span><br><span class="line">        <span class="comment">//mlayout.closeDrawers(); 关闭滑动菜单</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firtcode/navigationview_ex.jpg" alt="NavigationView滑动菜单界面"></p>
<h2 id="悬浮按钮和可交互提示">悬浮按钮和可交互提示</h2><h3 id="FloatingActionButton">FloatingActionButton</h3><p>引入悬浮按钮布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">FrameLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">            <span class="attribute">...</span></span><br><span class="line">            /&gt;</span></span><br><span class="line">            </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.FloatingActionButton</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/fab"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_gravity</span>=<span class="value">"bottom|end"</span> //对于中英文，右下角</span><br><span class="line">            <span class="attribute">android:layout_margin</span>=<span class="value">"16dp"</span></span><br><span class="line">            <span class="attribute">android:src</span>=<span class="value">"@drawable/ic_done"</span></span><br><span class="line">            <span class="attribute">app:elevation</span>=<span class="value">"8dp"</span> //悬浮高度</span><br><span class="line">            /&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="title">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入响应代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);</span><br><span class="line">fab.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 实现响应逻辑</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Snackbar">Snackbar</h3><p>提供交互的提示，与Toast类似，加入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">**arg1：一个View，当前界面的任意view，会自动找到最外层布局</span><br><span class="line">**arg2：显示的内容</span><br><span class="line">**arg3：时长</span><br><span class="line">*/</span></span><br><span class="line">Snackbar.make(v, <span class="string">"Data deleted"</span>, Snackbar.LENGTH_SHORT).setAction(<span class="string">"Undo"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"Del undo!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).show();</span><br></pre></td></tr></table></figure></p>
<h3 id="CoordinatorLayout">CoordinatorLayout</h3><p>直接如上加入Snackbar，提示的内容直接弹出会覆盖悬浮按钮，体验不好，所以就需要引入加强版FrameLayout：CoordinatorLayout。此布局可以监听子控件，并且做出响应调整。<br>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 替换掉FrameLayout</span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.FloatingActionButton</span></span><br><span class="line">    <span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这样替换布局后，悬浮按钮会自动上移以避免覆盖，效果如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/coorlayout.jpg" alt="效果图"></p>
<blockquote>
<p>Snackbar.make时传入的view是Snackbar本身，包含在CoordinatorLayout中，所以能响应，如若传入的是外面的View，则不能响应。</p>
</blockquote>
<h2 id="卡片式布局">卡片式布局</h2><h3 id="CardView">CardView</h3><p>CardView也是appcompat-v7库提供的一个FrameLayout，不过增加了圆角阴影等立体效果。</p>
<h4 id="基本用法：">基本用法：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:cardCornerRadius</span>=<span class="value">"4dp"</span> // 圆角弧度</span><br><span class="line">    <span class="attribute">app:elevation</span>=<span class="value">"5dp"</span>/&gt;</span>// 投影高度</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">...</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="RecyclerView和CardView等控件实现水果列表效果">RecyclerView和CardView等控件实现水果列表效果</h4><p>添加依赖：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:24.2.1'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:cardview-v7:24.2.1'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.github.bumptech.glide:glide:3.7.0'</span> </span><br><span class="line"><span class="comment">//一个强大的图片加载库，可加载（网络）图片、GIF、本地视频。</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><a href="https://github.com/bumptech/glide" target="_blank" rel="external">Glide项目主页地址</a></p>
</blockquote>
<p>引入RecyclerView布局：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">    &lt;android.support.v7.widget.Toolbar</span><br><span class="line">        ..../&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">        android:id="@+id/recycler_view"</span><br><span class="line">        android:layout_width="match_parent"</span><br><span class="line">        android:layout_height="match_parent"/&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>这样子RecyclerView会将Toolbar给遮住，因为CoordinatorLayout(类似FrameLayout)布局默认置于左上角，后面通过APPBarLayout解决此问题</p>
</blockquote>
<p>定义一个Fruit实体类（只有name和imageId两个字段）。接下来需要为RecyclerView的子项指定自定义布局fruit_item.xml。</p>
<p>引入CardView布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span>     <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_margin</span>=<span class="value">"5dp"</span></span><br><span class="line">    <span class="attribute">app:cardCornerRadius</span>=<span class="value">"4dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/fruit_image"</span></span><br><span class="line">            <span class="attribute">android:scaleType</span>=<span class="value">"centerCrop"</span> //指定图片缩放方式</span><br><span class="line">            <span class="attribute">...</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/fruit_name"</span></span><br><span class="line">            <span class="attribute">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>添加RecyclerView适配器FruitAdapter，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">FruitAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; mLists;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(List&lt;Fruit&gt; lists)</span> </span>&#123;</span><br><span class="line">        mLists = lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FruitAdapter.<span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mContext = parent.getContext();</span><br><span class="line">        &#125;</span><br><span class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(FruitAdapter.ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Fruit fruit = mLists.get(position);</span><br><span class="line">        holder.fruitName.setText(fruit.getName());</span><br><span class="line">        Glide.with(mContext).load(fruit.getImageId()).into(holder.fruitImage);</span><br><span class="line">        <span class="comment">// 使用Glide加载图片</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mLists.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        CardView cardView;</span><br><span class="line">        ImageView fruitImage;</span><br><span class="line">        TextView fruitName;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cardView = (CardView) itemView;</span><br><span class="line">            fruitImage = (ImageView) itemView.findViewById(R.id.fruit_image);</span><br><span class="line">            fruitName = (TextView) itemView.findViewById(R.id.fruit_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>添加加载RecyclerView代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(...);</span><br><span class="line">GridLayoutManager layoutManager = <span class="keyword">new</span> GridLayoutManager(<span class="keyword">this</span>, <span class="number">2</span>);</span><br><span class="line">recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">adapter = <span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<h3 id="AppBarLayout">AppBarLayout</h3><p>APPBarLayout也是Design Support提供，解决RecyclerView遮挡Toolbar问题只需两步：</p>
<ol>
<li>将Toolbar嵌套到APPBarLayout中。</li>
<li>给RecyclerView指定一个布局行为。</li>
</ol>
<p>修改布局如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">    <span class="attribute">app:layout_scrollFlags</span>=<span class="value">"enterAlways|snap|scroll"</span></span><br><span class="line">    /*  </span><br><span class="line">    ** <span class="attribute">enterAlways</span> <span class="attribute">-</span> <span class="attribute">Toolbar</span>跟随向下滚动并重新显示</span><br><span class="line">    ** <span class="attribute">snap</span> <span class="attribute">-</span> <span class="attribute">Toolbar</span>还未完全隐藏或显示时，根据滚动距离自动选择</span><br><span class="line">    ** <span class="attribute">scroll</span> <span class="attribute">-</span> <span class="attribute">Toolbar</span>跟着向上滚动并隐藏</span><br><span class="line">    */</span><br><span class="line">        <span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">    <span class="attribute">...</span> </span><br><span class="line">    <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="下拉刷新">下拉刷新</h2><p>support-v4提供的SwipeRefreshLayout可以很简单的实现刷新功能。<br>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v4.widget.SwipeRefreshLayout</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/swipe_refresg"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line">    // 需要将上述的布局行为移到其父控件了</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">        <span class="attribute">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>代码实现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SwipeRefreshLayout swipeRefresh;</span><br><span class="line">swipeRefresh = (SwipeRefreshLayout)findViewById(R.id.swipe_refresg);</span><br><span class="line">swipeRefresh.setColorSchemeResources(R.color.colorPrimary); <span class="comment">// 设置下拉进度条颜色</span></span><br><span class="line">swipeRefresh.setOnRefreshListener(<span class="keyword">new</span> SwipeRefreshLayout.OnRefreshListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        refreshFruits();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshFruits</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">2000</span>); <span class="comment">//获取数据，这里模拟时间</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;<span class="comment">//切回主线程更新UI</span></span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                initFruits();</span><br><span class="line">                adapter.notifyDataSetChanged();</span><br><span class="line">                swipeRefresh.setRefreshing(<span class="keyword">false</span>);<span class="comment">//刷新结束，隐藏进度条</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure></p>
<h2 id="可折叠式标题栏">可折叠式标题栏</h2><h3 id="CollapsingToolbarLayout">CollapsingToolbarLayout</h3><p>如下所示，左边必须作为右边的子控件才能存在：</p>
<p><strong>CollapsingToolbarLayout -&gt; AppBarLayout -&gt; CoordinatorLayout.</strong></p>
<p>新建一个水果详情展示页面布局（activity_fruit.xml）来应用可折叠式标题栏。</p>
<p>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span></span><br><span class="line">    <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    # 标题部分</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">        <span class="attribute">...</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.CollapsingToolbarLayout</span></span><br><span class="line">            <span class="attribute">...</span></span><br><span class="line">            <span class="attribute">android:theme</span>=<span class="value">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span> // <span class="attribute">Toolbar</span>主题，移到此父控件</span><br><span class="line">            <span class="attribute">app:contentScrim</span>=<span class="value">"?attr/colorPrimary"</span> //折叠背景色,折叠后就变成一个普通<span class="attribute">Toolbar</span>了</span><br><span class="line">            <span class="attribute">app:layout_scrollFlags</span>=<span class="value">"scroll|exitUntilCollapsed"</span></span><br><span class="line">            /*</span><br><span class="line">            ** <span class="attribute">Toolbar</span>属性，移到父控件了</span><br><span class="line">            ** <span class="attribute">exitUntilCollapsed</span> <span class="attribute">-</span> 表示折叠后保留不隐藏</span><br><span class="line">            */</span><br><span class="line">            <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            /*标题栏内容：图片+普通标题栏*/</span><br><span class="line">            <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">                <span class="attribute">...</span></span><br><span class="line">                <span class="attribute">android:scaleType</span>=<span class="value">"centerCrop"</span></span><br><span class="line">                <span class="attribute">app:layout_collapseMode</span>=<span class="value">"parallax"</span> // 指定折叠模式，<span class="attribute">parallax-</span>折叠时错位偏移</span><br><span class="line">                <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/toolbar"</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"?attr/actionBarSize"</span></span><br><span class="line">                <span class="attribute">app:layout_collapseMode</span>=<span class="value">"pin"</span> // 表示折叠过程中<span class="attribute">Toolbar</span>位置不变</span><br><span class="line">                /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="title">android.support.design.widget.CollapsingToolbarLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.design.widget.AppBarLayout</span>&gt;</span>    </span><br><span class="line">    </span><br><span class="line">    # 详情页部分</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v4.widget.NestedScrollView</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">        <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">        ** 同ScrollView，允许滚动查看，不过多了响应滚动事件</span><br><span class="line">        ** 因为外使用CoordinatorLayout，需要用此控件或RecyclerView，用法同上RecyclerView一样</span><br><span class="line">        ** 只允许存在一个直接子布局</span><br><span class="line">        */</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">            <span class="attribute">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">                <span class="attribute">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                    <span class="attribute">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.v4.widget.NestedScrollView</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    # 增加一个悬浮按钮</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.FloatingActionButton</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">        <span class="attribute">app:layout_anchor</span>=<span class="value">"@id/appBar"</span> //指定描点，这里写<span class="attribute">APPBarLayout</span>的<span class="attribute">id</span>，这样按钮就出现在标题栏区域</span><br><span class="line">        <span class="attribute">app:layout_anchorGravity</span>=<span class="value">"bottom|end"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># Adapter中添加RecyclerView子项响应代码</span><br><span class="line"><span class="keyword">public</span> FruitAdapter.<span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mContext = parent.getContext();</span><br><span class="line">    &#125;</span><br><span class="line">    View view = LayoutInflater.from(mContext).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">final</span> ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">    holder.cardView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> position = holder.getAdapterPosition();</span><br><span class="line">            Fruit fruit = mLists.get(position);</span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(mContext,FruitActivity.class);</span><br><span class="line">            intent.putExtra(FruitActivity.FRUIT_NAME,fruit.getName());</span><br><span class="line">            intent.putExtra(FruitActivity.FRUIT_IMAGE_ID,fruit.getImageId());</span><br><span class="line">            mContext.startActivity(intent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> holder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 详情页面代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_NAME = <span class="string">"fruit_name"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_IMAGE_ID = <span class="string">"fruit_image_id"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_fruit);</span><br><span class="line"></span><br><span class="line">        Intent intent = getIntent();</span><br><span class="line">        String  fruitName = intent.getStringExtra(FRUIT_NAME);</span><br><span class="line">        <span class="keyword">int</span> fruitImageId = intent.getIntExtra(FRUIT_IMAGE_ID,<span class="number">0</span>);</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">//显示默认HomeAsUp按钮，一个返回箭头</span></span><br><span class="line">        setSupportActionBar(toolbar); </span><br><span class="line">        ActionBar actionBar = getSupportActionBar();</span><br><span class="line">        <span class="keyword">if</span> (actionBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        collapsingToolbar.setTitle(fruitName);</span><br><span class="line">        Glide.with(<span class="keyword">this</span>).load(fruitImageId).into(fruitImageView);</span><br><span class="line">        fruitText.setText(fruitContent); <span class="comment">//设置详情页内容</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:  <span class="comment">// HomeAsUp按钮返回上一活动</span></span><br><span class="line">                finish();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="背景图片和系统状态栏融合">背景图片和系统状态栏融合</h3><p>对ImageView及其所有父布局属性设定，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span></span><br><span class="line"> <span class="attribute">...</span></span><br><span class="line"> <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">        <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.CollapsingToolbarLayout</span></span><br><span class="line">            <span class="attribute">...</span></span><br><span class="line">            <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">                <span class="attribute">...</span></span><br><span class="line">                <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>接下来需要将状态栏指定撑透明，但是android:statusBarColor属性是API21开始支持的（即Android5.0）。先为5.0以上新建一个values-21/styles.xml，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"FruitActivityTheme"</span> <span class="attribute">parent</span>=<span class="value">"AppTheme"</span>&gt;</span><span class="css"></span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="rule"><span class="attribute">android</span>:<span class="value">statusBarColor<span class="string">"&gt;@android:color/transparent&lt;/item&gt;</span><br><span class="line">    </span></span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>为了支持5.0以前，对values/styles.xml进行修改，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"FruitActivityTheme"</span> <span class="attribute">parent</span>=<span class="value">"AppTheme"</span>&gt;</span><span class="css"></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"># 因为5.0以前不能指定状态栏颜色，所以留空即可了。</span><br></pre></td></tr></table></figure></p>
<p>最后让activity调用此主题，如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line">&lt;activity</span><br><span class="line">    ...</span><br><span class="line">    android:theme="@style/FruitActivityTheme"</span><br><span class="line">&lt;/activiy&gt;</span><br></pre></td></tr></table></figure></p>
<p>效果图如下：</p>
<p><img src="" alt="待补充"></p>
<h2 id="示例源码">示例源码</h2><p>整个Material Design示例源码的地址如下：</p>
<p><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter12" target="_blank" rel="external">Material Design示例源码</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Toolbar控件&quot;&gt;Toolbar控件&lt;/h2&gt;&lt;h3 id=&quot;主题定义&quot;&gt;主题定义&lt;/h3&gt;&lt;p&gt;对应于ActionBar，由于ActionBar被限定于活动顶部，不能实现一些Material Design效果，因此已不推荐使用了。&lt;/p&gt;
&lt;p&gt;ActionBar来自项目指定的主题定义的显示，如下：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# AndroidManifest.xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:theme=&quot;@style/AppTheme&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之网络</title>
    <link href="http://huaqianlee.github.io/2017/05/09/FirstCode/FirstCode-Network/"/>
    <id>http://huaqianlee.github.io/2017/05/09/FirstCode/FirstCode-Network/</id>
    <published>2017-05-09T11:29:56.000Z</published>
    <updated>2017-05-10T13:29:54.341Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WebView">WebView</h2><p>WebView控件使用十分简单：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 布局</span><br><span class="line">&lt;WebView /&gt;</span><br><span class="line"></span><br><span class="line"># 应用</span><br><span class="line">webView.getSettings().setJavaScriptEnabled(<span class="keyword">true</span>); <span class="comment">// 设置浏览器属性，支持JavaScript脚本</span></span><br><span class="line">webView.setWebViewClient(<span class="keyword">new</span> WebViewClient());<span class="comment">//目标网页在当前WebView中显示，而不打开系统浏览器</span></span><br><span class="line">webView.loadUrl(<span class="string">"http://huaqianlee.github.io"</span>);</span><br><span class="line"></span><br><span class="line"># 权限</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.INTERNET"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="HTTP协议">HTTP协议</h2><h3 id="HttpURLConnection">HttpURLConnection</h3><p>获取实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"http://huaqianlee.github.io"</span>);</span><br><span class="line">HttpURLConnection connection = (HttpURLConnection) url.openConnection();</span><br></pre></td></tr></table></figure></p>
<p>设置HTTP请求所使用的方法：GET或POST。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.setRequestMethod(<span class="string">"GET"</span>);</span><br></pre></td></tr></table></figure></p>
<p>其它定制：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">connection.setReadTimeout(<span class="number">8000</span>);<span class="comment">// ms</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>读取服务器返回的输入流：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream in = connection.getInputStream();</span><br></pre></td></tr></table></figure></p>
<p>关闭HTTP连接：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.disconnect();</span><br></pre></td></tr></table></figure></p>
<p>提交数据：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conneciton.setRequestMethod(<span class="string">"POST"</span>);</span><br><span class="line">DataOutputStream out = <span class="keyword">new</span> DataOutputStream(connection.getOutputStream());</span><br><span class="line">out.writeBytes(<span class="string">"username=admin&amp;password=123456"</span>);</span><br><span class="line"><span class="comment">//数据之间用“&amp;”隔开</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter9/NetworkTest" target="_blank" rel="external">HTTP的一个示例</a></p>
</blockquote>
<h3 id="OkHttp">OkHttp</h3><p>OkHttp项目地址：<a href="https://github.com/square/okhttp" target="_blank" rel="external">https://github.com/square/okhttp</a>。</p>
<p>下载：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Gradle: app/build.gradle</span><br><span class="line">compile 'com.squareup.okhttp3:okhttp:3.7.0'</span><br></pre></td></tr></table></figure></p>
<p>用法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 创建实例</span><br><span class="line">OKHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line"></span><br><span class="line"># 创建Request对象,build()之前可以定制Request对象</span><br><span class="line">Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">    .url(<span class="string">"http://huaqianlee.github.io"</span>)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"># 创建Call对象,response为服务器返回的数据</span><br><span class="line">Response response  = client.newCall(request).execute();</span><br><span class="line"></span><br><span class="line"># 获取具体内容</span><br><span class="line">String responseData = response.body().string();</span><br><span class="line"></span><br><span class="line"># 如果发齐POST请求，需先构建Body对象存储提交的参数</span><br><span class="line">RequestBody requestBOdy = <span class="keyword">new</span> FormBody.Builder()</span><br><span class="line">    .add(<span class="string">"username"</span>,<span class="string">"admin"</span>)</span><br><span class="line">    .add(<span class="string">"password"</span>,<span class="string">"123456"</span>)</span><br><span class="line">    .build();</span><br><span class="line">    </span><br><span class="line"># 创建Request对象</span><br><span class="line">Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">    .url(<span class="string">"http://huaqianlee.github.io"</span>)</span><br><span class="line">    .post(requestBody)</span><br><span class="line">    .build();</span><br><span class="line"># 其余就和上面一样了</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter9/NetworkTest" target="_blank" rel="external">OkHttp的一个示例(其实与Http同一demo)</a></p>
</blockquote>
<h2 id="解析XML格式数据">解析XML格式数据</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;WebView&quot;&gt;WebView&lt;/h2&gt;&lt;p&gt;WebView控件使用十分简单：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 布局&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;WebView /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.getSettings().setJavaScriptEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 设置浏览器属性，支持JavaScript脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.setWebViewClient(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebViewClient());&lt;span class=&quot;comment&quot;&gt;//目标网页在当前WebView中显示，而不打开系统浏览器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.loadUrl(&lt;span class=&quot;string&quot;&gt;&quot;http://huaqianlee.github.io&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>美式音标与英式音标</title>
    <link href="http://huaqianlee.github.io/2017/05/08/English/Americal-and-english-phonetic/"/>
    <id>http://huaqianlee.github.io/2017/05/08/English/Americal-and-english-phonetic/</id>
    <published>2017-05-08T11:06:31.000Z</published>
    <updated>2017-05-08T12:05:34.392Z</updated>
    
    <content type="html"><![CDATA[<p>由于自己现在自学的是美音，与学生时代学的国际音标有很大不同，查单词的时候时不时就会被音标搞困惑。因此特意搜索整理了一份美式音标表(K.k音标)以及与英式音标的区别。</p>
<h2 id="美式音标">美式音标</h2><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/english/America_ph.png" alt="美式音标"><br><a id="more"></a></p>
<h2 id="美式音标与英式音标的区别">美式音标与英式音标的区别</h2><p>两种音标有很大的区别容易混淆，需要注意。如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/english/yuying_dif.jpg" alt="元音"></p>
<p>辅音没什么区别，也在此列出：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/english/fuying_dif.jpg" alt="辅音"></p>
<blockquote>
<p>国际音标还有如下四个音标：[tr] [dr] [ts] [dz]</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于自己现在自学的是美音，与学生时代学的国际音标有很大不同，查单词的时候时不时就会被音标搞困惑。因此特意搜索整理了一份美式音标表(K.k音标)以及与英式音标的区别。&lt;/p&gt;
&lt;h2 id=&quot;美式音标&quot;&gt;美式音标&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/english/America_ph.png&quot; alt=&quot;美式音标&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="English" scheme="http://huaqianlee.github.io/categories/English/"/>
    
    
      <category term="英语" scheme="http://huaqianlee.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之服务</title>
    <link href="http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-Service/"/>
    <id>http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-Service/</id>
    <published>2017-05-06T15:58:30.000Z</published>
    <updated>2017-05-10T13:30:16.610Z</updated>
    
    <content type="html"><![CDATA[<h2 id="多线程编程">多线程编程</h2><h3 id="线程基本用法">线程基本用法</h3><p>方式一：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> MyThread().start();</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>方式二：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread()).start();</span><br></pre></td></tr></table></figure></p>
<p>方式三：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure></p>
<h3 id="在子线程中更新UI">在子线程中更新UI</h3><p>直接在子线程中更新UI将导致APP崩溃，所以正确做法是通过异步消息处理机制来实现。譬如按键实现更新UI：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UPDATE_TEXT = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">onClick() &#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span> <span class="params">()</span> </span>&#123; <span class="comment">// 这里不能更新UI</span></span><br><span class="line">            Message message = <span class="keyword">new</span> Message();</span><br><span class="line">            message.what = UPDATE_TEXT;</span><br><span class="line">            handler.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Handler handler = <span class="keyword">new</span> Handler() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(msg.what) &#123;</span><br><span class="line">            <span class="keyword">case</span> UPDATE_TEXT:</span><br><span class="line">            <span class="comment">// 进行更新UI操作</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>另一种在子线程更新UI的快捷方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">runOnUiThread(<span class="keyword">new</span> RUnnable() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> run &#123;</span><br><span class="line">        <span class="comment">// UI操作逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h3 id="异步消息处理机制">异步消息处理机制</h3><p>Android的异步消息处理主要由四个部分组成：</p>
<ol>
<li>Message<br> 可以携带少量信息，用于在线程之间传递。</li>
<li>Handler<br> 处理者，用于发送与处理消息。</li>
<li>MessageQueue<br> 消息队列，存放所有Handler发送的消息，等待处理，每个线程只有一个。</li>
<li>Looper<br> MessageQueue的管家，其loop()方法循环取出消息传递到handleMessage()方法中处理。每个线程只有一个。</li>
</ol>
<p>流程示意图如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/yibu_flow.png" alt="异步消息机制处理流程图"></p>
<h3 id="AsyncTask">AsyncTask</h3><p>AsyncTask的一个简单示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">** Void - 不需传入参数给后台任务</span><br><span class="line">** Integer - 用整型数据作为后台任务进度显示单位</span><br><span class="line">** Boolean - 布尔型数据返回执行结果</span><br><span class="line">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadTask</span> <span class="keyword">extends</span> <span class="title">AsyncTask</span>&lt;<span class="title">Void</span>, <span class="title">Integer</span>, <span class="title">Boolean</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/*后台任务开始前调用*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPreExecute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        progressDialog.show();<span class="comment">//显示进度对话框</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*执行在子线程，耗时任务应在此方法执行*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Boolean <span class="title">doInBackground</span><span class="params">(Void... params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> downloadPercent = doDownload();</span><br><span class="line">                publishProgress(downloadPercent); <span class="comment">// 反馈当前执行进度</span></span><br><span class="line">                <span class="keyword">if</span> (donwloadPercent &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*publishProgress触发*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onProgressUpdate</span><span class="params">(Integer... values)</span> </span>&#123;</span><br><span class="line">        progressDialog.setMessage(<span class="string">"Downloaded"</span> + values[<span class="number">0</span>]+<span class="string">"%"</span>);</span><br><span class="line">        <span class="comment">// 更新下载进度</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*doInBackground返回触发*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPostExecute</span> <span class="params">( Boolean result)</span> </span>&#123;</span><br><span class="line">        progressDialog.dismiss();<span class="comment">//关闭进度对话框</span></span><br><span class="line">        <span class="keyword">if</span>(result) &#123;&#125; <span class="keyword">else</span>&#123;&#125;  <span class="comment">// 提示下载结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动此任务</span></span><br><span class="line"><span class="keyword">new</span> DownloadTask().execute();</span><br></pre></td></tr></table></figure></p>
<h2 id="服务基本用法">服务基本用法</h2><h3 id="定义服务">定义服务</h3><p>创建服务时两个属性：Exported - 是否允许其他程序访问，Enabled - 启用服务。示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*第一次创建时调用，创建一个实例后不再调用*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*每次启动服务时调用*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*必须实现的抽象方法*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Return the communication channel to the service.</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="启动和停止服务">启动和停止服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务</span><br><span class="line">Intent startIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class);</span><br><span class="line">startService(startIntent);</span><br><span class="line"></span><br><span class="line"># 停止服务</span><br><span class="line">Intent stopIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class);</span><br><span class="line">stopService(stopIntent);</span><br></pre></td></tr></table></figure>
<h3 id="活动与服务通信">活动与服务通信</h3><p>让MyService提供下载功能，并活动可以决定下载时间和查看进度，添加通信代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># 服务部分</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DownloadBinder mBinder = <span class="keyword">new</span> DownloadBinder();</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DownloadBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDownload</span> <span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getProgress</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 活动部分</span><br><span class="line">实现匿名类：</span><br><span class="line">    <span class="keyword">private</span> MyService.DownloadBinder downloadBinder;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ServiceConnection connection= <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">            <span class="comment">/*service向下转型得到DownloadBinder，进行交互*/</span></span><br><span class="line">            downloadBinder= (MyService.DownloadBinder) service;</span><br><span class="line">            downloadBinder.startDownload();</span><br><span class="line">            downloadBinder.getProgress();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">绑定服务：</span><br><span class="line">    Intent bindIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.class);</span><br><span class="line">    bindService(bindIntent,connection,BIND_AUTO_CREATE); <span class="comment">//arg3:绑定后自动创建服务，onCreate()执行，onStartCommand()不执行</span></span><br><span class="line">    </span><br><span class="line">解绑服务：</span><br><span class="line">    unbindService(connection);</span><br></pre></td></tr></table></figure></p>
<h3 id="前台服务">前台服务</h3><p>前台服务可以一直处于运行状态，而不会被垃圾回收，并且会在系统状态栏显示。一个简单的示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate();</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,MainActivity.class);</span><br><span class="line">    PendingIntent pendingIntent = PendingIntent.getActivity(<span class="keyword">this</span>,<span class="number">0</span>,intent,<span class="number">0</span>);</span><br><span class="line">    Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>)</span><br><span class="line">            .setContentTitle(<span class="string">"This is a content title!"</span>)</span><br><span class="line">            .setContentText(<span class="string">"this is a content text!"</span>)</span><br><span class="line">            .setWhen(System.currentTimeMillis())</span><br><span class="line">            .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class="line">            .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher))</span><br><span class="line">            .setContentIntent(pendingIntent)</span><br><span class="line">            .build();</span><br><span class="line">    startForeground(<span class="number">1</span>,notification);<span class="comment">// 将服务变为前台服务</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="使用IntentService">使用IntentService</h3><p><strong>服务默认运行于主线程</strong>，所以耗时逻辑得通过多线程技术处理。<br>标准写法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">onStartCommand()&#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 处理具体逻辑</span></span><br><span class="line">            stopSelf();<span class="comment">//执行完毕后自动停止服务</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>IntentService方式：</p>
<blockquote>
<p>AS自动创建IntentService会生成一大堆用不到的代码，因此手动创建<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyIntentService</span> <span class="keyword">extends</span> <span class="title">IntentService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyIntentService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">"MyIntentService"</span>);<span class="comment">// 调用父类有参构造函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onHandleIntent</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 处理具体逻辑，已经运行于子线程</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 启动IntentService</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, MyIntentService.class);</span><br><span class="line">startService(intent);</span><br><span class="line"></span><br><span class="line"># 注册</span><br><span class="line">&lt;service android:name=<span class="string">".MyIntentService"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;多线程编程&quot;&gt;多线程编程&lt;/h2&gt;&lt;h3 id=&quot;线程基本用法&quot;&gt;线程基本用法&lt;/h3&gt;&lt;p&gt;方式一：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyThread().start();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之手机多媒体</title>
    <link href="http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-media/"/>
    <id>http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-media/</id>
    <published>2017-05-06T15:57:26.000Z</published>
    <updated>2017-05-10T13:29:16.861Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用通知">使用通知</h2><h3 id="通知基本用法">通知基本用法</h3><p>获取通知:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>构建Notification对象：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(context)</span><br><span class="line">.setContentTitle(..)</span><br><span class="line">.setContentText(..)</span><br><span class="line">...</span><br><span class="line">.build();</span><br></pre></td></tr></table></figure></p>
<p>显示通知：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager.notify(<span class="number">1</span>, notification);</span><br></pre></td></tr></table></figure></p>
<p>一个实例写法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, NotificationActivity.class);</span><br><span class="line">PendingIntent pi = PendingIntent.getActivity(MainActivity.<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>);</span><br><span class="line">NotificationManager manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(MainActivity.<span class="keyword">this</span>)</span><br><span class="line">        .setContentTitle(<span class="string">"This is content title"</span>)</span><br><span class="line">        .setContentText(<span class="string">"this is content text"</span>)</span><br><span class="line">        .setWhen(System.currentTimeMillis())</span><br><span class="line">        .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class="line">        .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher))</span><br><span class="line">        .setContentIntent(pi)  <span class="comment">// 设置点击跳转</span></span><br><span class="line">        .setAutoCancel(<span class="keyword">true</span>)</span><br><span class="line">        .setDefaults(Notification.DEFAULT_ALL)</span><br><span class="line">        .setContentText(<span class="string">"This is a notification test,  this Builder has many func, but do not test all of them "</span>)</span><br><span class="line">        .setPriority(NotificationCompat.PRIORITY_MAX)</span><br><span class="line">        .build();</span><br><span class="line">manager.notify(<span class="number">1</span>,notification);</span><br><span class="line"><span class="comment">//manager.cancel(1);  // 同上面autocancel()，取消通知，这样通知点击后才能从通知栏消失</span></span><br><span class="line"></span><br><span class="line"># Intent - 立即执行某个动作， PendingIntent - 合适的时机去执行某个动作</span><br></pre></td></tr></table></figure></p>
<h3 id="通知的进阶功能">通知的进阶功能</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.setSound(Uri.fromFile(<span class="keyword">new</span> File(<span class="string">"/system/media/audio/ringtones/Luna.ogg"</span>))</span><br><span class="line">.setVibrate(<span class="keyword">new</span> <span class="keyword">long</span>[](<span class="number">0</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>)) <span class="comment">// 下标偶数包括0静止时长，奇数-振动时长</span></span><br><span class="line">.setLights(Color.GREE, <span class="number">1000</span>,<span class="number">1000</span>)</span><br><span class="line">.setDefaults(NotificationCompat.DEFAULT_ALL)<span class="comment">//默认方式实现上述三种功能</span></span><br><span class="line">.setStyle(<span class="keyword">new</span> NotificationCompat.BigTextStyle().bigText(<span class="string">""</span>)) <span class="comment">//完整显示一大段文字</span></span><br><span class="line">.setStyle(<span class="keyword">new</span> NotificationCompat.BigPictureStyle().bigPicture(BitmapFactory.decodeResource(getResources(),R.drawable.big_image))<span class="comment">//显示大图片</span></span><br><span class="line">.setPriority(NotificationCompat.PRIORITY_MAX) <span class="comment">// 设置通知重要程度</span></span><br><span class="line"></span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.VIBRATE"</span>&gt;</span><br></pre></td></tr></table></figure>
<h2 id="摄像头、相册和音视频">摄像头、相册和音视频</h2><p>这部分不想搞笔记了，留下个实例地址吧：<br><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter8" target="_blank" rel="external">摄像头、相册和音视频简例</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用通知&quot;&gt;使用通知&lt;/h2&gt;&lt;h3 id=&quot;通知基本用法&quot;&gt;通知基本用法&lt;/h3&gt;&lt;p&gt;获取通知:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之跨程序共享数据-内容提供器</title>
    <link href="http://huaqianlee.github.io/2017/05/03/FirstCode/FirstCode-Content-Provider/"/>
    <id>http://huaqianlee.github.io/2017/05/03/FirstCode/FirstCode-Content-Provider/</id>
    <published>2017-05-03T13:51:23.000Z</published>
    <updated>2017-05-10T13:29:36.467Z</updated>
    
    <content type="html"><![CDATA[<p>内容提供器(Content Provider)是Android实现跨程序共享数据的标准方式。</p>
<h2 id="运行时权限">运行时权限</h2><h3 id="Android权限机制">Android权限机制</h3><p>为了安全，Android6.0后引入了新特性，让APP申请的权限用户可控，Android的权限分为了两类：1. 普通权限，2.危险权限。危险权限一共有9组24个权限。<br><a id="more"></a></p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/android_permission.jpg" alt="Android danger permission"></p>
<p>权限详情参考：<a href="http://developer.android.com/reference/android/Manifest.permission.html" target="_blank" rel="external">官网权限介绍</a>。</p>
<h3 id="程序运行时申请权限">程序运行时申请权限</h3><p>以CALL_PHONE为例来说明。定义触发打电话的逻辑：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_CALL);</span><br><span class="line">intent.setData(Uri.parse(<span class="string">"tel:10086"</span>));</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure></p>
<p>在AndroidMainifest.xml中声明权限：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.CALL_PHONE"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这样声明的APP运行在6.0及以上的版本则会报错，要求在使用危险权限是都必须进行运行时权限处理。所以就得对触发打电话的逻辑进行修改：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 申请权限，处理打电话逻辑 &#123;</span><br><span class="line">	<span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">	    ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;Manifest.permission.CALL_PHONE&#125;,<span class="number">1</span>); <span class="comment">// 申请授权</span></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	    call(); <span class="comment">// 已授权，CALL</span></span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_CALL);</span><br><span class="line">        intent.setData(Uri.parse(<span class="string">"tel:911"</span>));</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SecurityException e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//super.onRequestPermissionsResult(requestCode, permissions, grantResults);</span></span><br><span class="line">    <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                call();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"You denied the permission!"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="访问其他程序中数据">访问其他程序中数据</h2><h3 id="ContentResolver基本用法">ContentResolver基本用法</h3><p>ContentResolver类的实例可以通过Context的getContentResolver()获取。其提供了一系列方法用CRUD操作。ContentResolver中的增删改查方法接收一个Uri参数，其唯一标识符有两部分组成：authority和path。为了避免冲突一般用authority用包名，path对应用程序中的表进行区分。如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># content://authority/path</span></span><br><span class="line">content://com.example.app.provider/table1</span><br><span class="line">content://com.example.app.provider/table2</span><br></pre></td></tr></table></figure></p>
<p>解析：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uri uri = Uri.parse(<span class="string">"content://authority/path"</span>)</span><br></pre></td></tr></table></figure></p>
<p>查询：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询</span><br><span class="line">Cursor cursor = getContentResolver().query(uri,projection,selecton,selectionArgs,sortOrder);</span><br></pre></td></tr></table></figure></p>
<p>ContentResolver的查询方法参数解释如下：<br>|参数|对应SQL部分|描述|<br>|:——:|:—:|—|<br>|uri|from table_name|指定查询某应用程序下一张表|<br>|projection|select column1,column2|指定查询的列名|<br>|selection|where column=value|指定where条件|<br>|selectionArgs|-|为where重占位符提供值|<br>|orderBy|order by column1,column2|指定查询结果排序方式<br>获取到Cursor对象后，就能方便取出数据了：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(cursor=!<span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span>(cursor.moveToNext()) &#123;</span><br><span class="line">        String column1 = cursor.getString(cursor.getColumnIndex(<span class="string">"column1"</span>));</span><br><span class="line">        <span class="keyword">int</span> column2 = cursor.geteInt(...);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>增改删：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 增加</span><br><span class="line">ContentValues value = newContentValues();</span><br><span class="line">values.put(<span class="string">"column1"</span>,<span class="string">"text"</span>);</span><br><span class="line">values.put(<span class="string">"column2"</span>,<span class="number">1</span>);</span><br><span class="line">getContentResolver().insert(uri, values);</span><br><span class="line"></span><br><span class="line">#更新</span><br><span class="line">values.put(<span class="string">"column1"</span>,<span class="string">""</span>);</span><br><span class="line">getContentResolver().update(uri, values,<span class="string">"column1 = ? and column2 = ?"</span>,<span class="keyword">new</span> String [] &#123;<span class="string">"text"</span>, <span class="string">"1"</span>&#125;);</span><br><span class="line"></span><br><span class="line">#删除</span><br><span class="line"></span><br><span class="line">getContentResolver().delete(uri, <span class="string">"column2 = ?"</span>,<span class="keyword">new</span> String [] &#123;<span class="string">"1"</span>&#125;);</span><br></pre></td></tr></table></figure></p>
<h3 id="读取系统联系人">读取系统联系人</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 判断权限</span><br><span class="line"><span class="keyword">if</span>(ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.READ_CONTACTS）!= PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">    ActivityCompat.requestPermisssions(<span class="keyword">this</span>,<span class="keyword">new</span> String []&#123;Mainest.permission.READ_CONTACTS&#125;,<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    readContacts();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onRequestPermissionsResult&#123;</span><br><span class="line">    <span class="keyword">switch</span>(requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">         <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">             readContacts();</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">         <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 读取共享数据</span><br><span class="line">Cursor cursor = getContentResolver().qurey(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">if</span> (cursor != <span class="keyword">null</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">        String name = cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));</span><br><span class="line">        String number = cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));</span><br><span class="line">        contactLists.add(name+<span class="string">"\n"</span>+number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后需要加上读取联系人权限，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.READ_CONTACTS"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="创建内容提供器">创建内容提供器</h2><h3 id="创建步骤">创建步骤</h3><p>首先需要实现一个类继承ContentProvider，重写6个抽象方法，一个重要参数就是Uri，URI还可以在前面所描述的组成后面加上一个id，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">content://authority/path/id // 访问指定表中指定id的数据，不指定id时就访问所以数据</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以用通配符来匹配id</span></span><br><span class="line">* - 匹配任意长度字符</span><br><span class="line"><span class="comment"># - 匹配任意长度数字</span></span><br></pre></td></tr></table></figure></p>
<p>另外，其中比较特殊的getType()用于获取uri对象对应的MIME类型，其格式要求如下：</p>
<ul>
<li>内容以路径结尾：vnd.android.cursor.dir/vnd.<authority>.<path></path></authority></li>
<li>内容以id结尾：vnd.android.cursor.item/vnd.<authority>.<path></path></authority></li>
</ul>
<p>一个完整的内容提供器实例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatabaseProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOOK_DIR = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOOT_ITEM = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CATEGORY_DIR = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CATEGORY_ITEM = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY = <span class="string">"com.lee.databasetest.provider"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> UriMatcher uriMatcher;</span><br><span class="line">    <span class="keyword">private</span> MyDataBaseHelper helper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        uriMatcher = <span class="keyword">new</span> UriMatcher(UriMatcher.NO_MATCH);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"book"</span>,BOOK_DIR);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"book/#"</span>,BOOT_ITEM);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"category"</span>,CATEGORY_DIR);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"category/#"</span>,CATEGORY_ITEM);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DatabaseProvider</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Implement this to handle requests to delete one or more rows.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Implement this to handle requests for the MIME type of the data</span></span><br><span class="line">        <span class="comment">// at the given URI.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Uri <span class="title">insert</span><span class="params">(Uri uri, ContentValues values)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = helper.getWritableDatabase();</span><br><span class="line">        Uri uriReturn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">            <span class="keyword">case</span> BOOT_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newBookId = db.insert(<span class="string">"Book"</span>, <span class="keyword">null</span>, values);</span><br><span class="line">                uri = Uri.parse(<span class="string">"content://"</span>+AUTHORITY+<span class="string">"/book/"</span>+newBookId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newCategoryId = db.insert(<span class="string">"Category"</span>, <span class="keyword">null</span>, values);</span><br><span class="line">                uri = Uri.parse(<span class="string">"content://"</span>+AUTHORITY+<span class="string">"/category"</span>+newCategoryId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Implement this to initialize your content provider on startup.</span></span><br><span class="line">        helper = <span class="keyword">new</span> MyDataBaseHelper(getContext(),<span class="string">"book.db"</span>,<span class="keyword">null</span>,<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cursor <span class="title">query</span><span class="params">(Uri uri, String[] projection, String selection,</span><br><span class="line">                        String[] selectionArgs, String sortOrder)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = helper.getReadableDatabase();</span><br><span class="line">        Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span>  BOOK_DIR:</span><br><span class="line">                cursor = db.query(<span class="string">"Book"</span>, projection,selection,selectionArgs,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOT_ITEM:</span><br><span class="line">                String bookId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                cursor = db.query(<span class="string">"Book"</span>, projection,<span class="string">"id = ?"</span>,<span class="keyword">new</span> String[]&#123;bookId&#125;,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                cursor = db.query(<span class="string">"Category"</span>, projection,selection,selectionArgs,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                String categoryId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                cursor = db.query(<span class="string">"Category"</span>,projection,<span class="string">"id = ?"</span>, <span class="keyword">new</span> String[]&#123;categoryId&#125;,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cursor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Uri uri, ContentValues values, String selection,</span><br><span class="line">                      String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Implement this to handle requests to update one or more rows.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>更多代码见：<a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter7/DataBaseTest/app/src/main/java/com/example/lee/databasetest" target="_blank" rel="external">跨程序数据共享实例</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内容提供器(Content Provider)是Android实现跨程序共享数据的标准方式。&lt;/p&gt;
&lt;h2 id=&quot;运行时权限&quot;&gt;运行时权限&lt;/h2&gt;&lt;h3 id=&quot;Android权限机制&quot;&gt;Android权限机制&lt;/h3&gt;&lt;p&gt;为了安全，Android6.0后引入了新特性，让APP申请的权限用户可控，Android的权限分为了两类：1. 普通权限，2.危险权限。危险权限一共有9组24个权限。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之数据存储</title>
    <link href="http://huaqianlee.github.io/2017/04/29/FirstCode/FirstCode-data-storage/"/>
    <id>http://huaqianlee.github.io/2017/04/29/FirstCode/FirstCode-data-storage/</id>
    <published>2017-04-29T10:35:49.000Z</published>
    <updated>2017-05-10T13:29:33.757Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件存储">文件存储</h2><h3 id="数据存到文件">数据存到文件</h3><p>Context类提供了一个openFileOutput()方法，可以用于文件存储，此方法有两个参数：</p>
<ul>
<li>arg1 - 文件名，不包括路径，全默认存储于/data/data/<packagename>/files/</packagename></li>
<li>arg2 - 文件操作模式， MODE_PRIVATE（覆盖式）和 MODE_APPEND（追加式）<a id="more"></a> 
</li>
</ul>
<p>如下是一个简短示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    FileOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">    BufferedWriter writer = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        out = openFileOutput(<span class="string">"data"</span>, Context.MODE_PRIVATE);</span><br><span class="line">        writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(out));</span><br><span class="line">        writer.write(<span class="string">"the content"</span>);</span><br><span class="line">    &#125; ... <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(wirter != <span class="keyword">null</span>)</span><br><span class="line">            writer.close();</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="从文件中读取数据">从文件中读取数据</h3><p>Context类提供了一个openFileInput()方法，用于从文件读取数据，简例如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public String <span class="function"><span class="title">load</span></span>() &#123;</span><br><span class="line">    FileInputStream <span class="keyword">in</span> = null;</span><br><span class="line">    BufferedReader reader = null;</span><br><span class="line">    StringBuilder content = new StringBuilder();</span><br><span class="line">    try &#123;</span><br><span class="line">        <span class="keyword">in</span> = openFileInput(<span class="string">"data"</span>);</span><br><span class="line">        reader = new BufferedReader(new InputStreamReader(<span class="keyword">in</span>));</span><br><span class="line">        String line = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">while</span>((line = reader.readLine()) != null) &#123;</span><br><span class="line">            content.append(line);</span><br><span class="line">        &#125;...finally &#123;</span><br><span class="line">            <span class="keyword">if</span>(reader != null) &#123;</span><br><span class="line">                reader.close();</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> content.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断字符是否为空的一个方式</span></span><br><span class="line">TextUtils.isEmpty(string)</span><br></pre></td></tr></table></figure></p>
<h2 id="SharedPreferences存储">SharedPreferences存储</h2><h3 id="将数据存储到SharedPreferences中">将数据存储到SharedPreferences中</h3><p>SharedPreferences是通过键值对的方式存储，Android中获取SharedPreferences对象的三种方法：</p>
<ol>
<li><p>Context类中的getSharedPreferences()方法。</p>
<ul>
<li>arg1: SharedPreferences文件名，<strong>存于：/data/data/<package_name>/shared_prefs/</package_name></strong></li>
<li>arg2: 操作模式，只有MODE_PRIVATE一种方式，传入0也一样的效果，其余皆被废弃</li>
</ul>
</li>
<li><p>Activity中的getPreferences()方法。</p>
<ul>
<li>一个参数：操作模式，自动以类名命名文件</li>
</ul>
</li>
<li><p>PreferenceManager类中的getDefaultSharedPreferences()静态方法，</p>
<ul>
<li>接收Context参数，自动用包名为前缀命名文件 </li>
</ul>
</li>
</ol>
<p>获取了SharedPreferences对象后， 就可以存储数据了，主要分三步实现：</p>
<ul>
<li><p><strong>step1</strong>：通过SharedPreferences对象的edit()方法获取SharedPreferences.Editor对象</p>
</li>
<li><p><strong>step2</strong>：通过putXxx()方法向SharedPreferences.Editor对象添加数据</p>
</li>
<li><p><strong>step3</strong>：调用apply()方法提交数据，完成数据存储。</p>
</li>
</ul>
<p>一个存储的简单书写方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences.Editor editor = getSharedPreferences(<span class="string">"data"</span>,MODE_PRIVATE).edit();</span><br><span class="line">editor.putString(<span class="string">"name"</span>,<span class="string">"andy"</span>);</span><br><span class="line">editor.putInt(<span class="string">"age"</span>,)</span><br><span class="line">editor.putBoolean(<span class="string">"married"</span>,<span class="keyword">true</span>);</span><br><span class="line">editor.apply();</span><br></pre></td></tr></table></figure></p>
<h3 id="从SharedPreferences中读取数据">从SharedPreferences中读取数据</h3><p>读取数据的方式十分简单，得到SharedPreferences对象后通过getX()方法即可获取到数据。getX()方法有两个参数：</p>
<ul>
<li>arg1：key值</li>
<li>arg2：当通过key值找不到内容时的默认值</li>
</ul>
<h2 id="SQLite数据库存储">SQLite数据库存储</h2><p>SQL的数据类型：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">integer：整型</span><br><span class="line">real：浮点型</span><br><span class="line">text：文本类型</span><br><span class="line">blob：二进制</span><br><span class="line"># 一些其他关键字</span><br><span class="line">primary key：设为主键</span><br><span class="line">autoincrement：自增长</span><br></pre></td></tr></table></figure></p>
<p>一个关键的抽象类SQLiteOpenHelper及其两个实例方法：<br><strong>getReadableDatabase()</strong> 和 <strong>getWritableDatabase()</strong>。两个方法都能创建或打开数据库，不过当数据不可写入是，getWritableDatabase()将报异常。</p>
<h3 id="创建数据库及CRUD操作">创建数据库及CRUD操作</h3><p>要使用SQLite，首先需要实现SQLiteOpenHelper抽象类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_BOOK = <span class="string">"create table Book ("</span> +</span><br><span class="line">            <span class="string">"id integer primary key autoincrement,"</span> +</span><br><span class="line">            <span class="string">"author text,"</span> +</span><br><span class="line">            <span class="string">"price real,"</span> +</span><br><span class="line">            <span class="string">"pages integer,"</span> +</span><br><span class="line">            <span class="string">"name text)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_CATEGORY = <span class="string">"create table Category ("</span> +</span><br><span class="line">            <span class="string">"id integer primary key autoincrement,"</span> +</span><br><span class="line">            <span class="string">"category_name text,"</span> +</span><br><span class="line">            <span class="string">"category_code integer)"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context mcontext;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDataBaseHelper</span><span class="params">(Context context, String name, SQLiteDatabase.CursorFactory factory, <span class="keyword">int</span> version)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, name, factory, version);</span><br><span class="line">        mcontext = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="comment">/*创建数据库*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class="line">        db.execSQL(CREATE_BOOK);</span><br><span class="line">        db.execSQL(CREATE_CATEGORY);</span><br><span class="line">        Toast.makeText(mcontext, <span class="string">" Created succeeded!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*升级数据库*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line">        db.execSQL(<span class="string">"drop table if exists Book"</span>);</span><br><span class="line">        db.execSQL(<span class="string">"drop table if exists Category"</span>);</span><br><span class="line">        onCreate(db);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>有了这类之后，就可以进行CRUD操作了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#c-create r-retrieve(查询) u-update d-delete</span><br><span class="line"><span class="keyword">final</span> MyDataBaseHelper helper = <span class="keyword">new</span> MyDataBaseHelper(<span class="keyword">this</span>, <span class="string">"BookStore.db"</span>, <span class="keyword">null</span>, <span class="number">1</span>); <span class="comment">// 1 为数据库版本号， 当升级数据库的时候需更新</span></span><br><span class="line"><span class="comment">// 创建数据库</span></span><br><span class="line">SQLiteDatabase db = helper.getWritableDatabase();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加数据</span></span><br><span class="line">ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">values.put(<span class="string">"name"</span>, <span class="string">"Just for fun"</span>);</span><br><span class="line">...</span><br><span class="line">db.insert(<span class="string">"Book"</span>, <span class="keyword">null</span>, values);</span><br><span class="line"><span class="comment">// 更新数据</span></span><br><span class="line">values.put(<span class="string">"price"</span>,<span class="number">1000</span>);</span><br><span class="line">db.update(<span class="string">"Book"</span>, values,<span class="string">"name=?"</span>,<span class="keyword">new</span> String[]&#123;<span class="string">"Just for fun"</span>&#125;);</span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line">db.delete(<span class="string">"Book"</span>,<span class="string">"price &lt; ?"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"100"</span>&#125;);</span><br><span class="line"><span class="comment">// 查询数据</span></span><br><span class="line">Cursor cursor = db.query(<span class="string">"Book"</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">if</span> (cursor.moveToFirst()) &#123;</span><br><span class="line">    do&#123;</span><br><span class="line">        String name = cursor.getString(cursor.getColumnIndex(<span class="string">"name"</span>));</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">while</span> (cursor.moveToNext());</span><br></pre></td></tr></table></figure></p>
<h3 id="直接使用SQL操作数据库">直接使用SQL操作数据库</h3><p>直接使用SQL来完成CRUD操作：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加数据</span></span><br><span class="line">db.execSQL(<span class="string">"insert into Book(name,author,pages,price) values(?,?,?,?)"</span>, new String&#123;<span class="string">"Just for fun"</span>,<span class="string">"Linus"</span>,<span class="string">"355"</span>,<span class="string">"99"</span>&#125;);</span><br><span class="line"><span class="comment"># 更新数据</span></span><br><span class="line">de.execSQL(<span class="string">"update Book set price =? where name = ?"</span>,new String[]&#123;<span class="string">"88"</span>,<span class="string">"Just for fun"</span>);</span><br><span class="line"><span class="comment"># 删除数据</span></span><br><span class="line">db.execSQL(<span class="string">"delete from Book where pages &gt; ?"</span>, new String[]&#123;<span class="string">"300"</span>&#125;);</span><br><span class="line"><span class="comment"># 查询数据</span></span><br><span class="line">db.rawQuery(<span class="string">"select * from Book"</span>,null);</span><br></pre></td></tr></table></figure></p>
<h3 id="命令查看数据库">命令查看数据库</h3><p>连接上手机，adb shell进入终端：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#26597;&#30475;&#25968;&#25454;&#24211;&#20013;&#30340;&#34920;&#10;.table   &#10;# &#26597;&#30475;&#24314;&#34920;&#35821;&#21477;&#10;.schema&#10;# &#26597;&#35810;&#35821;&#21477;&#10;select * from Book</span><br></pre></td></tr></table></figure></p>
<h2 id="使用开源LitePal操作数据库">使用开源LitePal操作数据库</h2><p>Litepal采用了对象关系映射(ORM)的模式，其地址：<a href="https://github.com/LitePalFramework/LitePal" target="_blank" rel="external">https://github.com/LitePalFramework/LitePal</a>。</p>
<h3 id="配置LitePal">配置LitePal</h3><p>要使用LitePal首先需要再app/build.gradle文件里添加依赖：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile <span class="string">'org.litepal.android:core:1.3.2'</span> <span class="comment"># 目前最新已经俩到1.5.1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来需要配置litepal.xml文件。需在app/src/main下新建assets/litepal.xml。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">litepal</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dbname</span> <span class="attribute">value</span>=<span class="value">"BookStore"</span>&gt;</span><span class="tag">&lt;/<span class="title">dbname</span>&gt;</span> # 指定数据库名</span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span> <span class="attribute">value</span>=<span class="value">"1"</span>&gt;</span><span class="tag">&lt;/<span class="title">version</span>&gt;</span> # 指定数据库版本号</span><br><span class="line">    <span class="tag">&lt;<span class="title">list</span>&gt;</span><span class="tag">&lt;/<span class="title">list</span>&gt;</span>  # 指定映射模型</span><br><span class="line"><span class="tag">&lt;/<span class="title">litepal</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>最后需要再AndroidMannifest.xml中做如下配置：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span></span><br><span class="line">        <span class="attribute">android:name</span>=<span class="value">"org.litepal.LitePalApplication"</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">    &gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>如果已经有了自己的application，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span></span><br><span class="line">        <span class="attribute">android:name</span>=<span class="value">"com.example.MyOwnApplication"</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">    &gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>可以通过如下方式实现让LitePal成功运行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyOwnApplication</span> <span class="keyword">extends</span> <span class="title">AnotherApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        LitePal.initialize(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="创建和升级数据库">创建和升级数据库</h3><p>为了创建一个Book表，先定义一个Book类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> <span class="keyword">extends</span> <span class="title">DataSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// generated getters and setters.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来将Book类添加到litepal.xml的映射模型列表中：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">mapping</span> <span class="attribute">class</span>=<span class="value">"com.example.litepaltest.Book"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">list</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>现在进行任意一次数据库操作，BookStore.db就会自动被创建出来：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Connector.getDataBase(); <span class="comment">// LitePal 的一个最简单数据库操作方法</span></span><br></pre></td></tr></table></figure></p>
<p>现在如若要向表中添加列等数据，只需要在Book类中添加一个字段即可。</p>
<h3 id="增删改查">增删改查</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加数据</span></span><br><span class="line">Book book = <span class="keyword">new</span> Book();</span><br><span class="line">book.setXx();</span><br><span class="line">book.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以存储对象更新数据</span></span><br><span class="line">book.setXx();</span><br><span class="line">book.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通用方式更新数据</span></span><br><span class="line">book.setPrice(<span class="number">14.95</span>);</span><br><span class="line">book.setPress(<span class="string">"Anchor"</span>);</span><br><span class="line">book.updateAll(<span class="string">"name=? and author = ?"</span>,<span class="string">"Just for fun"</span>,<span class="string">"Linus"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定数据更新为默认值</span></span><br><span class="line">book.setToDefault(<span class="string">"pages"</span>);</span><br><span class="line">book.updateAll();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line">DataSupport.deleteAll(Book.class, <span class="string">"price &lt; ?"</span>,<span class="string">"15"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询数据</span></span><br><span class="line">List&lt;Book&gt; books = DataSupport.findAll(Book.class);</span><br></pre></td></tr></table></figure>
<h3 id="更多方法">更多方法</h3><p><a href="https://github.com/LitePalFramework/LitePal" target="_blank" rel="external">https://github.com/LitePalFramework/LitePal</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文件存储&quot;&gt;文件存储&lt;/h2&gt;&lt;h3 id=&quot;数据存到文件&quot;&gt;数据存到文件&lt;/h3&gt;&lt;p&gt;Context类提供了一个openFileOutput()方法，可以用于文件存储，此方法有两个参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;arg1 - 文件名，不包括路径，全默认存储于/data/data/&lt;packagename&gt;/files/&lt;/li&gt;
&lt;li&gt;arg2 - 文件操作模式， MODE_PRIVATE（覆盖式）和 MODE_APPEND（追加式）
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>PX4之外设代码结构及流程-IMU</title>
    <link href="http://huaqianlee.github.io/2017/03/29/Uav/px4-imu-mpu9250-code-structure/"/>
    <id>http://huaqianlee.github.io/2017/03/29/Uav/px4-imu-mpu9250-code-structure/</id>
    <published>2017-03-29T14:08:54.000Z</published>
    <updated>2017-03-29T14:27:20.003Z</updated>
    
    <content type="html"><![CDATA[<p>最新PX4的代码库有很大的改变，使用了一个轻量级的、统一的驱动抽象层：DriverFramework。 POSIX和 QuRT的驱动都写入这个驱动框架当中。</p>
<p>本文以MPU9250为例简单分析一下外设的相关代码，其余外设亦相似的。</p>
<h2 id="代码结构及流程">代码结构及流程</h2><p>最新代码库中，MPU9250的代码结构及流程如下：</p>
<p> <img src="http://7xjdax.com1.z0.glb.clouddn.com/uav/px4/IMU_CODE_STR.png" alt="流程图"><br><a id="more"></a><br> sensor.cpp文件比较重要，Sensor数据的应用都要在此文件中实现，其中的主要方法如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/uav/px4/sensorcpp.jpg" alt="Sensor方法"></p>
<h2 id="附">附</h2><p>以前px4是可以直接通过外部的库访问外设，新版本保留了原代码架构，但不清楚是否应用，怎么应用，路径如下：</p>
<pre><code class="bash">-&gt; src\platforms\qurt\<span class="built_in">fc</span>_addon\
-&gt; xxx_lib.so
</code></pre>
<h2 id="经验之谈">经验之谈</h2><p>通过search搜关键字搜出内容太多时， 通过px4.config、mainapp.config等文件来筛选源代码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最新PX4的代码库有很大的改变，使用了一个轻量级的、统一的驱动抽象层：DriverFramework。 POSIX和 QuRT的驱动都写入这个驱动框架当中。&lt;/p&gt;
&lt;p&gt;本文以MPU9250为例简单分析一下外设的相关代码，其余外设亦相似的。&lt;/p&gt;
&lt;h2 id=&quot;代码结构及流程&quot;&gt;代码结构及流程&lt;/h2&gt;&lt;p&gt;最新代码库中，MPU9250的代码结构及流程如下：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/uav/px4/IMU_CODE_STR.png&quot; alt=&quot;流程图&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Uav" scheme="http://huaqianlee.github.io/categories/Uav/"/>
    
    
      <category term="PX4" scheme="http://huaqianlee.github.io/tags/PX4/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之广播机制</title>
    <link href="http://huaqianlee.github.io/2017/03/25/FirstCode/FirstCode-Broadcast-Receiver/"/>
    <id>http://huaqianlee.github.io/2017/03/25/FirstCode/FirstCode-Broadcast-Receiver/</id>
    <published>2017-03-25T13:06:00.000Z</published>
    <updated>2017-05-10T13:29:43.618Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="广播机制">广播机制</h2><h3 id="标准广播">标准广播</h3><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/normal_broadcasts.png" alt="normal_broadcast"><br><a id="more"></a></p>
<h3 id="有序广播">有序广播</h3><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/ordered_broadcast.png" alt="ordered_broadcast"></p>
<h2 id="接收系统广播">接收系统广播</h2><h3 id="动态注册监听网络变化">动态注册监听网络变化</h3><p>通过内部类创建广播接收器，实现动态监听网络广播的代码。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IntentFilter intentFilter;</span><br><span class="line">    <span class="keyword">private</span> NetworkChangeReceiver networkChangeReceiver;</span><br><span class="line">    </span><br><span class="line">    oncreate() &#123;</span><br><span class="line">        ...</span><br><span class="line">        intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        intetFilter.addAction(<span class="string">"android.net.conn.CONNECTIVITY_CHANGE"</span>);</span><br><span class="line">        networkChangeReceiver = <span class="keyword">new</span> NetworkChangeReceiver();</span><br><span class="line">        registerReceiver(newworkChangeReceiver, intentFilter);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    onDestory() &#123;</span><br><span class="line">        ...</span><br><span class="line">        unregisterReceiver(networkChangeReceiver);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    clss NetworkChangeReceiver extends BroadcastReceiver &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span></span>&#123;</span><br><span class="line">            ConnectivityManager manager =(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);</span><br><span class="line">            NetworkInfo networkInfo = manager.getActiveNetworkInfo();</span><br><span class="line">            <span class="keyword">if</span>(networkInfo != <span class="keyword">null</span> &amp;&amp; networkInfo.isAvailable())&#123;&#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>AndroidManifest.xml中添加权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.ACCES_NETWORK_STATE"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="静态注册实现开机启动">静态注册实现开机启动</h3><p>新建BootCompletReceiver来作为广播接收器，通过AS自动创建时两个注意选项：Enable-启用，Exported-接收本程序外的广播。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Public <span class="class"><span class="keyword">class</span> <span class="title">BootCompletReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>AndroidManiest.xml自动完成注册， 四大组件皆需要注册</p>
</blockquote>
<p>AndroidManiest.xml中静态注册。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;receiver</span><br><span class="line">    ...</span><br><span class="line">    &lt;intent-filter&gt;</span><br><span class="line">        &lt;action android:name=<span class="string">"android.intent.action.BOOT_COMPLETED"</span>/&gt;</span><br><span class="line">    &lt;/intent-filter&gt;</span><br><span class="line">&lt;/receiver&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="自定义广播">自定义广播</h2><h3 id="标准广播-1">标准广播</h3><p>新建广播接收器MyBroadcastReceiver。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Public <span class="class"><span class="keyword">class</span> <span class="title">MyBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>注册修改接收器信息。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;receiver</span><br><span class="line">    ...</span><br><span class="line">    &lt;intent-filter&gt;</span><br><span class="line">        &lt;action android:name=<span class="string">"com.lee.broadcasttest.MY_BROADCAST"</span>/&gt;</span><br><span class="line">    &lt;/intent-filter&gt;</span><br><span class="line">&lt;/receiver&gt;</span><br></pre></td></tr></table></figure></p>
<p>发送广播：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.lee.broadcasttest.MY_BROADCAST"</span>);</span><br><span class="line">sendBroadcast(intent);</span><br></pre></td></tr></table></figure></p>
<h3 id="有序广播-1">有序广播</h3><p>发送有序广播：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.lee.broadcasttest.MY_BROADCAST"</span>);</span><br><span class="line">sendOrderedBroadcast(intent, <span class="keyword">null</span>); <span class="comment">// arg2:权限相关</span></span><br></pre></td></tr></table></figure></p>
<p>广播接收器优先级设置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter android:priority=<span class="string">"100"</span>&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>优先级高的接收器截断广播：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onReceive() &#123;</span><br><span class="line">    ...</span><br><span class="line">    abortBroadcast();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="使用本地广播">使用本地广播</h2><p>前面的广播方式属于全局广播，存在安全问题，使用本地广播就能避免安全问题。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">MainActivity &#123;</span><br><span class="line">    <span class="keyword">private</span> LocalReceiver localReceiver;</span><br><span class="line">    <span class="keyword">private</span> LocalBroadcastReceiver localBroadcastReceiver;</span><br><span class="line">    </span><br><span class="line">    onCreate()&#123;</span><br><span class="line">        localBroadcastManager = LocalBroadcastManager.getInstance(<span class="keyword">this</span>);<span class="comment">//获取实例</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 按键发送广播</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.lee.broadcasttest.LOCAL_BROADCAST"</span>);</span><br><span class="line">        localBroadcastManager.sendBroadcast(intent);<span class="comment">// 发送本地广播</span></span><br><span class="line">        </span><br><span class="line">        intentFilter.addAction(<span class="string">"com.lee.broadcasttest.LOCAL_BROADCAST"</span>);</span><br><span class="line">        localReceiver = <span class="keyword">new</span> LocalReceiver();</span><br><span class="line">        localBroadcastManager.registerReceiver(localReceiver, intentFilter); <span class="comment">//注册本地广播监听器</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    onDestory() &#123;</span><br><span class="line">        localBroadcastManager.unregisterReceiver(localReceiver, intentFilter); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">LocalReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">        onReceiver()&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>本地广播除了安全还有一个优势，效率更高。</p>
</blockquote>
<h2 id="实现强制下线功能">实现强制下线功能</h2><p>实现关闭所有活动的功能，创建管理所有活动的类ActivityCollector。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActivityCollector</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Activity&gt; activities = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">addActivity</span><span class="params">(Activity activity)</span></span>&#123;</span><br><span class="line">        activities.add(activity);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">removeActivity</span><span class="params">(Activity activity)</span></span>&#123;</span><br><span class="line">        activities.remove(activity);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="title">finishAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(Activity activity: activities) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!activity.isFinishing()) &#123;</span><br><span class="line">                activity.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>创建所有活动的父类BaseActivity：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    oncreate()&#123;</span><br><span class="line">        ActivityCollector.addActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    onDestory()&#123;</span><br><span class="line">        ActivityCollector.removeActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>新建LoginActivity，设计布局文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout</span><br><span class="line">    &lt;LinearLayout &lt;TextView/&gt; &lt;EditText/&gt; &lt;/LinearLayout&gt;    </span><br><span class="line">    &lt;LinearLayout &lt;TextView/&gt; &lt;EditText/&gt; &lt;/LinearLayout&gt;  </span><br><span class="line">    &lt;Button <span class="string">"Login"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>LonginAcitivty中实现登录代码。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(account.equals(<span class="string">"xxx"</span>) &amp;&amp; password.equarls(<span class="string">"xxx"</span>)) &#123;</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(LoginActivity.<span class="keyword">this</span>, MainActivity.class);</span><br><span class="line">    startActivity(intent);</span><br><span class="line">    finish();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现强制下线活动，简单设计一个Button触发强制下线。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span> </span>&#123;</span><br><span class="line">    onClick()&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.lee.demo.FORCE_OFFLINE"</span>);</span><br><span class="line">        startBroadcast(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>由于广播接收器需要弹出一个对话框阻止用户继续操作(不能静态注册方式)，然后接收器也得在所有活动中生效，所以在BaseActivity中动态注册广播接收器。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">BaseActivity &#123;</span><br><span class="line">    <span class="keyword">private</span> ForceOfflineReceiver reicerver;</span><br><span class="line">    </span><br><span class="line">    onResume()&#123;</span><br><span class="line">        IntentFilter intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        intentFilter.addAction(<span class="string">"com.lee.demo.FORCE_OFFLINE"</span>);</span><br><span class="line">        receiver = <span class="keyword">new</span> ForceOfflineReciever();</span><br><span class="line">        registerReceiver(receiver, IntentFilter);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    onPause()&#123;</span><br><span class="line">        <span class="keyword">if</span>(receiver != <span class="keyword">null</span>)&#123;</span><br><span class="line">            unregisterReceiver(receiver);</span><br><span class="line">            receiver = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ForceOfflineReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">        onReceive(<span class="keyword">final</span> Context context, Intent intent)&#123;</span><br><span class="line">            AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(context);</span><br><span class="line">            builder.setTiltle(<span class="string">""</span>);</span><br><span class="line">            builder.setMessage(<span class="string">""</span>);</span><br><span class="line">            builder.setCancelable(<span class="keyword">false</span>); <span class="comment">// 对话框设置为不可取消，否则用户按一下返回键又可继续使用程序了</span></span><br><span class="line">            builder.setPositiveButton(<span class="string">"ok"</span>,<span class="keyword">new</span> DialogInterface.OnclickListener()&#123;</span><br><span class="line">                onclick()&#123;</span><br><span class="line">                    ActivityCollector.finishAll();</span><br><span class="line">                    Intent intent = <span class="keyword">new</span> Intent(context, LoginActivity.class);</span><br><span class="line">                    context.startActivity(intent);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            builder.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>不过，还有一个遗漏需要处理，即将LoginActivity设为主活动。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;action android:name=<span class="string">"android.intent.action.MAIN"</span>/&gt;</span><br><span class="line">    &lt;category android:name=<span class="string">"android.intent.category.LAUNCHER"</span>/&gt;</span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;广播机制&quot;&gt;广播机制&lt;/h2&gt;&lt;h3 id=&quot;标准广播&quot;&gt;标准广播&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/normal_broadcasts.png&quot; alt=&quot;normal_broadcast&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>PX4 for Snapdragon Flight</title>
    <link href="http://huaqianlee.github.io/2017/03/25/Uav/PX4-for-Snapdragon-Flight/"/>
    <id>http://huaqianlee.github.io/2017/03/25/Uav/PX4-for-Snapdragon-Flight/</id>
    <published>2017-03-25T11:45:25.000Z</published>
    <updated>2017-04-11T23:17:20.519Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>公司刚好有基于8074的无人机主板,虽然与官方snapdragon board有些差异,但也差不多,本文就是自己在此板上跑px4的阶段笔记,写的比较简单粗糙. </p>
</blockquote>
<h1 id="快速驱动无人机升空">快速驱动无人机升空</h1><p>主要通过PX4+QGroundcontrol+DX9的方式，手机APP+Qgroundcontrol+DX9也类似,只是将遥控器换成了APP(Android版地址: <a href="https://github.com/ATLFlight/drone-controller" target="_blank" rel="external">DroneControl</a>)，准备好环境，有问题主要参考如下三个地址：</p>
<p><a href="https://github.com/ATLFlight/ATLFlightDocs/blob/master/PX4.md#stable-releases" target="_blank" rel="external">PX4编译和执行</a></p>
<p><a href="https://dev.px4.io" target="_blank" rel="external">PX4开发手册</a></p>
<p><a href="https://donlakeflyer.gitbooks.io/qgroundcontrol-developers-guide/content/" target="_blank" rel="external">QGroundcontrol开发手册</a></p>
<h2 id="连接无人机">连接无人机</h2><p>首先PC通过WiFi连上无人机，通过xshell或者putty ssh远程登录无人机。</p>
<a id="more"></a>
<h2 id="运行PX4">运行PX4</h2><p>执行命令./px4 mainapp.config ，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@linaro-developer:/home/linaro<span class="comment"># ./px4 mainapp.config </span></span><br><span class="line">sh: <span class="number">1</span>: cannot create /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor: Directory nonexistent</span><br><span class="line">commands file: mainapp.config</span><br><span class="line"></span><br><span class="line">______  __   __    ___ </span><br><span class="line">| ___ \ \ \ / /   /   |</span><br><span class="line">| |_/ /  \ V /   / /| |</span><br><span class="line">|  __/   /   \  / /_| |</span><br><span class="line">| |     / /^\ \ \___  |</span><br><span class="line">\_|     \/   \/     |_/</span><br><span class="line"></span><br><span class="line">px4 starting.</span><br><span class="line"></span><br><span class="line">INFO  [sdlog2] [blackbox] /root/<span class="built_in">log</span>/sess018</span><br><span class="line">INFO  [sdlog2] [blackbox] recording: <span class="built_in">log</span>001.px4<span class="built_in">log</span></span><br><span class="line">INFO  [dataman] Unkown restart, data manager file <span class="string">'/home/linaro/dataman'</span> size is <span class="number">47640</span> bytes</span><br><span class="line">INFO  [mavlink] mode: Normal, data rate: <span class="number">1000000</span> B/s on udp port <span class="number">14556</span> remote port <span class="number">14550</span></span><br><span class="line">Sleeping <span class="keyword">for</span> <span class="number">1</span> s; (<span class="number">1000000</span> us).</span><br><span class="line">pxh&gt; INFO  [mavlink] using network interface wlan0, IP: <span class="number">192.168</span>.<span class="number">1.1</span></span><br><span class="line">INFO  [mavlink] with broadcast IP: <span class="number">192.168</span>.<span class="number">1.255</span></span><br><span class="line"></span><br><span class="line">pxh&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="运行QGroundcontrol">运行QGroundcontrol</h2><h3 id="启动QGroundcontrol">启动QGroundcontrol</h3><p>我们使用的Snapdragon板好像只能支持QGroundControl V2.7.1 （<a href="http://pan.baidu.com/s/1sl2fXhF" target="_blank" rel="external">QGroundControl-V2.7.1下载</a>），启动QGroundcontrol。<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/start_qground.jpg" alt="lanuch"></p>
<h3 id="连接无人机-1">连接无人机</h3><ol>
<li><p>File &gt; Settings &gt; CommLinks<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/com_link1.jpg" alt=""></p>
</li>
<li><p>点击ADD 添加新的远端连接<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/com_link2.jpg" alt=""></p>
</li>
<li><p>点击ADD 添加目标主机<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/com_link3.jpg" alt=""></p>
</li>
<li><p>完成，如下<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/com_link.jpg" alt=""></p>
</li>
<li><p>连接无人机，就在上一界面点击connect或者到主界面右上角点击connect连接<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/connect.jpg" alt=""></p>
</li>
</ol>
<h3 id="连接遥控器">连接遥控器</h3><ol>
<li><p>File &gt; Settings &gt; Controllers<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/controller.jpg" alt=""></p>
</li>
<li><p>Enable controllers, 选择相应遥控器，设为Manual，并进行校准，如下<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/controller1.jpg" alt=""></p>
</li>
</ol>
<h3 id="机身设置及校准">机身设置及校准</h3><p>进入setup界面，根据提示进行设置校准，完成后项目将显示绿色小圆点或者边框，我使用的板子POWER部分不能校准成功，如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/setup_ok.jpg" alt=""></p>
<h3 id="控制起飞">控制起飞</h3><ol>
<li><p>点击 ARM SYSTEM 起桨，可通过遥控器控制<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/fly.jpg" alt="take_off"></p>
</li>
<li><p>点击 DISARM SYSTEM 停桨<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/fly_end.png" alt="land"></p>
</li>
</ol>
<h3 id="分析">分析</h3><p>Analyze界面可以实时挂载mavilink数据包等信息</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/analyze.jpg" alt="data"></p>
<h3 id="打开自己想要的窗口">打开自己想要的窗口</h3><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/tool_qg.jpg" alt="window"></p>
<h1 id="快速支持MPU6500">快速支持MPU6500</h1><p>PX4代码默认支持mpu9250，如若想直接支持行空所使用的mpu6500,可对MPU9250.hpp文件做如下修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路径：Firmware\src\lib\DriverFramework\drivers\mpu9250\MPU9250.hpp</span></span><br><span class="line"><span class="comment">#define MPU_WHOAMI_9250			0x70 //0x71   modified by lihuaqian</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>不过这样修改的话需要自己重新移植地磁驱动</p>
</blockquote>
<p>如若出现温度异常，需要临时修改可以测试的话，可以做如下类似修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">if</span> (fabsf(temp_c - _last_temp_c) &gt; <span class="number">2.0</span>f) &#123;</span><br><span class="line"><span class="keyword">if</span> (fabsf(temp_c - _last_temp_c) &gt; <span class="number">30.0</span>f) &#123; //modified by lihuaqian <span class="keyword">for</span> debug</span><br></pre></td></tr></table></figure></p>
<h1 id="测试马达">测试马达</h1><h2 id="修改CODE">修改CODE</h2><p>PX4代码中有测试马达的代码，不过需要做如下小小修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#路径： Firmware\src\examples\hwtest\hwtest.c</span></span><br><span class="line">...</span><br><span class="line">actuators.timestamp = hrt_absolute_time();</span><br><span class="line">+ orb_publish(ORB_ID(actuator_armed), arm_pub_ptr, &amp;arm); //added by lihuaqian</span><br><span class="line">orb_publish(ORB_ID(actuator_controls_0), actuator_pub_ptr, &amp;actuators);</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>注：同路径下的CMakeLists.txt，添加模块和执行命令</p>
</blockquote>
<h2 id="修改CMAKE文件">修改CMAKE文件</h2><p>需要做如下修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Firmware\cmake\configs\posix_eagle_legacy_driver_default.cmake</span></span><br><span class="line">...</span><br><span class="line">platforms/posix/work_queue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># added start by lihuaqian</span></span><br><span class="line">examples/px4_simple_app</span><br><span class="line">examples/hwtest  // 添加马达测试module</span><br><span class="line">)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">#Firmware\cmake\configs\qurt_eagle_legacy_driver_default.cmake</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># FC_ADDON drivers</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">platforms/qurt/<span class="built_in">fc</span>_addon/rc_receiver</span><br><span class="line">platforms/qurt/<span class="built_in">fc</span>_addon/uart_esc // 若没有，需加上</span><br></pre></td></tr></table></figure></p>
<h2 id="运行马达测试程序">运行马达测试程序</h2><p>首先运行px4，然后输入ex_hwtest，则测试程序开始循环控制马达工作，如下：<br><figure class="highlight ruleslanguage"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">pxh&gt; ex_hwtest</span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] DO NOT FORGET <span class="keyword">TO</span> STOP THE DEFAULT CONTROL APPS!</span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] (run &lt;commander stop&gt;,)</span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] (    &lt;mc_att_control stop&gt; and)</span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] (    &lt;fw_att_control stop&gt; to do so)</span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] usage: http:<span class="comment">//px4.io/dev/examples/write_output</span></span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] Actuator armed</span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] count <span class="number">0</span></span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] count <span class="number">1</span></span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] count <span class="number">2</span></span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] count <span class="number">3</span></span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] count <span class="number">4</span></span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] count <span class="number">5</span></span><br><span class="line"><span class="keyword">WARN</span>  [ex_hwtest] count <span class="number">6</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>通过输入“help”， 可以查看支持哪些命令。</p>
</blockquote>
<h1 id="附">附</h1><p>参考路径：</p>
<p><a href="https://github.com/ATLFlight" target="_blank" rel="external">PX4 Github</a></p>
<p><a href="https://github.com/ATLFlight/ATLFlightDocs/blob/master/PX4.md#stable-releases" target="_blank" rel="external">PX4编译和执行</a></p>
<p><a href="https://dev.px4.io" target="_blank" rel="external">PX4开发手册</a></p>
<p><a href="https://donlakeflyer.gitbooks.io/qgroundcontrol-developers-guide/content/" target="_blank" rel="external">QGroundcontrol开发手册</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;公司刚好有基于8074的无人机主板,虽然与官方snapdragon board有些差异,但也差不多,本文就是自己在此板上跑px4的阶段笔记,写的比较简单粗糙. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;快速驱动无人机升空&quot;&gt;快速驱动无人机升空&lt;/h1&gt;&lt;p&gt;主要通过PX4+QGroundcontrol+DX9的方式，手机APP+Qgroundcontrol+DX9也类似,只是将遥控器换成了APP(Android版地址: &lt;a href=&quot;https://github.com/ATLFlight/drone-controller&quot;&gt;DroneControl&lt;/a&gt;)，准备好环境，有问题主要参考如下三个地址：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ATLFlight/ATLFlightDocs/blob/master/PX4.md#stable-releases&quot;&gt;PX4编译和执行&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dev.px4.io&quot;&gt;PX4开发手册&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://donlakeflyer.gitbooks.io/qgroundcontrol-developers-guide/content/&quot;&gt;QGroundcontrol开发手册&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;连接无人机&quot;&gt;连接无人机&lt;/h2&gt;&lt;p&gt;首先PC通过WiFi连上无人机，通过xshell或者putty ssh远程登录无人机。&lt;/p&gt;
    
    </summary>
    
      <category term="Uav" scheme="http://huaqianlee.github.io/categories/Uav/"/>
    
    
      <category term="PX4" scheme="http://huaqianlee.github.io/tags/PX4/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之UI</title>
    <link href="http://huaqianlee.github.io/2017/03/25/FirstCode/firstcode-note-UI/"/>
    <id>http://huaqianlee.github.io/2017/03/25/FirstCode/firstcode-note-UI/</id>
    <published>2017-03-25T00:34:40.000Z</published>
    <updated>2017-05-10T13:29:51.216Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<p>本部分思维导图如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/UI.png" alt="UI"><br><a id="more"></a></p>
<h2 id="常用控件">常用控件</h2><p>如下总结一些常用的参数配置或者方法，某些参数可能对于其它控件也适用。</p>
<h3 id="TextView">TextView</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:gravity - 指定文字对齐方式，用指定控件内容的位置。</span><br><span class="line">android:layout_gravity -  指定控件相对于父布局的位置。</span><br></pre></td></tr></table></figure>
<h3 id="Button">Button</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:textAllCaps=<span class="string">"false"</span> - 禁用Button字母自动大写转换</span><br></pre></td></tr></table></figure>
<h3 id="EditText">EditText</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:hint=<span class="string">""</span>    <span class="comment"># 提示内容</span></span><br><span class="line">android:maxLines=<span class="string">""</span> <span class="comment"># 输入框拉伸最大行数</span></span><br></pre></td></tr></table></figure>
<h3 id="ImageView">ImageView</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:src=<span class="string">""</span>  <span class="comment"># 参数配置图片资源</span></span><br><span class="line">imageView.setImageResource()  <span class="comment"># 动态设置图片资源</span></span><br></pre></td></tr></table></figure>
<h3 id="ProgressBar">ProgressBar</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数</span></span><br><span class="line">android:visibility=<span class="string">""</span>  <span class="comment"># 控件可见设置，不设的都默认可见</span></span><br><span class="line">android:max=<span class="string">""</span>  <span class="comment">#进度条最大值</span></span><br><span class="line">style=<span class="string">"?android:attr/progressBarStyleHorizontal"</span> <span class="comment"># 设置为水平进度条，默认是圆形进度条</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法</span></span><br><span class="line">progressBar.getvisibility()  <span class="comment"># 获取可见状态</span></span><br><span class="line">progressBar.setVisibility(View.VISIBLE/View.GONE) <span class="comment"># 动态设置可见状态</span></span><br><span class="line">progressBar.getProgress(); <span class="comment"># 获取进度</span></span><br><span class="line">progressBar.setProgress(int); <span class="comment"># 设置进度</span></span><br></pre></td></tr></table></figure>
<h3 id="AlertDialog">AlertDialog</h3><p>在当前界面弹出一个对话框，置于所有界面之上，能屏蔽其他控件的交互能力。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 弹出一个确认框</span><br><span class="line">AlertDialog.Builder dialog = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">dialog.setTile(<span class="string">""</span>);</span><br><span class="line">dialog.setMessage(<span class="string">""</span>);</span><br><span class="line">dialog.setCancelable(<span class="keyword">false</span>); # 不可通过Back键取消</span><br><span class="line">dialog.setPositiveButton(<span class="string">"OK"</span>,<span class="keyword">new</span> DialogInterface.onClickListener()&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;&#125;;</span><br><span class="line">&#125;);</span><br><span class="line">dialog.setNegativeButton(<span class="string">"Cancel"</span>,<span class="keyword">new</span> DialogInterface.onClickListener()&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;&#125;;</span><br><span class="line">&#125;);</span><br><span class="line">dialog.show();</span><br></pre></td></tr></table></figure></p>
<h3 id="ProgressDialog">ProgressDialog</h3><p>与AlertDialog类似，不过多一个进度条。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ProgressDialog dialog = <span class="keyword">new</span> ProgressDialog(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">dialog.setTitle(<span class="string">""</span>);</span><br><span class="line">dialog.setMessage(<span class="string">""</span>);</span><br><span class="line">dialog.setCancelable(<span class="keyword">true</span>);  # 可通过Back键取消</span><br><span class="line"># 如若传入<span class="keyword">false</span>，则需要再加载完成后调用ProgressDialog的dismiss()方法关闭对话框，否则对话框会一直存在</span><br><span class="line">dialog.show();</span><br></pre></td></tr></table></figure></p>
<h2 id="4种基本布局">4种基本布局</h2><p>布局与控件嵌套结构如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/layout_tool.jpg" alt="布局与控件"></p>
<h3 id="线性布局">线性布局</h3><p>只有LinearLayout支持 android:layout_weight属性，指定了此属性后控件大小即由其来决定，举个简单例子：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># widget1   </span></span><br><span class="line">android:layout_width = <span class="string">"0dp"</span></span><br><span class="line">android:layout_weight = <span class="number">1</span>   <span class="comment"># 此控件占用1/3空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#widget2</span></span><br><span class="line">android:layout_width = <span class="string">"0dp"</span></span><br><span class="line">android:layout_weight = <span class="number">2</span>  <span class="comment"># 此控件占用2/3空间</span></span><br></pre></td></tr></table></figure></p>
<h3 id="百分比布局">百分比布局</h3><blockquote>
<p>前不久好像看到文章讲此布局被弃用了</p>
</blockquote>
<p>此布局要使用需先引入依赖库，然后直接指定百分比。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/build.gradle</span></span><br><span class="line">compile  <span class="string">'com.android.support:percent:24.2.1'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  xxx.xml</span></span><br><span class="line">&lt;android.support.percent.PercentFrameLayout</span><br><span class="line">xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line"></span><br><span class="line">app:layout_widthPercent=<span class="string">"50%"</span>  <span class="comment"># 指定宽度为布局的50%</span></span><br><span class="line">app:layout_heightPercent=<span class="string">"50%"</span> <span class="comment"># 指定高度为布局的50%</span></span><br></pre></td></tr></table></figure></p>
<p>还存在PercentRelativeLayout，除了可以如上使用百分比布局外，继承了RelativeLayout的属性。</p>
<h2 id="自定义控件">自定义控件</h2><p>所有控件和布局都是直接或间接继承自View，如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/view_extends_struc.png" alt=""></p>
<h3 id="引入布局">引入布局</h3><p>自定义标题栏控件，针对自定义控件新建一布局文件title.xml。然后在主布局文件中引入title.xml。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;include layout=<span class="string">"@layout/title"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="创建自定义控件">创建自定义控件</h3><p>针对布局实现控件响应类。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class TitleLayout extends LinearLayout &#123;</span><br><span class="line">    public TitleLayout(Context context, AttributeSet attrs)&#123;</span><br><span class="line">        super(context,attrs);</span><br><span class="line">        LayoutInflater.from(context).inflate(R.layout.title,this);</span><br><span class="line">        // 通过LayoutInflater.from(context)构建LayoutInflater对象，然后inflate()动态加载布局文件    </span><br><span class="line">        // 参数：布局ID， 父布局</span><br><span class="line">        ... //实现控件响应功能</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>除了通过include引入布局外，亦可以在布局文件中直接添加控件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;com.lee.TitleLayout</span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="ListView">ListView</h2><h3 id="简单用法">简单用法</h3><p>适配ListView，将数据通过适配器传递给ListView。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示字符串</span></span><br><span class="line">ArrayAdapter &lt;String&gt; adapter = new ArraAdapter&lt;String&gt;(MainActivity.this, android.R.layout.simple_list_item_1, String[]);</span><br><span class="line">listView.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<h3 id="定制ListView">定制ListView</h3><p>定制一个水果名+图片的ListView。<br>首先定义一个实体类，作为ListView适配器的适配类型。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fruit</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> imageId;  <span class="comment">// 图片ID，R.drawable.xx</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fruit</span><span class="params">(String name, <span class="keyword">int</span> imageId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getImageId</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> imageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后需要为ListView的子项指定一个布局fruit_item.xml。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout ....&gt;</span><br><span class="line">    &lt;ImageView ..../&gt;</span><br><span class="line">    &lt;TextView ..../&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>接下来需要继承ArrayAdapter创建一个自定义适配器FruitAdapter。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">ArrayAdapter</span>&lt;<span class="title">Fruit</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> resourceId; <span class="comment">// 子项布局的ID</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(Context context, <span class="keyword">int</span> Id, List&lt;Fruit&gt; objects)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(...);</span><br><span class="line">        resourceId = Id;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*getView()在每个子项滚入屏幕时被调用*/</span></span><br><span class="line">    <span class="annotation">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line">        Fruit fruit = getItem(position); <span class="comment">// 获取当前子项Fruit实例</span></span><br><span class="line">        View view = LayoutInflater.from(getContext).inflate(resourceId, parent, <span class="keyword">false</span>);</span><br><span class="line">        ImageView fruitImage = view.findViewById(...);</span><br><span class="line">        TextView fruitName = View.findViewById(...);</span><br><span class="line">        fruitImage.setImgageResource(fruit.getImageId()；</span><br><span class="line">        fruitName.setText(Fruit.getName();</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>关于inflate()方法，第三个参数false表示只让在父布局中声明的layout属性生效，但不为这个View添加父布局，因View有了父布局后，就不能添加到ListView中了。<br>适配ListView，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> List&lt;Fruit&gt; fruitList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	onCreate() &#123;</span><br><span class="line">		...</span><br><span class="line">		initFruits();</span><br><span class="line">		FruitAdapter adapter = <span class="keyword">new</span> FruitAdapter(MainActivity.<span class="keyword">this</span>,R.layout.fruit_item.xml,fruitList);</span><br><span class="line">		listView.setAdapter(adapter);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	initFruits() &#123;</span><br><span class="line">		Fruit apple = <span class="keyword">new</span> Fruit(<span class="string">"Apple"</span>, R.drawble.apple_pic);</span><br><span class="line">		fruitList.add(apple);</span><br><span class="line">		...</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="提升ListView的效率">提升ListView的效率</h3><p>目前getView()时，每次加载子项都会重新加载布局，这样给了一个提升效率的方式。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line">	...</span><br><span class="line">	<span class="keyword">if</span>(convertView == <span class="keyword">null</span>) &#123;</span><br><span class="line">		view = LayoutInflater.from(getContext()).inflate(resourceId,parent,<span class="keyword">false</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		view = convertView;</span><br><span class="line">	&#125;</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>不过目前getView每次都要同findViewById()获取硬件实例，所以可以通过ViewHolder优化。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line">	...</span><br><span class="line">	<span class="keyword">if</span>(convertView == <span class="keyword">null</span>) &#123;</span><br><span class="line">		view = LayoutInflater.from(getContext()).inflate(resourceId,parent,<span class="keyword">false</span>);</span><br><span class="line">		viewHolder = <span class="keyword">new</span> ViewHolder();</span><br><span class="line">		viewHolder.fruitImage = view.findViewById(...);</span><br><span class="line">		viewHolder.fruitName = view.findViewById(...);</span><br><span class="line">		view.setTag(viewHolder); <span class="comment">// viewHolder存储于view中</span></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		view = convertView;</span><br><span class="line">		viewHolder = (ViewHolder)view.getTag();</span><br><span class="line">	&#125;</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class ViewHolder &#123;</span><br><span class="line">	ImageView fruitImage;</span><br><span class="line">    TextView fruitName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="ListView的点击事件">ListView的点击事件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">listView.setOnItemClickListener(<span class="keyword">new</span> AdapterView.onItemClickListener) &#123;</span><br><span class="line">	onItemClick(AdapterView&lt;?&gt; parent, View view , <span class="keyword">int</span> position, <span class="keyword">long</span> id) &#123;</span><br><span class="line">		Fruit fruit = fruitList.get(position);</span><br><span class="line">		...</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="RecyclerView">RecyclerView</h2><h3 id="基本用法">基本用法</h3><p>首先需要再build.gradle中添加依赖库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies&#123;</span><br><span class="line">    compile <span class="string">'com.android.support:recyclerview-v7:24.2.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后在activity_main.xml中添加布局：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout</span><br><span class="line">    &lt;android<span class="class">.support</span><span class="class">.v7</span><span class="class">.widget</span><span class="class">.RecyclerView</span></span><br><span class="line">        android:id=<span class="string">""</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span>/&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>接下来需准备一个适配器类FruitAdapter：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">FruitAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; mFruitList;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        ImageView fruitImage;</span><br><span class="line">        TextView fruitName;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">viewHolder</span> <span class="params">(View view)</span> </span>&#123;</span><br><span class="line">            suiper(view);</span><br><span class="line">            fruitImage = (ImageView) view.findViewById();</span><br><span class="line">            fruitName = (TextView) view.findViewById();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(List&lt;Fruit&gt; fruitList)</span> </span>&#123;</span><br><span class="line">        mFruitList = fruitList;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View view = LayoutInflater.from(parent.getcontext()).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">        <span class="keyword">return</span> holder;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span> <span class="params">(ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Fruit fruit = mFruitList.get(position);</span><br><span class="line">        holder.fruitImage.setImageResource (fruit.getImageId());</span><br><span class="line">        holder.fruitName.setText(fruit.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mFruitLIst.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>适配器准备好后，就可以使用RecyclerView，修改MainActivity：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">AppCompatActivity</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">List</span>&lt;<span class="type">Fruit</span>&gt; fruitList = <span class="keyword">new</span> <span class="type">ArrayList</span>&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    onCreate () &#123;</span><br><span class="line">        initFruits();</span><br><span class="line">        <span class="type">RecyclerView</span> recyclerView = (<span class="type">RecyclerView</span>)findViewById();</span><br><span class="line">        <span class="type">LinearLayoutManager</span> layoutManager = <span class="keyword">new</span> <span class="type">LinearLayoutManager</span>(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">// 用于指定RecyclerView的布局方式，此指定为线性布局</span></span><br><span class="line">        recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">        <span class="type">FruitAdapter</span> adapter = <span class="keyword">new</span> <span class="type">FruitAdapter</span>(fruitList);</span><br><span class="line">        recyclerView.setAdapter(adapter);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> void initFruits()&#123;</span><br><span class="line">        <span class="type">Fruit</span> apple = <span class="keyword">new</span> <span class="type">Fruit</span>(<span class="string">"Apple"</span>, <span class="type">R</span>.drawable.apple_pic);</span><br><span class="line">        fruitLIst.add(apple);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="横向滚动和瀑布流布局">横向滚动和瀑布流布局</h3><p>实现横向滚动的话，为了好看，需要将fruit_item.xml中图片和文字控件改为竖向布局。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLaout</span><br><span class="line">    android:orientation = <span class="string">"vertical"</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>然后再MainActivity中设置为横向滚动：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onCreate &#123;</span><br><span class="line">    layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>RecyclerView除了提供LinearLayoutManager布局排列外，还提供了如下两种布局排列：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GridLayoutManager：用于实现网格布局 </span><br><span class="line">StaggeredGridLayoutManager：用于实现瀑布流布局（类似于表格，不过根据内容多少适配显示）</span><br></pre></td></tr></table></figure></p>
<p>实现瀑布流，可以对fruit_item.xml做一些针对性的调整，然后修改MainActivity，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onCreate() &#123;</span><br><span class="line">    StaggeredGridLayoutManger layoutManager = <span class="keyword">new</span> StaggeredGridLayoutManager(<span class="number">3</span>, StaggeredGridLayoutManger.VERTICAL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="RecyclerView点击事件">RecyclerView点击事件</h3><p>RecyclerView需要针对具体view去注册，这样也能响应子项的点击事件。修改FruitAdapter，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">FruitAdapter &#123;</span><br><span class="line">    ViewHolder &#123;</span><br><span class="line">        View fruitView;</span><br><span class="line">        </span><br><span class="line">        ViewHolder(View view)&#123;</span><br><span class="line">            fruitView = view;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    onCreateViewHolder() &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">final</span> ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">        <span class="comment">// 子项点击事件</span></span><br><span class="line">        holder.fruitView.setOnclickListener(<span class="keyword">new</span> View.OnCickListener () &#123;</span><br><span class="line">            onClick(View v) &#123;</span><br><span class="line">                <span class="keyword">int</span> position = holder.getAdapterPosition();</span><br><span class="line">                Fruit fruit = mFruitList.get(position);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        );</span><br><span class="line">        <span class="comment">//图片点击事件</span></span><br><span class="line">        holder.fruitImage.setOnclickListener(...);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="界面最佳实践">界面最佳实践</h2><p>这个实践是一个做一个简单的聊天界面。</p>
<h3 id="Nine-Patch图片">Nine-Patch图片</h3><p>为了防止图片被拉伸变形， 需要对信息背景的图片进行处理,windows下sdk/tools下有一个draw9patch.bat工具脚本，可以用来制作Nine-Patch图片，Ubuntu下没找到。</p>
<h3 id="编写界面">编写界面</h3><p>因为会用RecyclerView，所以第一件事就是添加依赖：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:recyclerview-v7:24.2.1'</span></span><br></pre></td></tr></table></figure></p>
<p>编写主界面activity_main.xml：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout&gt;</span><br><span class="line">    &lt;android<span class="class">.support</span><span class="class">.v7</span><span class="class">.widget</span><span class="class">.RecyclerView</span>/&gt; <span class="comment">// 信息界面</span></span><br><span class="line">    &lt;LinearLayout&gt; </span><br><span class="line">        &lt;EditText&gt;  <span class="comment">// 编辑框</span></span><br><span class="line">        &lt;Button&gt;    <span class="comment">// 发送按钮</span></span><br><span class="line">    &lt;/LinearLayout&gt; </span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>定义一个消息实体类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Msg</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_RECEIVED = <span class="number">0</span>; <span class="comment">// 收到的消息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_SENT = <span class="number">1</span>;     <span class="comment">// 发送的消息</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>  type;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Msg</span><span class="params">(String content, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>消息类写好了，还需要写RecyclerView的子项布局文件msg_item.xml，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout&gt;</span><br><span class="line">    &lt;LinearLayout &gt; //background设为制作的Nine-Patch消息背景图片</span><br><span class="line">        &lt;TextView&gt;  // 收到消息</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;LinearLayout &gt; //background设为制作的Nine-Patch消息背景图片</span><br><span class="line">        &lt;TextView&gt;  // 发出的消息</span><br><span class="line">    &lt;/LinearLayout&gt;      </span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>此处子项布局文件是将发送和接收写在一起的，可以动可见属性来决定显示和隐藏。</p>
<p>接下来就该写适配器类MsgAdapter:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MsgAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">MsgAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Msg&gt; mMsgList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MsgAdapter</span><span class="params">(List&lt;Msg&gt; msgList)</span> </span>&#123;</span><br><span class="line">        mMsgList = msgList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        LinearLayout leftLayout;</span><br><span class="line">        LinearLayout rightLayout;</span><br><span class="line"></span><br><span class="line">        TextView leftMsg;</span><br><span class="line">        TextView rightMsg;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            leftLayout = (LinearLayout) itemView.findViewById(R.id.left_layout);</span><br><span class="line">            rightLayout = (LinearLayout) itemView.findViewById(R.id.right_layout);</span><br><span class="line">            leftMsg = (TextView) itemView.findViewById(R.id.left_msg);</span><br><span class="line">            rightMsg = (TextView) itemView.findViewById(R.id.right_msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.msg_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Msg msg = mMsgList.get(position);</span><br><span class="line">        <span class="keyword">if</span> (msg.getType() == Msg.TYPE_RECEIVED)&#123;</span><br><span class="line">            holder.leftLayout.setVisibility(View.VISIBLE);</span><br><span class="line">            holder.rightLayout.setVisibility(View.GONE);</span><br><span class="line">            holder.leftMsg.setText(msg.getContent());</span><br><span class="line">        &#125; <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(msg.getType()</span> </span>== Msg.TYPE_SENT) &#123;</span><br><span class="line">            holder.rightLayout.setVisibility(View.VISIBLE);</span><br><span class="line">            holder.leftLayout.setVisibility(View.GONE);</span><br><span class="line">            holder.rightMsg.setText(msg.getContent());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mMsgList.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最后在MainActivity中做一些处理即可实现一个聊天界面了。如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    ...</span><br><span class="line">    initMsgs();</span><br><span class="line">    msgRecyclerView = findViewById();</span><br><span class="line">    LinearLayoutManager layoutManager = <span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>);</span><br><span class="line">    msgRecyclerView.setLayoutManager(layoutManager);</span><br><span class="line">    adapter = <span class="keyword">new</span> MsgAdapter(mMsgLists);</span><br><span class="line">    msgRecyclerView.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">    send = (Button) findViewById(R.id.send);</span><br><span class="line">    inputText = (EditText) findViewById(R.id.input_text);</span><br><span class="line">    send.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            String content = inputText.getText().toString();</span><br><span class="line">            <span class="keyword">if</span> (!<span class="string">""</span>.equals(content)) &#123;</span><br><span class="line">                Msg msg = <span class="keyword">new</span> Msg(content,Msg.TYPE_SENT);</span><br><span class="line">                mMsgLists.add(msg);</span><br><span class="line">                adapter.notifyItemInserted(mMsgLists.size()-<span class="number">1</span>);  <span class="comment">// 刷新消息</span></span><br><span class="line">                msgRecyclerView.scrollToPosition(mMsgLists.size()-<span class="number">1</span>); <span class="comment">//listview 定位到最后一行</span></span><br><span class="line">                inputText.setText(<span class="string">""</span>); <span class="comment">// 清空输入框</span></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"The input text can not be emputy!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initMsgs</span><span class="params">()</span> </span>&#123; <span class="comment">// 默认在消息几面显示一些聊天信息</span></span><br><span class="line">    Msg msg1 = <span class="keyword">new</span> Msg(<span class="string">"Hello , this is msg1!"</span>, Msg.TYPE_RECEIVED);</span><br><span class="line">    mMsgLists.add(msg1);        </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本部分思维导图如下：&lt;br&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/UI.png&quot; alt=&quot;UI&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>Linux内核完全注释之80x86内存管理</title>
    <link href="http://huaqianlee.github.io/2017/03/24/Linux/Linux-kernel-content-80x86-mem-manage/"/>
    <id>http://huaqianlee.github.io/2017/03/24/Linux/Linux-kernel-content-80x86-mem-manage/</id>
    <published>2017-03-24T14:28:51.000Z</published>
    <updated>2017-05-09T11:25:39.945Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://pan.baidu.com/s/1kVgED6n" target="_blank" rel="external">Linux内核完全注释PDF下载</a></p>
<p>如下图所示，80x86从逻辑地址到物理地址变换使用分段和分页两种机制。<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/linux/book/add_change.png" alt=""><br><a id="more"></a><br><img src="http://7xjdax.com1.z0.glb.clouddn.com/linux/book/addr_resolution.png" alt=""></p>
<p>如果没有开启分页机制，则处理器会直接将线性地址映射到物理地址。分段机制用来完成虚拟（逻辑）地址到线性地址的转换，分页主要用来将线性地址（很多时候比物理地址大，让应用编程不用受内存空间限制）转换到物理地址。段描述符等会存于硬盘等存储介质，物理地址由其决定获得。</p>
<p>分段机制、分页机制应用如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/linux/book/vir_addr_map.png" alt=""></p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/linux/book/line_phy.png" alt=""><br>每个页面固定 4KB大小，并且对齐于4K地址边界。因此 x86 4GB被划分为2^20（1M）个页面。<br>Linux0.11中 把每个进程最大可用虚拟内存空间定义为64MB，因此每个进程的逻辑地址加上 任务号*64MB（Linux0.11中算出来范围约为8G，最大任务数126，但人工定义为64个即4G），即可转换为线性空间中的地址。<br>每个进程代码在逻辑空间分布如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/linux/book/progress_add.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://pan.baidu.com/s/1kVgED6n&quot;&gt;Linux内核完全注释PDF下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如下图所示，80x86从逻辑地址到物理地址变换使用分段和分页两种机制。&lt;br&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/linux/book/add_change.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://huaqianlee.github.io/categories/Linux/"/>
    
    
      <category term="Linux内核完全注释" scheme="http://huaqianlee.github.io/tags/Linux%E5%86%85%E6%A0%B8%E5%AE%8C%E5%85%A8%E6%B3%A8%E9%87%8A/"/>
    
  </entry>
  
  <entry>
    <title>所买的书</title>
    <link href="http://huaqianlee.github.io/2017/03/24/Life/About-my-books-and-my-plan/"/>
    <id>http://huaqianlee.github.io/2017/03/24/Life/About-my-books-and-my-plan/</id>
    <published>2017-03-24T13:47:41.000Z</published>
    <updated>2017-04-11T23:09:16.416Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/mybooks.jpg" alt="myBooks"><br><strong>书架一脚</strong></p>
<a id="more"></a>
<p>之前买了很多书，有很多Linux、Android、Java、英语等学习相关的书，也有理财、管理、自传、英文原著等不少书，搬家时我的书都会是一项大工程，但是这些书呢，挺多还没怎么看过，即使看过的也舍不得送人，总是当着一种财产保留在这。这些时间现有工作让我没有激情感到惶恐，突然感慨到这些知识不能就这么遗烂在角落里。</p>
<p>自己离自己的目标还相差甚远，所以前一段时间计划了一下，准备将没看过的书看了，看过的好书再学习一遍，并且对某些学习做好笔记做好总结。后续将自己的笔记和总结也整理了发布到博客上面，也算是一个激励。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/mybooks.jpg&quot; alt=&quot;myBooks&quot;&gt;&lt;br&gt;&lt;strong&gt;书架一脚&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://huaqianlee.github.io/categories/Life/"/>
    
    
      <category term="成长" scheme="http://huaqianlee.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之项目结构与活动</title>
    <link href="http://huaqianlee.github.io/2017/03/24/FirstCode/FirstCode-learning-note-project-structure-and-activity/"/>
    <id>http://huaqianlee.github.io/2017/03/24/FirstCode/FirstCode-learning-note-project-structure-and-activity/</id>
    <published>2017-03-24T12:07:01.000Z</published>
    <updated>2017-05-10T13:30:10.698Z</updated>
    
    <content type="html"><![CDATA[<p> <a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h1 id="第一个应用">第一个应用</h1><h2 id="项目结构">项目结构</h2><p>很早以前第一次接触Android代码的项目结构的时候确实够头疼滴.<br><a id="more"></a></p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/prj_struct.png" alt="项目结构"></p>
<ul>
<li>.gradle &amp; .idea<br>Android Studio自动生成, 无需关心, 版本管理时,一般将其忽略(即.gitignore文件).</li>
<li>app<br>项目代码、资源基本位于此路径。</li>
<li>build<br>编译自动生成</li>
<li>gradle<br>gradle wrapper配置文件.</li>
<li>.gitignore<br>git版本管理忽略文件及路径的脚本</li>
<li>build.gradle<br>项目全局的gradle构建脚本, 通常不需修改</li>
<li>gradle.properties<br>全局gradle的配置文件,所配置属性影响项目中所有gradle编译脚本</li>
<li>gradlew &amp; gradlew.bat<br>用以命令行界面执行gradle命令, gradlew用于Linux或Mac Os, gradlew.bat 用于windows.</li>
<li>项目名.iml<br>iml文件是InteliJ IDEA项目(Android Studio基于其开发)自动生成的文件</li>
<li>local.properties<br>指定本机Android SDK路径</li>
<li>settings.gradle<br>指定项目中所有引入的模块</li>
</ul>
<h3 id="app目录">app目录</h3><ul>
<li>build<br>编译自动生成</li>
<li>libs<br>构建项目所需的库第三方.jar包</li>
<li>androidTest<br>对项目进行一些自动化测试的Android Test测试用例</li>
<li>java<br>所有Java代码的路径</li>
<li>res<br>项目所使用的所有图片、布局、字符等资源路径</li>
<li>AndroidManifest.xml<br>整个项目的配置文件，权限声明、四大组件注册</li>
<li>test<br>Unit Test测试用例，项目自动化测试的另一种方式</li>
<li>.gitignore<br>git版本管理忽略文件及路径的脚本</li>
<li>app.iml<br>InteliJ IDEA文件</li>
<li>build.gradle<br>app模块的gradle构建脚本</li>
<li>proguard-rules.pro<br>指定项目代码的混淆规则</li>
</ul>
<h3 id="build-gradle">build.gradle</h3><p>最外层build.gradle<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// Top-level build file <span class="built_in">where</span> you can add configuration options common to all sub-projects/modules.</span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()   <span class="comment"># 声明jcenter代码托管库</span></span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:2.3.0'</span>  <span class="comment"># 声明Android版本gradle</span></span><br><span class="line"></span><br><span class="line">        // NOTE: Do not place your application dependencies here; they belong</span><br><span class="line">        // <span class="keyword">in</span> the individual module build.gradle files</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task clean(<span class="built_in">type</span>: Delete) &#123;</span><br><span class="line">    delete rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>app目录下的build.gradle<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span>  <span class="comment"># 声明application or library </span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">24</span></span><br><span class="line">    buildToolsVersion <span class="string">"25.0.0"</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"me.huaqianlee.broadcastbestpractice"</span>  </span><br><span class="line">        minSdkVersion <span class="number">15</span></span><br><span class="line">        targetSdkVersion <span class="number">24</span></span><br><span class="line">        versionCode <span class="number">1</span>   <span class="comment"># 项目版本号</span></span><br><span class="line">        versionName <span class="string">"1.0"</span> <span class="comment"># 项目版本名</span></span><br><span class="line">        <span class="built_in">test</span>InstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span>   <span class="comment"># 指定是否混淆代码</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">            <span class="comment"># xxx.txt Android SDK目录下项目通用混淆规则</span></span><br><span class="line">            <span class="comment"># xxx.pro 当前项目根目录下,编写特有混淆规则</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123; <span class="comment"># 指定当前项目的所有依赖关系(本地依赖\库依赖\远程依赖)</span></span><br><span class="line">    compile fileTree(dir: <span class="string">'libs'</span>, include: [<span class="string">'*.jar'</span>])  <span class="comment"># 本地依赖,libs下的所有.jar</span></span><br><span class="line">    androidTestCompile(<span class="string">'com.android.support.test.espresso:espresso-core:2.2.2'</span>, &#123;</span><br><span class="line">        exclude group: <span class="string">'com.android.support'</span>, module: <span class="string">'support-annotations'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment"># 远程依赖</span></span><br><span class="line">    compile <span class="string">'com.android.support:appcompat-v7:24.2.1'</span> </span><br><span class="line">    compile <span class="string">'com.android.support.constraint:constraint-layout:1.0.2'</span></span><br><span class="line">    <span class="built_in">test</span>Compile <span class="string">'junit:junit:4.12'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 库依赖: compile project(':xxx')</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="活动">活动</h1><h2 id="基本用法">基本用法</h2><h3 id="活动中使用Menu">活动中使用Menu</h3><p>在res/menu路径下新建xxx.xml,添加代码:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;menu xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span><br><span class="line">    &lt;item </span><br><span class="line">        android:id=<span class="string">"@id/add_item"</span></span><br><span class="line">        android:title=<span class="string">"Add"</span>/&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=<span class="string">"@id/remove_item"</span></span><br><span class="line">        androi:title=<span class="string">"Remove"</span>/&gt;    </span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure></p>
<p>在Activity中重写onCreateOptionsMenu()方法:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public boolean onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">    getMenuInflater().inflate(R.menu.main, menu);</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">true</span>; // 允许菜单显示</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># getMenuInflater() 获得MenuInflater对象,然后通过inflate方法创建菜单</span></span><br></pre></td></tr></table></figure></p>
<p>响应菜单事件, 重写onOptionsItemSelected(MenuItem item)方法,item.getItemId() 判断item ID.</p>
<h3 id="销毁活动">销毁活动</h3><p>finish()方法即可.</p>
<h2 id="Intent的应用">Intent的应用</h2><h3 id="显式Intent">显式Intent</h3><p>通过Intent显示启动另一活动.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent(FirstActivity.this, SecondActivity.class);</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure></p>
<h3 id="隐式Intent">隐式Intent</h3><p>在AndroidManifest.xml中针对SecondActivity添加:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;action android:name=<span class="string">"me.huaqianlee.activity.ACTION_START"</span>/&gt;</span><br><span class="line">    &lt;category android:name=<span class="string">"android.intent.category.DEFAULT"</span>/&gt; <span class="comment"># 默认category</span></span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure></p>
<p>在FistActivity中Intent指定相同<action\>与<category\>即可启动另一活动.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent(<span class="string">"me.huaqianlee.activity.ACTION_START"</span>);</span><br><span class="line">//intent.addCategory(<span class="string">"android.intent.category.DEFAULT"</span>);</span><br><span class="line"><span class="comment"># 因为声明的默认category, 这里不用添加, startActivity会自动添加.</span></span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure></category\></action\></p>
<h3 id="更多隐式Intent用法">更多隐式Intent用法</h3><h4 id="启动浏览器">启动浏览器</h4><p>在自己应用程序中展示网页。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent(Intent.ACTION_VIEW); <span class="comment"># 内置动作,常量值:android.intent.action.VIEW.</span></span><br><span class="line">intent.setData(Uri.parse(<span class="string">"http://www.google.com"</span>));</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure></p>
<p>AndroidManifest.xml中更精确指定当前活动响应的类型：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;data&gt;</span><br><span class="line">        android:scheme  <span class="comment"># 指定数据协议,如 http</span></span><br><span class="line">        android:host    <span class="comment"># 主机名, 如域名</span></span><br><span class="line">        android:port    <span class="comment"># 端口</span></span><br><span class="line">        android:path    <span class="comment"># 如网址中域名后面的内容</span></span><br><span class="line">        android:mimeType <span class="comment"># 可以处理的数据类型, 可以通过通配符指定</span></span><br><span class="line">    &lt;/data&gt;</span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure></p>
<p>譬如在某一活动xml中加入如下内容则可响应http网页：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;action android:name=<span class="string">"android.intent.action.VIEW"</span>/&gt;</span><br><span class="line">    &lt;category android:name=<span class="string">"android.intent.category.DEFAULT"</span>/&gt;</span><br><span class="line">    &lt;data android:scheme=<span class="string">"http"</span>/&gt;</span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure></p>
<h4 id="启动系统拨号">启动系统拨号</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent(Intent.ACTION_DIAL);</span><br><span class="line">intent.setData(Uri.parse(<span class="string">"tel:10010"</span>));</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>
<h3 id="活动中传递数据">活动中传递数据</h3><h4 id="传递数据到下一个活动">传递数据到下一个活动</h4><p>FirstActivity中添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String data = <span class="string">"Hello, SecondActivity!"</span>;</span><br><span class="line">Intent  intent = new Intent(FirstActivity.this, SecondActivity.class);</span><br><span class="line">intent.putExtra(<span class="string">"extra_data"</span>, data); // 参数：键值对</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure></p>
<p>SecondActivity中接收：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = getIntent();</span><br><span class="line">String data = intent.getStringExtra(<span class="string">"extra_data"</span>);</span><br></pre></td></tr></table></figure></p>
<h4 id="返回数据给上一活动">返回数据给上一活动</h4><p>FirstActivity中添加代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent  intent = new Intent(FirstActivity.this, SecondActivity.class);</span><br><span class="line">startActivityForResult(intent,<span class="number">1</span>);</span><br></pre></td></tr></table></figure></p>
<p>FirstActivity中重写回调函数：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">            <span class="keyword">if</span>(resultCode = RESULT_OK)</span><br><span class="line">                String returnData = data.getStringExtra(<span class="string">"data_return"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>SecondActivity中实现返回逻辑：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">intent.putExtra(<span class="string">"data_return"</span>, <span class="string">"Hello, FirstActivity!"</span>);</span><br><span class="line"><span class="built_in">set</span>Result(RESULT_OK, intent);</span><br><span class="line">finish();</span><br><span class="line"><span class="comment"># 为了在按返回键时也返回数据,需要重写onBackPressed()方法,并加入如上内容.</span></span><br></pre></td></tr></table></figure></p>
<h2 id="活动的生命周期">活动的生命周期</h2><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/lifecycle.gif" alt="lifecycle"></p>
<p>根据生命周期，活动存在被回收的可能性，所以为了有好的体验，需要保存数据。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Overide</span><br><span class="line">protected void onSaveInstanceState(Bundle outState) &#123;</span><br><span class="line">    super.onSaveInstanceState(outState);</span><br><span class="line">    String tempData = <span class="string">"**********"</span>;</span><br><span class="line">    outState.putString(<span class="string">"data_key"</span>, tempData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>恢复数据:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    ....</span><br><span class="line">    <span class="keyword">if</span>(savedInstanceState != null)&#123;</span><br><span class="line">        String tmpData = savedInstaceState.getString(<span class="string">"data_key"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>Bundle对象亦可放在Intent对象中传递.</p>
</blockquote>
<h2 id="活动的启动模式">活动的启动模式</h2><p>活动启动模式一共4种：standard、singleTop、singleTask和singleInstance。AndroidManifest.xml中<activity>指定android:launchMode属性来选择。</activity></p>
<h3 id="standard">standard</h3><p>系统默认，每启动一个活动就在栈顶创建，即使已经存在。<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/standard.jpg" alt="standard"></p>
<h3 id="singleTop">singleTop</h3><p>活动启动时，栈顶如果不存在此活动，则创建此活动。<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/singleTop.jpg" alt="singleTop"></p>
<h3 id="singleTask">singleTask</h3><p>活动启动时，如果栈里存在此活动，则将之前的全部出栈，将此活动置于栈顶。<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/singleTask.jpg" alt="singleTask"></p>
<h3 id="singleInstance">singleInstance</h3><p>启动活动时，单独创建一个返回栈来管理，这样所有应用可以共用返回栈，访问此活动。<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/singleInstance.jpg" alt="singleInstance"></p>
<h2 id="最佳实践及有用的技巧">最佳实践及有用的技巧</h2><h3 id="随时随地退出程序">随时随地退出程序</h3><p>随时随地退出程序，建一个ActivityCollector类和所有新建类的基类BaseActivity类。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">public class ActivityCollector &#123;</span><br><span class="line">    public static List&lt;Activity&gt; activities = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public static void addActivity(Activity activity) &#123;</span><br><span class="line">        activities.add(activity);</span><br><span class="line">    &#125;</span><br><span class="line">    public static void removeActivity(Activity activity) &#123;</span><br><span class="line">        activities.remove(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void <span class="function"><span class="title">finishAll</span></span>() &#123;</span><br><span class="line">        <span class="keyword">for</span>(Acitivity activity : activities) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!activity.isFinishing()) &#123;</span><br><span class="line">                activity.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class BaseActivity extends AppCompatActivity &#123;</span><br><span class="line">    protected void onCreate(Bundle saveInstanceState) &#123;</span><br><span class="line">        ...</span><br><span class="line">        ActivityCollector.addActivity(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected void <span class="function"><span class="title">onDestory</span></span> () &#123;</span><br><span class="line">        ...</span><br><span class="line">        ActivityCollector.removeActivity(this);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>当需要销毁所有活动时<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ActivityCollector.finishAll();</span><br><span class="line">android.os.Process.killProcess(android.os.Process.myPid());</span><br><span class="line"><span class="comment"># kill掉当前进程， 确保万一的语句</span></span><br></pre></td></tr></table></figure></p>
<h3 id="项目合作时启动活动的最佳写法">项目合作时启动活动的最佳写法</h3><p>在需要被启动的活动中实现actionStart()方法。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public static void actionStart(Context context, String data1, String data2) &#123;</span><br><span class="line">    Intent intent = new Intent(context, xxx.class);</span><br><span class="line">    intent.putExtra(<span class="string">"param1"</span>,data1);</span><br><span class="line">    intent.putExtra(<span class="string">"param2"</span>,data2);</span><br><span class="line">    context.startActivity(intent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;第一个应用&quot;&gt;第一个应用&lt;/h1&gt;&lt;h2 id=&quot;项目结构&quot;&gt;项目结构&lt;/h2&gt;&lt;p&gt;很早以前第一次接触Android代码的项目结构的时候确实够头疼滴.&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之启程 </title>
    <link href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/"/>
    <id>http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/</id>
    <published>2017-03-23T23:30:48.000Z</published>
    <updated>2017-05-10T13:29:13.258Z</updated>
    
    <content type="html"><![CDATA[<p>因为工作等原因(其实主要是自己懒^_^), 之前Android学习总是断断续续的. 自己也买了一打的书, 全放在角落里了, 超过50%都没怎么看。 这次自己有了些新想法, 就计划把这些书都再学习一下, 顺便针对自己觉得有必要的知识加以整理做好笔记,就从《第一行代码》第2版开始。首先在此文中梳理下整本书的思维导图及学习笔记目录。</p>
<p>《第一行代码》思维导图如下:<br><img src="后续补上" alt="脑图1"></p>
<a id="more"></a>
<p>《第一行代码》学习笔记目录:<br><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/FirstCode-learning-note-project-structure-and-activity/" target="_blank" rel="external">第一行代码之项目结构与活动</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为工作等原因(其实主要是自己懒^_^), 之前Android学习总是断断续续的. 自己也买了一打的书, 全放在角落里了, 超过50%都没怎么看。 这次自己有了些新想法, 就计划把这些书都再学习一下, 顺便针对自己觉得有必要的知识加以整理做好笔记,就从《第一行代码》第2版开始。首先在此文中梳理下整本书的思维导图及学习笔记目录。&lt;/p&gt;
&lt;p&gt;《第一行代码》思维导图如下:&lt;br&gt;&lt;img src=&quot;后续补上&quot; alt=&quot;脑图1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>Ashamed</title>
    <link href="http://huaqianlee.github.io/2017/03/17/Life/Ashamed/"/>
    <id>http://huaqianlee.github.io/2017/03/17/Life/Ashamed/</id>
    <published>2017-03-17T11:53:12.000Z</published>
    <updated>2017-03-29T14:53:31.390Z</updated>
    
    <content type="html"><![CDATA[<p>惭愧! 惭愧!</p>
<p>  作为一个即将迈入三十的中年人, 又懈怠浪费了这么多时间. 工作不给力, 得好好准备准备换换环境了, 然后也差不多该回成都了.</p>
<p>  博客\CODING需要更积极些.</p>
<p>加油!加油!  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;惭愧! 惭愧!&lt;/p&gt;
&lt;p&gt;  作为一个即将迈入三十的中年人, 又懈怠浪费了这么多时间. 工作不给力, 得好好准备准备换换环境了, 然后也差不多该回成都了.&lt;/p&gt;
&lt;p&gt;  博客\CODING需要更积极些.&lt;/p&gt;
&lt;p&gt;加油!加油!  &lt;/p&gt;

    
    </summary>
    
      <category term="Life" scheme="http://huaqianlee.github.io/categories/Life/"/>
    
    
      <category term="成长" scheme="http://huaqianlee.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>camera架构与调试-菜鸟笔记</title>
    <link href="http://huaqianlee.github.io/2016/07/07/Uav/camera-arch-and-tunning-rookie-note/"/>
    <id>http://huaqianlee.github.io/2016/07/07/Uav/camera-arch-and-tunning-rookie-note/</id>
    <published>2016-07-07T15:37:41.000Z</published>
    <updated>2016-08-04T14:46:55.699Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>菜鸟笔记，因为对camera不是很了解，肯定会有很多疏漏，也会记录一些现在不是很明白的杂乱信息，以便以后知识面扩展了后看到有所帮助。由于自己没有耐心图片一张张重画,就直接拍下了自己手写笔记的照片,笔记图片中的字很丑，将就将就</p>
</blockquote>
<h2 id="VFE">VFE</h2><p>VFE为Video Front End的简写，这属于硬件部分，对于高通通过Chromatix 工具，可以产生对此流程有用的tuning file，用于配置。 VFE 流程图如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/vfe.png" alt="VFE FLOW"></p>
<a id="more"></a>
<h3 id="MIPI">MIPI</h3><p>现在的camera基本都采用MIPI接口， MIPI以一种采用差分方式按位传输数据的接口。只有四条引脚（DN、DP，CN、CP）。</p>
<h3 id="数据">数据</h3><p>根据自己的理解我大致将VFE根据数据格式分为四个部分：</p>
<ul>
<li>Raw RGB（也称为Bayer RGB）</li>
<li>Sensor RGB</li>
<li>Image RGB</li>
<li>YUV</li>
</ul>
<h4 id="Raw_RGB">Raw RGB</h4><p>Raw RGB为原始数据，分为Qcom raw 和 mipi raw， 现在基本都使用mipi  raw，mipi raw数据1pixel为10bits的数据(1 chanel)，即将所有数据按位重新排列，图像的行列应该为4的倍数。如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/raw%20bits.png" alt="raw bits"></p>
<h5 id="所有pixel图像数据构成按照如下规律排列（表格中为某种颜色的亮度值）：">所有pixel图像数据构成按照如下规律排列（表格中为某种颜色的亮度值）：</h5><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/rgb_all.jpg" alt="rgb_all"><br>GB： 指靠近B的G. 其余同理</p>
<h5 id="Raw_RGB数据构成规则按照下表方式排列，对角线可以两两兑换-">Raw RGB数据构成规则按照下表方式排列，对角线可以两两兑换.</h5><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/rgb.png" alt="rgb"></p>
<h4 id="Raw_RGB_有四种排列方式，如下：">Raw RGB 有四种排列方式，如下：</h4><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/rgb_4.jpg" alt="rgb_4"></p>
<h4 id="Sensor_RGB">Sensor RGB</h4><p>Sensor RGB为camera Sensor处理过的数据，即上流程图demosaic之后的数据，1 pixel 为 3 Chanel，现在基本都为888格式的 RGB 24bits数据。<br>Sensor RGB图像数据构成按如下排列：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/sensor_rgb.jpg" alt="sensor_rgb"></p>
<h4 id="Image_RGB">Image RGB</h4><p>Image RGB是Sensor RGB通过color correction转变过来的，会按照三种不同光源强度乘以不同的矩阵得到不同的Image RGB，这三种光源强度为：<br>D65 - daylight color temp 为 6500k<br>TL  -   3800~4000k<br>A    -   2800k</p>
<blockquote>
<p>后两种记不清楚了， 简单搜索了一下，没有在网上找到准确的资源，先这样写着</p>
</blockquote>
<h4 id="YUV">YUV</h4><p>YUV，分为三个分量，“Y”表示明亮度（Luminance或Luma），也就是灰度值；而“U”和“V” 表示的则是色度（Chrominance或Chroma）。是与RGB类似的颜色编码方法，主要用于计算机端。由Image RGB通过gamma处理而来，如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/gamma_note.jpg" alt="gamma_note"></p>
<h3 id="LSC">LSC</h3><p>LSC即为Lens  shading correction， 其主要就是修正边角较暗的地方，如下笔记：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/lsc_note.jpg" alt="lsc_note"></p>
<h3 id="BLC">BLC</h3><p>BLC即为black level correction，主要处理暗电流，笔记如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/exposure_dc.jpg" alt="exposure_dc"></p>
<h3 id="domain">domain</h3><p>domain分为spatial domain和frequency domain， 笔记如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/domain_note.jpg" alt="domain_note"></p>
<h3 id="CPP">CPP</h3><p>VFE模块完成后则会进入CPP模块，cpp模块主要有如下两部分：</p>
<ul>
<li>WNR - wavelet noise reduction</li>
<li>ASF -  Auto special Filter （-&gt; sharpness）<br>exposure index 和 gain index 是cpp模块的trigger condition</li>
</ul>
<p>附  图片一般会经过4层曝光处理，chromatix工具<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/exposure_note.jpg" alt="exposure_note"></p>
<p>附 Chromatix Tool<br>driver_info.txt (等同于dts中的信息)， 通过chromatix产生tuning file（cpp项的 exposure index和gain index很可能源于此文件）</p>
<h3 id="Driver">Driver</h3><p>驱动中图像处理，笔记如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/frame.png" alt="frame"></p>
<p>现在的cmos基本都是使用rolling shutter， 方式如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/cmos_rolling_shutter.jpg" alt="cmos_rolling_shutter"></p>
<h4 id="附_糊涂笔记">附 糊涂笔记</h4><p>VT clock —-&gt; banding  （50HZ/60HZ/AUTO/OFF —-&gt;app上的配置）<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/stripe.jpg" alt="stripe"></p>
<h4 id="driver_info-txt">driver_info.txt</h4><p>Chromatix Tool会用到的一个Sensor info文件，内容与<root_dir>\mm-camera\mm-camera2\media-controller\modules\sensors\sensor_libs\imx214\imx214_lib.c 相关，<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. max frame rate  ---&#62; depends on sensor register and project&#10;2. min line count ---&#62; value = 1, depends on sensor property # 1 line * 1 pixel  clock * cloumnum = min exposure time&#10;3. max line count in max fps. # max line count = FL - offset&#10;4. max line count  ---&#62; FL * (maxfps/minfps) - offset&#10;5.raw image width&#10;6. raw image height&#10;7. bayer pattern&#10;8.bits per pixel&#10;9. packed or not ---&#62; 1: mipi; 0: others,depend on sensor&#10;10~13. crop ---&#62; crop&#25481;&#26080;&#25928;&#36793;&#65292;top&#12289;right&#12289;bottom&#12289;left.&#10;14~16 blacklevel ---&#62; &#21378;&#21830;&#21333;&#20301; 12bits  / 16(2&#30340;4&#27425;&#26041;) -&#62;8bit</span><br></pre></td></tr></table></figure></root_dir></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;菜鸟笔记，因为对camera不是很了解，肯定会有很多疏漏，也会记录一些现在不是很明白的杂乱信息，以便以后知识面扩展了后看到有所帮助。由于自己没有耐心图片一张张重画,就直接拍下了自己手写笔记的照片,笔记图片中的字很丑，将就将就&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;VFE&quot;&gt;VFE&lt;/h2&gt;&lt;p&gt;VFE为Video Front End的简写，这属于硬件部分，对于高通通过Chromatix 工具，可以产生对此流程有用的tuning file，用于配置。 VFE 流程图如下：&lt;br&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/vfe.png&quot; alt=&quot;VFE FLOW&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Uav" scheme="http://huaqianlee.github.io/categories/Uav/"/>
    
    
      <category term="Qualcomm" scheme="http://huaqianlee.github.io/tags/Qualcomm/"/>
    
  </entry>
  
  <entry>
    <title>高通px4代码阅读笔记</title>
    <link href="http://huaqianlee.github.io/2016/05/11/Uav/qualcomm-px4-code-reading-note/"/>
    <id>http://huaqianlee.github.io/2016/05/11/Uav/qualcomm-px4-code-reading-note/</id>
    <published>2016-05-11T13:45:25.000Z</published>
    <updated>2016-08-04T14:51:46.848Z</updated>
    
    <content type="html"><![CDATA[<p><strong>像这种庞大系统的代码， 我一般喜欢先大致了解一下代码结构，然后按照执行流程阅读分析。我阅读的是高通8074平台的px4代码。</strong></p>
<p>代码地址：<a href="https://github.com/ATLFlight/Firmware" target="_blank" rel="external">ATLFlight/Firmware</a><br>参考文档：<a href="http://dev.px4.io/tutorial-hello-sky.html?q=" target="_blank" rel="external">px4 devguide</a></p>
<blockquote>
<p>由于没有足够的时间再去细细研究, 所以只有这么一个粗略的笔记.</p>
</blockquote>
<p>============================================================================================================</p>
<h2 id="关键路径及文件">关键路径及文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\modules\mavlink   //  信息数据处理</span><br><span class="line">mavlink_main.cpp</span><br><span class="line">mavlink_receiver.cpp</span><br><span class="line"></span><br><span class="line">FastRPC   --  aDSP 与 apps 之间远程调用</span><br><span class="line"><span class="number">1</span>. 共享内存（不包括L1/L2缓存）</span><br><span class="line"><span class="number">2</span>. aDSP中能支持有限的物理映射</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\src\modules\muorb\</span><br><span class="line">adsp </span><br><span class="line">Krait</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\posix-configs\eagle\flight    // config 文件</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\src\modules  // 功能模块</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\makefiles\ </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\src\drivers\rc_receiver\rc_receiver_main.cpp   // 遥控器</span><br><span class="line"></span><br><span class="line">W:\uav\Firmware\src\drivers\device\vdev.cpp   <span class="comment"># Virtual character device base class.</span></span><br><span class="line">mavilink、uorb 继承于此类</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="按执行调用（log）顺序阅读">按执行调用（log）顺序阅读</h2><p>============================================================================================================</p>
<h3 id="APPS_Processor">APPS Processor</h3><p>执行指令： ./mainapp mainapp.config  - （main.cpp + W:\uav\Firmware\posix-configs\eagle\flight\mainapp-flight.config）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\platforms\posix\main.cpp </span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">    px4::init_once()</span><br><span class="line">        pthread_self()                  <span class="comment"># expand params table and copy own params to shared memory</span></span><br><span class="line">        init_own_params()           <span class="comment"># copy other proc params from shared memory</span></span><br><span class="line">    process_line(line)         <span class="comment"># 执行mainapp.config中的命令</span></span><br><span class="line">    getline(cin, mystr)       <span class="comment"># 定义shell， 并读取输入  “pxh&gt;”</span></span><br></pre></td></tr></table></figure></p>
<p>执行时打印的log如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">px4muorbKraitWrapper.cpp &#65288;C:\Qualcomm\Hexagon_SDK\2.0\flight_controller\krait\inc\px4muorb_KraitRpcWrapper.hpp&#65289;&#10;&#10;W:\uav\apq8074-le-1-0_ap_standard_oem\apps_proc\oe-core\build\tmp-eglibc\work\cortexa8hf-vfp-neon-linux-gnueabi\adsprpc\1.0-r0\adsprpc-1.0\src&#10;fastrpc_apps_user.c&#10;listener_android.c&#10;rpcmem.c  &#65288;rpcmem_alloc &#20998;&#37197; ION memory&#65289;&#10;&#10;INFO  Shell id is 3069956096&#10;INFO  Starting shared memory param sync&#10;&#10;INFO  param loading done&#10;&#10;App name: mainapp&#10;pxh&#62;  &#65288;shell &#65311;&#65289;&#10;apq8074-le-1-0_ap_standard_oem/apps_proc/oe-core/build/tmp-eglibc/work/cortexa8hf-vfp-neon-linux-gnueabi/adsprpc/1.0-r0/adsprpc-1.0/src/listener_android.c</span><br></pre></td></tr></table></figure></p>
<p>mainapp.config的内容如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uorb start</span><br><span class="line">muorb start</span><br><span class="line">mavlink start -u <span class="number">14556</span></span><br><span class="line">sleep <span class="number">1</span></span><br><span class="line">mavlink stream -u <span class="number">14556</span> <span class="operator">-s</span> HIGHRES_IMU -r <span class="number">50</span></span><br><span class="line">mavlink stream -u <span class="number">14556</span> <span class="operator">-s</span> ATTITUDE -r <span class="number">50</span></span><br><span class="line">mavlink boot_complete</span><br></pre></td></tr></table></figure></p>
<h3 id="ADSP">ADSP</h3><p>adsp端打印的log如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">symbol.c &#65288;&#38142;&#25509;ELF&#65288; Executable and Linkable Format&#65289; &#21644; object&#65289;&#10;reloc.c      // two c file maybe come from apps_proc&#10;W:\uav\Firmware\src\modules\muorb\adsp\px4muorb.cpp &#65288;px4muorb_orb_initialize&#65289;&#10;      - W:\uav\Firmware\src\platforms\qurt\px4_layer\main.cpp &#65288; dspal_entry&#65289;&#10;        W:\uav\Firmware\posix-configs\eagle\flight\px4-flight.config --&#62;&#65288;adb push&#65289; /usr/share/data/adsp/px4.config&#65288;linaro&#20013;&#25991;&#20214;&#65292; &#30001;px4-flight.config&#25913;&#21517;&#24471;&#26469;&#65289;  --&#62; &#8220;/dev/fs/px4.config&#8220;&#65288;W:\uav\Firmware\src\platforms\qurt\px4_layer\main.cpp &#20013;&#24341;&#29992;&#65289;&#10;&#10;W:\uav\Firmware\src\modules\uORB\uORBManager_posix.cpp  --&#62;&#21152;&#36733; DeviceNode</span><br></pre></td></tr></table></figure></p>
<p>adsp端main.cp源码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#W:\uav\Firmware\src\platforms\qurt\px4_layer\main.cpp </span></span><br><span class="line">int dspal_main(int argc, char *argv[])</span><br><span class="line">    dspal_entry( int argc, char* argv[] )</span><br><span class="line">        px4::init_once()</span><br><span class="line">            init_own_params()</span><br><span class="line">            init_other_params()</span><br><span class="line">        process_commands(apps, get_commands())  <span class="comment"># 执行px4-flight.config中的命令</span></span><br><span class="line">            PARAM_DEFINE_INT32(MAV_TYPE,<span class="number">2</span>)  <span class="comment"># commander需要用到的parameter，由mavlink创建，因为mavilink没有运行在qurt，所以需要手动定义以便在commander中能够使用， "2" is for quadrotor（枚举值，四轴飞行器），MAV_TYPE - enum</span></span><br><span class="line">            run_cmd(apps, appargs)</span><br><span class="line">        void qurt_external_hook(void) __attribute__((weak))      <span class="comment">#start external function</span></span><br></pre></td></tr></table></figure></p>
<p>adsp端配置文件如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># W:\uav\Firmware\posix-configs\eagle\flight\px4-flight.config</span></span><br><span class="line">uorb start</span><br><span class="line">param <span class="built_in">set</span> xx  xx</span><br><span class="line">commander start </span><br><span class="line"></span><br><span class="line">param <span class="built_in">set</span> RC_RECEIVER_TYPE <span class="number">1</span>    <span class="comment"># 为c中相关的地方提供参数， 类似于外部宏定义 ?</span></span><br><span class="line">/**</span><br><span class="line">**  _params_handles.rc_receiver_<span class="built_in">type</span>	=	param_find(<span class="string">"RC_RECEIVER_TYPE"</span>); <span class="comment"># W:\uav\Firmware\src\drivers\rc_receiver\rc_receiver_main.cpp</span></span><br><span class="line">**  PARAM_DEFINE_INT32(RC_RECEIVER_TYPE, <span class="number">1</span>);  <span class="comment"># W:\uav\Firmware\src\drivers\rc_receiver\rc_receiver_params.c)</span></span><br><span class="line">**/</span><br><span class="line"></span><br><span class="line">rc_receiver start -D /dev/tty-<span class="number">1</span></span><br><span class="line"></span><br><span class="line">attitude_estimator_q start</span><br><span class="line">position_estimator_inav start</span><br><span class="line">mc_pos_control start</span><br><span class="line">mc_att_control start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">param <span class="built_in">set</span> xx  xx</span><br><span class="line">sensors start</span><br><span class="line"></span><br><span class="line">param <span class="built_in">set</span> xx  xx</span><br><span class="line"></span><br><span class="line">mpu9x50 start -D /dev/spi-<span class="number">1</span>    ---&gt;  driver/mpu9x50 ---&gt; module/sensors ---&gt; ... ---&gt; drivers/uart_esc</span><br><span class="line">uart_esc start -D /dev/tty-<span class="number">2</span></span><br><span class="line">csr_gps start -D /dev/tty-<span class="number">3</span></span><br><span class="line">pressure start -D /dev/i2c-<span class="number">2</span></span><br><span class="line">list_devices</span><br><span class="line">list_files</span><br><span class="line">list_tasks</span><br><span class="line">list_topics</span><br></pre></td></tr></table></figure></p>
<h3 id="uorb_&amp;_muorb">uorb &amp; muorb</h3><p>uorb&amp;muorb是负责数据传输的模块。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关键路径</span></span><br><span class="line">W:\uav\Firmware\src\modules\uORB\uORBCommon.hpp</span><br></pre></td></tr></table></figure></p>
<h4 id="uorb_start">uorb start</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\modules\uORB\uORBMain.cpp</span><br><span class="line">int uorb_main(int argc, char *argv[])</span><br><span class="line">    g_dev = new uORB::DeviceMaster(uORB::PUBSUB); </span><br><span class="line">        ...    (W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.hpp)</span><br><span class="line">    g_dev-&gt;init()</span><br><span class="line">        VDev-&gt;init()              W:\uav\Firmware\src\drivers\device\vdev.cpp  , 父类</span><br><span class="line">            device-&gt;init()         W:\uav\Firmware\src\drivers\device\vdev.cpp, 父类</span><br><span class="line">            register_driver(_devname, (void *)this); <span class="comment"># 注册驱动</span></span><br></pre></td></tr></table></figure>
<p>W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.hpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">class uORB::DeviceNode : public device::VDev</span><br><span class="line">&#123;</span><br><span class="line">virtual int   open(device::file_t *filp);</span><br><span class="line">virtual int   ioctl(device::file_t *filp, int cmd, unsigned long arg);</span><br><span class="line">...</span><br><span class="line">static ssize_t    publish(const orb_metadata *meta, orb_advert_t handle, const void *data);</span><br><span class="line">...</span><br><span class="line">int16_t process_add_subscription(int32_t rateInHz);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Master control device <span class="keyword">for</span> ObjDev.</span><br><span class="line"> *</span><br><span class="line"> * Used primarily to create new objects via the ORBIOCCREATE</span><br><span class="line"> * ioctl.</span><br><span class="line"> */</span><br><span class="line">class uORB::DeviceMaster : public device::VDev</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">	DeviceMaster(Flavor f);</span><br><span class="line">	~DeviceMaster();</span><br><span class="line"></span><br><span class="line">	static uORB::DeviceNode *GetDeviceNode(const char *node_name);</span><br><span class="line"></span><br><span class="line">	virtual int   ioctl(device::file_t *filp, int cmd, unsigned long arg);</span><br><span class="line">private:</span><br><span class="line">	Flavor      _flavor;</span><br><span class="line">	static std::map&lt;std::string, uORB::DeviceNode *&gt; _node_map;  <span class="comment"># DeviceNode 集合 </span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>　</p>
<h4 id="muorb_start">muorb start</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uORBDevices_posix.cpp  </span><br><span class="line">        ---&gt; W:\uav\Firmware\src\drivers\device\vdev_posix.cpp      </span><br><span class="line">                 uorb  px4_write() px4_<span class="built_in">read</span>() px4_ioctl() px4_poll() 等底层实现 ？</span><br></pre></td></tr></table></figure>
<h5 id="Krait_muorb">Krait muorb</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int muorb_main(int argc, char *argv[]) (W:\uav\Firmware\src\modules\muorb\krait\muorb_main.cpp)</span><br><span class="line"><span class="string">"start"</span></span><br><span class="line">    uORB::Manager::get_instance()-&gt;<span class="built_in">set</span>_uorb_communicator(uORB::KraitFastRpcChannel::GetInstance()); <span class="comment"># register the fast rpc channel with UORB.</span></span><br><span class="line">        uORB::Manager *uORB::Manager::get_instance() (W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.cpp)</span><br><span class="line">        static uORB::KraitFastRpcChannel *GetInstance(W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.hpp) <span class="comment"># 获取uORB::KraitFastRpcChannel实例, invoke constructor</span></span><br><span class="line">    uORB::KraitFastRpcChannel::GetInstance()-&gt;Start(); <span class="comment"># start the KaitFastRPC channel thread.</span></span><br><span class="line">        void uORB::KraitFastRpcChannel::Start() (W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.cpp)  <span class="comment"># start </span></span><br><span class="line"></span><br><span class="line"><span class="string">"stop"</span>  </span><br><span class="line">    void uORB::KraitFastRpcChannel::Stop()</span><br></pre></td></tr></table></figure>
<h4 id="muorb通信">muorb通信</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">==========================================================================================================================</span><br><span class="line"> Krait muorb                                         (invoke)----&gt;                                             adsp muorb</span><br><span class="line">(uORBKraitFastRpcChannel.cpp)                                                                             (adsp\px4muorb.cpp)</span><br><span class="line">==========================================================================================================================</span><br></pre></td></tr></table></figure>
<p>W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.hpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">namespace uORB</span><br><span class="line">&#123;</span><br><span class="line">class KraitFastRpcChannel;</span><br><span class="line">&#125;</span><br><span class="line">class uORB::KraitFastRpcChannel : public uORBCommunicator::IChannel --&gt; private  constructor. </span><br><span class="line"></span><br><span class="line">static uORB::KraitFastRpcChannel *GetInstance (<span class="comment"># W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.hpp)</span></span><br><span class="line">    uORB::KraitFastRpcChannel::KraitFastRpcChannel() (W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.cpp) <span class="comment"># constructor begin</span></span><br><span class="line">        _KraitWrapper.Initialize();</span><br><span class="line">           int px4muorb_orb_initialize() （W:\uav\Firmware\src\modules\muorb\adsp\px4muorb.cpp） <span class="comment"># 调用adsp中initial</span></span><br><span class="line">                dspal_main(argc, argv); （W:\uav\Firmware\src\platforms\qurt\px4_layer\main.cpp）</span><br><span class="line">    int16_t uORB::KraitFastRpcChannel::add_subscription(const char *messageName, int32_t msgRateInHz)</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p>
<h4 id="uorb通信">uorb通信</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">==========================================================================</span><br><span class="line">uorb      (invoke)----&gt;    krait muorb      (invoke)----&gt;     adsp muorb</span><br><span class="line">==========================================================================</span><br></pre></td></tr></table></figure>
<h4 id="add_subscriber">add subscriber</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">void uORB::DeviceNode::add_internal_subscriber() (W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.cpp  <span class="comment"># 调用adsp 和 Krait中muorb中实现的 接口 ？)</span></span><br><span class="line">    int16_t uORB::KraitFastRpcChannel::add_subscription(const char *messageName, int32_t msgRateInHz) (W:\uav\Firmware\src\modules\muorb\krait\uORBKraitFastRpcChannel.cpp)</span><br><span class="line">        int px4muorb_add_subscriber(const char *name) (W:\uav\Firmware\src\modules\muorb\adsp\px4muorb.cpp)</span><br><span class="line">            uORB::FastRpcChannel::GetInstance(); // 获取adsp FastRpcChannel 实例， 构造方法 </span><br><span class="line">                uORB::FastRpcChannel::FastRpcChannel()</span><br><span class="line">                    初始化...</span><br><span class="line">                    _RemoteSubscribers.clear(); <span class="comment"># std::set&lt;std::string&gt; _RemoteSubscribers   远端订阅集？</span></span><br><span class="line">	    channel-&gt;AddRemoteSubscriber(name);</span><br><span class="line">                _RemoteSubscribers.insert(messageName); <span class="comment"># 插入一个message</span></span><br><span class="line">            uORBCommunicator::IChannelRxHandler *rxHandler  = channel-&gt;GetRxHandler();</span><br><span class="line">            rxHandler-&gt;process_add_subscription(name, <span class="number">0</span>);</span><br><span class="line">                virtual int16_t process_add_subscription(const char *messageName, int32_t msgRateInHz) = <span class="number">0</span>;   <span class="comment">#无源文件， 库</span></span><br></pre></td></tr></table></figure>
<p>W:\uav\Firmware\src\modules\muorb\adsp\uORBFastRpcChannel.hpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">namespace uORB</span><br><span class="line">&#123;</span><br><span class="line">class FastRpcChannel;</span><br><span class="line">&#125;</span><br><span class="line">class uORB::FastRpcChannel : public uORBCommunicator::IChannel</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>W:\uav\Firmware\src\modules\uORB\uORBCommunicator.hpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Class passed to the communication link implement to provide callback <span class="keyword">for</span> received</span><br><span class="line"> * messages over a channel.</span><br><span class="line"> */</span><br><span class="line">class uORBCommunicator::IChannelRxHandler</span><br><span class="line"> 	virtual int16_t process_add_subscription(const char *messageName, int32_t msgRateInHz) = <span class="number">0</span>;</span><br></pre></td></tr></table></figure></p>
<p>W:\uav\Firmware\src\modules\uORB\uORBDevices_posix.cpp  ( apps processor 数据交互 ？)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">void uORB::DeviceNode::add_internal_subscriber()</span><br><span class="line">int16_t uORB::DeviceNode::process_add_subscription(int32_t rateInHz)</span><br><span class="line">    uORBCommunicator::IChannel *uORB::Manager::get_uorb_communicator(void) <span class="comment"># 获取 uORBCommunicator::IChannel</span></span><br><span class="line">        ch-&gt;send_message(_meta-&gt;o_name, _meta-&gt;o_size, _data);</span><br><span class="line"></span><br><span class="line">int uORB::DeviceNode::ioctl(device::file_t *filp, int cmd, unsigned long arg)</span><br><span class="line"><span class="built_in">read</span>()  </span><br><span class="line">write()</span><br><span class="line">int uORB::DeviceMaster::ioctl(device::file_t *filp, int cmd, unsigned long arg)  <span class="comment"># create new objects </span></span><br><span class="line">	switch (cmd) &#123;</span><br><span class="line">	<span class="keyword">case</span> ORBIOCADVERTISE: &#123;</span><br><span class="line">                /* construct the new node */</span><br><span class="line">		node = new uORB::DeviceNode(meta, objname, devpath, adv-&gt;priority);                </span><br><span class="line">		_node_map[std::string(nodepath)] = node; // add to the node map;.</span><br></pre></td></tr></table></figure></p>
<p>W:\uav\Firmware\src\modules\uORB\uORBManager_posix.cpp （px4_ioctl）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int16_t uORB::Manager::process_add_subscription(const char *messageName, int32_t msgRateInHz)</span><br><span class="line"></span><br><span class="line">orb_advert_t uORB::Manager::orb_advertise_multi(const struct orb_metadata *meta, const void *data, int *instance,int priority)</span><br><span class="line">    int px4_ioctl(int fd, int cmd, unsigned long arg) (W:\uav\Firmware\src\drivers\device\vdev_posix.cpp)</span><br><span class="line">        dev-&gt;ioctl(filemap[fd], cmd, arg);</span><br><span class="line">            int VDev::ioctl(file_t *filep, int cmd, unsigned long arg)( W:\uav\Firmware\src\drivers\device\vdev.cpp)</span><br></pre></td></tr></table></figure></p>
<p>W:\uav\Firmware\src\drivers\drv_orb_dev.h</p>
<p>W:\uav\Firmware\src\drivers\device\vdev.cpp</p>
<p> 编译后执行程序 打印路径变成<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\apq8074-le-<span class="number">1</span>-<span class="number">0</span>_ap_standard_oem\apps_proc\oe-core\build\tmp-eglibc\work\cortexa8hf-vfp-neon-linux-gnueabi\adsprpc\<span class="number">1.0</span>-r0\adsprpc-<span class="number">1.0</span>\src</span><br><span class="line">W:\uav\apq8074-le-<span class="number">1</span>-<span class="number">0</span>_ap_standard_oem\apps_proc\adsprpc\src\listener_android.c</span><br><span class="line">W:\uav\apq8074-le-<span class="number">1</span>-<span class="number">0</span>_ap_standard_oem\apps_proc\adsprpc\src\adsp_listener_stub.c</span><br><span class="line">W:\uav\apq8074-le-<span class="number">1</span>-<span class="number">0</span>_ap_standard_oem\apps_proc\adsprpc\src\fastrpc_apps_user.c</span><br><span class="line">W:\uav\apq8074-le-<span class="number">1</span>-<span class="number">0</span>_ap_standard_oem\apps_proc\adsprpc\src\rpcmem.c</span><br></pre></td></tr></table></figure></p>
<h3 id="数据传输流程">数据传输流程</h3><p>adsp —&gt; libmpu9x50.so-&gt;mpu9x50_main.cpp-&gt;orb<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\drivers\mpu9x50\mpu9x50_main.<span class="function">cpp</span><br><span class="line"><span class="keyword">int</span> <span class="title">mpu9x50_main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> <span class="params">(device = myoptarg=dev/spi-1 )</span></span><br><span class="line">    mpu9x50::<span class="title">start</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">task_main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span><br><span class="line">            ...    <span class="params">(libmpu9x50.so,  adsp 操作接口)</span></span><br><span class="line">            <span class="title">create_pubs</span><span class="params">()</span>    # 创建 uorb publications   </span><br><span class="line">                  _gyro_pub </span>= orb_advertise(ORB_ID(sensor_xxx), &amp;_xxx);     <span class="preprocessor"># 通知 公布主题	</span></span><br><span class="line">	    _params_sub = orb_subscribe(ORB_ID(parameter_update));     <span class="preprocessor"># 订阅 parameter_update topic</span></span><br><span class="line">	    <span class="keyword">while</span> (!_task_should_exit) &#123;</span><br><span class="line">mpu9x50_get_data(&amp;_data)</span><br><span class="line">parameter_update_poll(); <span class="preprocessor"># 轮询 parameter update (W:\uav\Firmware\src\modules\uORB\topics\parameter_update.h)</span></span><br><span class="line">publish_reports(); <span class="preprocessor"># 发布sensors主题</span></span><br></pre></td></tr></table></figure></p>
<h3 id="commander">commander</h3><p>飞行安全管理， 订阅相关主题， 用来检查飞行安全，并做相应处理，。。。。。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">W:\uav\Firmware\src\modules\commander\commander.cpp</span><br><span class="line">int commander_main(int argc, char *argv[])</span><br><span class="line">    int commander_thread_main(int argc, char *argv[])</span><br><span class="line">        ...      <span class="comment"># set parameters  -&gt; mavlink</span></span><br><span class="line">        <span class="comment"># 初始化vehicle_status_s (W:\uav\Firmware\src\modules\uORB\topics\vehicle_status.h)</span></span><br><span class="line">        main_states_str[vehicle_status_s::MAIN_STATE_MAX]; </span><br><span class="line">        arming_states_str[] / nav_states_str[]</span><br><span class="line">        ...</span><br><span class="line">        orb_advertise(ORB_ID(vehicle_status), &amp;status); <span class="comment"># 公布vehicle_status</span></span><br><span class="line">        orb_advertise(ORB_ID(vehicle_control_mode), &amp;control_mode);</span><br><span class="line">        orb_advertise(ORB_ID(actuator_armed), &amp;armed);</span><br><span class="line">        dm_<span class="built_in">read</span>(DM_KEY_MISSION_STATE, <span class="number">0</span>, &amp;mission, sizeof(mission_s)</span><br><span class="line">         orb_advertise(ORB_ID(offboard_mission), &amp;mission);</span><br><span class="line">         orb_publish(ORB_ID(offboard_mission), mission_pub, &amp;mission);</span><br><span class="line"></span><br><span class="line">        /* Start monitoring loop */</span><br><span class="line">        rc_calibration_check(mavlink_fd);   <span class="comment">#遥控器校准？</span></span><br><span class="line">        orb_subscribe(ORB_ID(safety))</span><br><span class="line">        orb_subscribe(ORB_ID(mission_result))</span><br><span class="line">        orb_subscribe(ORB_ID(geofence_result))</span><br><span class="line">        orb_subscribe(ORB_ID(manual_control_setpoint)) <span class="comment"># 订阅manual control data</span></span><br><span class="line">        orb_subscribe(ORB_ID(offboard_control_mode))</span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_global_position)) <span class="comment">#订阅global position</span></span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_<span class="built_in">local</span>_position))</span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_land_detected))</span><br><span class="line"></span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_gps_position))</span><br><span class="line">        orb_subscribe(ORB_ID(sensor_combined))</span><br><span class="line">        orb_subscribe(ORB_ID(differential_pressure))</span><br><span class="line">        orb_subscribe(ORB_ID(vehicle_<span class="built_in">command</span>))</span><br><span class="line">        orb_subscribe(ORB_ID(parameter_update))</span><br><span class="line">        orb_subscribe(ORB_ID(battery_status))</span><br><span class="line">        orb_subscribe(ORB_ID(subsystem_info))</span><br><span class="line">        orb_subscribe(ORB_ID(position_setpoint_triplet))</span><br><span class="line">        orb_subscribe(ORB_ID(system_power))</span><br><span class="line">        orb_subscribe(ORB_ID_VEHICLE_ATTITUDE_CONTROLS)</span><br><span class="line">        orb_subscribe(ORB_ID(vtol_vehicle_status))</span><br><span class="line"></span><br><span class="line">        param_get(_param_sys_<span class="built_in">type</span>, &amp;(status.system_<span class="built_in">type</span>)) <span class="comment"># update vehicle status(vehicle_status_s ) to find out vehicle type (required for preflight checks)</span></span><br><span class="line">        <span class="comment"># Run preflight check</span></span><br><span class="line">        </span><br><span class="line">        commander_boot_timestamp = hrt_absolute_time() <span class="comment"># 获取启动时间戳</span></span><br><span class="line"></span><br><span class="line">        pthread_create(&amp;commander_low_prio_thread, &amp;commander_low_prio_attr, commander_low_prio_loop, NULL);</span><br><span class="line">            px4_poll(&amp;fds[<span class="number">0</span>], (sizeof(fds) / sizeof(fds[<span class="number">0</span>])), <span class="number">1000</span>)</span><br><span class="line">            orb_copy(ORB_ID(vehicle_<span class="built_in">command</span>), cmd_sub, &amp;cmd)</span><br><span class="line">            <span class="comment"># handel command</span></span><br><span class="line">        <span class="keyword">while</span>()</span><br><span class="line">            更新 parameter</span><br><span class="line">            orb_check(param_changed_sub, &amp;updated)  <span class="comment"># 检查主题是否更新， 每次获取copy前执行， 或者执行poll()</span></span><br><span class="line">            orb_copy(ORB_ID(parameter_update), param_changed_sub, &amp;param_changed) <span class="comment"># 从订阅主题中获取更新数据存在param_changed</span></span><br><span class="line">            通过parameters获取值？</span><br><span class="line">            orb_copy(ORB_ID(manual_control_setpoint), sp_man_sub, &amp;sp_man) <span class="comment"># 获取订阅主题manual_control_setpoint 数据</span></span><br><span class="line">            orb_copy(ORB_ID(offboard_control_mode), offboard_control_mode_sub, &amp;offboard_control_mode)</span><br><span class="line"></span><br><span class="line">            orb_subscribe_multi(ORB_ID(telemetry_status), i)  <span class="comment">#  订阅多个不同来源的 telemetry_status主题（最多四个）   遥控器 ？</span></span><br><span class="line">            orb_copy(ORB_ID(telemetry_status), telemetry_subs[i], &amp;telemetry)</span><br><span class="line"></span><br><span class="line">            orb_copy(ORB_ID(sensor_combined), sensor_sub, &amp;sensors)</span><br><span class="line">            orb_copy(ORB_ID(differential_pressure), diff_pres_sub, &amp;diff_pres)</span><br><span class="line">            orb_copy(ORB_ID(system_power), system_power_sub, &amp;system_power)</span><br><span class="line">            orb_copy(ORB_ID(safety), safety_sub, &amp;safety)</span><br><span class="line">            orb_copy(ORB_ID(vtol_vehicle_status), vtol_vehicle_status_sub, &amp;vtol_status) <span class="comment"># 垂直起降</span></span><br><span class="line">            orb_copy(ORB_ID(vehicle_global_position), global_position_sub, &amp;gpos)</span><br><span class="line">            orb_copy(ORB_ID(vehicle_<span class="built_in">local</span>_position), <span class="built_in">local</span>_position_sub, &amp;<span class="built_in">local</span>_position)</span><br><span class="line">            orb_copy(ORB_ID(vehicle_land_detected), land_detector_sub, &amp;land_detector)</span><br><span class="line">            orb_copy(ORB_ID(battery_status), battery_sub, &amp;battery); <span class="comment"># 后面会根据电池状态做一些判断和处理</span></span><br><span class="line">	    orb_copy(ORB_ID_VEHICLE_ATTITUDE_CONTROLS, actuator_controls_sub, &amp;actuator_controls)</span><br><span class="line">            orb_copy(ORB_ID(subsystem_info), subsys_sub, &amp;info)</span><br><span class="line">            orb_copy(ORB_ID(position_setpoint_triplet), pos_sp_triplet_sub, &amp;pos_sp_triplet)</span><br><span class="line">            orb_copy(ORB_ID(vehicle_gps_position), gps_sub, &amp;gps_position)</span><br><span class="line">            orb_copy(ORB_ID(mission_result), mission_result_sub, &amp;mission_result)</span><br><span class="line">            orb_copy(ORB_ID(geofence_result), geofence_result_sub, &amp;geofence_result)</span><br><span class="line">            遥控器输入信号检查</span><br><span class="line"></span><br><span class="line">            <span class="built_in">set</span>_main_state_rc(&amp;status, &amp;sp_man)  <span class="comment"># manual_control_setpoint主题数据， MANUAL/ALTCTL/POSCTL 模式处理及反馈</span></span><br><span class="line"></span><br><span class="line">            orb_copy(ORB_ID(vehicle_<span class="built_in">command</span>), cmd_sub, &amp;cmd) <span class="comment"># 获取cmd    </span></span><br><span class="line">            handle_<span class="built_in">command</span>(&amp;status, &amp;safety, &amp;cmd, &amp;armed, &amp;_home, &amp;global_position, &amp;<span class="built_in">local</span>_position, &amp;home_pub)  <span class="comment"># 处理cmd</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># publish states (armed, control mode, vehicle status) at least with 5 Hz</span></span><br><span class="line">            <span class="built_in">set</span>_control_mode();</span><br><span class="line">            orb_publish(ORB_ID(vehicle_control_mode), control_mode_pub, &amp;control_mode);</span><br><span class="line">            orb_publish(ORB_ID(vehicle_status), status_pub, &amp;status);</span><br><span class="line">            orb_publish(ORB_ID(actuator_armed), armed_pub, &amp;armed);</span><br></pre></td></tr></table></figure></p>
<p>W:\uav\Firmware\src\platforms\ros\nodes\commander\commander.cpp  （与上一commander.cpp 对应  ？）</p>
<p>W:\uav\Firmware\src\drivers\px4io\px4io.cpp    </p>
<h3 id="Mavlink">Mavlink</h3><p>int mavlink_main(int argc, char *argv[]) # W:\uav\Firmware\src\modules\mavlink\mavlink_main.cpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"start"</span></span><br><span class="line">    Mavlink::start(int argc, char *argv[])</span><br><span class="line">        px4_task_spawn_cmd( )</span><br><span class="line">            Mavlink::start_helper( )</span><br><span class="line">	        Mavlink::task_main(int argc, char *argv[])</span><br><span class="line">                    px4_getopt(argc, argv, <span class="string">"b:r:d:u:m:fpvwx"</span>, &amp;myoptind, &amp;myoptarg)  <span class="comment">#  "-u"  set udp</span></span><br><span class="line">                    px4_open(MAVLINK_LOG_DEVICE, <span class="number">0</span>) <span class="comment"># 创建设备节点， 发送log消息	</span></span><br><span class="line">                    MavlinkReceiver::receive_start(this)	  <span class="comment"># 创建 MavlinkReceiver线程</span></span><br><span class="line">                    MavlinkOrbSubscription *param_sub     <span class="comment"># Mavlink  Orb    Subscription 类  </span></span><br><span class="line">                    = add_orb_subscription(ORB_ID(parameter_update));</span><br><span class="line">                    add_orb_subscription(ORB_ID(vehicle_status))</span><br><span class="line">                    status_sub-&gt;update(&amp;status_time, &amp;status)  <span class="comment"># 调用MavlinkOrbSubscription 中update()， 获取比status_time新的数据</span></span><br><span class="line">                    根据mode添加默认数据流</span><br><span class="line">                    ...</span><br><span class="line">                    LL_APPEND(_mavlink_instances, this) <span class="comment"># 添加mavilink实例链表，初始化等？</span></span><br><span class="line">                    init_udp(); <span class="comment"># 如果为udp模式，初始化socket  , 后面也有初始化串口等操作</span></span><br><span class="line">                    <span class="keyword">while</span>( )</span><br><span class="line">                        <span class="keyword">if</span> (status_sub-&gt;update(&amp;status_time, &amp;status)) 			    			    <span class="built_in">set</span>_hil_enabled(status.hil_state == vehicle_status_s::HIL_STATE_ON)  <span class="comment"># switch HIL mode if required</span></span><br><span class="line">			    <span class="built_in">set</span>_manual_input_mode_generation(status.rc_input_mode == vehicle_status_s::RC_IN_MODE_GENERATED); <span class="comment"># 设置为手动输入生成模式，if true， 通过手动输入mavilink消息在系统总线生成RC_INPUT消息    </span></span><br><span class="line">                        check <span class="keyword">for</span> requested subscriptions</span><br><span class="line">                        configure_stream(_subscribe_to_stream, _subscribe_to_stream_rate)</span><br><span class="line">                        stream-&gt;update(t); <span class="comment"># 更新数据流</span></span><br><span class="line">                        通过其他uarts 或者FTP(File Transfer Protocol) worker 传输消息</span><br><span class="line">			message_buffer_get_ptr((void **)&amp;<span class="built_in">read</span>_ptr, &amp;is_part);</span><br><span class="line">                        ...</span><br><span class="line">                        <span class="comment"># 释放close所有设备消息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"stream"</span></span><br><span class="line">    Mavlink::stream_<span class="built_in">command</span>(int argc, char *argv[])</span><br><span class="line">        strcmp(argv[i], <span class="string">"-s"</span>)</span><br><span class="line">            stream_name = argv[i + <span class="number">1</span>];  <span class="comment"># 配置数据流名如： HIGHRES_IMU，ATTITUDE</span></span><br><span class="line">        strcmp(argv[i], <span class="string">"-r"</span>)</span><br><span class="line">            rate = strtod(argv[i + <span class="number">1</span>], nullptr);  <span class="comment"># 配置传输速率</span></span><br><span class="line">        strcmp(argv[i], <span class="string">"-u"</span>)</span><br><span class="line">            配置udp端口</span><br><span class="line">    </span><br><span class="line">        get_instance_<span class="keyword">for</span>_device(device_name);  <span class="comment"># "/dev/ttyS1" ， 与下二选一</span></span><br><span class="line">        get_instance_<span class="keyword">for</span>_network_port(network_port); <span class="comment"># 获取数据传输文件实例， 此为udp</span></span><br><span class="line">        inst-&gt;configure_stream_threadsafe(stream_name, rate) <span class="comment"># orb订阅在主线程中完成，set _subscribe_to_stream和 _subscribe_to_stream_rate在mavilink主循环中取值</span></span><br><span class="line">            _subscribe_to_stream_rate = rate;</span><br><span class="line">            _subscribe_to_stream = s;  <span class="comment"># stream_name</span></span><br><span class="line"></span><br><span class="line"><span class="string">"boot_complete"</span></span><br><span class="line">    <span class="function"><span class="title">set_boot_complete</span></span>() &#123; _boot_complete = <span class="literal">true</span>; &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Mavlink_Reiceiver">Mavlink Reiceiver</h3><p>MavlinkReceiver::receive_start(Mavlink *parent)  # W:\uav\Firmware\src\modules\mavlink\mavlink_receiver.cpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">*MavlinkReceiver::start_helper(void *context)</span><br><span class="line">MavlinkReceiver *rcv = new MavlinkReceiver((Mavlink *)context)</span><br><span class="line">rcv-&gt;receive_thread(NULL) <span class="comment"># 创建接收线程</span></span><br><span class="line">    <span class="keyword">if</span>从串口读取 ::<span class="built_in">read</span>(uart_fd, buf, sizeof(buf))    </span><br><span class="line">    <span class="keyword">if</span>从udp读取  recvfrom(_mavlink-&gt;get_socket_fd(), buf, sizeof(buf), <span class="number">0</span>, (struct sockaddr *)&amp;srcaddr, &amp;addrlen); </span><br><span class="line">    解析接收的数据  <span class="keyword">if</span> mavlink_parse_char(_mavlink-&gt;get_channel(), buf[i], &amp;msg, &amp;status)  成功</span><br><span class="line">    handle_message(&amp;msg) <span class="comment"># 处理通用信息和命令</span></span><br><span class="line">        handle_message_manual_control(msg); <span class="comment"># case MAVLINK_MSG_ID_MANUAL_CONTROL</span></span><br><span class="line">        mavlink_msg_manual_control_decode(msg, &amp;man); <span class="comment"># 解码手动控制信息到结构体man</span></span><br><span class="line">        处理转换手动控制信息</span><br><span class="line">        orb_advertise(ORB_ID(input_rc), &amp;rc) <span class="comment"># 公布input_rc主题（远程输入消息）</span></span><br><span class="line">        orb_publish(ORB_ID(input_rc), _rc_pub, &amp;rc); <span class="comment"># 发送主题  （sensors.cpp中订阅接收主题， 解析后再发布出去，传到下一级操作？）</span></span><br><span class="line"></span><br><span class="line">    _mavlink-&gt;handle_message(&amp;msg) <span class="comment"># 处理父对象包</span></span><br><span class="line"></span><br><span class="line">    _mavlink-&gt;count_rxbytes(nread) <span class="comment"># 接收信息计数</span></span><br></pre></td></tr></table></figure></p>
<p>W:\uav\Firmware\src\modules\mavlink\mavlink_messages.cpp  # 各种数据流 stream 类定义。。。</p>
<h3 id="uart_esc_start_-D_/dev/tty-2">uart_esc start -D /dev/tty-2</h3><p>int uart_esc_main(int argc, char *argv[])  # W:\uav\Firmware\src\drivers\px4_legacy_driver_wrapper\uart_esc\uart_esc_main.cpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   uart_esc::start()-&gt;task_main(int argc, char *argv[])</span><br><span class="line">       parameters_init(); <span class="comment"># 电调参数初始化</span></span><br><span class="line">       esc = UartEsc::get_instance()  <span class="comment"># 获取电调实例， 实现在libuart.so</span></span><br><span class="line"> 	orb_subscribe(ORB_ID(actuator_controls_0));  <span class="comment"># 订阅主题</span></span><br><span class="line">orb_subscribe(ORB_ID(actuator_armed));</span><br><span class="line">orb_subscribe(ORB_ID(parameter_update));</span><br><span class="line">       initialize_mixer(MIXER_FILENAME) <span class="comment"># 设置mixer</span></span><br><span class="line">       <span class="keyword">while</span>( )</span><br><span class="line">           orb_copy(ORB_ID(actuator_controls_0), _controls_sub, &amp;_controls)</span><br><span class="line">           esc-&gt;send_rpms(motor_rpms, _outputs.noutputs)</span><br></pre></td></tr></table></figure></p>
<h3 id="attitude_estimator_q_start_（主要接收sensor和vehicle_global_position主题，处理，_发布飞行姿态主题）">attitude_estimator_q start     （主要接收sensor和vehicle_global_position主题，处理， 发布飞行姿态主题）</h3><p>W:\uav\Firmware\src\modules\attitude_estimator_q\attitude_estimator_q_main.cpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">int attitude_estimator_q_main(int argc, char *argv[])</span><br><span class="line">    attitude_estimator_q::instance = new AttitudeEstimatorQ</span><br><span class="line">    AttitudeEstimatorQ::start() </span><br><span class="line">        AttitudeEstimatorQ::task_main() </span><br><span class="line"></span><br><span class="line">            orb_subscribe(ORB_ID(sensor_combined))</span><br><span class="line">            orb_subscribe(ORB_ID(parameter_update))</span><br><span class="line">            orb_subscribe(ORB_ID(vehicle_global_position))</span><br><span class="line"></span><br><span class="line">            update_parameters(<span class="literal">true</span>)</span><br><span class="line">            --&gt; AttitudeEstimatorQ::update_parameters(bool force)</span><br><span class="line">                orb_copy(ORB_ID(parameter_update), _params_sub, &amp;param_update)</span><br><span class="line">                param_get(_params_handles.w_acc, &amp;_w_accel)</span><br><span class="line">                ...</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (!_task_should_<span class="built_in">exit</span>)</span><br><span class="line">                px4_poll(fds, <span class="number">1</span>, <span class="number">1000</span>)      <span class="comment"># fds[0].fd = _sensors_sub , 监控订阅的sensors数据</span></span><br><span class="line">                orb_copy(ORB_ID(sensor_combined), _sensors_sub, &amp;sensors)    <span class="comment"># 获取订阅的sensors数据</span></span><br><span class="line">                orb_check(_global_pos_sub, &amp;gpos_updated)    <span class="comment"># 功能类似于px4_poll()</span></span><br><span class="line">                orb_copy(ORB_ID(vehicle_global_position), _global_pos_sub, &amp;_gpos)</span><br><span class="line"></span><br><span class="line">                struct vehicle_attitude_s att    <span class="comment"># 创建飞行姿态结构并赋值</span></span><br><span class="line">                att_pub = orb_advertise(ORB_ID(vehicle_attitude), &amp;att)   <span class="comment"># 公布飞行姿态主题</span></span><br><span class="line">                orb_publish(ORB_ID(vehicle_attitude), _att_pub, &amp;att)     <span class="comment"># 发布飞行姿态主题</span></span><br></pre></td></tr></table></figure></p>
<h3 id="position_estimator_inav_start_（订阅飞控等相关主题，接收到主题后，进行一些算法处理。_发布vehicle_local_position、vehicle_global_position主题）">position_estimator_inav start （订阅飞控等相关主题，接收到主题后，进行一些算法处理。 发布vehicle_local_position、vehicle_global_position主题）</h3><p> W:\uav\Firmware\src\modules\position_estimator_inav\position_estimator_inav_main.c<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">int position_estimator_inav_thread_main(int argc, char *argv[])</span><br><span class="line">    <span class="comment"># declare and safely initialize all structs</span></span><br><span class="line">    struct actuator_controls_s actuator</span><br><span class="line">    struct actuator_armed_s armed</span><br><span class="line">    struct sensor_combined_s sensor</span><br><span class="line">    struct vehicle_gps_position_s gps</span><br><span class="line">    struct home_position_s home</span><br><span class="line">    struct vehicle_attitude_s att</span><br><span class="line">    struct vehicle_<span class="built_in">local</span>_position_s <span class="built_in">local</span>_pos</span><br><span class="line">    struct optical_flow_s flow</span><br><span class="line">    struct vision_position_estimate_s vision</span><br><span class="line">    struct att_pos_mocap_s mocap</span><br><span class="line">    struct vehicle_global_position_s global_pos</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 订阅相关主题</span></span><br><span class="line">    orb_subscribe(ORB_ID(parameter_update));</span><br><span class="line">    orb_subscribe(ORB_ID_VEHICLE_ATTITUDE_CONTROLS);</span><br><span class="line">    orb_subscribe(ORB_ID(actuator_armed));    orb_subscribe(ORB_ID(sensor_combined));    orb_subscribe(ORB_ID(vehicle_attitude));    orb_subscribe(ORB_ID(optical_flow));</span><br><span class="line">    orb_subscribe(ORB_ID(vehicle_gps_position));    orb_subscribe(ORB_ID(vision_position_estimate));    orb_subscribe(ORB_ID(att_pos_mocap));</span><br><span class="line">    orb_subscribe(ORB_ID(home_position));</span><br><span class="line"></span><br><span class="line">    orb_advertise(ORB_ID(vehicle_<span class="built_in">local</span>_position), &amp;<span class="built_in">local</span>_pos)  <span class="comment"># 公布vehicle_local_position主题</span></span><br><span class="line">    inav_parameters_update(&amp;pos_inav_param_handles, &amp;params) <span class="comment"># 获取所有相关参数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">wait</span>_baro &amp;&amp; !thread_should_<span class="built_in">exit</span>)</span><br><span class="line">        px4_poll(fds_init, <span class="number">1</span>, <span class="number">1000</span>)               <span class="comment"># 监控sensor_combined主题</span></span><br><span class="line">        orb_copy(ORB_ID(sensor_combined), sensor_combined_sub, &amp;sensor)    <span class="comment"># 获取sensors数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!thread_should_<span class="built_in">exit</span>)</span><br><span class="line">        px4_poll(fds, <span class="number">1</span>, <span class="number">20</span>)             <span class="comment"># 监控vehicle_attitude主题</span></span><br><span class="line">        orb_copy(ORB_ID(vehicle_attitude), vehicle_attitude_sub, &amp;att)     <span class="comment"># 获取飞行姿态数据</span></span><br><span class="line">        orb_copy(ORB_ID(parameter_update), parameter_update_sub, &amp;update)</span><br><span class="line">        inav_parameters_update(&amp;pos_inav_param_handles, &amp;params)</span><br><span class="line">        orb_copy(ORB_ID_VEHICLE_ATTITUDE_CONTROLS, actuator_sub, &amp;actuator)  <span class="comment"># 获取actuator数据</span></span><br><span class="line">        orb_copy(ORB_ID(actuator_armed), armed_sub, &amp;armed)    <span class="comment"># 获取armed数据   </span></span><br><span class="line">        orb_copy(ORB_ID(sensor_combined), sensor_combined_sub, &amp;sensor) <span class="comment">#  获取sensors数据</span></span><br><span class="line">        acc[i] += PX4_R(att.R, i, j) * sensor.accelerometer_m_s2[j]  <span class="comment"># transform acceleration vector from body frame to NED frame</span></span><br><span class="line">        orb_copy(ORB_ID(optical_flow), optical_flow_sub, &amp;flow)  <span class="comment"># 获取光流数据        ...        orb_copy(ORB_ID(home_position), home_position_sub, &amp;home)   # 获取home position数据        orb_copy(ORB_ID(vision_position_estimate), vision_position_estimate_sub, &amp;vision)  # 获取vehicle vision position数据        orb_copy(ORB_ID(att_pos_mocap), att_pos_mocap_sub, &amp;mocap)  #  获取 vehicle mocap position数据</span></span><br><span class="line">        orb_copy(ORB_ID(vehicle_gps_position), vehicle_gps_position_sub, &amp;gps)  <span class="comment"># 获取vehicle GPS position 数据</span></span><br><span class="line"></span><br><span class="line">        orb_publish(ORB_ID(vehicle_<span class="built_in">local</span>_position), vehicle_<span class="built_in">local</span>_position_pub, &amp;<span class="built_in">local</span>_pos)   <span class="comment"># publish local position        orb_advertise(ORB_ID(vehicle_global_position), &amp;global_pos)        orb_publish(ORB_ID(vehicle_global_position), vehicle_global_position_pub, &amp;global_pos)</span></span><br></pre></td></tr></table></figure></p>
<h3 id="mc_att_control_start">mc_att_control  start</h3><p> W:\uav\Firmware\src\modules\mc_att_control\mc_att_control_main.cpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">int mc_att_control_main(int argc, char *argv[])</span><br><span class="line">    mc_att_control::g_control = new MulticopterAttitudeControl</span><br><span class="line">    MulticopterAttitudeControl::start()</span><br><span class="line">        MulticopterAttitudeControl::task_main()</span><br><span class="line">	    orb_subscribe(ORB_ID(vehicle_attitude_setpoint));	    orb_subscribe(ORB_ID(vehicle_rates_setpoint));	    orb_subscribe(ORB_ID(vehicle_attitude));	    orb_subscribe(ORB_ID(vehicle_control_mode));	    orb_subscribe(ORB_ID(parameter_update));	    orb_subscribe(ORB_ID(manual_control_setpoint));	    orb_subscribe(ORB_ID(actuator_armed));	    orb_subscribe(ORB_ID(vehicle_status));</span><br><span class="line">	    orb_subscribe(ORB_ID(multirotor_motor_limits));</span><br><span class="line"></span><br><span class="line">            orb_copy(ORB_ID(vehicle_attitude), _v_att_sub, &amp;_v_att)  <span class="comment">#  获取飞行姿态主题</span></span><br><span class="line">            <span class="keyword">if</span> (_v_control_mode.flag_control_attitude_enabled)</span><br><span class="line">                orb_publish(_rates_sp_id, _v_rates_sp_pub, &amp;_v_rates_sp) <span class="comment">#  publish attitude rates setpoint</span></span><br><span class="line">            <span class="keyword">else</span> &#123; <span class="keyword">if</span> (_v_control_mode.flag_control_manual_enabled)</span><br><span class="line">                orb_publish(_rates_sp_id, _v_rates_sp_pub, &amp;_v_rates_sp)</span><br><span class="line">            orb_publish(_actuators_id, _actuators_0_pub, &amp;_actuators)</span><br><span class="line">            orb_publish(ORB_ID(mc_att_ctrl_status),_controller_status_pub, &amp;_controller_status)</span><br></pre></td></tr></table></figure></p>
<h3 id="mc_pos_control_start">mc_pos_control start</h3><p> W:\uav\Firmware\src\modules\mc_pos_control\mc_pos_control_main.cpp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">int mc_pos_control_main(int argc, char *argv[])</span><br><span class="line">    pos_control::g_control = new MulticopterPositionControl;</span><br><span class="line">    MulticopterPositionControl::start()</span><br><span class="line">        MulticopterPositionControl::task_main()</span><br><span class="line">	    orb_subscribe(ORB_ID(vehicle_status));</span><br><span class="line">	    orb_subscribe(ORB_ID(vehicle_attitude));</span><br><span class="line">	    orb_subscribe(ORB_ID(vehicle_attitude_setpoint));</span><br><span class="line">	    orb_subscribe(ORB_ID(vehicle_control_mode));</span><br><span class="line">	    orb_subscribe(ORB_ID(parameter_update));</span><br><span class="line">	    orb_subscribe(ORB_ID(manual_control_setpoint));</span><br><span class="line">	    orb_subscribe(ORB_ID(actuator_armed));</span><br><span class="line">	    orb_subscribe(ORB_ID(vehicle_<span class="built_in">local</span>_position));</span><br><span class="line">	    orb_subscribe(ORB_ID(position_setpoint_triplet));</span><br><span class="line">	    orb_subscribe(ORB_ID(vehicle_<span class="built_in">local</span>_position_setpoint));</span><br><span class="line">	    orb_subscribe(ORB_ID(vehicle_global_velocity_setpoint));</span><br><span class="line"></span><br><span class="line">            poll_subscriptions()  <span class="comment"># check &amp; copy所有传感器数据， 初始化更新</span></span><br><span class="line">            --&gt; MulticopterPositionControl::poll_subscriptions()</span><br><span class="line">            <span class="keyword">while</span> (）</span><br><span class="line">                px4_poll(&amp;fds[<span class="number">0</span>], (sizeof(fds) / sizeof(fds[<span class="number">0</span>])), <span class="number">500</span>)   <span class="comment"># 监控vehicle_local_position主题</span></span><br><span class="line">                poll_subscriptions()   <span class="comment">#  check相关数据，if update， 获取数据</span></span><br><span class="line">                update_ref()   <span class="comment">#  position setpoint</span></span><br><span class="line">                <span class="comment"># select control source</span></span><br><span class="line">                control_manual(dt)</span><br><span class="line">                control_offboard(dt)</span><br><span class="line">                control_auto(dt)</span><br><span class="line">                <span class="keyword">if</span> (!_control_mode.flag_control_manual_enabled &amp;&amp;...)</span><br><span class="line">                    orb_publish(ORB_ID(vehicle_attitude_setpoint), _att_sp_pub, &amp;_att_sp) <span class="comment"># 发布vehicle_attitude_setpoint主题</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    orb_publish(ORB_ID(vehicle_global_velocity_setpoint), _global_vel_sp_pub, &amp;_global_vel_sp)  <span class="comment"># 发布 velocity setpoint主题</span></span><br><span class="line">                orb_publish(ORB_ID(vehicle_<span class="built_in">local</span>_position_setpoint), _<span class="built_in">local</span>_pos_sp_pub, &amp;_<span class="built_in">local</span>_pos_sp)   <span class="comment"># 发布vehicle_local_position_setpoint主题</span></span><br><span class="line">                generate attitude setpoint from manual controls</span><br><span class="line">                /* publish attitude setpoint</span><br><span class="line">		 * Do not publish <span class="keyword">if</span> offboard is enabled but position/velocity control is disabled,</span><br><span class="line">		 * <span class="keyword">in</span> this <span class="keyword">case</span> the attitude setpoint is published by the mavlink app</span><br><span class="line">		 */</span><br><span class="line">                orb_publish(ORB_ID(vehicle_attitude_setpoint), _att_sp_pub, &amp;_att_sp)  <span class="comment"># 发布vehicle_attitude_setpoint主题</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;像这种庞大系统的代码， 我一般喜欢先大致了解一下代码结构，然后按照执行流程阅读分析。我阅读的是高通8074平台的px4代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;代码地址：&lt;a href=&quot;https://github.com/ATLFlight/Firmware&quot;&gt;ATLFlight/Firmware&lt;/a&gt;&lt;br&gt;参考文档：&lt;a href=&quot;http://dev.px4.io/tutorial-hello-sky.html?q=&quot;&gt;px4 devguide&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于没有足够的时间再去细细研究, 所以只有这么一个粗略的笔记.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;============================================================================================================&lt;/p&gt;
&lt;h2 id=&quot;关键路径及文件&quot;&gt;关键路径及文件&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;W:\uav\Firmware\src\modules\mavlink   //  信息数据处理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mavlink_main.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mavlink_receiver.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FastRPC   --  aDSP 与 apps 之间远程调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;. 共享内存（不包括L1/L2缓存）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;. aDSP中能支持有限的物理映射&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W:\uav\Firmware\src\modules\muorb\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adsp &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Krait&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W:\uav\Firmware\posix-configs\eagle\flight    // config 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W:\uav\Firmware\src\modules  // 功能模块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W:\uav\Firmware\makefiles\ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W:\uav\Firmware\src\drivers\rc_receiver\rc_receiver_main.cpp   // 遥控器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W:\uav\Firmware\src\drivers\device\vdev.cpp   &lt;span class=&quot;comment&quot;&gt;# Virtual character device base class.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mavilink、uorb 继承于此类&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Uav" scheme="http://huaqianlee.github.io/categories/Uav/"/>
    
    
      <category term="PX4" scheme="http://huaqianlee.github.io/tags/PX4/"/>
    
      <category term="源码分析" scheme="http://huaqianlee.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>手机无人机常用sensor介绍</title>
    <link href="http://huaqianlee.github.io/2016/05/07/Uav/mobile-and-uav-sensors/"/>
    <id>http://huaqianlee.github.io/2016/05/07/Uav/mobile-and-uav-sensors/</id>
    <published>2016-05-06T16:12:14.000Z</published>
    <updated>2016-05-17T16:00:12.712Z</updated>
    
    <content type="html"><![CDATA[<p>一直以来对这些常用的传感器不是很清楚, 有时听到名字或者简称,不知道有什么具体的用途,特地简单总结一下.</p>
<blockquote>
<p>资料皆是网上获取,不能完全保证准确性.</p>
</blockquote>
<h2 id="重力传感器(gravity/g-sensor)">重力传感器(gravity/g-sensor)</h2><p>重力传感器是根据压电效应的原理来工作的, 将加速度转化成电压输出。简单来说是测量内部一片重物(重物和压电片做成一体)重力正交两个方向的分力大小，来判定水平方向。<br>应用场景：手机横竖屏幕切换、翻转静音、平衡球、各种射击、赛车游戏等。</p>
<a id="more"></a>
<h2 id="加速度传感器(Accelerometer)">加速度传感器(Accelerometer)</h2><p>加速度传感器是一种能够测量加速力的电子设备。加速力就是当物体在加速过程中作用在物体上的力，就好比地球引力，也就是重力。一般在手机被提到加速度感应器时，就是指重力感应器。<br>应用场景：微信摇一摇、甩动切歌等, 无人机中用于确定位置和无人机飞行姿态.</p>
<h2 id="距离传感器(Proximity/p-sensor)">距离传感器(Proximity/p-sensor)</h2><p>通过发射特别短的光脉冲，并测量此光脉冲从发射到被物体反射回来的时间，通过测时间来计算与物体之间的距离。<br>应用场景：通话时手机靠近脸部，屏幕背景灯熄灭，离开时背景灯点亮并解锁屏幕。</p>
<h2 id="光线感应器(Light)">光线感应器(Light)</h2><p>对投光器受光器间之光线做遮蔽动作所获得的信号加以运用以完成各种自动化控制。<br>应用场景：自动调整屏幕亮度功能等</p>
<h2 id="三轴陀螺仪(Gyroscope)">三轴陀螺仪(Gyroscope)</h2><p>同时测定6个方向的位置，移动轨迹，加速。单轴的只能测量一个方向的量，也就是一个系统需要三个陀螺仪，而3轴的一个就能替代三个单轴的。测量角速度，以判别物体的运动状态，也称为运动传感器。判断在哪去哪。<br>应用场景：目前主要应用在一些大型手机射击游戏中，如狂野飙车等,用于辅助GPS定位。<br>如下是网上看到的两幅很形象图片：<br>单轴陀螺仪:<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/a_tuoluoyi.gif" alt="single-axis"><br>三轴陀螺仪:<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/tuoluoyi.gif" alt="three-axis"></p>
<h2 id="地磁/磁力计/电子罗盘(Magnetic/compass)">地磁/磁力计/电子罗盘(Magnetic/compass)</h2><p>工作原理：电子罗盘，也叫数字指南针，是利用地磁场来定北极的一种方法。。<br>应用场景：各种指南针以及导航软件、地图等,在无人机，电子罗盘提供关键性的惯性导航和方向定位系统的信息。</p>
<h2 id="气压计_(Barometer)">气压计 (Barometer)</h2><p>气压传感器用于检测大气压强的仪器,实际应用当中气压传感器可作高度计，提示海拔高度，尤其适合登山、户外单车、滑雪以及其他户外运动中，您可以据此在地图上分析高度、寻找正确路径等。同时也用于GPS精确导航（航位推算，上下桥检测等），手机GPS海拔测量，室内室外导航，休闲、体育和医疗健康等监测，天气预报、垂直速度指示（上升/下沉速度），风扇功率控制、温度显示等。 </p>
<h2 id="超声波/声呐(sonar)">超声波/声呐(sonar)</h2><p>应用场景：超声波测距,避障.</p>
<h2 id="光流（camera）">光流（camera）</h2><p>光流法是运动图像分析的重要方法,因为当物体在运动时，它在图像上对应点的亮度模式也在运动。这种图像亮度模式的表观运动（apparent motion）就是光流。光流表达了图像的变化，由于它包含了目标运动的信息，因此可被观察者用来确定目标的运动情况。从本质上说，光流就是你在这个运动着的世界里感觉到的明显的视觉运动。通过光流camera看到物体的相对运动速度是不一样的,通过不同目标的运动速度判断它们与我们的距离。</p>
<h2 id="惯性测量单元(IMU)">惯性测量单元(IMU)</h2><p>同时包含陀螺仪、地磁、加速度计的传感器芯片，如mpu9x50。<br>惯性测量单元结合GPS是维持方向和飞行路径的关键。随着无人机智能化的发展，方向和路径控制是重要的空中交通管理规则。惯性测量单元采用的多轴磁传感器，在本质上都是精准度极高的小型指南针，通过感知方向将数据传输至中央处理器，从而指示方向和速度。</p>
<h2 id="倾角传感器">倾角传感器</h2><p>倾角传感器，集成了陀螺仪和加速度计为飞行控制系统提供保持水平飞行的数据。这类传感器和陀螺仪， 结合加速度计，能够测量到细微的运动变化，使得倾角传感器能够应用于移动程序，如汽车或无人驾驶飞机的陀螺仪补偿。</p>
<p>还有如热传感器、温度传感器、湿度传感器、紫外线传感器、压力传感器等</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直以来对这些常用的传感器不是很清楚, 有时听到名字或者简称,不知道有什么具体的用途,特地简单总结一下.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;资料皆是网上获取,不能完全保证准确性.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;重力传感器(gravity/g-sensor)&quot;&gt;重力传感器(gravity/g-sensor)&lt;/h2&gt;&lt;p&gt;重力传感器是根据压电效应的原理来工作的, 将加速度转化成电压输出。简单来说是测量内部一片重物(重物和压电片做成一体)重力正交两个方向的分力大小，来判定水平方向。&lt;br&gt;应用场景：手机横竖屏幕切换、翻转静音、平衡球、各种射击、赛车游戏等。&lt;/p&gt;
    
    </summary>
    
      <category term="Uav" scheme="http://huaqianlee.github.io/categories/Uav/"/>
    
    
  </entry>
  
  <entry>
    <title>高通无人机8074 BLSP接口说明</title>
    <link href="http://huaqianlee.github.io/2016/04/27/Uav/Qualcomm-uav-blsp-port/"/>
    <id>http://huaqianlee.github.io/2016/04/27/Uav/Qualcomm-uav-blsp-port/</id>
    <published>2016-04-26T16:11:58.000Z</published>
    <updated>2016-08-02T10:11:44.957Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述">概述</h2><p>BLSP是高通对于低速接口的一种管理方式，8074 平台含有两个BLSP(BAM Low-Speed Peripheral) 块，对应于12个BLSP端口。 每一个BLSP块含有最多六个Qualcomm Universal Peripheral (QUP)或六个Uart cores，通过相关手册查询到每个外设属于BLSP多少。结构框图如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/BLSP.png" alt="BLSP"></p>
<blockquote>
<ol>
<li>BAM（Bus Access Manager）is used to move data to/from the peripheral buffers;  2.每个BLSP外设静态连接到一对BAM管道，BLSP支持BAM 和non-BAM-based 数据传输。</li>
</ol>
</blockquote>
<a id="more"></a>
<p>每一个QUP可以被配置为I2C， SPI, UART, UIM接口等，如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/blsp_pin.jpg" alt="blsp_pin"></p>
<h2 id="自定义BLSP口，配置TZ">自定义BLSP口，配置TZ</h2><p>这些端口在aDSP和应用处理器之间共享。为了让BLSP端口独立使用，我们可以在TrustZone（TZ）中定义BLSP 端口的分配，没有权限的子系统访问BLSP 端口将导致系统崩溃。 高通默认已经做好了配置。在DspAL中， 提供了一组设备文件路径映射到硬件，无人机用到的相关口已经在TZ中配置好了，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SPI:  /dev/spi-[<span class="number">1</span>~<span class="number">12</span>]  对应于   BLSP[<span class="number">1</span>~<span class="number">12</span>]上的SPI设备</span><br><span class="line">I2C: /dev/iic-[<span class="number">1</span>-<span class="number">12</span>]      对应于   BLSP[<span class="number">1</span>~<span class="number">12</span>]上的I2C设备</span><br><span class="line">UART: /dev/tty-[<span class="number">1</span>-<span class="number">4</span>]</span><br><span class="line"><span class="comment"># UAV 8074 最多支持4个串口设备，每一个串口设备对应一个BAM设备，</span></span><br></pre></td></tr></table></figure></p>
<p>如果要自定义新的端口，需按于如下方式配置：</p>
<h3 id="计算APPS_BLSP值">计算APPS BLSP值</h3><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/apps_blsp.jpg" alt="apps-BLSP"><br>根据倒数第二列（对应于BAM pipe）计算出结果如下：<br>APPS BLSP1 : 0x00C3000C   [ Format : 0x00 (Apps BLSP1 QUP) ( Apps BLSP1 UART) ]<br>APPS BLSP2 : 0x00F30F33   [ Format : 0x00 (Apps BLSP2 QUP) ( Apps BLSP2 UART) ]</p>
<blockquote>
<p>Apps列对应Y，则表明BLSPx配为Uart或QUP，下同。</p>
</blockquote>
<h3 id="计算ADSP_BLSP值">计算ADSP BLSP值</h3><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/adsp_blsp.jpg" alt="adsp-BLSP"><br>ADSP BLSP1 = 0x0003FF00   [ Format : 0x00 (Adsp BLSP1 QUP) ( Adsp BLSP1 UART) ]<br>ADSP BLSP2 = 0x00FC00CC  [ Format : 0x00 (Adsp BLSP2 QUP) ( Adsp BLSP2 UART) ]</p>
<h3 id="通过计算的值在TZ中配置">通过计算的值在TZ中配置</h3><p>路径：trustzone_images\core\hwengines\bam\8974\bamtgtcfgdata_tz.h</p>
<p>BLSP1:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Replace the highlighted values with ADSP BLSP1 and APPS BLSP1</span><br><span class="line"> </span><br><span class="line">bam_sec_config_<span class="built_in">type</span> bam_tgt_blsp1_secconfig =</span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">#ifdef FEATURE_DRONE_CUSTOMIZATION_1 </span></span><br><span class="line"><span class="comment">#ifdef BAM_TZ_DISABLE_SPI</span></span><br><span class="line">        &#123;<span class="number">0</span>x00C3000C   , TZBSP_VMID_AP, <span class="number">0</span>x0, TZBSP_VMID_AP_BIT&#125;,       // APPS BLSP1</span><br><span class="line">        &#123;<span class="number">0</span>x0003FF00   , TZBSP_VMID_LPASS, <span class="number">0</span>x0, TZBSP_VMID_LPASS_BIT&#125;, // ADSP BLSP1</span><br><span class="line">        &#123;<span class="number">0</span>x00000000, TZBSP_VMID_MSS, <span class="number">0</span>x0, TZBSP_VMID_MSS_BIT&#125;,</span><br><span class="line"><span class="comment">#else</span></span><br><span class="line">        &#123;<span class="number">0</span>x00C3000C   , TZBSP_VMID_AP, <span class="number">0</span>x0, TZBSP_VMID_AP_BIT&#125;,       // APPS BLSP1</span><br><span class="line">        &#123;<span class="number">0</span>x0003FF00   , TZBSP_VMID_LPASS, <span class="number">0</span>x0, TZBSP_VMID_LPASS_BIT&#125;, // ADSP BLSP1</span><br><span class="line">        &#123;<span class="number">0</span>x00000000, TZBSP_VMID_MSS, <span class="number">0</span>x0, TZBSP_VMID_MSS_BIT&#125;,</span><br><span class="line">        &#123;<span class="number">0</span>x00300000, TZBSP_VMID_TZ, <span class="number">0</span>x0, TZBSP_VMID_TZ_BIT&#125;</span><br><span class="line">      </span><br><span class="line"><span class="comment">#endif /*BAM_TZ_DISABLE_SPI*/</span></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>BLSP2:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">bam_sec_config_<span class="built_in">type</span> bam_tgt_blsp2_secconfig =</span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">#ifdef FEATURE_DRONE_CUSTOMIZATION_1 </span></span><br><span class="line">        &#123;<span class="number">0</span>x00F30F33   , TZBSP_VMID_AP, <span class="number">0</span>x0, TZBSP_VMID_AP_BIT&#125;,       // APPS BLSP2</span><br><span class="line">        &#123;<span class="number">0</span>x00FC00CC  , TZBSP_VMID_LPASS, <span class="number">0</span>x0, TZBSP_VMID_LPASS_BIT&#125;   // ADSP BLSP2</span><br><span class="line"><span class="comment">#else</span></span><br><span class="line">        &#123;<span class="number">0</span>x003C0FFF, TZBSP_VMID_AP, <span class="number">0</span>x0, TZBSP_VMID_AP_BIT&#125;,</span><br><span class="line">        &#123;<span class="number">0</span>x00C3F000, TZBSP_VMID_LPASS, <span class="number">0</span>x0, TZBSP_VMID_LPASS_BIT&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="怎么工作">怎么工作</h2><p>在启动期间，aDSP将加载BLSP配置文件初始化串口设备。为了是能运行时配置，可在/usr/share/data/adsp/blsp.config中定义串口设备和BAM端口的映射，bam<em>对应于BLSP</em>。如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tty-<span class="number">1</span> bam-<span class="number">9</span></span><br><span class="line">tty-<span class="number">2</span> bam-<span class="number">6</span></span><br><span class="line">tty-<span class="number">3</span> bam-<span class="number">8</span></span><br><span class="line">tty-<span class="number">4</span> bam-<span class="number">2</span></span><br></pre></td></tr></table></figure></p>
<p>如果串口设备只用TX和RX，需要在最后一行加入 “[2-wire]”作为标示，否则默认为四线：TX，RX，CTS和RTS。</p>
<blockquote>
<ol>
<li>串口根据需要配置，不一定所有都配置；2. 如果运行时指定路径文件不存在或者加载失败，如上所示的默认配置将被使用；3. /usr/share/data/adsp/blsp.config最好设置为只读模式。</li>
</ol>
</blockquote>
<h2 id="Reference">Reference</h2><p>80-NA157-24  Low-Speed Peripherals Overview.pdf<br>80-NB849-1 Rev. J  APQ8074A PQ8074AB Device Specification.pdf<br>80-H9580-1-J_QUALCOMM SNAPDRAGON FLIGHT DEVELOPER GUIDE.pdf<br>80-NU767-1 G Linux BAM Low-Speed Peripherals Configuration and Debug Guide  .pdf</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;&lt;p&gt;BLSP是高通对于低速接口的一种管理方式，8074 平台含有两个BLSP(BAM Low-Speed Peripheral) 块，对应于12个BLSP端口。 每一个BLSP块含有最多六个Qualcomm Universal Peripheral (QUP)或六个Uart cores，通过相关手册查询到每个外设属于BLSP多少。结构框图如下：&lt;br&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/BLSP.png&quot; alt=&quot;BLSP&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;BAM（Bus Access Manager）is used to move data to/from the peripheral buffers;  2.每个BLSP外设静态连接到一对BAM管道，BLSP支持BAM 和non-BAM-based 数据传输。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Uav" scheme="http://huaqianlee.github.io/categories/Uav/"/>
    
    
  </entry>
  
</feed>
