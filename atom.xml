<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andy.Lee&#39;s  Blog</title>
  <subtitle>Good good study, day day up !</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huaqianlee.github.io/"/>
  <updated>2017-11-08T14:25:42.127Z</updated>
  <id>http://huaqianlee.github.io/</id>
  
  <author>
    <name>Andy.Lee</name>
    <email>huaqianlee@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Getting Started With RecyclerView and CardView on Android</title>
    <link href="http://huaqianlee.github.io/2017/11/08/Android/Getting-Started-With-RecyclerView-and-CardView-on-Android/"/>
    <id>http://huaqianlee.github.io/2017/11/08/Android/Getting-Started-With-RecyclerView-and-CardView-on-Android/</id>
    <published>2017-11-08T14:23:59.000Z</published>
    <updated>2017-11-08T14:25:42.127Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>偶然看到这篇文章，觉得写得很好，简单明了，所以尝试将其翻译一下。</p>
</blockquote>
<p>如果你想创作一个用列表显示数据的Android应用，Android L提供了两个让你更容易实现的新特性：RecyclerView和CardView。通过用这些控件，可以很容易让你的app符合Google的Material Design规范。</p>
<p>创作APP时一个模板参考的好地方：<a href="https://go.redirectingat.com/?id=1342X589339&amp;site=code.tutsplus.com&amp;xs=1&amp;isjs=1&amp;url=https%3A%2F%2Fcodecanyon.net%2Fcategory%2Fmobile%2Fandroid%3F_ga%3D2.255032513.873197305.1503543294-826134730.1503543294&amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;xcreo=0&amp;xed=0&amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;xtz=-480" target="_blank" rel="external">Envato market</a>。你可以找到成千上万的APP模板，从<a href="https://go.redirectingat.com/?id=1342X589339&amp;site=code.tutsplus.com&amp;xs=1&amp;isjs=1&amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Flayar-tancep-youtube-app-for-android%2F5190062%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;xcreo=0&amp;xed=0&amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;xtz=-480" target="_blank" rel="external">Youtube</a>到<a href="https://go.redirectingat.com/?id=1342X589339&amp;site=code.tutsplus.com&amp;xs=1&amp;isjs=1&amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Fflappybot-an-obstacle-avoidance-game%2F6827330%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;xcreo=0&amp;xed=0&amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;xtz=-480" target="_blank" rel="external">obstacleavoidance game</a>。</p>
<p>或者你可以尝试一下<a href="https://codecanyon.net/item/universal-full-multipurpose-android-app/6512720?_ga=2.217207135.873197305.1503543294-826134730.1503543294" target="_blank" rel="external">通用的Android app模板</a>,它能为你创作任何种类app提供一个坚实的基础。<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/recyclerview_cardview/Universal-Android-app.png" alt="Universal-Android-app"><br><a id="more"></a></p>
<h1 id="前提">前提</h1><p>为了继续，你应该使用最新版本Android Studio。你可以从<a href="http://developer.android.com/sdk/index.html" target="_blank" rel="external">Android 开发者官网</a>获得它。</p>
<h2 id="支持老版本">支持老版本</h2><p>在写这篇文章时，只有少于2%的Android设备运行在Android L上。无论怎样，多亏v7 Support Library，你能使用RecyclerView和CardView控件运行在老版本的安卓设备上面，通过在你工程中build.grade文件添加如下依赖片段实现：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:cardview-v7:21.0.+'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:21.0.+'</span></span><br></pre></td></tr></table></figure></p>
<h2 id="创建CardView">创建CardView</h2><p><em>CardView</em>是一个<em>ViewGroup</em>，像其他<em>ViewGroup</em>一样，它能通过Layout xml文件添加到你的 <em>Activity</em> 或者 <em>Fragment</em>。</p>
<p>为了创建一个空<em>CardView</em>，你应该添加如下代码片段到你的layout XML文件中：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">        <span class="attribute">xmlns:card_view</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>最为一个更实际的例子，咱们创建一个<em>LinearLayout</em>并将<em>CardView</em>作为子控件放在里面。<em>CardView</em>可以代表一个人，包含如下信息：</p>
<ul>
<li><em>TextView</em> - 显示人名</li>
<li><em>TextView</em> - 显示年纪</li>
<li><em>ImageView</em> - 显示照片</li>
</ul>
<p>xml内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span> <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:padding</span>=<span class="value">"16dp"</span></span><br><span class="line">    &gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/cv"</span></span><br><span class="line">        &gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">RelativeLayout</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:padding</span>=<span class="value">"16dp"</span></span><br><span class="line">            &gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/person_photo"</span></span><br><span class="line">                <span class="attribute">android:layout_alignParentLeft</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:layout_alignParentTop</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:layout_marginRight</span>=<span class="value">"16dp"</span></span><br><span class="line">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/person_name"</span></span><br><span class="line">                <span class="attribute">android:layout_toRightOf</span>=<span class="value">"@+id/person_photo"</span></span><br><span class="line">                <span class="attribute">android:layout_alignParentTop</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:textSize</span>=<span class="value">"30sp"</span></span><br><span class="line">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/person_age"</span></span><br><span class="line">                <span class="attribute">android:layout_toRightOf</span>=<span class="value">"@+id/person_photo"</span></span><br><span class="line">                <span class="attribute">android:layout_below</span>=<span class="value">"@+id/person_name"</span></span><br><span class="line">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>如果这个xml文件被用作<em>Activity</em>的layout，并且给<em>TextView</em>和ImageView*设置有意义的值，那么在Android设备上面它看起来应该像这个样子：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/recyclerview_cardview/device_2015.png" alt="device"></p>
<h2 id="创建RecyclerView">创建RecyclerView</h2><h3 id="在Layout中定义它">在Layout中定义它</h3><p>使用一个<em>RecyclerView</em>实例有一些复杂，但是在layout xml中定义它十分简单。可以定义如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/rv"</span></span><br><span class="line">    /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>通过如下代码片段在你的<em>Activity</em>中去获得句柄：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RecyclerView rv = (RecyclerView)findViewById(R.id.rv);</span><br></pre></td></tr></table></figure></p>
<p>如果你确定<em>RecyclerView</em>的大小不会改变，你可以添加如下语句：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rv.setHasFixedSize(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure></p>
<h3 id="使用LayoutManager">使用LayoutManager</h3><p>和<em>ListView</em>不一样，<em>RecyclerView</em>需要一个<em>LayoutManger</em>去管理其子项的位置。你可以通过继承<em>RecyclerView.LayoutManager</em>类定义自己的<em>LayoutManager</em>。不过，大多数案子里面，你直接使用如下预定义的<em>LayoutManager</em>子类就可以了：</p>
<ul>
<li>LinearLayoutManager</li>
<li>GridLayoutManager</li>
<li>StaggeredGridLayoutManager<br>在这篇教程里，我将使用<em>LinearLayoutManager</em>，它默认将让你的<em>RecyclerView</em>看起来像一个<em>ListView</em>。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LinearLayoutManager llm = <span class="keyword">new</span> LinearLayoutManager(context);</span><br><span class="line">rv.setLayoutManager(llm);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="定义内容">定义内容</h3><p>和<em>ListView</em>一样，<em>RecyclerView</em>也需要一个适配器去接入数据。但是在创建适配器前，我们先创建我们需要的数据。创建一个简单的类来代表一个人然后写一个方法来初始化一个<em>Person</em>对象集：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    String age;</span><br><span class="line">    <span class="keyword">int</span> photoId;</span><br><span class="line"> </span><br><span class="line">    Person(String name, String age, <span class="keyword">int</span> photoId) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.photoId = photoId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">private</span> List&lt;Person&gt; persons;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// This method creates an ArrayList that has three Person objects</span></span><br><span class="line"><span class="comment">// Checkout the project associated with this tutorial on Github if</span></span><br><span class="line"><span class="comment">// you want to use the same images.</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initializeData</span><span class="params">()</span></span>&#123;</span><br><span class="line">    persons = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">"Emma Wilson"</span>, <span class="string">"23 years old"</span>, R.drawable.emma));</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">"Lavery Maiss"</span>, <span class="string">"25 years old"</span>, R.drawable.lavery));</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">"Lillie Watts"</span>, <span class="string">"35 years old"</span>, R.drawable.lillie));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="创建适配器">创建适配器</h3><p>要创建一个<em>RecyclerView</em>可以使用的适配器，你必须继承<em>RecyclerView.Adapter</em>。这个适配器遵循<strong>View holder</strong>设计模式，也就意味着你需要定义一个类继承与<em>RecyclerView.ViewHolder</em>。这种模式最大限度减少调用<em>findViewByIdea</em>方法。</p>
<p>前面我们已经在 XML Layout中定义了一个<em>CardView</em>代表一个人。我们将重复利用此布局文件。在我们自定义<em>ViewHolder</em>的构造方法中，初始化此视图属于<em>RecyclerView</em>的子项。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RVAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RVAdapter</span>.<span class="title">PersonViewHolder</span>&gt;</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;      </span><br><span class="line">        CardView cv;</span><br><span class="line">        TextView personName;</span><br><span class="line">        TextView personAge;</span><br><span class="line">        ImageView personPhoto;</span><br><span class="line"> </span><br><span class="line">        PersonViewHolder(View itemView) &#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cv = (CardView)itemView.findViewById(R.id.cv);</span><br><span class="line">            personName = (TextView)itemView.findViewById(R.id.person_name);</span><br><span class="line">            personAge = (TextView)itemView.findViewById(R.id.person_age);</span><br><span class="line">            personPhoto = (ImageView)itemView.findViewById(R.id.person_photo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来，为自定义适配器增加一个构造方法来处理<em>RecyclerView</em>显示的数据。我们的数据有<em>Person</em>对象集组成，添加如下代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; persons;</span><br><span class="line"> </span><br><span class="line">RVAdapter(List&lt;Person&gt; persons)&#123;</span><br><span class="line">    <span class="keyword">this</span>.persons = persons;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><em>RecyclerView.Adapter</em>有三个抽象方法必须被重写。咱们从<em>getItemCount</em>方法开始。这个方法返回子项存在数据的数量。对于我们由<em>List</em>形成的数据，我们只需要调用<em>List</em>对象的<em>size()</em>方法即可：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> persons.size();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来，重写<em>onCreateViewHolder</em>方法。正如方法名所展示，当自定义<em>ViewHolder</em>需要被初始化时调用。我们指明<em>RecyclerView</em>每个子项使用的布局。通过使用<em>LayoutInflater</em>完成，传递着结果到自定义的<em>ViewHolder</em>的构造方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PersonViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup viewGroup, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    View v = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.item, viewGroup, <span class="keyword">false</span>);</span><br><span class="line">    PersonViewHolder pvh = <span class="keyword">new</span> PersonViewHolder(v);</span><br><span class="line">    <span class="keyword">return</span> pvh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>重写<em>onBindViewHolder</em>方法去指明每一个<em>RecyclerView</em>子项的内容。这个反复与<em>ListView</em>的适配器的<em>getView</em>方法十分相似。在我们的例子中，你必须设置<em>CardView</em>中的名字、年纪以及照片。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(PersonViewHolder personViewHolder, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    personViewHolder.personName.setText(persons.get(i).name);</span><br><span class="line">    personViewHolder.personAge.setText(persons.get(i).age);</span><br><span class="line">    personViewHolder.personPhoto.setImageResource(persons.get(i).photoId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最好，你需要重写<em>onAttachedToRecyclerView</em>方法。我们就简单实用地直接调用父类的实现。</p>
<blockquote>
<p>注：新版本已经不需要重写此方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttachedToRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onAttachedToRecyclerView(recyclerView);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="实用适配器">实用适配器</h3><p>现在适配器准备好了，接下来就是让<em>Activity</em>通过适配器构造函数和<em>RecyclerView</em>的<em>setAdapter</em>去初始化和使用这个适配器了。添加如下代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RVAdapter adapter = <span class="keyword">new</span> RVAdapter(persons);</span><br><span class="line">rv.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<h3 id="编译及运行">编译及运行</h3><p>当你在你的Android设备上运行这个例程时，你将会看类似如下图片的结果：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/recyclerview_cardview/device-2015-02.png" alt="device"></p>
<h1 id="结论">结论</h1><p>在这篇教程，你已经学会了怎么去使用在Android L中引入的<em>CardView</em>和<em>RecyclerView</em>控件。你也明白了在Material Design应用中怎么去使用这些控件。注意：通过<em>RecyclerView</em>可以做几乎所有<em>ListView</em>所做的事，不过为了更少的代码，使用<em>ListView</em>仍然是一个比较好的选择。</p>
<p>你可以参考Android Developers reference去获得更多关于<em>CardView</em>和<em>RecyclerView</em>类的信息。</p>
<p>最好，如果你想更快速地开发你的app，不要忘记在Envato Market查看Android app templates。</p>
<blockquote>
<p><a href="https://code.tutsplus.com/tutorials/getting-started-with-recyclerview-and-cardview-on-android--cms-23465" target="_blank" rel="external">原文章地址。</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;偶然看到这篇文章，觉得写得很好，简单明了，所以尝试将其翻译一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你想创作一个用列表显示数据的Android应用，Android L提供了两个让你更容易实现的新特性：RecyclerView和CardView。通过用这些控件，可以很容易让你的app符合Google的Material Design规范。&lt;/p&gt;
&lt;p&gt;创作APP时一个模板参考的好地方：&lt;a href=&quot;https://go.redirectingat.com/?id=1342X589339&amp;amp;site=code.tutsplus.com&amp;amp;xs=1&amp;amp;isjs=1&amp;amp;url=https%3A%2F%2Fcodecanyon.net%2Fcategory%2Fmobile%2Fandroid%3F_ga%3D2.255032513.873197305.1503543294-826134730.1503543294&amp;amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;amp;xcreo=0&amp;amp;xed=0&amp;amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;amp;xtz=-480&quot;&gt;Envato market&lt;/a&gt;。你可以找到成千上万的APP模板，从&lt;a href=&quot;https://go.redirectingat.com/?id=1342X589339&amp;amp;site=code.tutsplus.com&amp;amp;xs=1&amp;amp;isjs=1&amp;amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Flayar-tancep-youtube-app-for-android%2F5190062%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;amp;xcreo=0&amp;amp;xed=0&amp;amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;amp;xtz=-480&quot;&gt;Youtube&lt;/a&gt;到&lt;a href=&quot;https://go.redirectingat.com/?id=1342X589339&amp;amp;site=code.tutsplus.com&amp;amp;xs=1&amp;amp;isjs=1&amp;amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Fflappybot-an-obstacle-avoidance-game%2F6827330%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;amp;xcreo=0&amp;amp;xed=0&amp;amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;amp;xtz=-480&quot;&gt;obstacleavoidance game&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;或者你可以尝试一下&lt;a href=&quot;https://codecanyon.net/item/universal-full-multipurpose-android-app/6512720?_ga=2.217207135.873197305.1503543294-826134730.1503543294&quot;&gt;通用的Android app模板&lt;/a&gt;,它能为你创作任何种类app提供一个坚实的基础。&lt;br&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/blog/recyclerview_cardview/Universal-Android-app.png&quot; alt=&quot;Universal-Android-app&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>纸币器和MDB协议</title>
    <link href="http://huaqianlee.github.io/2017/11/08/Other/MDB-ICP-protocol/"/>
    <id>http://huaqianlee.github.io/2017/11/08/Other/MDB-ICP-protocol/</id>
    <published>2017-11-08T14:22:45.000Z</published>
    <updated>2017-11-08T14:31:37.259Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MDB协议">MDB协议</h2><h3 id="简介">简介</h3><p>MDB/ICP协议为一个主从接口的串口通信标准的协议， 规定波特率为9600bps，总线有唯一主机（vending machine controller, VMC）和最多32个从机外设，每个外设设有唯一的地址和命令，且由主机初始化。</p>
<p>电源上电、总线复位或外设收到一个复位命令，所对应的外设都被禁止。在顺序初始化外设期间，VMC通过外设的应答来选择被外设所支持的特征。</p>
<blockquote>
<p>协议推荐所以主控制器VMC和外设都需支持所有低等级标准</p>
</blockquote>
<a id="more"></a>
<h3 id="通信格式">通信格式</h3><h4 id="字节格式">字节格式</h4><p>一个字节定义为11位：1个起始位+8个数据位+1个模式位+1个停止位。</p>
<ul>
<li>VMC发送数据到外设：模式位 = 1 表示为地址字节， = 0 表示为数据字节</li>
<li>外设发送数据到VMC：模式位 = 1 表示所有字节发送完成</li>
</ul>
<h4 id="块格式">块格式</h4><h5 id="主到从">主到从</h5><p>主控制器VMC发送给从机的数据格式：1个地址字节+n个数据字节+1个校验和节（最大不超过36个字节）。地址字节由 高5位外设地址+低三位外设命令组成。</p>
<p>主控制器响应外设时发送 ：ACK（应答）、NAK（不应答）、RET（重发）。5ms超时不响应相当于NAK。如从机5ms无响应，VMC应重发相同或不同命令， 知道从机响应或达到最大响应时间（硬币器2S、纸币器5S）。在此期间VMC应该同时访问其他外设。</p>
<p><strong>主控器VMC可以通过拉低发送线100ms以上对总线进行复位。</strong></p>
<h4 id="从到主">从到主</h4><p>从机发送到主控制器的数据格式：1数据块+1字节校验和（最大不超过36字节）。</p>
<p>从机外设响应主控制器发送数据时，主控制器VMC在5ms无响应时间内必须响应ACK、NAK或RET。否则外设需要重发数据或者在下一次会话时附加上数据。</p>
<h4 id="校验和">校验和</h4><p>校验和为所有地址及数据字节的累加和（不包含校验和字节）。</p>
<h4 id="总线复位">总线复位</h4><p>主控器VMC可以通过上拉激活发送线100ms以上对所有外设进行复位，复位后外设处于上电复位状态。</p>
<h4 id="一些标准">一些标准</h4><p>响应码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ACK - <span class="number">00</span>H   RET - AAH   NAK -  FFH</span><br></pre></td></tr></table></figure></p>
<p>外设地址：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Address             Definition  </span><br><span class="line">-------------------------------------------------</span><br><span class="line"><span class="number">00000</span>xxxB    (<span class="number">00</span>H)  Reserved <span class="keyword">for</span> VMC </span><br><span class="line"><span class="number">00001</span>xxxB    (<span class="number">08</span>H)  Changer  </span><br><span class="line"><span class="number">00010</span>xxxB    (<span class="number">10</span>H)  Cashless Device <span class="comment">#1  </span></span><br><span class="line"><span class="number">00011</span>xxxB    (<span class="number">18</span>H)  Communications Gateway </span><br><span class="line"><span class="number">00100</span>xxxB    (<span class="number">20</span>H)  Display  </span><br><span class="line"><span class="number">00101</span>xxxB    (<span class="number">28</span>H)  Energy Management System </span><br><span class="line"><span class="number">00110</span>xxxB    (<span class="number">30</span>H)  Bill Validator  </span><br><span class="line"><span class="number">00111</span>xxxB    (<span class="number">38</span>H)  Reserved <span class="keyword">for</span> Future Standard Peripheral</span><br><span class="line"><span class="number">01000</span>xxxB    (<span class="number">40</span>H)  Universal Satellite Device <span class="comment">#1 </span></span><br><span class="line"><span class="number">01001</span>xxxB    (<span class="number">48</span>H)  Universal Satellite Device <span class="comment">#2 </span></span><br><span class="line"><span class="number">01010</span>xxxB    (<span class="number">50</span>H)  Universal Satellite Device <span class="comment">#3 </span></span><br><span class="line"><span class="number">01011</span>xxxB    (<span class="number">58</span>H)  Coin Hopper or Tube - Dispenser </span><br><span class="line"><span class="number">01100</span>xxxB    (<span class="number">60</span>H)  Cashless Device <span class="comment">#2</span></span><br><span class="line"><span class="number">01101</span>xxxB    (<span class="number">68</span>H)  Reserved <span class="keyword">for</span> Future Standard Peripherals</span><br><span class="line">...</span><br><span class="line"><span class="number">11011</span>xxxB    (D8H)  Reserved <span class="keyword">for</span> Future Standard Peripherals</span><br><span class="line"><span class="number">11100</span>xxxB    (E0H)  Experimental Peripheral <span class="comment">#1</span></span><br><span class="line"><span class="number">11101</span>xxxB    (E8H)  Experimental Peripheral <span class="comment">#2 </span></span><br><span class="line"><span class="number">11110</span>xxxB    (F0H)  Vending Machine Specific Peripheral <span class="comment">#1 </span></span><br><span class="line"><span class="number">11111</span>xxxB    (F8H)  Vending Machine Specific Peripheral <span class="comment">#2</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MDB协议&quot;&gt;MDB协议&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;简介&lt;/h3&gt;&lt;p&gt;MDB/ICP协议为一个主从接口的串口通信标准的协议， 规定波特率为9600bps，总线有唯一主机（vending machine controller, VMC）和最多32个从机外设，每个外设设有唯一的地址和命令，且由主机初始化。&lt;/p&gt;
&lt;p&gt;电源上电、总线复位或外设收到一个复位命令，所对应的外设都被禁止。在顺序初始化外设期间，VMC通过外设的应答来选择被外设所支持的特征。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;协议推荐所以主控制器VMC和外设都需支持所有低等级标准&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Other" scheme="http://huaqianlee.github.io/categories/Other/"/>
    
    
      <category term="Protocol" scheme="http://huaqianlee.github.io/tags/Protocol/"/>
    
  </entry>
  
  <entry>
    <title>通过自定义侧边导航栏的RecyclerView动态加载布局</title>
    <link href="http://huaqianlee.github.io/2017/08/18/Android/Dynamic-loading-layout-by-recyclerview-item/"/>
    <id>http://huaqianlee.github.io/2017/08/18/Android/Dynamic-loading-layout-by-recyclerview-item/</id>
    <published>2017-08-18T14:45:08.000Z</published>
    <updated>2017-08-19T05:15:01.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备布局文件">准备布局文件</h2><p>布局一：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.constraint.ConstraintLayout</span></span><br><span class="line">        <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">        <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">tools:context</span>=<span class="value">"me.huaqianlee.forme.ToDoFragment"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span> <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">              <span class="attribute">android:layout_marginTop</span>=<span class="value">"50dp"</span></span><br><span class="line">              <span class="attribute">android:textSize</span>=<span class="value">"15sp"</span></span><br><span class="line">    <span class="attribute">android:text</span>=<span class="value">"This is Todo main view layout!"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>布局二：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.constraint.ConstraintLayout</span></span><br><span class="line">        <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">        <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">tools:context</span>=<span class="value">"me.huaqianlee.forme.ToDoFragment"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">ImageView</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span> <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">               <span class="attribute">android:scaleType</span>=<span class="value">"fitCenter"</span></span><br><span class="line">    <span class="attribute">android:src</span>=<span class="value">"@drawable/lee"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="准备Fragment，加载布局">准备Fragment，加载布局</h2><p>布局一：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateEventFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Nullable</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_date_event, container, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>布局二：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ToDoFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Nullable</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_todo, container, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="实现切换布局方法">实现切换布局方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line"> * 切换主界面视图工具类</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainViewSwitch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchMainView</span><span class="params">(BaseActivity activity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (SelectedNavItem.getSlectedNavItem()) &#123;</span><br><span class="line">            <span class="keyword">case</span> SelectedNavItem.TODO:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> ToDoFragment(),activity);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SelectedNavItem.DATEEVENT:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> DateEventFragment(), activity);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">replaceFragment</span><span class="params">(Fragment fragment, BaseActivity activity)</span> </span>&#123;</span><br><span class="line">        FragmentManager fragmentManager = activity.getSupportFragmentManager();</span><br><span class="line">        FragmentTransaction transaction = fragmentManager.beginTransaction();</span><br><span class="line">        transaction.replace(R.id.main_view_layout, fragment);</span><br><span class="line">        transaction.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="切换布局">切换布局</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">adapter.setOnItemClickListener(<span class="keyword">new</span> NavFuncAdapter.OnItemClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MainViewSwitch().switchMainView(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>这篇博文只是一个简单粗糙的总结， RecyclerView点击事件的实现可以查看博客：<a href="">RecyclerView选中效果、Item点击事件的实现</a>。</p>
<h2 id="源码地址">源码地址</h2><p><a href="https://github.com/huaqianlee/ForMe" target="_blank" rel="external">ForMe</a></p>
<h2 id="效果">效果</h2><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/app/dynamic_layout_effect.gif" alt="effect"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备布局文件&quot;&gt;准备布局文件&lt;/h2&gt;&lt;p&gt;布局一：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;android.support.constraint.ConstraintLayout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;xmlns:tools&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;xmlns:app&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;tools:context&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;me.huaqianlee.forme.ToDoFragment&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attribute&quot;&gt;android:layout_marginTop&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;50dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attribute&quot;&gt;android:textSize&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;15sp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;This is Todo main view layout!&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;android.support.constraint.ConstraintLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>按返回键只关闭DrawerLayout侧边栏不退出Activity的实现方案</title>
    <link href="http://huaqianlee.github.io/2017/08/18/Android/hides-navigation-in-drawerlayou/"/>
    <id>http://huaqianlee.github.io/2017/08/18/Android/hides-navigation-in-drawerlayou/</id>
    <published>2017-08-18T14:44:17.000Z</published>
    <updated>2017-08-18T15:06:05.163Z</updated>
    
    <content type="html"><![CDATA[<p>今天写自己的练习APP时，发现侧边导航栏可见时，我按返回键，Activity直接退出了， 可是我想要的是只是关闭侧边栏，研究了一下，其实解决办法挺简单。</p>
<p>只需要在Activity中重写onBackPressed()即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">private DrawerLayout mlayout; </span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void <span class="function"><span class="title">onBackPressed</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> (mlayout.isDrawerOpen(findViewById(R.id.nav_left_layout)))</span><br><span class="line">        mlayout.closeDrawers();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        super.onBackPressed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># R.id.nav_left_layout为侧边栏显示部分顶层Layout</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天写自己的练习APP时，发现侧边导航栏可见时，我按返回键，Activity直接退出了， 可是我想要的是只是关闭侧边栏，研究了一下，其实解决办法挺简单。&lt;/p&gt;
&lt;p&gt;只需要在Activity中重写onBackPressed()即可：&lt;br&gt;&lt;figure class=&quot;h
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView Item选中效果及点击事件的实现</title>
    <link href="http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/"/>
    <id>http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/</id>
    <published>2017-08-17T11:46:41.000Z</published>
    <updated>2017-08-18T14:59:32.134Z</updated>
    
    <content type="html"><![CDATA[<p>最近需要对RecyclerView的Item实现选中效果和Item点击事件，尝试了两种方式。</p>
<h1 id="受限的简易实现方案">受限的简易实现方案</h1><h2 id="布局文件">布局文件</h2><p>首先在Item的布局文件中加入如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">android:clickable=<span class="string">"true"</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">"true"</span></span><br><span class="line">android:focusable=<span class="string">"true"</span></span><br><span class="line">android:background=<span class="string">"@drawable/selector_item_selected"</span></span><br></pre></td></tr></table></figure></p>
<p>完成selector_item_selected.xml：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;selector xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span><br><span class="line">    &lt;item android:state_focused=<span class="string">"true"</span> android:drawable=<span class="string">"@drawable/select"</span>/&gt;</span><br><span class="line">    &lt;item android:state_focused=<span class="string">"false"</span> android:drawable=<span class="string">"@drawable/un_select"</span>/&gt;</span><br><span class="line">&lt;/selector&gt;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>实现select和unselect资源（也可以直接找两张图片）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unselect.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> &gt;</span><br><span class="line">    &lt;gradient</span><br><span class="line">            android:startColor=<span class="string">"#FFF"</span></span><br><span class="line">            android:endColor=<span class="string">"#FFF"</span></span><br><span class="line">            android:centerColor=<span class="string">"#FFF"</span></span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/shape&gt;</span><br><span class="line"><span class="comment"># select.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> &gt;</span><br><span class="line">    &lt;gradient</span><br><span class="line">            android:startColor=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">            android:endColor=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">            android:centerColor=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/shape&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="代码">代码</h2><p>只需要onBindViewHolder方法中添加如下代码即可：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    holder.itemView.setSelected(position == SelectedNavItem.getSlectedNavItem()); </span><br><span class="line">    <span class="comment">/*item点击事件的一种实现方式*/</span></span><br><span class="line">    holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    holder.cardView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="更实用的实现方案">更实用的实现方案</h1><p>上面的方案有挺多局限性， 这个方案主要通过注册按键事件来实现。</p>
<h2 id="布局">布局</h2><p>删掉上一种方案加入属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">android:clickable=<span class="string">"true"</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">"true"</span></span><br><span class="line">android:focusable=<span class="string">"true"</span></span><br><span class="line">android:background=<span class="string">"@drawable/selector_item_selected"</span></span><br></pre></td></tr></table></figure></p>
<h2 id="代码-1">代码</h2><p>在adpter中定义可在其他地方使用的OnItemClickListener接口，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> OnItemClickListener onItemClickListener = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*暴露给外部的方法*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickListener</span><span class="params">(OnItemClickListener listener)</span> </span>&#123;</span><br><span class="line">    onItemClickListener = listener;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现选中效果，然后为每个itemview添加并注册点击事件，并将点击事件传给外面的调用者，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="keyword">final</span> <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置选中状态*/</span></span><br><span class="line">    <span class="keyword">if</span> (position == SelectedNavItem.getSlectedNavItem()) &#123;</span><br><span class="line">        holder.itemView.setBackground(mContext.getResources().getDrawable(R.drawable.selected));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        holder.itemView.setBackground(mContext.getResources().getDrawable(R.drawable.un_select));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            onItemClickListener.onItemClick(holder.itemView, position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Activity中的代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adapter.setOnItemClickListener(<span class="keyword">new</span> NavFuncAdapter.OnItemClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        SelectedNavItem.setSlectedNavItem(position);<span class="comment">//自定义的方法，告诉adpter被点击item</span></span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h1 id="源码地址">源码地址</h1><p><a href="https://github.com/huaqianlee/ForMe" target="_blank" rel="external">ForMe</a></p>
<h1 id="效果">效果</h1><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/forme/select_item_effct.gif" alt="nav_item_selected"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近需要对RecyclerView的Item实现选中效果和Item点击事件，尝试了两种方式。&lt;/p&gt;
&lt;h1 id=&quot;受限的简易实现方案&quot;&gt;受限的简易实现方案&lt;/h1&gt;&lt;h2 id=&quot;布局文件&quot;&gt;布局文件&lt;/h2&gt;&lt;p&gt;首先在Item的布局文件中加入如下代码：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android:clickable=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:focusableInTouchMode=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:focusable=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:background=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/selector_item_selected&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;完成selector_item_selected.xml：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;selector xmlns:android=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:state_focused=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; android:drawable=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/select&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:state_focused=&lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt; android:drawable=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/un_select&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/selector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>基于DrawerLayout打造卡片式Navigation</title>
    <link href="http://huaqianlee.github.io/2017/08/17/Android/the-card-navigation-base-on-drawerlayout/"/>
    <id>http://huaqianlee.github.io/2017/08/17/Android/the-card-navigation-base-on-drawerlayout/</id>
    <published>2017-08-17T11:46:16.000Z</published>
    <updated>2017-08-19T04:21:48.225Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间开始了利用空闲时间做一个练习APP <a href="https://github.com/huaqianlee/ForMe" target="_blank" rel="external">ForMe</a>。根据设计APP需要通过左边导航栏切换主界面功能，自己平时在使用Google的NewsTab，觉得很不错，就准备参考其界面来设计。</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/app/newstab_view.jpg" alt="newsTab"></p>
<a id="more"></a>
<h2 id="尝试通过NavigationView实现">尝试通过NavigationView实现</h2><p>首选的是通过DrawerLayout和NavigationView来实现，首先引入依赖：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:design:25.3.1'</span></span><br><span class="line">compile <span class="string">'de.hdodenhof:circleimageview:2.1.0'</span>  // 对头布局头像处理提供支持</span><br></pre></td></tr></table></figure></p>
<p>然后实现侧边栏头布局：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"180dp"</span></span><br><span class="line">                android:padding=<span class="string">"10dp"</span></span><br><span class="line">                android:background=<span class="string">"?attr/colorPrimary"</span>&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;de.hdodenhof.circleimageview.CircleImageView</span><br><span class="line">            android:id=<span class="string">"@+id/nav_icon"</span></span><br><span class="line">            android:layout_width=<span class="string">"70dp"</span></span><br><span class="line">            android:layout_height=<span class="string">"70dp"</span></span><br><span class="line">            android:layout_centerInParent=<span class="string">"true"</span></span><br><span class="line">            android:src=<span class="string">"@drawable/lee"</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">              android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">              android:textColor=<span class="string">"#fff"</span></span><br><span class="line">              android:layout_above=<span class="string">"@+id/mail"</span></span><br><span class="line">              android:id=<span class="string">"@+id/usr"</span></span><br><span class="line">              android:textSize=<span class="string">"15sp"</span></span><br><span class="line">              android:text=<span class="string">"@string/me"</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">              android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">              android:id=<span class="string">"@+id/mail"</span></span><br><span class="line">              android:text=<span class="string">"huaqianlee@gmail.com"</span></span><br><span class="line">              android:layout_alignParentBottom=<span class="string">"true"</span></span><br><span class="line">              android:textSize=<span class="string">"15sp"</span></span><br><span class="line">              android:textColor=<span class="string">"#fff"</span></span><br><span class="line">              /&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>实现菜单：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;menu xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span><br><span class="line">    &lt;group android:checkableBehavior=<span class="string">"single"</span>&gt; //指定这一组菜单项单选 , group可以添加横线</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_call"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_call"</span></span><br><span class="line">                android:title=<span class="string">"Call"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_friends"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_friends"</span></span><br><span class="line">                android:title=<span class="string">"Friends"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_location"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_location"</span></span><br><span class="line">                android:title=<span class="string">"Location"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_mail"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_mail"</span></span><br><span class="line">                android:title=<span class="string">"Mail"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_task"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_task"</span></span><br><span class="line">                android:title=<span class="string">"Tasks"</span>/&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure></p>
<p>引入布局：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.v4.widget.DrawerLayout</span><br><span class="line">        xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:id=<span class="string">"@+id/drawer_layout"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        tools:context=<span class="string">"me.huaqianlee.forme.MainActivity"</span>&gt;</span><br><span class="line">    &lt;!--xmlns:app=<span class="string">"http://schemas.android.com/apk/me.huaqianlee.forme"</span>--&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">                android:id=<span class="string">"@+id/tool_bar"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"?attr/actionBarSize"</span></span><br><span class="line">                android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">                android:theme=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span><br><span class="line">                app:popupTheme=<span class="string">"@style/Theme.AppCompat.Light"</span></span><br><span class="line">                app:layout_scrollFlags=<span class="string">"enterAlways|snap|scroll"</span></span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/android.support.v7.widget.Toolbar&gt;</span><br><span class="line">    &lt;/android.support.design.widget.CoordinatorLayout&gt;        </span><br><span class="line">    &lt;android.support.design.widget.NavigationView</span><br><span class="line">        android:id=<span class="string">"@+id/nav_view"</span></span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        app:headerLayout=<span class="string">"@layout/nav_header"</span></span><br><span class="line">        app:menu=<span class="string">"@menu/nav_menu"</span></span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure></p>
<p>使能侧边栏提示图标：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DrawerLayout mlayout = (DrawerLayout) findViewById(R.id.drawer_layout);</span><br><span class="line">ActionBar actionBar = getSupportActionBar();//获得ToolBar</span><br><span class="line"><span class="keyword">if</span> (actionBar != null) &#123;</span><br><span class="line">    actionBar.setDisplayHomeAsUpEnabled(<span class="literal">true</span>);</span><br><span class="line">    actionBar.setHomeAsUpIndicator(R.drawable.ic_menu); //设置图标，默认是一个箭头</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>好了，这样子效果就出来了：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/app/navigation_view.jpg" alt="nav_view"></p>
<p>可是这样子只能做到菜单式的侧边栏，不能实现我的需求。我尝试着找到一种方式来实现卡片式显示，但是最终没能找到。</p>
<h2 id="自定义卡片式侧边栏">自定义卡片式侧边栏</h2><p>既然用google提供库文件不能实现，就只好选择自定义来实现了.</p>
<p>在DrawerLayout中自己定义布局，将侧边栏头布局引入，然后通过RecyclerView来实现卡片式显示.<br>在开始前，首先得引入相应的依赖，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:recyclerview-v7:25.3.1'</span></span><br><span class="line">compile <span class="string">'com.android.support:cardview-v7:25.3.1'</span></span><br></pre></td></tr></table></figure></p>
<p>实现侧边栏的布局：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.v4.widget.DrawerLayout</span><br><span class="line">        xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:id=<span class="string">"@+id/drawer_layout"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        tools:context=<span class="string">"me.huaqianlee.forme.MainActivity"</span>&gt;</span><br><span class="line">    &lt;!--xmlns:app=<span class="string">"http://schemas.android.com/apk/me.huaqianlee.forme"</span>--&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">                android:id=<span class="string">"@+id/tool_bar"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"?attr/actionBarSize"</span></span><br><span class="line">                android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">                android:theme=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span><br><span class="line">                app:popupTheme=<span class="string">"@style/Theme.AppCompat.Light"</span></span><br><span class="line">                app:layout_scrollFlags=<span class="string">"enterAlways|snap|scroll"</span></span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/android.support.v7.widget.Toolbar&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;FrameLayout</span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        &gt;</span><br><span class="line">            </span><br><span class="line">            &lt;ImageView</span><br><span class="line">                    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                    android:src=<span class="string">"@drawable/lee"</span>/&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/FrameLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;RelativeLayout android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_gravity=<span class="string">"start"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">                        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                        android:layout_height=<span class="string">"180dp"</span></span><br><span class="line">                        android:id=<span class="string">"@+id/nav_layout"</span></span><br><span class="line">                        android:padding=<span class="string">"10dp"</span></span><br><span class="line">                        android:background=<span class="string">"?attr/colorPrimary"</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;de.hdodenhof.circleimageview.CircleImageView</span><br><span class="line">                    android:id=<span class="string">"@+id/nav_icon"</span></span><br><span class="line">                    android:layout_width=<span class="string">"70dp"</span></span><br><span class="line">                    android:layout_height=<span class="string">"70dp"</span></span><br><span class="line">                    android:layout_centerInParent=<span class="string">"true"</span></span><br><span class="line">                    android:src=<span class="string">"@drawable/lee"</span>/&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:textColor=<span class="string">"#fff"</span></span><br><span class="line">                      android:layout_above=<span class="string">"@+id/mail"</span></span><br><span class="line">                      android:id=<span class="string">"@+id/usr"</span></span><br><span class="line">                      android:textSize=<span class="string">"15sp"</span></span><br><span class="line">                      android:text=<span class="string">"@string/me"</span>/&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:id=<span class="string">"@+id/mail"</span></span><br><span class="line">                      android:text=<span class="string">"huaqianlee@gmail.com"</span></span><br><span class="line">                      android:layout_alignParentBottom=<span class="string">"true"</span></span><br><span class="line">                      android:textSize=<span class="string">"15sp"</span></span><br><span class="line">                      android:textColor=<span class="string">"#fff"</span></span><br><span class="line">            /&gt;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        &lt;/RelativeLayout&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;FrameLayout</span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                android:background=<span class="string">"#fff"</span></span><br><span class="line">                android:layout_below=<span class="string">"@+id/nav_layout"</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">                    android:id=<span class="string">"@+id/nav_recycler_view"</span></span><br><span class="line">                    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;/android.support.v7.widget.RecyclerView&gt;</span><br><span class="line">        &lt;/FrameLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/RelativeLayout&gt;</span><br><span class="line">&lt;/android.support.v4.widget.DrawerLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>在写相关代码之前，先写好卡片的布局文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.v7.widget.CardView</span><br><span class="line">        xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_margin=<span class="string">"2dp"</span></span><br><span class="line">        app:cardCornerRadius=<span class="string">"4dp"</span>&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">            android:id=<span class="string">"@+id/nav_func_layout"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">            android:background=<span class="string">"#fff"</span></span><br><span class="line">            android:orientation=<span class="string">"vertical"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;ImageView</span><br><span class="line">                android:id=<span class="string">"@+id/nav_func_image"</span> android:layout_margin=<span class="string">"10dp"</span> android:layout_width=<span class="string">"match_parent"</span> android:layout_height=<span class="string">"100dp"</span></span><br><span class="line">                android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">                android:scaleType=<span class="string">"centerCrop"</span>/&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">                android:id=<span class="string">"@+id/nav_func_name"</span></span><br><span class="line">                android:layout_margin=<span class="string">"5dp"</span></span><br><span class="line">                android:textSize=<span class="string">"16sp"</span></span><br><span class="line">                android:layout_gravity=<span class="string">"center"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"wrap_content"</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/android.support.v7.widget.CardView&gt;</span><br></pre></td></tr></table></figure></p>
<p>接下来就该卡片显示（RecylerView）的代码了。<br>首先实现卡片bean：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package me.huaqianlee.forme.bean;</span><br><span class="line"></span><br><span class="line">public class Func &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private int imageId;</span><br><span class="line"></span><br><span class="line">    public <span class="function"><span class="title">Func</span></span>()&#123;&#125;</span><br><span class="line">    public Func (String name, int imageId) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String <span class="function"><span class="title">getName</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void <span class="built_in">set</span>Name(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int <span class="function"><span class="title">getImageId</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void <span class="built_in">set</span>ImageId(int imageId) &#123;</span><br><span class="line">        this.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现Adapter：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">public class NavFuncAdapter extends RecyclerView.Adapter&lt;NavFuncAdapter.ViewHolder&gt; &#123;</span><br><span class="line">    private Context mContext;</span><br><span class="line">    private List&lt;Func&gt; mLists;</span><br><span class="line"></span><br><span class="line">    public NavFuncAdapter(List&lt;Func&gt; lists) &#123;</span><br><span class="line">        mLists = lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mContext == null) &#123;</span><br><span class="line">            mContext = parent.getContext();</span><br><span class="line">        &#125;</span><br><span class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.func_item, parent, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">return</span> new ViewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onBindViewHolder(ViewHolder holder, int position) &#123;</span><br><span class="line">        Func func = mLists.get(position);</span><br><span class="line">        holder.funcName.setText(func.getName());</span><br><span class="line">        Glide.with(mContext).load(func.getImageId()).into(holder.funcImage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int <span class="function"><span class="title">getItemCount</span></span>() &#123;</span><br><span class="line">          <span class="built_in">return</span> mLists.size();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public class ViewHolder extends RecyclerView.ViewHolder &#123;</span><br><span class="line">        CardView cardView;</span><br><span class="line">        ImageView funcImage;</span><br><span class="line">        TextView funcName;</span><br><span class="line"></span><br><span class="line">        public ViewHolder(View itemView) &#123;</span><br><span class="line">            super(itemView);</span><br><span class="line">            cardView = (CardView) itemView;</span><br><span class="line">            funcImage = (ImageView) itemView.findViewById(R.id.nav_func_image);</span><br><span class="line">            funcName = (TextView) itemView.findViewById(R.id.nav_func_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>添加卡片显示代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化卡片</span></span><br><span class="line">private Func [] funcs = &#123;new Func (<span class="string">"Call"</span>,R.drawable.nav_call),new Func(<span class="string">"Friends"</span>,R.drawable.nav_friends),new Func(<span class="string">"Location"</span>,R.drawable.nav_location),</span><br><span class="line">new Func(<span class="string">"Mail"</span>, R.drawable.nav_mail), new Func(<span class="string">"Tasks"</span>,R.drawable.nav_task)&#125;;</span><br><span class="line">private void <span class="function"><span class="title">initFunc</span></span>() &#123;</span><br><span class="line">    funcList.clear();</span><br><span class="line">    Func toDoFunc = new Func();</span><br><span class="line">    toDoFunc.setImageId(R.drawable.todo_icon);</span><br><span class="line">    toDoFunc.setName(<span class="string">"ToDO"</span>);</span><br><span class="line">    funcList.add(toDoFunc);</span><br><span class="line"></span><br><span class="line">    Func toDoFunc2 = new Func(<span class="string">"Lee"</span>, R.drawable.lee);</span><br><span class="line">    funcList.add(toDoFunc2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i&lt;funcs.length;i++) &#123;</span><br><span class="line">        funcList.add(funcs[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># RecyclerView显示</span></span><br><span class="line">initFunc();</span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(R.id.nav_recycler_view);</span><br><span class="line">GridLayoutManager layoutManager = new GridLayoutManager(this,<span class="number">2</span>);</span><br><span class="line">recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">NavFuncAdapter adapter = new NavFuncAdapter(funcList);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<p>这样子就实现了卡片式侧边栏了，效果如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/nav_card_p.jpg" alt="nav_custom"></p>
<p>Item选中效果的实现方式见：<a href="http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/" target="_blank" rel="external">RecyclerView选中效果的实现</a> .</p>
<p>今天先这样子粗糙地写这篇博客，后续完善了有时间再更新一下。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间开始了利用空闲时间做一个练习APP &lt;a href=&quot;https://github.com/huaqianlee/ForMe&quot;&gt;ForMe&lt;/a&gt;。根据设计APP需要通过左边导航栏切换主界面功能，自己平时在使用Google的NewsTab，觉得很不错，就准备参考其界面来设计。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/blog/app/newstab_view.jpg&quot; alt=&quot;newsTab&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>no no no, go go go</title>
    <link href="http://huaqianlee.github.io/2017/07/20/Life/no-no-no-go-go-go/"/>
    <id>http://huaqianlee.github.io/2017/07/20/Life/no-no-no-go-go-go/</id>
    <published>2017-07-20T11:29:53.000Z</published>
    <updated>2017-07-20T11:31:46.967Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xjdax.com1.z0.glb.clouddn.com//life/bing.jpg" alt="bing"></p>
<p>最近工作一忙起来，自己又懈怠了， 回家啥都不想做，大多数时候都是锻炼一下，然后撸两把王者，就睡觉了。 好忧伤，人越来越没有以前的激情了， 有时候都在想接受现状，拿着不算太差的工资，好好上班，不用花时间去折腾学习了。这种想法好可怕！</p>
<p>调整调整！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com//life/bing.jpg&quot; alt=&quot;bing&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近工作一忙起来，自己又懈怠了， 回家啥都不想做，大多数时候都是锻炼一下，然后撸两把王者，就睡觉了。 好忧伤
    
    </summary>
    
      <category term="Life" scheme="http://huaqianlee.github.io/categories/Life/"/>
    
    
      <category term="成长" scheme="http://huaqianlee.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>MTK Modem 问题集</title>
    <link href="http://huaqianlee.github.io/2017/07/12/Android/MTK-Modem-%E9%97%AE%E9%A2%98%E9%9B%86/"/>
    <id>http://huaqianlee.github.io/2017/07/12/Android/MTK-Modem-问题集/</id>
    <published>2017-07-12T15:01:42.000Z</published>
    <updated>2017-07-12T15:02:54.498Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始做MTK相关的工作，在第一步编译Modem时就遇到了挺多问题。特在此文整理和Modem相关的问题。</p>
<h1 id="编译相关问题">编译相关问题</h1><a id="more"></a>
<h2 id="编译权限问题">编译权限问题</h2><p>编译时提示如下权限问题：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">*******************************************</span><br><span class="line">* [OS]                : Linux</span><br><span class="line">* [PERL]              : v5.<span class="number">10.1</span> or v5.<span class="number">14.2</span></span><br><span class="line">* [MAKE]              : GNU Make v3.<span class="number">81</span></span><br><span class="line">* [SHELL]             : GNU bash v4.<span class="number">1.5</span></span><br><span class="line">* [GCC-ARM-NONE-EABI] : v4.<span class="number">6.2</span> or above</span><br><span class="line">* [NATIVE GCC(UBUNTU)]: v4.<span class="number">5</span> or above</span><br><span class="line"></span><br><span class="line">*******************************************</span><br><span class="line"> Start checking current Build Environment  </span><br><span class="line">*******************************************</span><br><span class="line">* [PERL]              : v5.<span class="number">14.2</span>            [OK] !!!</span><br><span class="line">* [MAKE]              : GNU Make v3.<span class="number">81</span>     [OK] !!!</span><br><span class="line">* [SHELL]             : GNU bash v4.<span class="number">2.25</span>    [HIGHER THAN RECOMMENDED] !!!</span><br><span class="line">sh: <span class="number">1</span>: tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-gcc: Permission denied</span><br><span class="line">* [GCC-ARM-NONE-EABI] : [UNKNOWN VERSION] !!!</span><br><span class="line">* [NATIVE GCC(UBUNTU)]: gcc (Ubuntu/Linaro <span class="number">4.6</span>.<span class="number">3</span>-<span class="number">1</span>ubuntu5) <span class="number">4.6</span>.<span class="number">3</span>  [OK] !!!</span><br><span class="line"></span><br><span class="line">current Build Env. is not recommendation </span><br><span class="line">To avoid unexpected errors , please install the recommended Tool Chain.</span><br><span class="line">*******************************************</span><br><span class="line">  Build Environment is NOT RECOMMENDED!</span><br><span class="line">*******************************************</span><br><span class="line"></span><br><span class="line">makefile check is <span class="keyword">done</span></span><br><span class="line">/bin/bash: tools/init/strcmpex_linux.exe: Permission denied</span><br><span class="line">make: *** [getoptions] Error <span class="number">126</span></span><br></pre></td></tr></table></figure></p>
<p>这种问题很好解决， 通过chmod对其提供执行权限即可。</p>
<h2 id="不能定位数据库问题">不能定位数据库问题</h2><p>提示不能定位原始codegen 数据库，错误log如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ERROR] Cannot determine the original codegen database: BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P1 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P10 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P11 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P12 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P13 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P14 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P15 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P16 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P17 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P18 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P19 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P2 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P20 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P21 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P3 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P4 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P5 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P6 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P7 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P8 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P9</span><br><span class="line">make[<span class="number">1</span>]: *** [build/ZECHIN6737T_65_M0/LWG_DSDS_COTSX/bin/dep/codegen_dep/cgen_cfg_Modem.det] Error <span class="number">2</span></span><br><span class="line">make: *** [cgen] Error <span class="number">2</span></span><br></pre></td></tr></table></figure></p>
<p>此问题是因为[mt6735m_all_modem\mtk_rel\ZECHIN6737T_65_M0\LTG_DSDS\dhl\database]路径下面太多的数据库文件，只需要将多余的删除掉即可。</p>
<h2 id="编译工具链问题">编译工具链问题</h2><p>提示某些工具不能找到，log如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lnosys</span><br><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lm</span><br><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lc</span><br><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lgcc</span><br></pre></td></tr></table></figure></p>
<p>此问题是因为代码里面的gcc工具链有问题，需要重新安装正确的工具链，由于十分不好找，所以我上传了百度云：<a href="http://pan.baidu.com/s/1pLblCkN" target="_blank" rel="external">GCC地址</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近开始做MTK相关的工作，在第一步编译Modem时就遇到了挺多问题。特在此文整理和Modem相关的问题。&lt;/p&gt;
&lt;h1 id=&quot;编译相关问题&quot;&gt;编译相关问题&lt;/h1&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
  </entry>
  
  <entry>
    <title>实现真正意义上的第一个APP之启程</title>
    <link href="http://huaqianlee.github.io/2017/07/11/Android/%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E6%84%8F%E4%B9%89%E4%B8%8A%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAAPP%E4%B9%8B%E5%90%AF%E7%A8%8B/"/>
    <id>http://huaqianlee.github.io/2017/07/11/Android/实现真正意义上的第一个APP之启程/</id>
    <published>2017-07-11T13:20:58.000Z</published>
    <updated>2017-07-11T13:25:04.928Z</updated>
    
    <content type="html"><![CDATA[<p>自学了这么久的Android，各种例程和Demo敲了不少，但是还未自己从头设计实现过一个完整的APP，今天准备根据自己的需求定制一款APP：ForMe（暂定此名）。第一次完全自己设计实现，可能会有很多问题，自己边学边优化。</p>
<a id="more"></a>
<h2 id="功能">功能</h2><p>根据自己平时的生活，目前暂时拟定如下功能：</p>
<ol>
<li>可自由选择默认显示界面</li>
<li>TODOLIST - 足够使用的精简模块</li>
<li>读取通讯录生日信息，查看提醒</li>
<li>英语学习，录入和复习</li>
<li>引入讯飞语音识别，思考所有功能与其结合</li>
<li>公交查询，自动播报还有几个站多少时间</li>
<li>支持MarkDown录入随笔博客，并可以导出</li>
<li>支持NFC读取卡片信息</li>
</ol>
<p>目前想到需要这些功能，一步步实现。</p>
<h2 id="UI设计">UI设计</h2><p>虽然没有多少审美细胞，但是也想自己来设计UI。本想先设计出UI效果，但这方面接触太少，短时间内难以做出来，所以就先放一放，后期再来完整设计。</p>
<h2 id="TODOLIST">TODOLIST</h2><p>一直需要一个TODOLIST来提醒自己，所以先实现此部分，做一个精简版的模块，使用Material Design语言来设计。碰巧在Github上面有看到一个类似项目<a href="https://github.com/avjinder/Minimal-Todo" target="_blank" rel="external">Minimal-Todo</a>，UI风格我挺喜欢的，这部分的UI就准备直接借用此项目的图片了。</p>
<p>好的就这样了， 开始一步一步地做。</p>
<blockquote>
<p>在公司完成这个计划，现在公司空调有问题，热死了，感觉都要虚脱了的感觉。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自学了这么久的Android，各种例程和Demo敲了不少，但是还未自己从头设计实现过一个完整的APP，今天准备根据自己的需求定制一款APP：ForMe（暂定此名）。第一次完全自己设计实现，可能会有很多问题，自己边学边优化。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>Bye Idea， Hi Coban！</title>
    <link href="http://huaqianlee.github.io/2017/07/10/Life/Bye-Idea%EF%BC%8C-Hi-Coban%EF%BC%81/"/>
    <id>http://huaqianlee.github.io/2017/07/10/Life/Bye-Idea，-Hi-Coban！/</id>
    <published>2017-07-10T11:46:44.000Z</published>
    <updated>2017-07-10T11:58:57.926Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/life/idea-coban.png" alt="idea_coban"></p>
<p>最终还是离开了IDEA，加入了一家新公司，公司不大，但是工作内容吸引我。之前在IDEA时就总是觉得在方案公司一直做底层学不到新的东西， 并且工作内容也变得乏味了些， 这次到这家公司就是因为来是负责车载产品的系统，会有很多Framework和JNI的工作，对我有十分大的吸引力！</p>
<a id="more"></a>
<p> 过来上班有一周了，发现工作期间可能会有一些空闲的时间，但是公司加密很厉害，一些自学的方式就不再适用了（譬如，之前自己计划的写一些APP，提升一下android开发技能），今下午思考了一下，准备曲线救国，有空时间的时候就分析一些写的好的开源源码和Android的系统源码，然后输出一些博客。</p>
<p> 新的一个开始， 加油吧！多积累些知识经验，为回成都做好储备。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/life/idea-coban.png&quot; alt=&quot;idea_coban&quot;&gt;&lt;/p&gt;
&lt;p&gt;最终还是离开了IDEA，加入了一家新公司，公司不大，但是工作内容吸引我。之前在IDEA时就总是觉得在方案公司一直做底层学不到新的东西， 并且工作内容也变得乏味了些， 这次到这家公司就是因为来是负责车载产品的系统，会有很多Framework和JNI的工作，对我有十分大的吸引力！&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://huaqianlee.github.io/categories/Life/"/>
    
    
      <category term="成长" scheme="http://huaqianlee.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>Android Kotlin之曲折HelloWord</title>
    <link href="http://huaqianlee.github.io/2017/05/23/Kotlin/Kotlin-HElloWorld/"/>
    <id>http://huaqianlee.github.io/2017/05/23/Kotlin/Kotlin-HElloWorld/</id>
    <published>2017-05-23T00:09:56.000Z</published>
    <updated>2017-08-21T13:54:41.570Z</updated>
    
    <content type="html"><![CDATA[<p>最近工作业余时间一直在自学Android，Google I/O 2017 惊闻Kotlin成为Google支持的官方语言，当然得紧跟“中央”的脚步，开始程序入门必备之HelloWord，殊不知这个HelloWord充满了曲折。</p>
<h2 id="了解Kotlin">了解Kotlin</h2><p>知道了Kotlin之后就开始在网上搜集相关资料，发现了如下个人觉得比较好的资料：<br><a href="https://kotlinlang.org/docs/tutorials/kotlin-android.html" target="_blank" rel="external">Getting started with Android and Kotlin</a><br><a href="https://github.com/JetBrains/kotlin" target="_blank" rel="external">kotlin项目</a><br><a href="https://github.com/JetBrains/kotlin-examples" target="_blank" rel="external">kotlin配置及与java的互操作</a><br><a href="https://github.com/Kotlin/kotlin-koans" target="_blank" rel="external">kotlin语法练习</a><br><a href="doc/kotlin-docs.pdf">Kotlin1.1手册</a><br><a href="http://tanfujun.com/kotlin-web-site-cn/docs/reference/" target="_blank" rel="external">kotlin中文网</a><br><a href="https://kotlinlang.org/" target="_blank" rel="external">kotlin官网</a><br><a href="https://github.com/huanglizhuo/kotlin-in-chinese" target="_blank" rel="external">中文kotlin项目</a><br><a id="more"></a></p>
<h2 id="曲折之路">曲折之路</h2><h3 id="安装插件+HelloWorld">安装插件+HelloWorld</h3><p>自己一直是使用的Android Studio的稳定版，通过<strong>File-&gt;setting-&gt;Install JetBrains Plugins</strong>安装了Kotlin插件。安装完成后会发现<strong>Tools-&gt;Kotlin</strong>工具，可以进行相关Kotlin操作。</p>
<p>插件装好后，新建HelloWord项目，新建完成后打开MainActivity.java，然后通过<strong>Code-&gt;Convert Java File to Kotlin File</strong>或者<strong>Ctrl+Alt+Shift+K</strong>将其转换为kt文件，Android Studio将自动在build.gradle文件添加依赖，如下：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ext.kotlin_version = <span class="string">'1.1.2-4'</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">classpath</span> <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span></span><br></pre></td></tr></table></figure></p>
<p>本以为马上就是见证奇迹的时刻了，可惜各种错误纷至沓来，主要就集中在Android Studio不能成功自动下载kotlin的相关依赖，翻墙下载也不能成功，所以就通过错误log和Task手动下载相关包，这样解决了大部分问题，但是仍然不能成功编译。</p>
<h3 id="Android_Studio_3-0">Android Studio 3.0</h3><p>折腾良久不能成功， 就决定下载Google新发布的自带Kotlin的3.0。下载安装完成后，导入HellowWorld项目，又出现了一大堆翻墙不能解决的gradle和kotlin依赖下载问题，所以又通过手动下载的方式解决了问题。3.0自动对项目的一些依赖进行了更新，kotlin更新为如下：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ext.kotlin_version = <span class="string">'1.1.3-eap-34'</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">classpath</span> <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>自带Kotlin的IDE，新建项目的时候就能选择kotin或者java</p>
</blockquote>
<p>本以为终于可以开心的见证奇迹了，3.0 和我的Ubuntu16.1又出现了兼容性问题，由于之前不小心把系统升级后已经多次遇到和软件不够兼容的问题，所以这次就放弃继续折腾，就准备再切换回Android Studio2.3.2再试试，实在不行就只有备份重装系统了。</p>
<blockquote>
<p>血的教训：Linux开发机千万要用之前的稳定版本，不要升级到最新系统。</p>
</blockquote>
<h3 id="终见证奇迹">终见证奇迹</h3><p>Android3.0+ubuntu16.01 不成功，最终用回2.3.2+kotlin插件，老天总算没让继续折腾，通过3.0更新了Kotlin版本后，在2.3.2中一下就编译过了，赶紧如下添加一点代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class KotlinActivity : AppCompatActivity() &#123;</span><br><span class="line"></span><br><span class="line">    private lateinit var hello_view:android.widget.TextView</span><br><span class="line">    //private lateinit var hello_anko:android.widget.TextView</span><br><span class="line"></span><br><span class="line">    override fun onCreate(savedInstanceState: Bundle?) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_kotlin)</span><br><span class="line"></span><br><span class="line">        hello_view = findViewById(R.id.hello_view) as android.widget.TextView</span><br><span class="line">        hello_view.text = "Hello, Kotlin! "</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>编译下载，终于在手机里面看到了：Hello，Kotlin！。</p>
<p>不过仍然有一个小瑕疵，由于兼容性有些问题，总会有IDE Error和Plugin Error提示，不过就这样子将就用了，不准备耗掉大量时间来折腾系统了，相信随着Google的更新和系统补丁，这些问题终将解决。</p>
<h2 id="Anko项目">Anko项目</h2><p>尝试了一下比较火的开源项目<a href="https://github.com/Kotlin/anko" target="_blank" rel="external">Anko</a>，通过Anko实现HelloWord。<br>引入依赖，我这里选择了自己能用到的部分依赖，如下：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ext.anko_version = <span class="string">"0.10"</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">compile</span> <span class="string">"org.jetbrains.anko:anko-sdk25:$anko_version"</span> <span class="comment">// sdk15, sdk19, sdk21, sdk23 are also available</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">"org.jetbrains.anko:anko-appcompat-v7:$anko_version"</span></span><br></pre></td></tr></table></figure></p>
<p>实现代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#24120;&#35268;&#29992;&#27861;&#10;private lateinit var hello_anko:android.widget.TextView&#10;hello_anko = find&#60;TextView&#62;(R.id.hello_anko) //&#21487;&#20197;&#30465;&#30053;&#27867;&#22411;&#10;&#10;# &#30452;&#25509;&#23558;TextView&#30340;id&#24403;&#20316;&#31034;&#20363;&#10;hello_anko.text = &#34;Hello, Anko!&#34;&#10;&#10;# &#21160;&#24577;&#21152;&#36733;&#24067;&#23616;&#10;verticalLayout &#123;&#10;    val name = editText()&#10;    button(&#34;Say Hello&#34;) &#123;&#10;        onClick &#123; toast(&#34;Hello, $&#123;name.text&#125;!&#34;) &#125;&#10;    &#125;&#10;&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Kotlin学习项目">Kotlin学习项目</h2><p><a href="https://github.com/huaqianlee/KotlinDemo" target="_blank" rel="external">Github地址</a></p>
<h2 id="附上一点经验">附上一点经验</h2><ol>
<li><p>依赖包总是下载失败时，通过log和Task确定链接，手动下载然后放到相应路径。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 依赖包路徑，可以通过ExternalLibraries-&gt;&lt;PackegName&gt;-&gt;Library Properties查看</span></span><br><span class="line">/home/lee/.gradle/caches/modules-<span class="number">2</span>/files-<span class="number">2.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gradle路徑</span></span><br><span class="line">/home/lee/.gradle/wrapper/dists</span><br><span class="line"></span><br><span class="line"><span class="comment"># gradle下载路径</span></span><br><span class="line">http://services.gradle.org/distributions/</span><br></pre></td></tr></table></figure>
</li>
<li><p>图形界面查看和添加依赖</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看</span></span><br><span class="line">Project Structure-&gt;app-&gt;Dependencies</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加, 这样添加后会自动在build.gradle中添加语句</span></span><br><span class="line">Project Structure-&gt;app-&gt;Dependencies-&gt;+-&gt;Library/Jar/Module Dependency</span><br></pre></td></tr></table></figure>
<p>看log耐心一些，做一些分析尝试，再加上Google会找到原因的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近工作业余时间一直在自学Android，Google I/O 2017 惊闻Kotlin成为Google支持的官方语言，当然得紧跟“中央”的脚步，开始程序入门必备之HelloWord，殊不知这个HelloWord充满了曲折。&lt;/p&gt;
&lt;h2 id=&quot;了解Kotlin&quot;&gt;了解Kotlin&lt;/h2&gt;&lt;p&gt;知道了Kotlin之后就开始在网上搜集相关资料，发现了如下个人觉得比较好的资料：&lt;br&gt;&lt;a href=&quot;https://kotlinlang.org/docs/tutorials/kotlin-android.html&quot;&gt;Getting started with Android and Kotlin&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/JetBrains/kotlin&quot;&gt;kotlin项目&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;kotlin配置及与java的互操作&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Kotlin/kotlin-koans&quot;&gt;kotlin语法练习&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;doc/kotlin-docs.pdf&quot;&gt;Kotlin1.1手册&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://tanfujun.com/kotlin-web-site-cn/docs/reference/&quot;&gt;kotlin中文网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://kotlinlang.org/&quot;&gt;kotlin官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/huanglizhuo/kotlin-in-chinese&quot;&gt;中文kotlin项目&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Kotlin" scheme="http://huaqianlee.github.io/categories/Kotlin/"/>
    
    
      <category term="Android Studio" scheme="http://huaqianlee.github.io/tags/Android-Studio/"/>
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之高级技巧</title>
    <link href="http://huaqianlee.github.io/2017/05/13/FirstCode/FirstCode-advanced-skills/"/>
    <id>http://huaqianlee.github.io/2017/05/13/FirstCode/FirstCode-advanced-skills/</id>
    <published>2017-05-13T11:09:08.000Z</published>
    <updated>2017-06-18T01:37:45.252Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="全局获取Context">全局获取Context</h2><p>新建一个自己Application，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Context context;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        context = getApplicationContext();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Context <span class="title">getContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> context;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>指定程序启动时初始化的Application，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">application</span></span><br><span class="line">    <span class="attribute">android:name</span>=<span class="value">"com.example.networknest.MyApplication"</span> //完整的包名</span><br><span class="line">    <span class="attribute">...</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>需要Context时而没有，即可调用如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Toast.makeText(MyApplication.getContext(),...).show();</span><br></pre></td></tr></table></figure></p>
<p>不过LItePal要正常工作也需要配置起自己的Application，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:name="org.litepal.LitePalApplication"</span><br></pre></td></tr></table></figure></p>
<p>其也是为了能在内部自动获取Context，遇到这种冲突，类似如下方式解决：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Context context;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        context = getApplicationContext();</span><br><span class="line">        LitePalApplication.initialize(context);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="使用Intent传递对象">使用Intent传递对象</h2><h3 id="Serializable方式">Serializable方式</h3><p>将对象实现Serializable接口，让对象成为序列化可存储传输状态，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 对象实现接口</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"># 传输</span><br><span class="line">intent.putExtra(<span class="string">"person_data"</span>,person);</span><br><span class="line"></span><br><span class="line"># 接收</span><br><span class="line">Person person = (Person)getIntent().getSerializableExtra(<span class="string">"person_data"</span>);</span><br></pre></td></tr></table></figure></p>
<h3 id="Parcelable方式">Parcelable方式</h3><blockquote>
<p><strong>推荐此方式，效率更高</strong></p>
</blockquote>
<p>Parcelable方式是将对象分解为Intent支持的数据类型，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># 对象实现接口</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Parcelable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">        dest.writeString(name); <span class="comment">// 写出name</span></span><br><span class="line">        dest.writeInt(age);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Parcelable.Creator&lt;Person&gt; CREATOR = <span class="keyword">new</span> Parecelable.Creator&lt;Person&gt;() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Person <span class="title">createFromParcel</span><span class="params">(Parcel source)</span> </span>&#123;</span><br><span class="line">            Person person = <span class="keyword">new</span> Person();</span><br><span class="line">            <span class="comment">/*必须与上面写出的顺序一致*/</span></span><br><span class="line">            person.name = source.readString();<span class="comment">// 读取name</span></span><br><span class="line">            person.age = source.readInt();</span><br><span class="line">            <span class="keyword">return</span> person;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Person[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Person[size];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 传输</span><br><span class="line">intent.putExtra(<span class="string">"person_data"</span>,person);</span><br><span class="line"></span><br><span class="line"># 接收</span><br><span class="line">Person person = (Person)getIntent().getParcelableExtra(<span class="string">"person_data"</span>);</span><br></pre></td></tr></table></figure></p>
<h2 id="定制日志工具">定制日志工具</h2><p>为了方便控制开关日志，一般会定义一个日志工具类，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VERBOSE = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEBUG = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INFO = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WARN = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ERROR = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NOTHING = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> level = VERBOSE;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">v</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= VERBOSE) &#123;</span><br><span class="line">            Log.v(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">d</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= DEBUG) &#123;</span><br><span class="line">            Log.d(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">i</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= INFO) &#123;</span><br><span class="line">            Log.i(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">w</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= WARN) &#123;</span><br><span class="line">            Log.w(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">e</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= ERROR) &#123;</span><br><span class="line">            Log.e(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 调用</span><br><span class="line">LogUtil.v() ...</span><br><span class="line"></span><br><span class="line"># 关闭所有日志</span><br><span class="line">LogUtil.level = NOTHING;</span><br></pre></td></tr></table></figure></p>
<h2 id="创建定时任务">创建定时任务</h2><h3 id="Alarm机制">Alarm机制</h3><p>简单用法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);</span><br><span class="line"><span class="keyword">long</span> triggerAtTime = SystemClock.elapsedRealtime() + <span class="number">10</span>*<span class="number">1000</span>;</span><br><span class="line"><span class="comment">/*开机至今时间（ms）+定时时间*/</span></span><br><span class="line">manager.set(AlarmManager.ELAPSED_REALTIME_WAKE_UP, triggerAtTime, pendingIntent);</span><br><span class="line"><span class="comment">/*</span><br><span class="line">** arg1: 指定AlarmManager工作类型，即时间计算方式与是否唤醒CPU。</span><br><span class="line">*/</span></span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> triggerAtTime = System.currentTimeMillis() + <span class="number">10</span>*<span class="number">1000</span>;</span><br><span class="line"><span class="comment">/*1970.1.1 0点至今时间（ms）+定时时间*/</span></span><br><span class="line">manager.set(AlarmManager.RTC_WAKEUP, triggerAtTime, pendingIntent);</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>一个后台定时服务示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongRunningService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    onBind()&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent , <span class="keyword">int</span> flags , <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                    <span class="comment">// 执行具体逻辑操作， 新开线程，为了定时准确性</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);</span><br><span class="line">        <span class="keyword">long</span> triggerAtTime = SystemClock.elapsedRealtime() + <span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>;<span class="comment">// 定时一小时</span></span><br><span class="line">        Intent i = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, LongRunningService.class);</span><br><span class="line">        PenddingIntent pi = PendingIntent.getService(<span class="keyword">this</span>, <span class="number">0</span>, i, <span class="number">0</span>);</span><br><span class="line">        manager.set(AlarmManager.ELAPSED_REALTIME_WAKE_UP, triggerAtTime, pendingIntent);   </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>需要定时服务时启动服务：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, LongRunningService.class);</span><br><span class="line">context.startService(intent);</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>不过为了功耗，Android限制减少了cpu唤醒次数，set()可能不十分准确，若准确性要求高，可使用setExact()方法。</p>
</blockquote>
<h3 id="Doze模式">Doze模式</h3><p>Android6.0及以上为了省电新加入了Doze模式，满足未插电、屏幕关闭等一段时间将进入doze模式，对cpu、网络、Alarm等进行限制，如下为Android7.0进入Doze模式的两个阶段：<br>阶段一：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/doze_first_level.png" alt="First Level"><br>阶段二：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/doze_second_level.png" alt="Second Level"></p>
<p>如若想Alarm在Doze模式也能正常执行，则需要使用AlarmManager的如下两个方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setAndAllowWhileIdle()        </span><br><span class="line">setExactAndAllowWhileIdle()</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>区别同上set()与setExact()</p>
</blockquote>
<h2 id="多窗口模式编程">多窗口模式编程</h2><p>进入多窗口模式活动会重建，可以通过如下方式改变：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">    <span class="attribute">...</span></span><br><span class="line">    <span class="attribute">android:configChanges</span>=<span class="value">"orientation|keyboardHidden|screenSize|screenLayout"</span>&gt;</span></span><br><span class="line">    // 多窗口、横竖屏切换，活动皆不会被重建</span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>屏幕的变化将通知到Acitvity的onConfigurationChanged()方法，可以重写此方法进行逻辑处理。</p>
<p>禁用多窗口模式：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="tag">&lt;<span class="title">application</span>&gt;</span>或<span class="tag">&lt;<span class="title">activity</span>&gt;</span>标签加入</span><br><span class="line">android:resizeableActivity="false"  // 默认为true，支持</span><br></pre></td></tr></table></figure></p>
<p>不过targetSDKVersion低于24的，上述属性将不会生效，这就得通过另一种方案：制定不支持横竖屏切换，因为android规定24以下不允许横竖屏切换的亦不知多窗口，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:screenOrientation=["portrait"|"landscape"]</span><br></pre></td></tr></table></figure></p>
<h2 id="Lambda表达式">Lambda表达式</h2><p>使用Java8新特性，需先在app/build.gradle添加如下配置：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">    ...</span><br><span class="line">    jackOptions.enabled = <span class="keyword">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">compileOptions &#123;</span><br><span class="line">    <span class="keyword">sourceCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class="line">    <span class="keyword">targetCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>只有一个待实现方法的接口，都可使用Lambda表达式，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br><span class="line"># Lambda 方式</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">    <span class="comment">// 实现run()逻辑</span></span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure></p>
<p>带参数的书写方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(String a, <span class="keyword">int</span> b) -&gt; &#123;<span class="comment">// 还可以省略掉参数类型，Java根据上下文推断    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;全局获取Context&quot;&gt;全局获取Context&lt;/h2&gt;&lt;p&gt;新建一个自己Application，如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyApplication&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Application&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Context context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context = getApplicationContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Context &lt;span class=&quot;title&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之Material Design</title>
    <link href="http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Material-Design/"/>
    <id>http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Material-Design/</id>
    <published>2017-05-10T13:31:27.000Z</published>
    <updated>2017-08-21T13:53:01.893Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="Toolbar控件">Toolbar控件</h2><h3 id="主题定义">主题定义</h3><p>对应于ActionBar，由于ActionBar被限定于活动顶部，不能实现一些Material Design效果，因此已不推荐使用了。</p>
<p>ActionBar来自项目指定的主题定义的显示，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line">android:theme="@style/AppTheme"</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>主题的定义：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># res/values/styles.xml</span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"AppTheme"</span> <span class="attribute">parent</span> = "<span class="attribute">Theme.AppCompat.Light.DarkActionBar</span>"&gt;</span><span class="css"> # 定义指定父主题</span><br><span class="line">    &lt;!<span class="tag">--</span> <span class="tag">Customize</span> <span class="tag">your</span> <span class="tag">theme</span> <span class="tag">here</span>. <span class="tag">--</span>&gt;</span><br><span class="line">    &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">colorPrimary</span>"&gt;<span class="at_rule">@<span class="keyword">color/colorPrimary&lt;/item&gt;</span></span><br><span class="line">    &lt;item name=<span class="string">"colorPrimaryDark"</span>&gt;@color/colorPrimaryDark&lt;/item&gt;</span><br><span class="line">    &lt;item name=<span class="string">"colorAccent"</span>&gt;@color/colorAccent&lt;/item&gt;</span><br><span class="line">&lt;/resources&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>父主题Theme.AppCompat.Light.DarkActionBar自带了ActionBar，使用Toolbar则需要将父主题替换，主要有如下两种可选主题：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Theme.AppCompat.Light.NoActionBar : 淡色主题，主题颜色设为淡色，陪衬颜色设为深色</span><br><span class="line">Theme.AppCompat.NoActionBar: 深色主题，界面主题颜色设为深色，陪衬颜色设为淡色</span><br></pre></td></tr></table></figure></p>
<p>为了使用Toolbar修改主题定义：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"AppTheme"</span> <span class="attribute">parent</span> = "<span class="attribute">Theme.AppCompat.Light.NoActionBar</span>"&gt;</span><span class="css"> # 定义指定父主题</span><br><span class="line">    &lt;!<span class="tag">--</span> <span class="tag">Customize</span> <span class="tag">your</span> <span class="tag">theme</span> <span class="tag">here</span>. <span class="tag">--</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/<span class="tag">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>主题中的颜色控制属性，主要如下几种：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">colorPrimary       指定标题栏背影色</span><br><span class="line">colorPrimaryDrak   指定状态栏颜色</span><br><span class="line">textColorPrimary   指定标题文字颜色</span><br><span class="line">windowBackground   背景色</span><br><span class="line">navigationBarColor 指定状态导航条颜色</span><br><span class="line">colorAccent        指定浮动按钮颜色以及一些控件选择状态</span><br></pre></td></tr></table></figure></p>
<p>每个属性指定颜色的位置如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/toolbar_anay.jpg" alt="各属性指定颜色位置"></p>
<h3 id="引入Toolbar">引入Toolbar</h3><p>Toolbar控件是由appcompat-v7库提供，引入布局：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;FrameLayout ...</span><br><span class="line"> xmlns:app="http://schemas.android.com/apk/res-auto"</span><br><span class="line"> //引入app命名空间，因为android:attribute之类属性只支持5.0及以上系统，5.0以下需要使用app:xx来兼容</span><br><span class="line"> </span><br><span class="line"> &lt;android.support.v7.widget.Toolbar</span><br><span class="line">    android:id="@+id/toolbar"</span><br><span class="line">    android:layout_width="match_parent"</span><br><span class="line">    android:layout_height="?attr/actionBarSize" // 高度设置为actionBar的高度</span><br><span class="line">    android:background="?attr/colorPrimary"</span><br><span class="line">    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span><br><span class="line">    // 为了Toolbar单独使用深色主题让效果更好，通过此属性设置，如不设置这使用默认的浅色主题效果</span><br><span class="line">    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"</span><br><span class="line">    // 将Toolbar中菜单按钮弹出的菜单项设为浅色主题</span><br><span class="line">    app:layout_scrollFlags="enterAlways|snap|scroll"</span><br><span class="line">    /&gt;</span><br><span class="line">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>加入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">setSupportActionBar(toolbar);</span><br></pre></td></tr></table></figure></p>
<h3 id="美化Toolbar">美化Toolbar</h3><p>修改标题栏显示内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">  <span class="attribute">...</span></span><br><span class="line">  <span class="attribute">android:label</span>=<span class="value">"Fruits"</span>&gt;</span></span><br><span class="line">  // 未指定的话，则显示application中android:label指定的内容</span><br><span class="line"> <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>添加action按钮：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"># 引入布局</span><br><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"</span><br><span class="line">    xmlns:app="http://schemas.android.com/apk/res-auto"&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id="@+id/backup"</span><br><span class="line">        android:icon="@drawable/ic_backup"</span><br><span class="line">        android:title="Backup"</span><br><span class="line">        app:showAsAction="always"/&gt; </span><br><span class="line">        //指定显示位置,永远显示在Toolbar中，屏幕不够则隐藏</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id="@+id/del"</span><br><span class="line">        android:icon="@drawable/ic_delete"</span><br><span class="line">        android:title="Delete"</span><br><span class="line">        app:showAsAction="ifRoom"/&gt;</span><br><span class="line">        //如果屏幕空间足够则显示，不够则显示在菜单中</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id="@+id/setting"</span><br><span class="line">        android:icon="@drawable/ic_settings"</span><br><span class="line">        android:title="Setting"</span><br><span class="line">        app:showAsAction="never"/&gt;</span><br><span class="line">        //永远隐藏，显示在菜单中</span><br><span class="line">&lt;/menu&gt;</span><br><span class="line"></span><br><span class="line"># 加入代码</span><br><span class="line">    @Override</span><br><span class="line">    public boolean onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        // 加载toolbal.xml</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean onOptionsItemSelected(MenuItem item) &#123;</span><br><span class="line">        switch (item.getItemId()) &#123;</span><br><span class="line">            case R.id.backup:</span><br><span class="line">                //Toolbar上按钮响应逻辑</span><br><span class="line">                break;</span><br><span class="line">            case R.id.del:</span><br><span class="line">                break;</span><br><span class="line">            case R.id.setting:</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>效果如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/toolbar_xiaoguo.jpg" alt="带action按钮的Toolbar"></p>
<h2 id="滑动菜单">滑动菜单</h2><h3 id="DrawerLayout">DrawerLayout</h3><p>DrawerLayout是一个布局，允许放入两个子控件，第一个控件是主屏幕中显示的内容，第二个子控件是滑动菜单中显示的内容。<br>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v4.widget.DrawerLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/drawer_layout"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="tag">&lt;<span class="title">FrameLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span>    </span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">                <span class="attribute">...</span></span><br><span class="line">                /&gt;</span></span><br><span class="line">                </span><br><span class="line">    <span class="tag">&lt;/<span class="title">FrameLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> </span><br><span class="line">        <span class="attribute">android:layout_gravity</span>=<span class="value">"start"</span> </span><br><span class="line">        //表示根据系统语言判断第二界面隐藏在左边还是右边，比如英语和中文从左边开始，就为左边，也可指定“<span class="attribute">right</span>" "<span class="attribute">left</span>" "<span class="attribute">end</span>"</span><br><span class="line">        <span class="attribute">...</span>/&gt;</span> //滑动界面先加载一个TextView</span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入导航按钮：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> DrawerLayout mlayout;</span><br><span class="line"></span><br><span class="line">mlayout = (DrawerLayout) findViewById(R.id.drawer_layout);</span><br><span class="line">ActionBar actionBar = getSupportActionBar();<span class="comment">//获得ActionBar(其实是Toolbar)</span></span><br><span class="line"><span class="keyword">if</span> (actionBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">    actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>); <span class="comment">// 显示导航按钮(HomeAsUp按钮)，默认是一个返回箭头</span></span><br><span class="line">    actionBar.setHomeAsUpIndicator(R.drawable.ic_menu);<span class="comment">//设置图标</span></span><br><span class="line">&#125;</span><br><span class="line"># 也可以直接在布局文件中加入：</span><br><span class="line">app:navigationIcon=<span class="string">"@drawable/ic_menu"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">        mlayout.openDrawer(GravityCompat.START);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p>
<h3 id="NavigationView">NavigationView</h3><p>NavigationView是Design Support提供的一个空间，可以让滑动菜单设计好看又简单，首先需要加入依赖：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:design:24.2.1'</span> <span class="comment">//Design Support库</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'de.hdodenhof:circleimageview:2.1.0'</span> <span class="comment">// Circleimageview，实现图片圆形化功能，用于头像</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><a href="https://github.com/hdodenhof/Circleimageview" target="_blank" rel="external">Circleimageview项目主页地址</a></p>
</blockquote>
<p>准备滑动菜单页面布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"># menu  </span><br><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">menu</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">group</span> <span class="attribute">android:checkableBehavior</span>=<span class="value">"single"</span>&gt;</span> //指定这一组菜单项单选</span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_call"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_call"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Call"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_friends"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_friends"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Friends"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_location"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_location"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Location"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_mail"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_mail"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Mail"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_task"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_task"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Tasks"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">menu</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># headerLayout</span><br><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"180dp"</span></span><br><span class="line">    <span class="attribute">android:padding</span>=<span class="value">"10dp"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"?attr/colorPrimary"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">de.hdodenhof.circleimageview.CircleImageView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/icon_image"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"70dp"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"70dp"</span></span><br><span class="line">        <span class="attribute">android:src</span>=<span class="value">"@drawable/nav_icon"</span></span><br><span class="line">        <span class="attribute">android:layout_centerInParent</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/mail"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_alignParentBottom</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"huaqinalee@gmail.com"</span></span><br><span class="line">        <span class="attribute">android:textColor</span>=<span class="value">"#FFF"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"14sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/usr_name"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_above</span>=<span class="value">"@+id/mail"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"Andy Lee"</span></span><br><span class="line">        <span class="attribute">android:textColor</span>=<span class="value">"#fff"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"14sp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>引入滑动菜单页面布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 将前面的TextView换为NavigationView</span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.NavigationView</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/nav_view"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_gravity</span>=<span class="value">"start"</span></span><br><span class="line">    <span class="attribute">app:menu</span>=<span class="value">"@menu/nav_menu"</span>  // 引入<span class="attribute">menu</span></span><br><span class="line">    <span class="attribute">app:headerLayout</span>=<span class="value">"@layout/nav_header"</span> // 引入<span class="attribute">headerLayout</span></span><br><span class="line">    /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入响应代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">NavigationView navView = (NavigationView) findViewById(R.id.nav_view);</span><br><span class="line"><span class="comment">//navView.setCheckedItem(R.id.nav_call); //设置菜单默认选中项</span></span><br><span class="line">navView.setNavigationItemSelectedListener(<span class="keyword">new</span> NavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNavigationItemSelected</span><span class="params">(@NonNull MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//添加菜单项响应逻辑</span></span><br><span class="line">        <span class="comment">//mlayout.closeDrawers(); 关闭滑动菜单</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/app/navigation_view.jpg" alt="NavigationView滑动菜单界面"></p>
<h2 id="悬浮按钮和可交互提示">悬浮按钮和可交互提示</h2><h3 id="FloatingActionButton">FloatingActionButton</h3><p>引入悬浮按钮布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">FrameLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">            <span class="attribute">...</span></span><br><span class="line">            /&gt;</span></span><br><span class="line">            </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.FloatingActionButton</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/fab"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_gravity</span>=<span class="value">"bottom|end"</span> //对于中英文，右下角</span><br><span class="line">            <span class="attribute">android:layout_margin</span>=<span class="value">"16dp"</span></span><br><span class="line">            <span class="attribute">android:src</span>=<span class="value">"@drawable/ic_done"</span></span><br><span class="line">            <span class="attribute">app:elevation</span>=<span class="value">"8dp"</span> //悬浮高度</span><br><span class="line">            /&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="title">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入响应代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);</span><br><span class="line">fab.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 实现响应逻辑</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Snackbar">Snackbar</h3><p>提供交互的提示，与Toast类似，加入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">**arg1：一个View，当前界面的任意view，会自动找到最外层布局</span><br><span class="line">**arg2：显示的内容</span><br><span class="line">**arg3：时长</span><br><span class="line">*/</span></span><br><span class="line">Snackbar.make(v, <span class="string">"Data deleted"</span>, Snackbar.LENGTH_SHORT).setAction(<span class="string">"Undo"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"Del undo!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).show();</span><br></pre></td></tr></table></figure></p>
<h3 id="CoordinatorLayout">CoordinatorLayout</h3><p>直接如上加入Snackbar，提示的内容直接弹出会覆盖悬浮按钮，体验不好，所以就需要引入加强版FrameLayout：CoordinatorLayout。此布局可以监听子控件，并且做出响应调整。<br>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 替换掉FrameLayout</span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.FloatingActionButton</span></span><br><span class="line">    <span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这样替换布局后，悬浮按钮会自动上移以避免覆盖，效果如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/coorlayout.jpg" alt="效果图"></p>
<blockquote>
<p>Snackbar.make时传入的view是Snackbar本身，包含在CoordinatorLayout中，所以能响应，如若传入的是外面的View，则不能响应。</p>
</blockquote>
<h2 id="卡片式布局">卡片式布局</h2><h3 id="CardView">CardView</h3><p>CardView也是appcompat-v7库提供的一个FrameLayout，不过增加了圆角阴影等立体效果。</p>
<h4 id="基本用法：">基本用法：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:cardCornerRadius</span>=<span class="value">"4dp"</span> // 圆角弧度</span><br><span class="line">    <span class="attribute">app:elevation</span>=<span class="value">"5dp"</span>/&gt;</span>// 投影高度</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">...</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="RecyclerView和CardView等控件实现水果列表效果">RecyclerView和CardView等控件实现水果列表效果</h4><p>添加依赖：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:24.2.1'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:cardview-v7:24.2.1'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.github.bumptech.glide:glide:3.7.0'</span> </span><br><span class="line"><span class="comment">//一个强大的图片加载库，可加载（网络）图片、GIF、本地视频。</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><a href="https://github.com/bumptech/glide" target="_blank" rel="external">Glide项目主页地址</a></p>
</blockquote>
<p>引入RecyclerView布局：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">    &lt;android.support.v7.widget.Toolbar</span><br><span class="line">        ..../&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">        android:id="@+id/recycler_view"</span><br><span class="line">        android:layout_width="match_parent"</span><br><span class="line">        android:layout_height="match_parent"/&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>这样子RecyclerView会将Toolbar给遮住，因为CoordinatorLayout(类似FrameLayout)布局默认置于左上角，后面通过APPBarLayout解决此问题</p>
</blockquote>
<p>定义一个Fruit实体类（只有name和imageId两个字段）。接下来需要为RecyclerView的子项指定自定义布局fruit_item.xml。</p>
<p>引入CardView布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span>     <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_margin</span>=<span class="value">"5dp"</span></span><br><span class="line">    <span class="attribute">app:cardCornerRadius</span>=<span class="value">"4dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/fruit_image"</span></span><br><span class="line">            <span class="attribute">android:scaleType</span>=<span class="value">"centerCrop"</span> //指定图片缩放方式</span><br><span class="line">            <span class="attribute">...</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/fruit_name"</span></span><br><span class="line">            <span class="attribute">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>添加RecyclerView适配器FruitAdapter，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">FruitAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; mLists;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(List&lt;Fruit&gt; lists)</span> </span>&#123;</span><br><span class="line">        mLists = lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FruitAdapter.<span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mContext = parent.getContext();</span><br><span class="line">        &#125;</span><br><span class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> viewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(FruitAdapter.ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Fruit fruit = mLists.get(position);</span><br><span class="line">        holder.fruitName.setText(fruit.getName());</span><br><span class="line">        Glide.with(mContext).load(fruit.getImageId()).into(holder.fruitImage);</span><br><span class="line">        <span class="comment">// 使用Glide加载图片</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mLists.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        CardView cardView;</span><br><span class="line">        ImageView fruitImage;</span><br><span class="line">        TextView fruitName;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cardView = (CardView) itemView;</span><br><span class="line">            fruitImage = (ImageView) itemView.findViewById(R.id.fruit_image);</span><br><span class="line">            fruitName = (TextView) itemView.findViewById(R.id.fruit_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>添加加载RecyclerView代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(...);</span><br><span class="line">GridLayoutManager layoutManager = <span class="keyword">new</span> GridLayoutManager(<span class="keyword">this</span>, <span class="number">2</span>);</span><br><span class="line">recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">adapter = <span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<h3 id="AppBarLayout">AppBarLayout</h3><p>APPBarLayout也是Design Support提供，解决RecyclerView遮挡Toolbar问题只需两步：</p>
<ol>
<li>将Toolbar嵌套到APPBarLayout中。</li>
<li>给RecyclerView指定一个布局行为。</li>
</ol>
<p>修改布局如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">    <span class="attribute">app:layout_scrollFlags</span>=<span class="value">"enterAlways|snap|scroll"</span></span><br><span class="line">    /*  </span><br><span class="line">    ** <span class="attribute">enterAlways</span> <span class="attribute">-</span> <span class="attribute">Toolbar</span>跟随向下滚动并重新显示</span><br><span class="line">    ** <span class="attribute">snap</span> <span class="attribute">-</span> <span class="attribute">Toolbar</span>还未完全隐藏或显示时，根据滚动距离自动选择</span><br><span class="line">    ** <span class="attribute">scroll</span> <span class="attribute">-</span> <span class="attribute">Toolbar</span>跟着向上滚动并隐藏</span><br><span class="line">    */</span><br><span class="line">        <span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">    <span class="attribute">...</span> </span><br><span class="line">    <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="下拉刷新">下拉刷新</h2><p>support-v4提供的SwipeRefreshLayout可以很简单的实现刷新功能。<br>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v4.widget.SwipeRefreshLayout</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/swipe_refresg"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line">    // 需要将上述的布局行为移到其父控件了</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">        <span class="attribute">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>代码实现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SwipeRefreshLayout swipeRefresh;</span><br><span class="line">swipeRefresh = (SwipeRefreshLayout)findViewById(R.id.swipe_refresg);</span><br><span class="line">swipeRefresh.setColorSchemeResources(R.color.colorPrimary); <span class="comment">// 设置下拉进度条颜色</span></span><br><span class="line">swipeRefresh.setOnRefreshListener(<span class="keyword">new</span> SwipeRefreshLayout.OnRefreshListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        refreshFruits();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshFruits</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">2000</span>); <span class="comment">//获取数据，这里模拟时间</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;<span class="comment">//切回主线程更新UI</span></span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                initFruits();</span><br><span class="line">                adapter.notifyDataSetChanged();</span><br><span class="line">                swipeRefresh.setRefreshing(<span class="keyword">false</span>);<span class="comment">//刷新结束，隐藏进度条</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure></p>
<h2 id="可折叠式标题栏">可折叠式标题栏</h2><h3 id="CollapsingToolbarLayout">CollapsingToolbarLayout</h3><p>如下所示，左边必须作为右边的子控件才能存在：</p>
<p><strong>CollapsingToolbarLayout -&gt; AppBarLayout -&gt; CoordinatorLayout.</strong></p>
<p>新建一个水果详情展示页面布局（activity_fruit.xml）来应用可折叠式标题栏。</p>
<p>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span></span><br><span class="line">    <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    # 标题部分</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">        <span class="attribute">...</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.CollapsingToolbarLayout</span></span><br><span class="line">            <span class="attribute">...</span></span><br><span class="line">            <span class="attribute">android:theme</span>=<span class="value">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span> // <span class="attribute">Toolbar</span>主题，移到此父控件</span><br><span class="line">            <span class="attribute">app:contentScrim</span>=<span class="value">"?attr/colorPrimary"</span> //折叠背景色,折叠后就变成一个普通<span class="attribute">Toolbar</span>了</span><br><span class="line">            <span class="attribute">app:layout_scrollFlags</span>=<span class="value">"scroll|exitUntilCollapsed"</span></span><br><span class="line">            /*</span><br><span class="line">            ** <span class="attribute">Toolbar</span>属性，移到父控件了</span><br><span class="line">            ** <span class="attribute">exitUntilCollapsed</span> <span class="attribute">-</span> 表示折叠后保留不隐藏</span><br><span class="line">            */</span><br><span class="line">            <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            /*标题栏内容：图片+普通标题栏*/</span><br><span class="line">            <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">                <span class="attribute">...</span></span><br><span class="line">                <span class="attribute">android:scaleType</span>=<span class="value">"centerCrop"</span></span><br><span class="line">                <span class="attribute">app:layout_collapseMode</span>=<span class="value">"parallax"</span> // 指定折叠模式，<span class="attribute">parallax-</span>折叠时错位偏移</span><br><span class="line">                <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/toolbar"</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"?attr/actionBarSize"</span></span><br><span class="line">                <span class="attribute">app:layout_collapseMode</span>=<span class="value">"pin"</span> // 表示折叠过程中<span class="attribute">Toolbar</span>位置不变</span><br><span class="line">                /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="title">android.support.design.widget.CollapsingToolbarLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.design.widget.AppBarLayout</span>&gt;</span>    </span><br><span class="line">    </span><br><span class="line">    # 详情页部分</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v4.widget.NestedScrollView</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">        <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">        ** 同ScrollView，允许滚动查看，不过多了响应滚动事件</span><br><span class="line">        ** 因为外使用CoordinatorLayout，需要用此控件或RecyclerView，用法同上RecyclerView一样</span><br><span class="line">        ** 只允许存在一个直接子布局</span><br><span class="line">        */</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">            <span class="attribute">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">                <span class="attribute">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                    <span class="attribute">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.v4.widget.NestedScrollView</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    # 增加一个悬浮按钮</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.FloatingActionButton</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">        <span class="attribute">app:layout_anchor</span>=<span class="value">"@id/appBar"</span> //指定描点，这里写<span class="attribute">APPBarLayout</span>的<span class="attribute">id</span>，这样按钮就出现在标题栏区域</span><br><span class="line">        <span class="attribute">app:layout_anchorGravity</span>=<span class="value">"bottom|end"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># Adapter中添加RecyclerView子项响应代码</span><br><span class="line"><span class="keyword">public</span> FruitAdapter.<span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mContext = parent.getContext();</span><br><span class="line">    &#125;</span><br><span class="line">    View view = LayoutInflater.from(mContext).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">final</span> ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">    holder.cardView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> position = holder.getAdapterPosition();</span><br><span class="line">            Fruit fruit = mLists.get(position);</span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(mContext,FruitActivity.class);</span><br><span class="line">            intent.putExtra(FruitActivity.FRUIT_NAME,fruit.getName());</span><br><span class="line">            intent.putExtra(FruitActivity.FRUIT_IMAGE_ID,fruit.getImageId());</span><br><span class="line">            mContext.startActivity(intent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> holder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 详情页面代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_NAME = <span class="string">"fruit_name"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_IMAGE_ID = <span class="string">"fruit_image_id"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_fruit);</span><br><span class="line"></span><br><span class="line">        Intent intent = getIntent();</span><br><span class="line">        String  fruitName = intent.getStringExtra(FRUIT_NAME);</span><br><span class="line">        <span class="keyword">int</span> fruitImageId = intent.getIntExtra(FRUIT_IMAGE_ID,<span class="number">0</span>);</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">//显示默认HomeAsUp按钮，一个返回箭头</span></span><br><span class="line">        setSupportActionBar(toolbar); </span><br><span class="line">        ActionBar actionBar = getSupportActionBar();</span><br><span class="line">        <span class="keyword">if</span> (actionBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        collapsingToolbar.setTitle(fruitName);</span><br><span class="line">        Glide.with(<span class="keyword">this</span>).load(fruitImageId).into(fruitImageView);</span><br><span class="line">        fruitText.setText(fruitContent); <span class="comment">//设置详情页内容</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:  <span class="comment">// HomeAsUp按钮返回上一活动</span></span><br><span class="line">                finish();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="背景图片和系统状态栏融合">背景图片和系统状态栏融合</h3><p>对ImageView及其所有父布局属性设定，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span></span><br><span class="line"> <span class="attribute">...</span></span><br><span class="line"> <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">        <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.CollapsingToolbarLayout</span></span><br><span class="line">            <span class="attribute">...</span></span><br><span class="line">            <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">                <span class="attribute">...</span></span><br><span class="line">                <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>接下来需要将状态栏指定撑透明，但是android:statusBarColor属性是API21开始支持的（即Android5.0）。先为5.0以上新建一个values-21/styles.xml，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"FruitActivityTheme"</span> <span class="attribute">parent</span>=<span class="value">"AppTheme"</span>&gt;</span><span class="css"></span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="rule"><span class="attribute">android</span>:<span class="value">statusBarColor<span class="string">"&gt;@android:color/transparent&lt;/item&gt;</span><br><span class="line">    </span></span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>为了支持5.0以前，对values/styles.xml进行修改，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"FruitActivityTheme"</span> <span class="attribute">parent</span>=<span class="value">"AppTheme"</span>&gt;</span><span class="css"></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"># 因为5.0以前不能指定状态栏颜色，所以留空即可了。</span><br></pre></td></tr></table></figure></p>
<p>最后让activity调用此主题，如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line">&lt;activity</span><br><span class="line">    ...</span><br><span class="line">    android:theme="@style/FruitActivityTheme"</span><br><span class="line">&lt;/activiy&gt;</span><br></pre></td></tr></table></figure></p>
<p>android5.0以上的版本还有一种融合及透明状态栏的方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 参考coolweather融合必应图片，及头布局间隔设置</span><br><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">21</span>) &#123;</span><br><span class="line">    View decorView = getWindow().getDecorView();</span><br><span class="line">    decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);</span><br><span class="line">    getWindow().setStatusBarColor(Color.TRANSPARENT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>效果图如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/fruit_effct.gif" alt="fruit_effect"></p>
<h2 id="示例源码">示例源码</h2><p>整个Material Design示例源码的地址如下：</p>
<p><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter12" target="_blank" rel="external">Material Design示例源码</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Toolbar控件&quot;&gt;Toolbar控件&lt;/h2&gt;&lt;h3 id=&quot;主题定义&quot;&gt;主题定义&lt;/h3&gt;&lt;p&gt;对应于ActionBar，由于ActionBar被限定于活动顶部，不能实现一些Material Design效果，因此已不推荐使用了。&lt;/p&gt;
&lt;p&gt;ActionBar来自项目指定的主题定义的显示，如下：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# AndroidManifest.xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:theme=&quot;@style/AppTheme&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之碎片</title>
    <link href="http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Fragment/"/>
    <id>http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Fragment/</id>
    <published>2017-05-10T04:24:05.000Z</published>
    <updated>2017-06-18T10:13:33.451Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="碎片的使用">碎片的使用</h2><h3 id="碎片的简单用法">碎片的简单用法</h3><p>新建一个示例包含两个碎片，平分活动空间，新建左侧碎片布局，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">Button...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>新建右侧碎片布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">TextView...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>新建LeftFragment类，继承于Fragment（选择来自support-v4库的类，做到向下兼容）。如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">leftFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">	onCreateView() &#123;</span><br><span class="line">		View view = inflater.inflate(R.layout.left_fragment, container, <span class="keyword">false</span>);</span><br><span class="line">		<span class="keyword">return</span> view;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>新建RightFragment类，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">leftFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">	onCreateView() &#123;</span><br><span class="line">		View view = inflater.inflate(R.layout.right_fragment, container, <span class="keyword">false</span>);</span><br><span class="line">		<span class="keyword">return</span> view;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>修改主活动布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">	<span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>	</span><br><span class="line">	<span class="attribute">...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.LeftFragment"</span>	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.RightFragment"</span>	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="动态添加碎片">动态添加碎片</h3><p>新建another_right_fragment.xml：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">TextView...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>新建AnotherRightFragment类，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnotherRightFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">	onCreateView() &#123;</span><br><span class="line">		inflater.inflate(R.another_right_fragment, container, <span class="keyword">false</span>);</span><br><span class="line">		<span class="keyword">return</span> view;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>主活动添加布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">FrameLaout</span> <span class="attribute">...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>修改主活动代码：<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">replaceFragment(<span class="keyword">new</span> <span class="type">AnotherRightFragment</span><span class="literal">()</span>);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">private</span> void replaceFragment(<span class="type">Fragment</span> fragment) &#123;</span><br><span class="line">	<span class="type">FragmentManager</span> fragmentManager = getSupportFragmentManager<span class="literal">()</span>;</span><br><span class="line">	<span class="type">FragmentTransaction</span> transaction = fragmentManager.beginTransaction<span class="literal">()</span>;</span><br><span class="line">	transaction.replace(<span class="type">R</span>.id.right, fagment);</span><br><span class="line">	transaction.commit<span class="literal">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="碎片中模拟返回栈">碎片中模拟返回栈</h3><p>修改代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">replaceFragment()&#123;</span><br><span class="line">	...</span><br><span class="line">	transaction.addToBackStack(<span class="keyword">null</span>);<span class="comment">//按下返回键后，则回退碎片</span></span><br><span class="line">	transaction.commmit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="碎片与活动通信">碎片与活动通信</h3><p>活动中获取碎片实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RightFragment rightFragment = (RightFragment) getFragmentManager()</span><br><span class="line">	.findFragmentById(R.id.right_fragment);</span><br></pre></td></tr></table></figure></p>
<p>碎片中获取活动：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MainActivity activity = (MainActivity)getActivity();<span class="comment">//获取碎片相关联的活动实例</span></span><br></pre></td></tr></table></figure></p>
<h2 id="碎片的生命周期">碎片的生命周期</h2><p>碎片生命周期中的状态有：</p>
<ol>
<li>运行状态：碎片可见，关联活动处于运行状态，碎片也处于运行状态。</li>
<li>暂停状态：活动进入暂停状态（另一非占全屏的活动加到栈顶），关联碎片也就进入暂停状态。</li>
<li>停止状态：活动进入停止状态，或调用FragmentTransaction.remove()、replace()，事务提交前有调用addToBackStack()。进入停止状态不可见，可能会被系统回收。</li>
<li>销毁状态：活动被销毁，或调用FragmentTransaction.remove()、replace()，事务提交前未调用addToBackStack()。</li>
</ol>
<p>碎片生命周期如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/fragment_lifecycle.png" alt="碎片的生命周期"></p>
<p>几个关键回调：</p>
<ul>
<li>onAttach()：碎片和活动建立关联时调用。</li>
<li>onCreateView()：为碎片创建视图（加载布局）时调用。</li>
<li>onActivityCreated()：确保与碎片相关联的活动创建完毕时调用。</li>
<li>onDestroyView()：与碎片关联的视图被移除时调用。</li>
<li>onDetach()：碎片与活动解除关联时调用。</li>
</ul>
<h2 id="动态加载布局">动态加载布局</h2><h3 id="使用限定符">使用限定符</h3><p>修改主活动布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">	<span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>	</span><br><span class="line">	<span class="attribute">...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.LeftFragment"</span></span><br><span class="line">	//满屏显示	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>新建新的主布局res/layout-large/activity_main.xml，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">	<span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>	</span><br><span class="line">	<span class="attribute">...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.LeftFragment"</span>	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.RightFragment"</span>	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这样布局后，手机就会默认加载第一个布局，平板则加载large布局。</p>
<p>Android中场景限定符（Qualifiers）如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">限定符</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">small</td>
<td style="text-align:center">小屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">normal</td>
<td style="text-align:center">中等屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">large</td>
<td style="text-align:center">大屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">xlarge</td>
<td style="text-align:center">超大屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">ldpi</td>
<td style="text-align:center">低分辨率设备的资源（120dpi以下）</td>
</tr>
<tr>
<td style="text-align:center">mdpi</td>
<td style="text-align:center">中分辨率设备的资源（120～160dpi）</td>
</tr>
<tr>
<td style="text-align:center">hdpi</td>
<td style="text-align:center">高分辨率设备的资源（160～240dpi）</td>
</tr>
<tr>
<td style="text-align:center">xhdpi</td>
<td style="text-align:center">超高分辨率设备的资源（240～320dpi）</td>
</tr>
<tr>
<td style="text-align:center">xxhdpi</td>
<td style="text-align:center">超超高分辨率设备的资源（320～480dpi）</td>
</tr>
<tr>
<td style="text-align:center">land</td>
<td style="text-align:center">横屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">port</td>
<td style="text-align:center">竖屏设备的资源</td>
</tr>
</tbody>
</table>
<h3 id="使用最小宽度限定符">使用最小宽度限定符</h3><p>不用large，新建res/layout-sw600dp/activity_main.xml。这样在屏幕宽度大于600dp时，则会自动调此布局。</p>
<h2 id="示例源码">示例源码</h2><p>示例源码地址： <a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter4/FragmentBestPractice" target="_blank" rel="external">一个简易新闻应用示例源码地址</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;碎片的使用&quot;&gt;碎片的使用&lt;/h2&gt;&lt;h3 id=&quot;碎片的简单用法&quot;&gt;碎片的简单用法&lt;/h3&gt;&lt;p&gt;新建一个示例包含两个碎片，平分活动空间，新建左侧碎片布局，如下：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;LinearLayout...&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Button...&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;LinearLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之网络</title>
    <link href="http://huaqianlee.github.io/2017/05/09/FirstCode/FirstCode-Network/"/>
    <id>http://huaqianlee.github.io/2017/05/09/FirstCode/FirstCode-Network/</id>
    <published>2017-05-09T11:29:56.000Z</published>
    <updated>2017-06-18T06:11:49.845Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="WebView">WebView</h2><p>WebView控件使用十分简单：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 布局</span><br><span class="line">&lt;WebView /&gt;</span><br><span class="line"></span><br><span class="line"># 应用</span><br><span class="line">webView.getSettings().setJavaScriptEnabled(<span class="keyword">true</span>); <span class="comment">// 设置浏览器属性，支持JavaScript脚本</span></span><br><span class="line">webView.setWebViewClient(<span class="keyword">new</span> WebViewClient());<span class="comment">//目标网页在当前WebView中显示，而不打开系统浏览器</span></span><br><span class="line">webView.loadUrl(<span class="string">"http://huaqianlee.github.io"</span>);</span><br><span class="line"></span><br><span class="line"># 权限</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.INTERNET"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="HTTP协议">HTTP协议</h2><h3 id="HttpURLConnection">HttpURLConnection</h3><p>获取实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"http://huaqianlee.github.io"</span>);</span><br><span class="line">HttpURLConnection connection = (HttpURLConnection) url.openConnection();</span><br></pre></td></tr></table></figure></p>
<p>设置HTTP请求所使用的方法：GET或POST。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.setRequestMethod(<span class="string">"GET"</span>);</span><br></pre></td></tr></table></figure></p>
<p>其它定制：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">connection.setReadTimeout(<span class="number">8000</span>);<span class="comment">// ms</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>读取服务器返回的输入流：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream in = connection.getInputStream();</span><br></pre></td></tr></table></figure></p>
<p>关闭HTTP连接：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.disconnect();</span><br></pre></td></tr></table></figure></p>
<p>提交数据：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conneciton.setRequestMethod(<span class="string">"POST"</span>);</span><br><span class="line">DataOutputStream out = <span class="keyword">new</span> DataOutputStream(connection.getOutputStream());</span><br><span class="line">out.writeBytes(<span class="string">"username=admin&amp;password=123456"</span>);</span><br><span class="line"><span class="comment">//数据之间用“&amp;”隔开</span></span><br></pre></td></tr></table></figure></p>
<h3 id="OkHttp">OkHttp</h3><p>OkHttp项目地址：<a href="https://github.com/square/okhttp" target="_blank" rel="external">https://github.com/square/okhttp</a>。</p>
<p>下载：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Gradle: app/build.gradle</span><br><span class="line">compile 'com.squareup.okhttp3:okhttp:3.7.0'</span><br></pre></td></tr></table></figure></p>
<p>用法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 创建实例</span><br><span class="line">OKHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line"></span><br><span class="line"># 创建Request对象,build()之前可以定制Request对象</span><br><span class="line">Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">    .url(<span class="string">"http://huaqianlee.github.io"</span>)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"># 创建Call对象,response为服务器返回的数据</span><br><span class="line">Response response  = client.newCall(request).execute();</span><br><span class="line"></span><br><span class="line"># 获取具体内容</span><br><span class="line">String responseData = response.body().string();</span><br><span class="line"></span><br><span class="line"># 如果发起POST请求，需先构建Body对象存储提交的参数</span><br><span class="line">RequestBody requestBOdy = <span class="keyword">new</span> FormBody.Builder()</span><br><span class="line">    .add(<span class="string">"username"</span>,<span class="string">"admin"</span>)</span><br><span class="line">    .add(<span class="string">"password"</span>,<span class="string">"123456"</span>)</span><br><span class="line">    .build();</span><br><span class="line">    </span><br><span class="line"># 创建Request对象</span><br><span class="line">Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">    .url(<span class="string">"http://huaqianlee.github.io"</span>)</span><br><span class="line">    .post(requestBody)</span><br><span class="line">    .build();</span><br><span class="line"># 其余就和上面GET请求一样了</span><br></pre></td></tr></table></figure></p>
<h2 id="解析XML格式数据">解析XML格式数据</h2><p>假设服务器有如下一段xml：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">apps</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">id</span>&gt;</span>1<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">name</span>&gt;</span>Google Maps<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">app</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="title">apps</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Pull解析方式">Pull解析方式</h3><p>获取到网页字符数据后，解析方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">XmlPullParserFactory factory = XmlPullParserFactory.newInstance();</span><br><span class="line">XmlPullParser xmlPullParser = factory.newPullParser();</span><br><span class="line"><span class="comment">/*设入需要解析的服务器数据*/</span></span><br><span class="line">xmlPullParser.setInput(<span class="keyword">new</span> StringReader(xmlData));</span><br><span class="line"><span class="keyword">int</span> eventType = xmlPullParser.getEventType();</span><br><span class="line"><span class="keyword">while</span> (eventType != XmlPullParser.END_DOCUMENT) &#123;</span><br><span class="line">    String nodeName = xmlPullParser.getName(); <span class="comment">//获取当前节点名</span></span><br><span class="line">    <span class="keyword">switch</span> (eventType) &#123;</span><br><span class="line">        <span class="comment">// 开始解析某个结点</span></span><br><span class="line">        <span class="keyword">case</span> XmlPullParser.START_TAG: &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"id"</span>.equals(nodeName)) &#123;</span><br><span class="line">                id = xmlPullParser.nextText();</span><br><span class="line">            &#125; ...</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 完成解析某个结点</span></span><br><span class="line">        <span class="keyword">case</span> XmlPullParser.END_TAG: &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"app"</span>.equals(nodeName)) &#123;</span><br><span class="line">                <span class="comment">// 完成一个节点解析，要做什么代码写在这</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    eventType = xmlPullParser.next();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="SAX解析方式">SAX解析方式</h3><p>新建一个继承于DefaultHandler的子类，并重写5个方法，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContentHandler</span> <span class="keyword">extends</span> <span class="title">DefaultHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String nodeName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder version;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDocument</span><span class="params">()</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        id = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        name = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        version = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="comment">// 记录当前结点名</span></span><br><span class="line">        nodeName = localName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">characters</span><span class="params">(<span class="keyword">char</span>[] ch, <span class="keyword">int</span> start, <span class="keyword">int</span> length)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="comment">// 根据当前的结点名判断将内容添加到哪一个StringBuilder对象中</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"id"</span>.equals(nodeName)) &#123;</span><br><span class="line">            id.append(ch, start, length);</span><br><span class="line">        &#125; <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(<span class="string">"name"</span>.equals(nodeName)</span>) </span>&#123;</span><br><span class="line">            name.append(ch, start, length);</span><br><span class="line">        &#125; <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(<span class="string">"version"</span>.equals(nodeName)</span>) </span>&#123;</span><br><span class="line">            version.append(ch, start, length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endElement</span><span class="params">(String uri, String localName, String qName)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"app"</span>.equals(localName)) &#123;</span><br><span class="line">            <span class="comment">/*解析出来带换行符，所以调用trim()去掉*/</span></span><br><span class="line">            Log.d(<span class="string">"ContentHandler"</span>, <span class="string">"id is "</span> + id.toString().trim());</span><br><span class="line">            ...</span><br><span class="line">            <span class="comment">// 最后要将StringBuilder清空掉</span></span><br><span class="line">            id.setLength(<span class="number">0</span>);</span><br><span class="line">            name.setLength(<span class="number">0</span>);</span><br><span class="line">            version.setLength(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endDocument</span><span class="params">()</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.endDocument();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>解析代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    SAXParserFactory factory = SAXParserFactory.newInstance();</span><br><span class="line">    XMLReader xmlReader = factory.newSAXParser().getXMLReader();</span><br><span class="line">    ContentHandler handler = <span class="keyword">new</span> ContentHandler();</span><br><span class="line">    <span class="comment">// 将ContentHandler的实例设置到XMLReader中</span></span><br><span class="line">    xmlReader.setContentHandler(handler);</span><br><span class="line">    <span class="comment">// 开始执行解析</span></span><br><span class="line">    xmlReader.parse(<span class="keyword">new</span> InputSource(<span class="keyword">new</span> StringReader(xmlData)));</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="解析JSON格式数据">解析JSON格式数据</h2><p>假设服务器有如下JSON数据：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;"<span class="attribute">id</span>":<span class="value"><span class="string">"5"</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"Google Map"</span></span>,"<span class="attribute">version</span>":<span class="value"><span class="string">"1.0"</span></span>&#125;,...]</span><br></pre></td></tr></table></figure></p>
<h3 id="使用JSONObject">使用JSONObject</h3><p>获取到字符数据后，解析方式如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将服务器的JSON数组传入JSONArray*/</span></span><br><span class="line">JSONArray jsonArray = <span class="keyword">new</span> JSONArray(jsonData);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jsonArray.length(); i++) &#123;</span><br><span class="line">    JSONObject jsonObject = jsonArray.getJSONObject(i);</span><br><span class="line">    String id = jsonObject.getString(<span class="string">"id"</span>);</span><br><span class="line">    String name = jsonObject.getString(<span class="string">"name"</span>);</span><br><span class="line">    String version = jsonObject.getString(<span class="string">"version"</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="使用GSON">使用GSON</h3><p>加入依赖：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile 'com.google.code.gson:gson:2.7'</span><br></pre></td></tr></table></figure></p>
<p>基本用法：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># json 数据</span><br><span class="line">&#123;"name":"Tom","age":"20"&#125;</span><br><span class="line"></span><br><span class="line"># 解析</span><br><span class="line">Gson gson = new Gson();</span><br><span class="line">Person person = gson.fromJson(jsonData, Person.class);</span><br><span class="line"></span><br><span class="line"># 数组内容解析：</span><br><span class="line">List&lt;Person&gt; people = gson.fromJson(jsonData, new TypeToken&lt;List&lt;Person&gt;&gt;()&#123;&#125;.getType());</span><br></pre></td></tr></table></figure></p>
<p>示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 首先需要新建个App类</span><br><span class="line"></span><br><span class="line"># 解析</span><br><span class="line">Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">List&lt;App&gt; appList = gson.fromJson(jsonData, <span class="keyword">new</span> TypeToken&lt;List&lt;App&gt;&gt;() &#123;&#125;.getType());</span><br><span class="line"><span class="keyword">for</span> (App app : appList) &#123;</span><br><span class="line">    Log.d(<span class="string">"MainActivity"</span>, <span class="string">"id is "</span> + app.getId());</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="封装网络请求">封装网络请求</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"># HTTP方式首先得新建一个回调接口</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">HttpCallbackListener</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onFinish</span><span class="params">(String s)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Exception e)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 封装</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendHttpRequest</span><span class="params">(<span class="keyword">final</span> String address, <span class="keyword">final</span> HttpCallbackListener listener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                HttpURLConnection connection = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    URL url = <span class="keyword">new</span> URL(address);</span><br><span class="line">                    connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">                    connection.setRequestMethod(<span class="string">"GET"</span>);</span><br><span class="line">                    connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">                    connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">                    InputStream in = connection.getInputStream();</span><br><span class="line">                    BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">                    StringBuilder response = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    String line;</span><br><span class="line">                    <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        response.append(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 回调onFinish()方法</span></span><br><span class="line">                        listener.onFinish(response.toString());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 回调onError()方法</span></span><br><span class="line">                        listener.onError(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        connection.disconnect();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendOkHttpRequest</span><span class="params">(<span class="keyword">final</span> String address, <span class="keyword">final</span> okhttp3.Callback callback)</span> </span>&#123;</span><br><span class="line">        OkHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(address)</span><br><span class="line">                .build();</span><br><span class="line">        client.newCall(request).enqueue(callback);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 调用</span><br><span class="line">HttpUtil.sendHttpRequest(<span class="string">"http://huaqianlee.github.io"</span>, <span class="keyword">new</span> HttpCallbackListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinish</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Exception e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">HttpUtil.sendOkHttprequest(<span class="string">"http://huaqinalee.github.io"</span>, <span class="keyword">new</span> Callback() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String data = response.body().string();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="示例源码">示例源码</h2><p>整个示例源码的地址：<br><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter9/NetworkTest" target="_blank" rel="external">示例源码地址</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;WebView&quot;&gt;WebView&lt;/h2&gt;&lt;p&gt;WebView控件使用十分简单：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 布局&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;WebView /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.getSettings().setJavaScriptEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 设置浏览器属性，支持JavaScript脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.setWebViewClient(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebViewClient());&lt;span class=&quot;comment&quot;&gt;//目标网页在当前WebView中显示，而不打开系统浏览器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.loadUrl(&lt;span class=&quot;string&quot;&gt;&quot;http://huaqianlee.github.io&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>美式音标与英式音标</title>
    <link href="http://huaqianlee.github.io/2017/05/08/English/Americal-and-english-phonetic/"/>
    <id>http://huaqianlee.github.io/2017/05/08/English/Americal-and-english-phonetic/</id>
    <published>2017-05-08T11:06:31.000Z</published>
    <updated>2017-05-14T01:42:31.176Z</updated>
    
    <content type="html"><![CDATA[<p>由于自己现在自学的是美音，与学生时代学的国际音标有很大不同，查单词的时候时不时就会被音标搞困惑。因此特意搜索整理了一份美式音标表(K.k音标)以及与英式音标的区别。</p>
<h2 id="美式音标">美式音标</h2><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/english/America_ph.png" alt="美式音标"></p>
<blockquote>
<p><strong>[m] [n] [ŋ] [l] [r] - 母音前母音后发音不同</strong></p>
</blockquote>
<a id="more"></a>
<h2 id="美式音标与英式音标的区别">美式音标与英式音标的区别</h2><p>两种音标有很大的区别容易混淆，需要注意。如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/english/yuying_dif.jpg" alt="元音"></p>
<p>辅音没什么区别，也在此列出：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/english/fuying_dif.jpg" alt="辅音"></p>
<blockquote>
<p>国际音标还有如下四个音标：[tr] [dr] [ts] [dz]</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于自己现在自学的是美音，与学生时代学的国际音标有很大不同，查单词的时候时不时就会被音标搞困惑。因此特意搜索整理了一份美式音标表(K.k音标)以及与英式音标的区别。&lt;/p&gt;
&lt;h2 id=&quot;美式音标&quot;&gt;美式音标&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/english/America_ph.png&quot; alt=&quot;美式音标&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;[m] [n] [ŋ] [l] [r] - 母音前母音后发音不同&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="English" scheme="http://huaqianlee.github.io/categories/English/"/>
    
    
      <category term="英语" scheme="http://huaqianlee.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之服务</title>
    <link href="http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-Service/"/>
    <id>http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-Service/</id>
    <published>2017-05-06T15:58:30.000Z</published>
    <updated>2017-06-18T06:07:59.231Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="多线程编程">多线程编程</h2><h3 id="线程基本用法">线程基本用法</h3><p>方式一：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> MyThread().start();</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>方式二：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread()).start();</span><br></pre></td></tr></table></figure></p>
<p>方式三：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure></p>
<h3 id="在子线程中更新UI">在子线程中更新UI</h3><p>直接在子线程中更新UI将导致APP崩溃，所以正确做法是通过异步消息处理机制来实现。譬如按键实现更新UI：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UPDATE_TEXT = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">onClick() &#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span> <span class="params">()</span> </span>&#123; <span class="comment">// 这里不能更新UI</span></span><br><span class="line">            Message message = <span class="keyword">new</span> Message();</span><br><span class="line">            message.what = UPDATE_TEXT;</span><br><span class="line">            handler.sendMessage(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Handler handler = <span class="keyword">new</span> Handler() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(msg.what) &#123;</span><br><span class="line">            <span class="keyword">case</span> UPDATE_TEXT:</span><br><span class="line">            <span class="comment">// 进行更新UI操作</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>另一种在子线程更新UI的快捷方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">runOnUiThread(<span class="keyword">new</span> RUnnable() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> run &#123;</span><br><span class="line">        <span class="comment">// UI操作逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h3 id="异步消息处理机制">异步消息处理机制</h3><p>Android的异步消息处理主要由四个部分组成：</p>
<ol>
<li>Message<br> 可以携带少量信息，用于在线程之间传递。</li>
<li>Handler<br> 处理者，用于发送与处理消息。</li>
<li>MessageQueue<br> 消息队列，存放所有Handler发送的消息，等待处理，每个线程只有一个。</li>
<li>Looper<br> MessageQueue的管家，其loop()方法循环取出消息传递到handleMessage()方法中处理。每个线程只有一个。</li>
</ol>
<p>流程示意图如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/yibu_flow.png" alt="异步消息机制处理流程图"></p>
<h3 id="AsyncTask">AsyncTask</h3><p>AsyncTask的一个简单示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">** Void - 不需传入参数给后台任务</span><br><span class="line">** Integer - 用整型数据作为后台任务进度显示单位</span><br><span class="line">** Boolean - 布尔型数据返回执行结果</span><br><span class="line">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadTask</span> <span class="keyword">extends</span> <span class="title">AsyncTask</span>&lt;<span class="title">Void</span>, <span class="title">Integer</span>, <span class="title">Boolean</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/*后台任务开始前调用*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPreExecute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        progressDialog.show();<span class="comment">//显示进度对话框</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*执行在子线程，耗时任务应在此方法执行*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Boolean <span class="title">doInBackground</span><span class="params">(Void... params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> downloadPercent = doDownload();</span><br><span class="line">                publishProgress(downloadPercent); <span class="comment">// 反馈当前执行进度</span></span><br><span class="line">                <span class="keyword">if</span> (donwloadPercent &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*publishProgress触发*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onProgressUpdate</span><span class="params">(Integer... values)</span> </span>&#123;</span><br><span class="line">        progressDialog.setMessage(<span class="string">"Downloaded"</span> + values[<span class="number">0</span>]+<span class="string">"%"</span>);</span><br><span class="line">        <span class="comment">// 更新下载进度</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*doInBackground返回触发*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPostExecute</span> <span class="params">( Boolean result)</span> </span>&#123;</span><br><span class="line">        progressDialog.dismiss();<span class="comment">//关闭进度对话框</span></span><br><span class="line">        <span class="keyword">if</span>(result) &#123;&#125; <span class="keyword">else</span>&#123;&#125;  <span class="comment">// 提示下载结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动此任务</span></span><br><span class="line"><span class="keyword">new</span> DownloadTask().execute();</span><br></pre></td></tr></table></figure></p>
<h2 id="服务基本用法">服务基本用法</h2><h3 id="定义服务">定义服务</h3><p>创建服务时两个属性：Exported - 是否允许其他程序访问，Enabled - 启用服务。示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*第一次创建时调用，创建一个实例后不再调用*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*每次启动服务时调用*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*必须实现的抽象方法*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Return the communication channel to the service.</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="启动和停止服务">启动和停止服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务</span><br><span class="line">Intent startIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class);</span><br><span class="line">startService(startIntent);</span><br><span class="line"></span><br><span class="line"># 停止服务</span><br><span class="line">Intent stopIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class);</span><br><span class="line">stopService(stopIntent);</span><br></pre></td></tr></table></figure>
<h3 id="活动与服务通信">活动与服务通信</h3><p>让MyService提供下载功能，并活动可以决定下载时间和查看进度，添加通信代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># 服务部分</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DownloadBinder mBinder = <span class="keyword">new</span> DownloadBinder();</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DownloadBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDownload</span> <span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getProgress</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 活动部分</span><br><span class="line">实现匿名类：</span><br><span class="line">    <span class="keyword">private</span> MyService.DownloadBinder downloadBinder;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ServiceConnection connection= <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">            <span class="comment">/*service向下转型得到DownloadBinder，进行交互*/</span></span><br><span class="line">            downloadBinder= (MyService.DownloadBinder) service;</span><br><span class="line">            downloadBinder.startDownload();</span><br><span class="line">            downloadBinder.getProgress();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">绑定服务：</span><br><span class="line">    Intent bindIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.class);</span><br><span class="line">    bindService(bindIntent,connection,BIND_AUTO_CREATE); <span class="comment">//arg3:绑定后自动创建服务，onCreate()执行，onStartCommand()不执行</span></span><br><span class="line">    </span><br><span class="line">解绑服务：</span><br><span class="line">    unbindService(connection);</span><br></pre></td></tr></table></figure></p>
<h3 id="前台服务">前台服务</h3><p>前台服务可以一直处于运行状态，而不会被垃圾回收，并且会在系统状态栏显示。一个简单的示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate();</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,MainActivity.class);</span><br><span class="line">    PendingIntent pendingIntent = PendingIntent.getActivity(<span class="keyword">this</span>,<span class="number">0</span>,intent,<span class="number">0</span>);</span><br><span class="line">    Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>)</span><br><span class="line">            .setContentTitle(<span class="string">"This is a content title!"</span>)</span><br><span class="line">            .setContentText(<span class="string">"this is a content text!"</span>)</span><br><span class="line">            .setWhen(System.currentTimeMillis())</span><br><span class="line">            .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class="line">            .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher))</span><br><span class="line">            .setContentIntent(pendingIntent)</span><br><span class="line">            .build();</span><br><span class="line">    startForeground(<span class="number">1</span>,notification);<span class="comment">// 将服务变为前台服务</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="使用IntentService">使用IntentService</h3><p><strong>服务默认运行于主线程</strong>，所以耗时逻辑得通过多线程技术处理。IntentService的好处就是新开线程来处理耗时操作。<br>标准写法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">onStartCommand()&#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 处理具体逻辑</span></span><br><span class="line">            stopSelf();<span class="comment">//执行完毕后自动停止服务</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>IntentService方式：</p>
<blockquote>
<p>AS自动创建IntentService会生成一大堆用不到的代码，因此手动创建</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyIntentService</span> <span class="keyword">extends</span> <span class="title">IntentService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyIntentService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">"MyIntentService"</span>);<span class="comment">// 调用父类有参构造函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onHandleIntent</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 处理具体逻辑，已经运行于子线程</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 启动IntentService</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, MyIntentService.class);</span><br><span class="line">startService(intent);</span><br><span class="line"></span><br><span class="line"># 注册</span><br><span class="line">&lt;service android:name=<span class="string">".MyIntentService"</span>/&gt;</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;多线程编程&quot;&gt;多线程编程&lt;/h2&gt;&lt;h3 id=&quot;线程基本用法&quot;&gt;线程基本用法&lt;/h3&gt;&lt;p&gt;方式一：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyThread().start();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之手机多媒体</title>
    <link href="http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-media/"/>
    <id>http://huaqianlee.github.io/2017/05/06/FirstCode/FirstCode-media/</id>
    <published>2017-05-06T15:57:26.000Z</published>
    <updated>2017-06-18T01:37:11.560Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="使用通知">使用通知</h2><h3 id="通知基本用法">通知基本用法</h3><p>获取通知:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>构建Notification对象：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(context)</span><br><span class="line">.setContentTitle(..)</span><br><span class="line">.setContentText(..)</span><br><span class="line">...</span><br><span class="line">.build();</span><br></pre></td></tr></table></figure></p>
<p>显示通知：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager.notify(<span class="number">1</span>, notification);</span><br></pre></td></tr></table></figure></p>
<p>一个实例写法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, NotificationActivity.class);</span><br><span class="line">PendingIntent pi = PendingIntent.getActivity(MainActivity.<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>);</span><br><span class="line">NotificationManager manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(MainActivity.<span class="keyword">this</span>)</span><br><span class="line">        .setContentTitle(<span class="string">"This is content title"</span>)</span><br><span class="line">        .setContentText(<span class="string">"this is content text"</span>)</span><br><span class="line">        .setWhen(System.currentTimeMillis())</span><br><span class="line">        .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class="line">        .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher))</span><br><span class="line">        .setContentIntent(pi)  <span class="comment">// 设置点击跳转</span></span><br><span class="line">        .setAutoCancel(<span class="keyword">true</span>)</span><br><span class="line">        .setDefaults(Notification.DEFAULT_ALL)</span><br><span class="line">        .setContentText(<span class="string">"This is a notification test,  this Builder has many func, but do not test all of them "</span>)</span><br><span class="line">        .setPriority(NotificationCompat.PRIORITY_MAX)</span><br><span class="line">        .build();</span><br><span class="line">manager.notify(<span class="number">1</span>,notification);</span><br><span class="line"><span class="comment">//manager.cancel(1);  // 同上面autocancel()，取消通知，这样通知点击后才能从通知栏消失</span></span><br><span class="line"></span><br><span class="line"># Intent - 立即执行某个动作， PendingIntent - 合适的时机去执行某个动作</span><br></pre></td></tr></table></figure></p>
<h3 id="通知的进阶功能">通知的进阶功能</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.setSound(Uri.fromFile(<span class="keyword">new</span> File(<span class="string">"/system/media/audio/ringtones/Luna.ogg"</span>))</span><br><span class="line">.setVibrate(<span class="keyword">new</span> <span class="keyword">long</span>[](<span class="number">0</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>)) <span class="comment">// 下标偶数包括0静止时长，奇数-振动时长</span></span><br><span class="line">.setLights(Color.GREE, <span class="number">1000</span>,<span class="number">1000</span>)</span><br><span class="line">.setDefaults(NotificationCompat.DEFAULT_ALL)<span class="comment">//默认方式实现上述三种功能</span></span><br><span class="line">.setStyle(<span class="keyword">new</span> NotificationCompat.BigTextStyle().bigText(<span class="string">""</span>)) <span class="comment">//完整显示一大段文字</span></span><br><span class="line">.setStyle(<span class="keyword">new</span> NotificationCompat.BigPictureStyle().bigPicture(BitmapFactory.decodeResource(getResources(),R.drawable.big_image))<span class="comment">//显示大图片</span></span><br><span class="line">.setPriority(NotificationCompat.PRIORITY_MAX) <span class="comment">// 设置通知重要程度</span></span><br><span class="line"></span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.VIBRATE"</span>&gt;</span><br></pre></td></tr></table></figure>
<h2 id="摄像头、相册和音视频">摄像头、相册和音视频</h2><p>这部分不想搞笔记了，留下个实例地址吧：<br><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter8" target="_blank" rel="external">摄像头、相册和音视频简例</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用通知&quot;&gt;使用通知&lt;/h2&gt;&lt;h3 id=&quot;通知基本用法&quot;&gt;通知基本用法&lt;/h3&gt;&lt;p&gt;获取通知:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之跨程序共享数据-内容提供器</title>
    <link href="http://huaqianlee.github.io/2017/05/03/FirstCode/FirstCode-Content-Provider/"/>
    <id>http://huaqianlee.github.io/2017/05/03/FirstCode/FirstCode-Content-Provider/</id>
    <published>2017-05-03T13:51:23.000Z</published>
    <updated>2017-06-18T04:40:14.857Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<p>内容提供器(Content Provider)是Android实现跨程序共享数据的标准方式。</p>
<h2 id="运行时权限">运行时权限</h2><h3 id="Android权限机制">Android权限机制</h3><p>为了安全，Android6.0后引入了新特性，让APP申请的权限用户可控，Android的权限分为了两类：1. 普通权限，2.危险权限。危险权限一共有9组24个权限。<br><a id="more"></a></p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/android_permission.jpg" alt="Android danger permission"></p>
<p>权限详情参考：<a href="http://developer.android.com/reference/android/Manifest.permission.html" target="_blank" rel="external">官网权限介绍</a>。</p>
<h3 id="程序运行时申请权限">程序运行时申请权限</h3><p>以CALL_PHONE为例来说明。定义触发打电话的逻辑：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_CALL);</span><br><span class="line">intent.setData(Uri.parse(<span class="string">"tel:10086"</span>));</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure></p>
<p>在AndroidMainifest.xml中声明权限：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.CALL_PHONE"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这样声明的APP运行在6.0及以上的版本则会报错，要求在使用危险权限是都必须进行运行时权限处理。所以就得对触发打电话的逻辑进行修改：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 申请权限，处理打电话逻辑 &#123;</span><br><span class="line">	<span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">	    ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;Manifest.permission.CALL_PHONE&#125;,<span class="number">1</span>); <span class="comment">// 申请授权</span></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	    call(); <span class="comment">// 已授权，CALL</span></span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_CALL);</span><br><span class="line">        intent.setData(Uri.parse(<span class="string">"tel:911"</span>));</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SecurityException e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//super.onRequestPermissionsResult(requestCode, permissions, grantResults);</span></span><br><span class="line">    <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                call();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"You denied the permission!"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="访问其他程序中数据">访问其他程序中数据</h2><h3 id="ContentResolver基本用法">ContentResolver基本用法</h3><p>ContentResolver类的实例可以通过Context的getContentResolver()获取。其提供了一系列方法用CRUD操作。ContentResolver中的增删改查方法接收一个Uri参数，其唯一标识符有两部分组成：authority和path。为了避免冲突一般用authority用包名，path对应用程序中的表进行区分。如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># content://authority/path</span></span><br><span class="line">content://com.example.app.provider/table1</span><br><span class="line">content://com.example.app.provider/table2</span><br></pre></td></tr></table></figure></p>
<p>解析：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uri uri = Uri.parse(<span class="string">"content://authority/path"</span>)</span><br></pre></td></tr></table></figure></p>
<p>查询：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询</span><br><span class="line">Cursor cursor = getContentResolver().query(uri,projection,selecton,selectionArgs,sortOrder);</span><br></pre></td></tr></table></figure></p>
<p>ContentResolver的查询方法参数解释如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">对应SQL部分</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">uri</td>
<td style="text-align:center">from table_name</td>
<td style="text-align:center">指定查询某应用程序下一张表</td>
</tr>
<tr>
<td style="text-align:center">projection</td>
<td style="text-align:center">select column1,column2</td>
<td style="text-align:center">指定查询的列名</td>
</tr>
<tr>
<td style="text-align:center">selection</td>
<td style="text-align:center">where column=value</td>
<td style="text-align:center">指定where条件</td>
</tr>
<tr>
<td style="text-align:center">selectionArgs</td>
<td style="text-align:center">-</td>
<td style="text-align:center">为where重占位符提供值</td>
</tr>
<tr>
<td style="text-align:center">orderBy</td>
<td style="text-align:center">order by column1,column2</td>
<td style="text-align:center">指定查询结果排序方式</td>
</tr>
</tbody>
</table>
<p>获取到Cursor对象后，就能方便取出数据了：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(cursor=!<span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span>(cursor.moveToNext()) &#123;</span><br><span class="line">        String column1 = cursor.getString(cursor.getColumnIndex(<span class="string">"column1"</span>));</span><br><span class="line">        <span class="keyword">int</span> column2 = cursor.geteInt(...);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>增改删：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 增加</span><br><span class="line">ContentValues value = newContentValues();</span><br><span class="line">values.put(<span class="string">"column1"</span>,<span class="string">"text"</span>);</span><br><span class="line">values.put(<span class="string">"column2"</span>,<span class="number">1</span>);</span><br><span class="line">getContentResolver().insert(uri, values);</span><br><span class="line"></span><br><span class="line">#更新</span><br><span class="line">values.put(<span class="string">"column1"</span>,<span class="string">""</span>);</span><br><span class="line">getContentResolver().update(uri, values,<span class="string">"column1 = ? and column2 = ?"</span>,<span class="keyword">new</span> String [] &#123;<span class="string">"text"</span>, <span class="string">"1"</span>&#125;);</span><br><span class="line"></span><br><span class="line">#删除</span><br><span class="line"></span><br><span class="line">getContentResolver().delete(uri, <span class="string">"column2 = ?"</span>,<span class="keyword">new</span> String [] &#123;<span class="string">"1"</span>&#125;);</span><br></pre></td></tr></table></figure></p>
<h3 id="读取系统联系人">读取系统联系人</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 判断权限</span><br><span class="line"><span class="keyword">if</span>(ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.READ_CONTACTS）!= PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">    ActivityCompat.requestPermisssions(<span class="keyword">this</span>,<span class="keyword">new</span> String []&#123;Mainest.permission.READ_CONTACTS&#125;,<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    readContacts();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onRequestPermissionsResult&#123;</span><br><span class="line">    <span class="keyword">switch</span>(requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">         <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">             readContacts();</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">         <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 读取共享数据</span><br><span class="line">Cursor cursor = getContentResolver().qurey(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">if</span> (cursor != <span class="keyword">null</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">        String name = cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));</span><br><span class="line">        String number = cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));</span><br><span class="line">        contactLists.add(name+<span class="string">"\n"</span>+number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后需要加上读取联系人权限，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.READ_CONTACTS"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="创建内容提供器">创建内容提供器</h2><h3 id="创建步骤">创建步骤</h3><p>首先需要实现一个类继承ContentProvider，重写6个抽象方法，一个重要参数就是Uri，URI还可以在前面所描述的组成后面加上一个id，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">content://authority/path/id // 访问指定表中指定id的数据，不指定id时就访问所以数据</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以用通配符来匹配id</span></span><br><span class="line">* - 匹配任意长度字符</span><br><span class="line"><span class="comment"># - 匹配任意长度数字</span></span><br></pre></td></tr></table></figure></p>
<p>另外，其中比较特殊的getType()用于获取uri对象对应的MIME类型，其格式要求如下：</p>
<ul>
<li>内容以路径结尾：vnd.android.cursor.dir/vnd.<authority>.<path></path></authority></li>
<li>内容以id结尾：vnd.android.cursor.item/vnd.<authority>.<path></path></authority></li>
</ul>
<p>一个完整的内容提供器实例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatabaseProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOOK_DIR = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOOT_ITEM = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CATEGORY_DIR = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CATEGORY_ITEM = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY = <span class="string">"com.lee.databasetest.provider"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> UriMatcher uriMatcher;</span><br><span class="line">    <span class="keyword">private</span> MyDataBaseHelper helper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        uriMatcher = <span class="keyword">new</span> UriMatcher(UriMatcher.NO_MATCH);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"book"</span>,BOOK_DIR);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"book/#"</span>,BOOT_ITEM);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"category"</span>,CATEGORY_DIR);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"category/#"</span>,CATEGORY_ITEM);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DatabaseProvider</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Implement this to handle requests to delete one or more rows.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Implement this to handle requests for the MIME type of the data</span></span><br><span class="line">        <span class="comment">// at the given URI.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Uri <span class="title">insert</span><span class="params">(Uri uri, ContentValues values)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = helper.getWritableDatabase();</span><br><span class="line">        Uri uriReturn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">            <span class="keyword">case</span> BOOT_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newBookId = db.insert(<span class="string">"Book"</span>, <span class="keyword">null</span>, values);</span><br><span class="line">                uri = Uri.parse(<span class="string">"content://"</span>+AUTHORITY+<span class="string">"/book/"</span>+newBookId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newCategoryId = db.insert(<span class="string">"Category"</span>, <span class="keyword">null</span>, values);</span><br><span class="line">                uri = Uri.parse(<span class="string">"content://"</span>+AUTHORITY+<span class="string">"/category"</span>+newCategoryId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Implement this to initialize your content provider on startup.</span></span><br><span class="line">        helper = <span class="keyword">new</span> MyDataBaseHelper(getContext(),<span class="string">"book.db"</span>,<span class="keyword">null</span>,<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cursor <span class="title">query</span><span class="params">(Uri uri, String[] projection, String selection,</span><br><span class="line">                        String[] selectionArgs, String sortOrder)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = helper.getReadableDatabase();</span><br><span class="line">        Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            <span class="keyword">case</span>  BOOK_DIR:</span><br><span class="line">                cursor = db.query(<span class="string">"Book"</span>, projection,selection,selectionArgs,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOT_ITEM:</span><br><span class="line">                String bookId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                cursor = db.query(<span class="string">"Book"</span>, projection,<span class="string">"id = ?"</span>,<span class="keyword">new</span> String[]&#123;bookId&#125;,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                cursor = db.query(<span class="string">"Category"</span>, projection,selection,selectionArgs,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                String categoryId = uri.getPathSegments().get(<span class="number">1</span>);</span><br><span class="line">                cursor = db.query(<span class="string">"Category"</span>,projection,<span class="string">"id = ?"</span>, <span class="keyword">new</span> String[]&#123;categoryId&#125;,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cursor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Uri uri, ContentValues values, String selection,</span><br><span class="line">                      String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO: Implement this to handle requests to update one or more rows.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>更多代码见：<a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter7/DataBaseTest/app/src/main/java/com/example/lee/databasetest" target="_blank" rel="external">跨程序数据共享实例</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;内容提供器(Content Provider)是Android实现跨程序共享数据的标准方式。&lt;/p&gt;
&lt;h2 id=&quot;运行时权限&quot;&gt;运行时权限&lt;/h2&gt;&lt;h3 id=&quot;Android权限机制&quot;&gt;Android权限机制&lt;/h3&gt;&lt;p&gt;为了安全，Android6.0后引入了新特性，让APP申请的权限用户可控，Android的权限分为了两类：1. 普通权限，2.危险权限。危险权限一共有9组24个权限。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之数据存储</title>
    <link href="http://huaqianlee.github.io/2017/04/29/FirstCode/FirstCode-data-storage/"/>
    <id>http://huaqianlee.github.io/2017/04/29/FirstCode/FirstCode-data-storage/</id>
    <published>2017-04-29T10:35:49.000Z</published>
    <updated>2017-06-18T01:37:31.600Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="文件存储">文件存储</h2><h3 id="数据存到文件">数据存到文件</h3><p>Context类提供了一个openFileOutput()方法，可以用于文件存储，此方法有两个参数：</p>
<ul>
<li>arg1 - 文件名，不包括路径，全默认存储于/data/data/<packagename>/files/</packagename></li>
<li>arg2 - 文件操作模式， MODE_PRIVATE（覆盖式）和 MODE_APPEND（追加式）<a id="more"></a> 
</li>
</ul>
<p>如下是一个简短示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    FileOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">    BufferedWriter writer = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        out = openFileOutput(<span class="string">"data"</span>, Context.MODE_PRIVATE);</span><br><span class="line">        writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(out));</span><br><span class="line">        writer.write(<span class="string">"the content"</span>);</span><br><span class="line">    &#125; ... <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(wirter != <span class="keyword">null</span>)</span><br><span class="line">            writer.close();</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="从文件中读取数据">从文件中读取数据</h3><p>Context类提供了一个openFileInput()方法，用于从文件读取数据，简例如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public String <span class="function"><span class="title">load</span></span>() &#123;</span><br><span class="line">    FileInputStream <span class="keyword">in</span> = null;</span><br><span class="line">    BufferedReader reader = null;</span><br><span class="line">    StringBuilder content = new StringBuilder();</span><br><span class="line">    try &#123;</span><br><span class="line">        <span class="keyword">in</span> = openFileInput(<span class="string">"data"</span>);</span><br><span class="line">        reader = new BufferedReader(new InputStreamReader(<span class="keyword">in</span>));</span><br><span class="line">        String line = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">while</span>((line = reader.readLine()) != null) &#123;</span><br><span class="line">            content.append(line);</span><br><span class="line">        &#125;...finally &#123;</span><br><span class="line">            <span class="keyword">if</span>(reader != null) &#123;</span><br><span class="line">                reader.close();</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> content.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断字符是否为空的一个方式</span></span><br><span class="line">TextUtils.isEmpty(string)</span><br></pre></td></tr></table></figure></p>
<h2 id="SharedPreferences存储">SharedPreferences存储</h2><h3 id="将数据存储到SharedPreferences中">将数据存储到SharedPreferences中</h3><p>SharedPreferences是通过键值对的方式存储，Android中获取SharedPreferences对象的三种方法：</p>
<ol>
<li><p>Context类中的getSharedPreferences()方法。</p>
<ul>
<li>arg1: SharedPreferences文件名，<strong>存于：/data/data/<package_name>/shared_prefs/</package_name></strong></li>
<li>arg2: 操作模式，只有MODE_PRIVATE一种方式，传入0也一样的效果，其余皆被废弃</li>
</ul>
</li>
<li><p>Activity中的getPreferences()方法。</p>
<ul>
<li>一个参数：操作模式，自动以类名命名文件</li>
</ul>
</li>
<li><p>PreferenceManager类中的getDefaultSharedPreferences()静态方法，</p>
<ul>
<li>接收Context参数，自动用包名为前缀命名文件 </li>
</ul>
</li>
</ol>
<p>获取了SharedPreferences对象后， 就可以存储数据了，主要分三步实现：</p>
<ul>
<li><p><strong>step1</strong>：通过SharedPreferences对象的edit()方法获取SharedPreferences.Editor对象</p>
</li>
<li><p><strong>step2</strong>：通过putXxx()方法向SharedPreferences.Editor对象添加数据</p>
</li>
<li><p><strong>step3</strong>：调用apply()方法提交数据，完成数据存储。</p>
</li>
</ul>
<p>一个存储的简单书写方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences.Editor editor = getSharedPreferences(<span class="string">"data"</span>,MODE_PRIVATE).edit();</span><br><span class="line">editor.putString(<span class="string">"name"</span>,<span class="string">"andy"</span>);</span><br><span class="line">editor.putInt(<span class="string">"age"</span>,)</span><br><span class="line">editor.putBoolean(<span class="string">"married"</span>,<span class="keyword">true</span>);</span><br><span class="line">editor.apply();</span><br></pre></td></tr></table></figure></p>
<h3 id="从SharedPreferences中读取数据">从SharedPreferences中读取数据</h3><p>读取数据的方式十分简单，得到SharedPreferences对象后通过getX()方法即可获取到数据。getX()方法有两个参数：</p>
<ul>
<li>arg1：key值</li>
<li>arg2：当通过key值找不到内容时的默认值</li>
</ul>
<h2 id="SQLite数据库存储">SQLite数据库存储</h2><p>SQL的数据类型：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">integer：整型</span><br><span class="line">real：浮点型</span><br><span class="line">text：文本类型</span><br><span class="line">blob：二进制</span><br><span class="line"># 一些其他关键字</span><br><span class="line">primary key：设为主键</span><br><span class="line">autoincrement：自增长</span><br></pre></td></tr></table></figure></p>
<p>一个关键的抽象类SQLiteOpenHelper及其两个实例方法：<br><strong>getReadableDatabase()</strong> 和 <strong>getWritableDatabase()</strong>。两个方法都能创建或打开数据库，不过当数据不可写入是，getWritableDatabase()将报异常。</p>
<h3 id="创建数据库及CRUD操作">创建数据库及CRUD操作</h3><p>要使用SQLite，首先需要实现SQLiteOpenHelper抽象类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_BOOK = <span class="string">"create table Book ("</span> +</span><br><span class="line">            <span class="string">"id integer primary key autoincrement,"</span> +</span><br><span class="line">            <span class="string">"author text,"</span> +</span><br><span class="line">            <span class="string">"price real,"</span> +</span><br><span class="line">            <span class="string">"pages integer,"</span> +</span><br><span class="line">            <span class="string">"name text)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_CATEGORY = <span class="string">"create table Category ("</span> +</span><br><span class="line">            <span class="string">"id integer primary key autoincrement,"</span> +</span><br><span class="line">            <span class="string">"category_name text,"</span> +</span><br><span class="line">            <span class="string">"category_code integer)"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context mcontext;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDataBaseHelper</span><span class="params">(Context context, String name, SQLiteDatabase.CursorFactory factory, <span class="keyword">int</span> version)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, name, factory, version);</span><br><span class="line">        mcontext = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="comment">/*创建数据库*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class="line">        db.execSQL(CREATE_BOOK);</span><br><span class="line">        db.execSQL(CREATE_CATEGORY);</span><br><span class="line">        Toast.makeText(mcontext, <span class="string">" Created succeeded!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*升级数据库*/</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line">        db.execSQL(<span class="string">"drop table if exists Book"</span>);</span><br><span class="line">        db.execSQL(<span class="string">"drop table if exists Category"</span>);</span><br><span class="line">        onCreate(db);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>有了这类之后，就可以进行CRUD操作了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#c-create r-retrieve(查询) u-update d-delete</span><br><span class="line"><span class="keyword">final</span> MyDataBaseHelper helper = <span class="keyword">new</span> MyDataBaseHelper(<span class="keyword">this</span>, <span class="string">"BookStore.db"</span>, <span class="keyword">null</span>, <span class="number">1</span>); <span class="comment">// 1 为数据库版本号， 当升级数据库的时候需更新</span></span><br><span class="line"><span class="comment">// 创建数据库</span></span><br><span class="line">SQLiteDatabase db = helper.getWritableDatabase();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加数据</span></span><br><span class="line">ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">values.put(<span class="string">"name"</span>, <span class="string">"Just for fun"</span>);</span><br><span class="line">...</span><br><span class="line">db.insert(<span class="string">"Book"</span>, <span class="keyword">null</span>, values);</span><br><span class="line"><span class="comment">// 更新数据</span></span><br><span class="line">values.put(<span class="string">"price"</span>,<span class="number">1000</span>);</span><br><span class="line">db.update(<span class="string">"Book"</span>, values,<span class="string">"name=?"</span>,<span class="keyword">new</span> String[]&#123;<span class="string">"Just for fun"</span>&#125;);</span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line">db.delete(<span class="string">"Book"</span>,<span class="string">"price &lt; ?"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"100"</span>&#125;);</span><br><span class="line"><span class="comment">// 查询数据</span></span><br><span class="line">Cursor cursor = db.query(<span class="string">"Book"</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">if</span> (cursor.moveToFirst()) &#123;</span><br><span class="line">    do&#123;</span><br><span class="line">        String name = cursor.getString(cursor.getColumnIndex(<span class="string">"name"</span>));</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">while</span> (cursor.moveToNext());</span><br></pre></td></tr></table></figure></p>
<h3 id="直接使用SQL操作数据库">直接使用SQL操作数据库</h3><p>直接使用SQL来完成CRUD操作：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加数据</span></span><br><span class="line">db.execSQL(<span class="string">"insert into Book(name,author,pages,price) values(?,?,?,?)"</span>, new String&#123;<span class="string">"Just for fun"</span>,<span class="string">"Linus"</span>,<span class="string">"355"</span>,<span class="string">"99"</span>&#125;);</span><br><span class="line"><span class="comment"># 更新数据</span></span><br><span class="line">de.execSQL(<span class="string">"update Book set price =? where name = ?"</span>,new String[]&#123;<span class="string">"88"</span>,<span class="string">"Just for fun"</span>);</span><br><span class="line"><span class="comment"># 删除数据</span></span><br><span class="line">db.execSQL(<span class="string">"delete from Book where pages &gt; ?"</span>, new String[]&#123;<span class="string">"300"</span>&#125;);</span><br><span class="line"><span class="comment"># 查询数据</span></span><br><span class="line">db.rawQuery(<span class="string">"select * from Book"</span>,null);</span><br></pre></td></tr></table></figure></p>
<h3 id="命令查看数据库">命令查看数据库</h3><p>连接上手机，adb shell进入终端：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#26597;&#30475;&#25968;&#25454;&#24211;&#20013;&#30340;&#34920;&#10;.table   &#10;# &#26597;&#30475;&#24314;&#34920;&#35821;&#21477;&#10;.schema&#10;# &#26597;&#35810;&#35821;&#21477;&#10;select * from Book</span><br></pre></td></tr></table></figure></p>
<h2 id="使用开源LitePal操作数据库">使用开源LitePal操作数据库</h2><p>Litepal采用了对象关系映射(ORM)的模式，其地址：<a href="https://github.com/LitePalFramework/LitePal" target="_blank" rel="external">https://github.com/LitePalFramework/LitePal</a>。</p>
<h3 id="配置LitePal">配置LitePal</h3><p>要使用LitePal首先需要再app/build.gradle文件里添加依赖：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile <span class="string">'org.litepal.android:core:1.3.2'</span> <span class="comment"># 目前最新已经俩到1.5.1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来需要配置litepal.xml文件。需在app/src/main下新建assets/litepal.xml。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">litepal</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dbname</span> <span class="attribute">value</span>=<span class="value">"BookStore"</span>&gt;</span><span class="tag">&lt;/<span class="title">dbname</span>&gt;</span> # 指定数据库名</span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span> <span class="attribute">value</span>=<span class="value">"1"</span>&gt;</span><span class="tag">&lt;/<span class="title">version</span>&gt;</span> # 指定数据库版本号</span><br><span class="line">    <span class="tag">&lt;<span class="title">list</span>&gt;</span><span class="tag">&lt;/<span class="title">list</span>&gt;</span>  # 指定映射模型</span><br><span class="line"><span class="tag">&lt;/<span class="title">litepal</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>最后需要再AndroidMannifest.xml中做如下配置：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span></span><br><span class="line">        <span class="attribute">android:name</span>=<span class="value">"org.litepal.LitePalApplication"</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">    &gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>如果已经有了自己的application，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">manifest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span></span><br><span class="line">        <span class="attribute">android:name</span>=<span class="value">"com.example.MyOwnApplication"</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">    &gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>可以通过如下方式实现让LitePal成功运行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyOwnApplication</span> <span class="keyword">extends</span> <span class="title">AnotherApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        LitePal.initialize(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="创建和升级数据库">创建和升级数据库</h3><p>为了创建一个Book表，先定义一个Book类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> <span class="keyword">extends</span> <span class="title">DataSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// generated getters and setters.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来将Book类添加到litepal.xml的映射模型列表中：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">mapping</span> <span class="attribute">class</span>=<span class="value">"com.example.litepaltest.Book"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">list</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>现在进行任意一次数据库操作，BookStore.db就会自动被创建出来：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Connector.getDataBase(); <span class="comment">// LitePal 的一个最简单数据库操作方法</span></span><br></pre></td></tr></table></figure></p>
<p>现在如若要向表中添加列等数据，只需要在Book类中添加一个字段即可。</p>
<h3 id="增删改查">增删改查</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加数据</span></span><br><span class="line">Book book = <span class="keyword">new</span> Book();</span><br><span class="line">book.setXx();</span><br><span class="line">book.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以存储对象更新数据</span></span><br><span class="line">book.setXx();</span><br><span class="line">book.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通用方式更新数据</span></span><br><span class="line">book.setPrice(<span class="number">14.95</span>);</span><br><span class="line">book.setPress(<span class="string">"Anchor"</span>);</span><br><span class="line">book.updateAll(<span class="string">"name=? and author = ?"</span>,<span class="string">"Just for fun"</span>,<span class="string">"Linus"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定数据更新为默认值</span></span><br><span class="line">book.setToDefault(<span class="string">"pages"</span>);</span><br><span class="line">book.updateAll();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line">DataSupport.deleteAll(Book.class, <span class="string">"price &lt; ?"</span>,<span class="string">"15"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询数据</span></span><br><span class="line">List&lt;Book&gt; books = DataSupport.findAll(Book.class);</span><br></pre></td></tr></table></figure>
<h3 id="更多方法">更多方法</h3><p><a href="https://github.com/LitePalFramework/LitePal" target="_blank" rel="external">https://github.com/LitePalFramework/LitePal</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;文件存储&quot;&gt;文件存储&lt;/h2&gt;&lt;h3 id=&quot;数据存到文件&quot;&gt;数据存到文件&lt;/h3&gt;&lt;p&gt;Context类提供了一个openFileOutput()方法，可以用于文件存储，此方法有两个参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;arg1 - 文件名，不包括路径，全默认存储于/data/data/&lt;packagename&gt;/files/&lt;/li&gt;
&lt;li&gt;arg2 - 文件操作模式， MODE_PRIVATE（覆盖式）和 MODE_APPEND（追加式）
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
</feed>
