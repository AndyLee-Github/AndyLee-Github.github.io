<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andy.Lee&#39;s  Blog</title>
  <subtitle>Good good study, day day up !</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huaqianlee.github.io/"/>
  <updated>2017-12-17T02:54:19.433Z</updated>
  <id>http://huaqianlee.github.io/</id>
  
  <author>
    <name>Andy.Lee</name>
    <email>huaqianlee@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【置顶】Android 系统源码分析综述：整理总结源码分析的所有博客</title>
    <link href="http://huaqianlee.github.io/2100/11/21/Android/A-summary-of-Android-source-analysis/"/>
    <id>http://huaqianlee.github.io/2100/11/21/Android/A-summary-of-Android-source-analysis/</id>
    <published>2100-11-21T13:55:43.000Z</published>
    <updated>2017-12-17T02:54:19.433Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>一直都想对整个Android系统的源码做一个完整的分析，并形成一些有质量的文章。之前做高通平台时，也零零碎碎的分析过一些Android系统的源码，但是当时基本都是用笔记软件随意做了一些记录，没有系统性的总结，导致很多东西又忘记了。最近开始做MTK平台，就准备开始抽空好好跟读一下源码，边分析边写博客。</p>
</blockquote>
<h1 id="前言">前言</h1><p>之前的几篇高通的博客是基于Android 4.4 分析，现在准备通过工作时 MTK 平台 Android 7.0 的源码来进行分析，不过也会将以前基于高通的博客归类于此文。</p>
<p>以前看代码，喜欢按照调用流程一步步的完整跟下来，这样比较费时间，尤其觉得对于驱动部分不是很必要，所以这次就准备主要专注于关键文件和关键函数，以及软件框架。<br><a id="more"></a></p>
<h1 id="Android架构">Android架构</h1><h1 id="源码分析">源码分析</h1><p>准备从三个方向来分析源码，一是从工作相关的方向，将所有外设，从最底层到最上层；二是针对某些模块的代码进行分析；三是根据系统源码架构和结构一层一层分析原理。</p>
<h2 id="外设方向">外设方向</h2><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2017/12/17/Android/android-sensor-arch-analysis/" target="_blank" rel="external">Android传感器（Sensor）架构简析 (╯_╰)</a></td>
<td>MTK 传感器架构简析 (╯_╰)</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2017/11/23/Android/Android-Linux-input-system-analysis/" target="_blank" rel="external">Android(Linux) 输入子系统解析</a></td>
<td>从 HW 到 Framework 分析输入子系统</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2017/12/03/Android/Android-Linux-i2c-driver-arch/" target="_blank" rel="external">Android/Linux  I2C 驱动架构分析</a></td>
<td>I2C驱动架构分析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2017/11/21/Android/BMS-of-Android-Power-Management/" target="_blank" rel="external">Android 电源管理之电池管理系统(BMS)</a></td>
<td>从 HW 到 APP 分析 BMS 系统  </td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/" target="_blank" rel="external">Android不带电量计的电量计算</a></td>
<td>高通不带库仑计电池电量算法</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/" target="_blank" rel="external">Android 电源管理架构</a></td>
<td>高通PMU架构与电源管理机制简析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/" target="_blank" rel="external">Android电池监控系统-BMS (有坑未填)</a></td>
<td>高通BMS系统源码简析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/06/24/Android/qaulcomm-bms-driver-analysis/" target="_blank" rel="external">高通电池管理系统（BMS）驱动分析</a></td>
<td>高通 BMS 系统与驱动分析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/06/24/Android/smb135x-charger-driver/" target="_blank" rel="external">高通 smb135x charger 驱动分析</a></td>
<td>高通 smb135x 驱动简析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/06/24/Android/qcom-pmic-driver/" target="_blank" rel="external">高通 PMIC 架构简析</a></td>
<td>高通 PMIC 架构</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/06/24/Android/linear-charger-driver/" target="_blank" rel="external">高通 linear charger 驱动分析</a></td>
<td>高通 linear charger 驱动简析</td>
</tr>
</tbody>
</table>
<h2 id="代码模块方向">代码模块方向</h2><h3 id="系统方向">系统方向</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/23/Android/%E9%AB%98%E9%80%9AAndroid%E8%AE%BE%E5%A4%87%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-%E4%BB%8Epower-on%E4%B8%8A%E7%94%B5%E5%88%B0Home-Lanucher%E5%90%AF%E5%8A%A8/" target="_blank" rel="external">高通Android设备启动流程分析</a></td>
<td>从power-on上电到Home Lanucher启动</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/18/Android/%E6%80%8E%E4%B9%88%E7%94%A8Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8E%BB%E8%B0%83%E8%AF%95-How-to-debug-with-Android-logging/" target="_blank" rel="external">怎么用Android日志系统更好地去调试</a></td>
<td>解析 log 实现代码及实战 demo</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/19/Android/%E6%80%8E%E4%B9%88%E6%8A%93%E5%8F%96Android%E6%B5%8B%E8%AF%95%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-How-to-get-android-log-file/" target="_blank" rel="external">怎么抓取Android测试日志文件</a></td>
<td>解析 logcat 命令 和 log的抓取</td>
</tr>
</tbody>
</table>
<h3 id="BootLoader部分">BootLoader部分</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(一)</a></td>
<td>高通boot架构和sbl源码执行流程</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(二)</a></td>
<td>CDT解析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(三)</a></td>
<td>log系统和下载升级</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/25/Android/Android%E6%BA%90%E7%A0%81bootable%E8%A7%A3%E6%9E%90%E4%B9%8BLK-bootloader-little-kernel/" target="_blank" rel="external">Android源码bootable解析之bootloader LK(little kernel)</a></td>
<td>LK目录和LK源码流程</td>
</tr>
</tbody>
</table>
<h3 id="Kernel部分">Kernel部分</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2017/11/23/Android/Android-Linux-input-system-analysis/" target="_blank" rel="external">Android(Linux) 输入子系统解析</a></td>
<td>从 HW 到 Framework 分析输入子系统</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/19/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BLinux%E5%86%85%E6%A0%B8%E8%AE%BE%E5%A4%87%E6%A0%91-DT-Device-Tree-dts%E6%96%87%E4%BB%B6/" target="_blank" rel="external">Linux内核设备树(DT - Device Tree)</a></td>
<td>基于高通平台分析设备树</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2017/11/14/Android/Android-SELinux-Permison-and-Question/" target="_blank" rel="external">Android Selinux 权限及问题</a></td>
<td>SELinux权限介绍及问题解决</td>
</tr>
</tbody>
</table>
<h3 id="日志系统">日志系统</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/18/Android/Android-Logging-system-Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/" target="_blank" rel="external">Android日志系统详解</a></td>
<td>logging system</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/18/Android/%E6%80%8E%E4%B9%88%E7%94%A8Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8E%BB%E8%B0%83%E8%AF%95-How-to-debug-with-Android-logging/" target="_blank" rel="external">怎么用Android日志系统更好地去调试</a></td>
<td>代码中的 log</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/19/Android/%E6%80%8E%E4%B9%88%E6%8A%93%E5%8F%96Android%E6%B5%8B%E8%AF%95%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6-How-to-get-android-log-file/" target="_blank" rel="external">怎么抓取Android测试日志文件</a></td>
<td>logcat 简析</td>
</tr>
</tbody>
</table>
<h3 id="编译系统">编译系统</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/" target="_blank" rel="external">Android编译过程详解之一</a></td>
<td>高通自定义脚本与lunch</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/" target="_blank" rel="external">Android编译过程详解之二</a></td>
<td>Build系统及.mk文件解析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%89/" target="_blank" rel="external">Android编译过程详解之三</a></td>
<td>客制化解析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/" target="_blank" rel="external">Android.mk解析</a></td>
<td>一个bug及Android.mk文件详解</td>
</tr>
</tbody>
</table>
<h2 id="架构原理方向">架构原理方向</h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一直都想对整个Android系统的源码做一个完整的分析，并形成一些有质量的文章。之前做高通平台时，也零零碎碎的分析过一些Android系统的源码，但是当时基本都是用笔记软件随意做了一些记录，没有系统性的总结，导致很多东西又忘记了。最近开始做MTK平台，就准备开始抽空好好跟读一下源码，边分析边写博客。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;&lt;p&gt;之前的几篇高通的博客是基于Android 4.4 分析，现在准备通过工作时 MTK 平台 Android 7.0 的源码来进行分析，不过也会将以前基于高通的博客归类于此文。&lt;/p&gt;
&lt;p&gt;以前看代码，喜欢按照调用流程一步步的完整跟下来，这样比较费时间，尤其觉得对于驱动部分不是很必要，所以这次就准备主要专注于关键文件和关键函数，以及软件框架。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
      <category term="Qualcomm" scheme="http://huaqianlee.github.io/tags/Qualcomm/"/>
    
      <category term="源码分析" scheme="http://huaqianlee.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Gitbook + Jenkins + Gitlab 搭建内网自动构建的 Gitbook</title>
    <link href="http://huaqianlee.github.io/2019/05/05/Git/gitlab-jenkins-gitbook-to-create-LAN-gitbook/"/>
    <id>http://huaqianlee.github.io/2019/05/05/Git/gitlab-jenkins-gitbook-to-create-LAN-gitbook/</id>
    <published>2019-05-05T12:04:59.000Z</published>
    <updated>2019-05-05T12:09:57.441Z</updated>
    
    <content type="html"><![CDATA[<p>最近在本地搭建了一个 Gitbook ，用于内网访问。总结一下简单流程形成此文，细节设置可以参考官网。</p>
<h2 id="Gitbook">Gitbook</h2><h3 id="Install_Git">Install Git</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> git</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="Install_Node-js">Install Node.js</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> Node.js</span><br></pre></td></tr></table></figure>
<h3 id="Install_npm">Install npm</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> npm</span><br></pre></td></tr></table></figure>
<h3 id="Install_gitbook">Install gitbook</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gitbook-<span class="keyword">cli</span> -<span class="keyword">g</span></span><br><span class="line">gitbook -V</span><br></pre></td></tr></table></figure>
<h3 id="Test_gitbook_server-web">Test gitbook server-web</h3><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="keyword">server</span></span><br><span class="line">cd <span class="keyword">server</span></span><br><span class="line">gitbook init</span><br><span class="line">gitbook build .</span><br><span class="line">gitbook serve .</span><br></pre></td></tr></table></figure>
<h2 id="Gitlab">Gitlab</h2><h3 id="Install_and_configure_the_necessary_dependencies">Install and configure the necessary dependencies</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get <span class="operator"><span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> -y curl openssh-<span class="keyword">server</span> ca-certificates</span></span><br></pre></td></tr></table></figure>
<h3 id="Install_Postfix_to_send_notification_emails-">Install Postfix to send notification emails.</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> install -y <span class="keyword">postfix</span></span><br></pre></td></tr></table></figure>
<h3 id="Add_the_GitLab_package_repository_and_install_-">Add the GitLab package repository and install .</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl http<span class="variable">s:</span>//packages.gitlab.<span class="keyword">com</span>/install/repositories/gitlab/gitlab-ee/script.<span class="keyword">deb</span>.<span class="keyword">sh</span> | sudo bash</span><br><span class="line">sudo EXTERNAL_URL=<span class="string">"https://gitlab.example.com"</span> apt-<span class="built_in">get</span> install gitlab-ee</span><br></pre></td></tr></table></figure>
<h3 id="Config_gitlab">Config gitlab</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -<span class="keyword">p</span> /etc/gitlab</span><br><span class="line">sudo touch /etc/gitlab/gitlab.rb</span><br><span class="line">sudo chmod <span class="number">600</span> /etc/gitlab/gitlab.rb</span><br><span class="line">sudo <span class="keyword">vim</span> /etc/gitlab/gitlab.rb</span><br><span class="line"># external_url <span class="string">'http://164.69.136.23'</span> , config <span class="keyword">as</span> local ip <span class="built_in">or</span> url.</span><br><span class="line"># Modification <span class="keyword">is</span> suggested. If <span class="string">'502 GitLab is not responding...'</span> error <span class="built_in">exists</span>, modify <span class="string">'unicorn['</span>port<span class="string">']'</span> in gitlab.rb. </span><br><span class="line"></span><br><span class="line">sudo gitlab-ctl reconfigure # reconfigure <span class="built_in">and</span> restart.</span><br><span class="line">sudo gitlab-ctl status</span><br></pre></td></tr></table></figure>
<h2 id="Jenkins">Jenkins</h2><h3 id="Install_Java">Install Java</h3><p>推荐安装 openjdk-7-jre 和 openjdk-7-jdk ，但是其在 Ubuntu 16.04 和更高版本不再有效，可以安装 Java 8 或者 9 代替。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get <span class="operator"><span class="keyword">install</span> openjdk-<span class="number">7</span>-jre</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> openjdk-<span class="number">7</span>-jdk</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Install_Jenkins">Install Jenkins</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -<span class="keyword">q</span> -O - http<span class="variable">s:</span>//pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key <span class="built_in">add</span> -</span><br><span class="line">sudo <span class="keyword">sh</span> -<span class="keyword">c</span> <span class="string">'echo deb http://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list'</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install jenkins</span><br></pre></td></tr></table></figure>
<h3 id="Upgrade_Jenkins">Upgrade Jenkins</h3><p>Jenkins 更新比较快，如若过期，可以按如下命令更新。<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install jenkins</span><br></pre></td></tr></table></figure></p>
<h3 id="Config_Jenkins">Config Jenkins</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/init.d/jenkins</span><br><span class="line"><span class="preprocessor"># Modify HTTP_PORT is suggested.</span></span><br><span class="line">sudo vi /etc/sudoers</span><br><span class="line"><span class="preprocessor"># jenkins ALL=(ALL) NOPASSWD:ALL ; 赋予 Jenkins sudo 权限和无密权限</span></span><br></pre></td></tr></table></figure>
<h3 id="Install_plugin">Install plugin</h3><p>通过 web(eg:<a href="http://192.168.1.2:8080" target="_blank" rel="external">http://192.168.1.2:8080</a>)  访问Jenkins 并安装插件 Git plugin　和　Gitlab Hook Plugin 。 </p>
<blockquote>
<p>初次登陆时注意 check web 提示的密码地址。</p>
</blockquote>
<h2 id="Nginx">Nginx</h2><h3 id="Install_nginx">Install nginx</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get <span class="operator"><span class="keyword">install</span> nginx</span><br><span class="line"># <span class="keyword">upgrade</span></span><br><span class="line">sudo apt-<span class="keyword">add</span>-repository ppa:nginx/stable</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">upgrade</span> nginx -y</span><br><span class="line"></span><br><span class="line">sudo service nginx <span class="keyword">start</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>nginx 默认使用 80 端口，打开浏览器输入：<a href="http://localhost/" target="_blank" rel="external">http://localhost/</a></p>
</blockquote>
<h3 id="Config_nginx">Config nginx</h3><p>sudo vi /etc/nginx/nginx.conf ， 注释掉不需要的配置文件，并新配 server 。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># comment to solve "Welcome to nginx ..." issue.</span></span><br><span class="line"><span class="comment"># include /etc/nginx/conf.d/*.conf;</span></span><br><span class="line"><span class="comment"># include /etc/nginx/sites-enabled/*;</span></span><br><span class="line"><span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">server_name</span> localhost;</span><br><span class="line">        <span class="title">listen</span> <span class="number">8082</span>; <span class="comment"># config port</span></span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">                <span class="title">root</span> /home/lee/gitbook/www/mybook; <span class="comment"># 自定义，用于存放 gitbook 内容</span></span><br><span class="line">                <span class="comment">#index  index.html index.html;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">#autoindex</span></span><br><span class="line">                <span class="title">autoindex</span> <span class="built_in">on</span>;</span><br><span class="line">                <span class="title">autoindex_exact_size</span> <span class="built_in">on</span>;</span><br><span class="line">                <span class="title">autoindex_localtime</span> <span class="built_in">on</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">nginx</span> -t <span class="comment"># 检查配置文件是否正常</span></span><br><span class="line">nginx -s reload <span class="comment"># 重启</span></span><br><span class="line">若出现错误：</span><br><span class="line">nginx:[<span class="built_in">error</span>] open() <span class="string">"/run/nginx.pid"</span> failed (<span class="number">2</span>: No such file or directory)</span><br><span class="line"></span><br><span class="line">nginx -c /etc/nginx/nginx.conf</span><br><span class="line">nginx -s reload</span><br><span class="line">nginx -s stop</span><br></pre></td></tr></table></figure></p>
<h2 id="Automaticaly_trigger">Automaticaly trigger</h2><h3 id="Config_gitlab-1">Config gitlab</h3><h4 id="Add_access_token">Add access token</h4><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">user</span> <span class="keyword">settings</span> ---&gt; <span class="constant">Access</span> <span class="constant">Tokens</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><em>记录下 token ，一旦关闭网页，此 token 将不再可见。</em></p>
</blockquote>
<h4 id="Create_mybook">Create mybook</h4><p>新建一个项目 <mybook>， 添加 webhooks.<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">a</span>. Settings ---&gt; Integrations </span><br><span class="line"><span class="tag">b</span>. add url: http:<span class="comment">//192.168.1.2:8082/gitlab/build_now (jenkins url) .</span></span><br><span class="line">c. Select push event.</span><br><span class="line">d. Add webhook.</span><br></pre></td></tr></table></figure></mybook></p>
<p>在本地项目路径执行 ‘gitbook init’ 生成 README.md 和 SUMMARY.md 两个文件， push 到 gitlab.</p>
<h3 id="Config_Jenkins-1">Config Jenkins</h3><h4 id="Add_tokens">Add tokens</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 系统管理 ---&gt; 系统设置</span></span><br><span class="line"><span class="label">Gitlab:</span></span><br><span class="line">Connection name: gitlab</span><br><span class="line">Gitlab host url: gitlab url</span><br><span class="line"><span class="label">credentials:</span> <span class="keyword">Add</span> token, 填入上面 Access Tokens.</span><br><span class="line">Test connection.</span><br></pre></td></tr></table></figure>
<h4 id="Config_trigger">Config trigger</h4><p>新建任务 <mybook> —-&gt; 构建一个自由风格的软件项目:</mybook></p>
<ol>
<li><p>源码管理: git</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Repository <span class="built_in">URL</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">http</span>://<span class="number">192.168</span>.1.2:<span class="number">8081</span>/root/mybook.git</span><br><span class="line">Credentials <span class="comment">---&gt; Add , 填入 Gitlab 用户名和密码</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>构建 —-&gt; 执行 shell</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gitbook build</span><br><span class="line">sudo rm -rf  <span class="regexp">/home/</span>lee<span class="regexp">/gitbook/</span>www/mybook</span><br><span class="line">sudo cp -a    _book  <span class="regexp">/home/</span>lee<span class="regexp">/gitbook/</span>www/mybook</span><br><span class="line">sudo chmod  <span class="number">777</span>  <span class="regexp">/home/</span>lee<span class="regexp">/gitbook/</span>www/mybook</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>　</p>
<h3 id="Preview">Preview</h3><p>更新本地文件，然后 push 到 Gitlab, 查看 Jenkins 是否会自动触发构建。</p>
<p>如果 OK ， 整个配置流程就完成了，也可以直接预览 Gitbook了。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http:</span><span class="comment">//192.168.1.2:8082 (nginx port)</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在本地搭建了一个 Gitbook ，用于内网访问。总结一下简单流程形成此文，细节设置可以参考官网。&lt;/p&gt;
&lt;h2 id=&quot;Gitbook&quot;&gt;Gitbook&lt;/h2&gt;&lt;h3 id=&quot;Install_Git&quot;&gt;Install Git&lt;/h3&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Git" scheme="http://huaqianlee.github.io/categories/Git/"/>
    
    
  </entry>
  
  <entry>
    <title>Three ways to dump usb register</title>
    <link href="http://huaqianlee.github.io/2018/08/23/Android/Three-ways-to-dump-usb-register/"/>
    <id>http://huaqianlee.github.io/2018/08/23/Android/Three-ways-to-dump-usb-register/</id>
    <published>2018-08-23T14:07:48.000Z</published>
    <updated>2019-05-05T15:58:50.777Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Add_node">Add node</h3><blockquote>
<p>此方法只为一个示例，有些平台不是使用此文件，如 SDM450（MSM8953）使用的 dwc3-qcom.c 。<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">--- kernel/msm-4.9/drivers/usb/phy/phy-msm-usb_hguan_bak.c	2018-09-25 16:48:47.672236000 +0800</span></span><br><span class="line"><span class="header">+++ kernel/msm-4.9/drivers/usb/phy/phy-msm-usb.c	2018-11-29 13:18:49.598562600 +0800</span></span><br><span class="line"><span class="chunk">@@ -51,6 +51,11 @@</span></span><br><span class="line"> </span><br><span class="line"> #include &lt;linux/msm-bus.h&gt;</span><br><span class="line"> </span><br><span class="line"><span class="addition">+#undef dev_dbg</span></span><br><span class="line"><span class="addition">+#define dev_dbg dev_info</span></span><br><span class="line"><span class="addition">+#undef pr_debug</span></span><br><span class="line"><span class="addition">+#define pr_debug pr_info</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> /**</span><br><span class="line">  * Requested USB votes for BUS bandwidth</span><br><span class="line">  *</span><br><span class="line">@@ -3601,6 +3606,53 @@ static int msm_otg_setup_devices(struct</span><br><span class="line"> 	return retval;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+#define DUMP_ENTRIES	152</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+static ssize_t usbphy_regs_show(struct device *dev,</span></span><br><span class="line"><span class="addition">+			       struct device_attribute *attr, char *buf)</span></span><br><span class="line"><span class="addition">+&#123;</span></span><br><span class="line"><span class="addition">+	struct msm_otg *motg = the_msm_otg;</span></span><br><span class="line"><span class="addition">+	//struct msm_otg_platform_data *pdata = motg-&gt;pdata;</span></span><br><span class="line"><span class="addition">+	struct usb_phy *phy = &amp;motg-&gt;phy;</span></span><br><span class="line"><span class="addition">+	u32 *dump;</span></span><br><span class="line"><span class="addition">+	unsigned int i,  n = 0;</span></span><br><span class="line"><span class="addition">+	//dbg_trace("[%s] %pK\n", __func__, buf);</span></span><br><span class="line"><span class="addition">+	if (attr == NULL || buf == NULL) &#123;</span></span><br><span class="line"><span class="addition">+		dev_err(dev, "[%s] EINVAL\n", __func__);</span></span><br><span class="line"><span class="addition">+		return 0;</span></span><br><span class="line"><span class="addition">+	&#125;</span></span><br><span class="line"><span class="addition">+	if (atomic_read(&amp;motg-&gt;in_lpm))&#123;</span></span><br><span class="line"><span class="addition">+	        dev_err(dev, "[%s] usb in lpm\n", __func__);</span></span><br><span class="line"><span class="addition">+		return 0;</span></span><br><span class="line"><span class="addition">+        &#125;</span></span><br><span class="line"><span class="addition">+	dump = kmalloc(sizeof(u8) * DUMP_ENTRIES, GFP_KERNEL);</span></span><br><span class="line"><span class="addition">+	if (!dump)</span></span><br><span class="line"><span class="addition">+		return 0;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+        for(i = 0; i &lt; DUMP_ENTRIES -1; i++)</span></span><br><span class="line"><span class="addition">+        dump[i] = ulpi_read(phy, i);</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+	for (i = 0; i &lt; DUMP_ENTRIES -1; i++) &#123;</span></span><br><span class="line"><span class="addition">+		n += scnprintf(buf + n, PAGE_SIZE - n,</span></span><br><span class="line"><span class="addition">+			       "reg[0x%04X] = 0x%04X\n",</span></span><br><span class="line"><span class="addition">+			       i, dump[i]);</span></span><br><span class="line"><span class="addition">+	&#125;</span></span><br><span class="line"><span class="addition">+	kfree(dump);</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+	return n;</span></span><br><span class="line"><span class="addition">+&#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+static ssize_t usbphy_regs_store(struct device *dev,</span></span><br><span class="line"><span class="addition">+		struct device_attribute *attr, const char</span></span><br><span class="line"><span class="addition">+		*buf, size_t size)</span></span><br><span class="line"><span class="addition">+&#123;</span></span><br><span class="line"><span class="addition">+	return size;</span></span><br><span class="line"><span class="addition">+&#125;</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+static DEVICE_ATTR(usbphy_regs, 0644,</span></span><br><span class="line"><span class="addition">+		usbphy_regs_show, usbphy_regs_store);</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> static ssize_t dpdm_pulldown_enable_show(struct device *dev,</span><br><span class="line"> 			       struct device_attribute *attr, char *buf)</span><br><span class="line"> &#123;</span><br><span class="line">@@ -4426,6 +4478,7 @@ static int msm_otg_probe(struct platform</span><br><span class="line"> 	motg-&gt;caps |= ALLOW_HOST_PHY_RETENTION;</span><br><span class="line"> </span><br><span class="line"> 	device_create_file(&amp;pdev-&gt;dev, &amp;dev_attr_dpdm_pulldown_enable);</span><br><span class="line"><span class="addition">+	device_create_file(&amp;pdev-&gt;dev, &amp;dev_attr_usbphy_regs);</span></span><br><span class="line"> </span><br><span class="line"> 	if (motg-&gt;pdata-&gt;enable_lpm_on_dev_suspend)</span><br><span class="line"> 		motg-&gt;caps |= ALLOW_LPM_ON_DEV_SUSPEND;</span><br><span class="line">@@ -4527,6 +4580,7 @@ otg_remove_devices:</span><br><span class="line"> remove_cdev:</span><br><span class="line"> 	pm_runtime_disable(&amp;pdev-&gt;dev);</span><br><span class="line"> 	device_remove_file(&amp;pdev-&gt;dev, &amp;dev_attr_dpdm_pulldown_enable);</span><br><span class="line"><span class="addition">+	device_remove_file(&amp;pdev-&gt;dev, &amp;dev_attr_usbphy_regs);</span></span><br><span class="line"> 	msm_otg_debugfs_cleanup();</span><br><span class="line"> phy_reg_deinit:</span><br><span class="line"> 	devm_regulator_unregister(motg-&gt;phy.dev, motg-&gt;dpdm_rdev);</span><br><span class="line">@@ -4619,6 +4673,7 @@ static int msm_otg_remove(struct platfor</span><br><span class="line"> 	usb_remove_phy(phy);</span><br><span class="line"> </span><br><span class="line"> 	device_remove_file(&amp;pdev-&gt;dev, &amp;dev_attr_dpdm_pulldown_enable);</span><br><span class="line"><span class="addition">+	device_remove_file(&amp;pdev-&gt;dev, &amp;dev_attr_usbphy_regs);</span></span><br><span class="line"> </span><br><span class="line"> 	/*</span><br><span class="line"> 	 * Put PHY in low power mode.</span><br></pre></td></tr></table></figure></p>
</blockquote>
<a id="more"></a>
<h3 id="trace">trace</h3><p>通过如下指令去 crash 设备，然后用 trace32 去读取寄存器值。<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo c &gt; /<span class="keyword">proc</span>/sysrq-triger</span><br></pre></td></tr></table></figure></p>
<h3 id="busybox">busybox</h3><p>dump usb registers via busybox.<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/data/busybox devmem <span class="variable">&lt;address&gt;</span> 32</span><br><span class="line">or </span><br><span class="line">r <span class="variable">&lt;address&gt;</span>  <span class="comment"># system/core/toolbox/r.c , 比 busybox 轻量化的一个工具</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Add_node&quot;&gt;Add node&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;此方法只为一个示例，有些平台不是使用此文件，如 SDM450（MSM8953）使用的 dwc3-qcom.c 。&lt;br&gt;&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;--- kernel/msm-4.9/drivers/usb/phy/phy-msm-usb_hguan_bak.c	2018-09-25 16:48:47.672236000 +0800&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;+++ kernel/msm-4.9/drivers/usb/phy/phy-msm-usb.c	2018-11-29 13:18:49.598562600 +0800&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;chunk&quot;&gt;@@ -51,6 +51,11 @@&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #include &amp;lt;linux/msm-bus.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+#undef dev_dbg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+#define dev_dbg dev_info&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+#undef pr_debug&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+#define pr_debug pr_info&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * Requested USB votes for BUS bandwidth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@@ -3601,6 +3606,53 @@ static int msm_otg_setup_devices(struct&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	return retval;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+#define DUMP_ENTRIES	152&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+static ssize_t usbphy_regs_show(struct device *dev,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+			       struct device_attribute *attr, char *buf)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	struct msm_otg *motg = the_msm_otg;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	//struct msm_otg_platform_data *pdata = motg-&amp;gt;pdata;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	struct usb_phy *phy = &amp;amp;motg-&amp;gt;phy;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	u32 *dump;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	unsigned int i,  n = 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	//dbg_trace(&quot;[%s] %pK\n&quot;, __func__, buf);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	if (attr == NULL || buf == NULL) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+		dev_err(dev, &quot;[%s] EINVAL\n&quot;, __func__);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+		return 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	if (atomic_read(&amp;amp;motg-&amp;gt;in_lpm))&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	        dev_err(dev, &quot;[%s] usb in lpm\n&quot;, __func__);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+		return 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	dump = kmalloc(sizeof(u8) * DUMP_ENTRIES, GFP_KERNEL);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	if (!dump)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+		return 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+        for(i = 0; i &amp;lt; DUMP_ENTRIES -1; i++)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+        dump[i] = ulpi_read(phy, i);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	for (i = 0; i &amp;lt; DUMP_ENTRIES -1; i++) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+		n += scnprintf(buf + n, PAGE_SIZE - n,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+			       &quot;reg[0x%04X] = 0x%04X\n&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+			       i, dump[i]);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	kfree(dump);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	return n;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+static ssize_t usbphy_regs_store(struct device *dev,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+		struct device_attribute *attr, const char&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+		*buf, size_t size)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	return size;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+static DEVICE_ATTR(usbphy_regs, 0644,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+		usbphy_regs_show, usbphy_regs_store);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; static ssize_t dpdm_pulldown_enable_show(struct device *dev,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 			       struct device_attribute *attr, char *buf)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@@ -4426,6 +4478,7 @@ static int msm_otg_probe(struct platform&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	motg-&amp;gt;caps |= ALLOW_HOST_PHY_RETENTION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	device_create_file(&amp;amp;pdev-&amp;gt;dev, &amp;amp;dev_attr_dpdm_pulldown_enable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	device_create_file(&amp;amp;pdev-&amp;gt;dev, &amp;amp;dev_attr_usbphy_regs);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	if (motg-&amp;gt;pdata-&amp;gt;enable_lpm_on_dev_suspend)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		motg-&amp;gt;caps |= ALLOW_LPM_ON_DEV_SUSPEND;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@@ -4527,6 +4580,7 @@ otg_remove_devices:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; remove_cdev:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	pm_runtime_disable(&amp;amp;pdev-&amp;gt;dev);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	device_remove_file(&amp;amp;pdev-&amp;gt;dev, &amp;amp;dev_attr_dpdm_pulldown_enable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	device_remove_file(&amp;amp;pdev-&amp;gt;dev, &amp;amp;dev_attr_usbphy_regs);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	msm_otg_debugfs_cleanup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; phy_reg_deinit:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	devm_regulator_unregister(motg-&amp;gt;phy.dev, motg-&amp;gt;dpdm_rdev);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@@ -4619,6 +4673,7 @@ static int msm_otg_remove(struct platfor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	usb_remove_phy(phy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	device_remove_file(&amp;amp;pdev-&amp;gt;dev, &amp;amp;dev_attr_dpdm_pulldown_enable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+	device_remove_file(&amp;amp;pdev-&amp;gt;dev, &amp;amp;dev_attr_usbphy_regs);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	 * Put PHY in low power mode.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="Qualcomm" scheme="http://huaqianlee.github.io/tags/Qualcomm/"/>
    
  </entry>
  
  <entry>
    <title>17 小结，18 计划!</title>
    <link href="http://huaqianlee.github.io/2018/02/12/Life/Bye-2017-Hi-2018/"/>
    <id>http://huaqianlee.github.io/2018/02/12/Life/Bye-2017-Hi-2018/</id>
    <published>2018-02-12T05:17:40.000Z</published>
    <updated>2018-02-14T06:08:13.333Z</updated>
    
    <content type="html"><![CDATA[<p>时光总是匆匆，一转眼 18 年都已经 2 月份了，今天是农历新年前倒数第二天上班了。17 年过得不那么顺畅，自己想做的很多事都没做，很遗憾；18 年自己即将 30 岁，想想还是很惶恐，已到而立之年了。这些时间自己的懒散加上工作上的事情，很久没有写东西了，博客也好久没有更新过了，考虑到今年的状态，和明年一些决定，今天来写个小结，列个计划。</p>
<h2 id="遗憾的_17_年">遗憾的 17 年</h2><p>17 年整体来说对自己是有些失望的，生活上遇到了一件让自己痛心的事情，也完成了人生一件最重要的事情，工作上除了薪资的涨幅，自己没有明显的进步，也没有什么成就感。<br><a id="more"></a></p>
<h3 id="徘徊">徘徊</h3><p>本来17年就有回成都的计划了，但是受一些事情的牵绊，走不了，所以这一年很多时候自己处于比较迷茫，比较徘徊的心理状态。 在前公司最后一段时间，自己很早就觉得上班没意思应该要辞职的，但是受到私事的牵绊，也考虑到 18 年要回家发展了，自己就一直耗在公司没有辞职。到后面有朋友介绍工作，终于下定决心换个环境，阴差阳错进到了现在的公司，过来后换了新平台，到现在这几个月事情相对还是比较多，才没有时间去徘徊了。</p>
<h3 id="小结">小结</h3><p>这一年本来有很多事情要去做的， 最重要的两件：学英语、锻炼。 这两件事没有坚持下来，是对自己失望的主因，业余阅读和写作没坚持下来也比较令人伤心，Android、Python等技术的提升没有坚持下来，考虑到外部环境和自己的时间，尚还能让自己接受。所以总的来说 17 年是有些遗憾和失望的。</p>
<h2 id="而立的_18_年">而立的 18 年</h2><p>18 年是自己的而立之年了， 除了准备回家发展，应该还会是我真正成长的一年。希望今年不让自己失望，也要担负起整个家庭的责任了。</p>
<h3 id="习惯养成">习惯养成</h3><p>按照如下模式培养一下自己的习惯，坚持下去。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">21</span>天 -&gt; <span class="number">100</span>天 -&gt; <span class="number">1</span> 年 -&gt; Until disappear</span><br></pre></td></tr></table></figure></p>
<p>18 年按优先级加入如下任务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 背单词</span><br><span class="line">- 锻炼</span><br><span class="line">- 冥想</span><br><span class="line">- 阅读</span><br></pre></td></tr></table></figure></p>
<p>还有如下以周为单位的坚持：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 博文（每周至少一篇技术 or 阅读 or 生活）</span><br><span class="line">- 陪老婆周边游散心</span><br><span class="line">-</span><br></pre></td></tr></table></figure></p>
<h3 id="生活">生活</h3><h4 id="回成都">回成都</h4><p>预计4~5月份回成都，开年后首要任务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 解决工作问题</span><br><span class="line">- 处理回家相关事宜</span><br></pre></td></tr></table></figure></p>
<p>回家稳定后，首要任务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 找一家健身房</span><br><span class="line">- 学习游泳</span><br><span class="line">- 买车</span><br></pre></td></tr></table></figure></p>
<h4 id="生活安排">生活安排</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 节假日多陪陪家人，常回家看看</span><br><span class="line">- 为家人安排体检</span><br><span class="line">- 给自己（老婆）买保险</span><br><span class="line">-</span><br></pre></td></tr></table></figure>
<h4 id="几个着重注意点">几个着重注意点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 睡前阅读、冥想</span><br><span class="line">- 碎片时间利用，阅读或背单词</span><br><span class="line">- 早或晚锻炼，至少简单活动一下筋骨（颈椎和腰部是重点部位），尤其自己现在身体太僵硬</span><br></pre></td></tr></table></figure>
<h3 id="工作">工作</h3><h4 id="新工作">新工作</h4><p>首要任务就是找到一个合适的新工作，得满足：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 自己的工作有意义，有挑战</span><br><span class="line">- 公司有发展有潜力，或者不错的大公司</span><br><span class="line">- 薪酬福利不比深圳差太多</span><br></pre></td></tr></table></figure></p>
<h4 id="工作习惯">工作习惯</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 排除干扰、拆分，复杂问题简单化</span><br><span class="line">- 控制变量法，单独提出问题部分，Demo 复现验证及解决</span><br><span class="line">- 知其然知其所以然，总结</span><br></pre></td></tr></table></figure>
<h4 id="工作计划">工作计划</h4><p>这个得依据工作内容来确定，不过得做到：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 每天/周做好工作计划</span><br><span class="line">- 不无谓地浪费时间</span><br></pre></td></tr></table></figure></p>
<h3 id="学习">学习</h3><h4 id="阅读内容">阅读内容</h4><p>需要加入阅读内容的任务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 古诗词</span><br><span class="line">- 医疗、法律相关书籍</span><br><span class="line">- 理财、优秀书籍</span><br><span class="line">- 英文原著</span><br><span class="line">- 技术书籍</span><br></pre></td></tr></table></figure></p>
<h4 id="一些计划">一些计划</h4><p>一些需要好好实现的安排计划：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 针对每个时间段拟定合适的计划</span><br><span class="line">- 每周审视自己，做好更新/总结</span><br><span class="line">- 至少完成 <span class="number">20</span> 本书籍的阅读，<span class="number">5</span> 本英文原著 + <span class="number">8</span> 本技术书籍 + <span class="number">7</span> 本其他，技术书籍至少 <span class="number">3</span> 本精读</span><br><span class="line">- 每阅读完成一本书籍，至少形成一片博文</span><br><span class="line">- 技术博客的选题和实现质量</span><br></pre></td></tr></table></figure></p>
<h4 id="学习的内容">学习的内容</h4><h5 id="英语">英语</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 背诵完成<span class="number">4</span>、<span class="number">6</span>级单词，后续再选扩展单词背诵</span><br><span class="line">- 阅读合适的英文原著，培养语感，熟悉单词</span><br><span class="line">- 平时技术上尽量看英文相关</span><br><span class="line">- 精读 <span class="number">2</span> 本英文原著，看一些英文文章</span><br><span class="line">- 不限范围的泛听，每周精听一篇文章</span><br><span class="line">- 已购英文资料</span><br></pre></td></tr></table></figure>
<h5 id="技术学习">技术学习</h5><p>考虑到回成都后我或许会小转行一下，这部分需要依据回成都的工作内容来定制，不过如下部分还是安排好时间：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 已购 Linux 书籍，多看精看</span><br><span class="line">- 分析源码（Android、Linux Kernel）</span><br><span class="line">- Android 应用 、 Python（不作高优先级）</span><br><span class="line">- 已购 Android 相关书籍</span><br></pre></td></tr></table></figure></p>
<p>18 年对于我来说注定会是忙碌的一年，有太多的事情需要处理，希望自己能都处理好并完成自己的计划。当然上面这些都是比较笼统的计划，所以自己还需要制定一个目标明确、详细的计划，这个计划还得根据实际情况反馈更新。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时光总是匆匆，一转眼 18 年都已经 2 月份了，今天是农历新年前倒数第二天上班了。17 年过得不那么顺畅，自己想做的很多事都没做，很遗憾；18 年自己即将 30 岁，想想还是很惶恐，已到而立之年了。这些时间自己的懒散加上工作上的事情，很久没有写东西了，博客也好久没有更新过了，考虑到今年的状态，和明年一些决定，今天来写个小结，列个计划。&lt;/p&gt;
&lt;h2 id=&quot;遗憾的_17_年&quot;&gt;遗憾的 17 年&lt;/h2&gt;&lt;p&gt;17 年整体来说对自己是有些失望的，生活上遇到了一件让自己痛心的事情，也完成了人生一件最重要的事情，工作上除了薪资的涨幅，自己没有明显的进步，也没有什么成就感。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android传感器（Sensor）架构简析 (╯_╰)</title>
    <link href="http://huaqianlee.github.io/2017/12/17/Android/android-sensor-arch-analysis/"/>
    <id>http://huaqianlee.github.io/2017/12/17/Android/android-sensor-arch-analysis/</id>
    <published>2017-12-17T02:49:12.000Z</published>
    <updated>2019-04-06T14:25:27.033Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>这真的是一篇简析。。。 (╯_╰)  本来准备详细分析整个 sensor 架构的，实在时间紧张，只能先简析了。</p>
</blockquote>
<p><em>Platform information： MTK6797（X20）+ Android 7.0</em></p>
<h1 id="Android_支持的传感器">Android 支持的传感器</h1><p>现在 Android 支持多达数十种的各种各样的传感器，支持的类型如下：</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/sensor_type.jpg" alt="Sensor_Type"></p>
<h1 id="Android_Sensor_架构">Android Sensor 架构</h1><a id="more"></a>
<p>因为功耗和效率等原因，高通后期平台将 sensor 部分放在 aDSP 中，与如下分析十分不同。</p>
<p>Android 传感器系统架构如下：</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/sensor_arch.jpg" alt="sensor_arch"></p>
<p>传感器驱动一般会有如下五种数据传输形式：input event设备驱动、MISC驱动、SYS驱动、HWMON设备驱动以及ioctl。如下是一幅网上看到未知来源的图片，更清晰的描述了底层架构，如下：</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/sensor_arch.png" alt="sensor_arch"></p>
<h1 id="源码分析">源码分析</h1><p>传感器源码架构大致相同，本文就来分析陀螺仪部分源码。</p>
<h2 id="Kernel_部分">Kernel 部分</h2><p>传感器几乎都是采用 I2C 总线， 所以先分析一下 I2C 部分。</p>
<h3 id="I2C_总线配置">I2C 总线配置</h3><p>MTK 为GPIO、I2C等配置提供了 DCT 工具， 可以直接在 UI 里面配置好 I2C 相关定义（codegen.dws 文件中），配好后编译会自动生成一些相关的 DTS 文件和头文件（如 cust_i2c.dtsi）。</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/i2c_dct.jpg" alt="i2c-dct"></p>
<blockquote>
<p>高通是直接在 dts 里面定义。另需要注意：一条 i2c 总线只支持一种速率，不同速率外设需要挂接到不同总线。</p>
</blockquote>
<p>MTK 是在 DCT 配好 i2c 相关（lk 和 kernel 都需要配）,如果有兼容 sensor 则配置在 dts 中，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\boot\dts\mt6797.dtsi</span></span><br><span class="line">i2c0:i2c@<span class="number">11007000</span> &#123;</span><br><span class="line">	compatible = <span class="string">"mediatek,mt6797-i2c"</span>;</span><br><span class="line">	id = &lt;<span class="number">0</span>&gt;;</span><br><span class="line">	reg = &lt;<span class="number">0</span>x11007000 <span class="number">0</span>x1000&gt;,</span><br><span class="line">		&lt;<span class="number">0</span>x11000100 <span class="number">0</span>x80&gt;;</span><br><span class="line">	interrupts = &lt;GIC_SPI <span class="number">84</span> IRQ_TYPE_LEVEL_LOW&gt;;</span><br><span class="line">	clocks = &lt;&amp;infrasys INFRA_I2C0&gt;, &lt;&amp;infrasys INFRA_AP_DMA&gt;;</span><br><span class="line">	clock-names = <span class="string">"main"</span>, <span class="string">"dma"</span>;</span><br><span class="line">	clock-div = &lt;<span class="number">10</span>&gt;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\boot\dts\aeon6797_6m_n.dts</span></span><br><span class="line">/* 兼容 sensor 配置*/</span><br><span class="line">i2c0@<span class="number">11007000</span> &#123;</span><br><span class="line">  cust_gyro@<span class="number">6</span>b &#123; // name@i2c_address</span><br><span class="line">	compatible = <span class="string">"mediatek,xxx_gyro"</span>;</span><br><span class="line">	reg = &lt;<span class="number">0</span>x6b&gt;;// i2c 地址</span><br><span class="line">	....</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cust_gyro@<span class="number">1</span> &#123; //name@<span class="number">0</span>  为 first sensor 参数</span><br><span class="line">	compatible			= <span class="string">"mediatek,bmi160_gyro"</span>; // 驱动解析识别字符</span><br><span class="line">	i2c_num				= &lt;<span class="number">1</span>&gt;;  // i2c channel，硬件决定</span><br><span class="line">	i2c_addr			= &lt;<span class="number">0</span>x68 <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>&gt;; </span><br><span class="line">	direction			= &lt;<span class="number">6</span>&gt;; // 映射坐标，见下图</span><br><span class="line">	power_id			= &lt;<span class="number">0</span>xffff&gt;; // ldo id</span><br><span class="line">	power_vol			= &lt;<span class="number">0</span>&gt;; // ldo voltage</span><br><span class="line">	firlen				= &lt;<span class="number">0</span>&gt;; // 数据过滤长度， 通常为<span class="number">0</span></span><br><span class="line">	is_batch_supported		= &lt;<span class="number">0</span>&gt;; </span><br><span class="line">&#125;;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>关于上面 dts 中 方向参数 direction 取值依据参考下图：</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/mapping_coordinate.jpg" alt="mapping_coordinate"></p>
<h3 id="Gyro_Driver">Gyro Driver</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\gyroscope\bmi160_gyro\bmi160_gyro.c</span></span><br><span class="line">bmi160_gyro_init()</span><br><span class="line">    get_gyro_dts_func()  <span class="comment">// 从 dts 获取自定义的参数</span></span><br><span class="line">    gyro_driver_add(bmi160_gyro_init_info)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">struct</span> gyro_init_info bmi160_gyro_init_info</span><br><span class="line">    <span class="title">bmi160_gyro_local_init</span><span class="params">()</span></span><br><span class="line">        <span class="title">i2c_add_driver</span><span class="params">(&amp;bmg_i2c_driver)</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">struct</span> i2c_driver bmg_i2c_driver  </span><br><span class="line">    <span class="title">bmi160_gyro_i2c_probe</span><span class="params">()</span></span><br><span class="line">        <span class="comment">// 初始化结构体</span></span><br><span class="line">        <span class="title">hwmsen_get_convert</span><span class="params">()</span> <span class="comment">// 获得坐标映射转换值</span></span><br><span class="line">        <span class="title">bmg_init_client</span><span class="params">()</span> <span class="comment">// 初始化设备，如 ID ， 范围，数据格式等</span></span><br><span class="line">        <span class="title">misc_register</span><span class="params">()</span> <span class="comment">// bmg_open\bmg_release\bmg_unlocked_ioctl; 注册设备，for factory mode , engineer mode , and so on</span></span><br><span class="line">        <span class="title">bmg_create_attr</span><span class="params">()</span> <span class="comment">// 创建platform_driver attr</span></span><br><span class="line">        <span class="title">gyro_register_control_path</span><span class="params">()</span>  <span class="comment">// struct gyro_control_path，见下 Common 部分</span></span><br><span class="line">        <span class="title">gyro_register_data_path</span><span class="params">()</span> <span class="comment">// struct gyro_data_path</span></span><br><span class="line">        <span class="title">device_register</span><span class="params">()</span></span><br><span class="line">        <span class="title">device_create_file</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Gyro_Common">Gyro Common</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\gyroscope\inc\gyroscope.h    </span></span><br><span class="line"><span class="keyword">struct</span> gyro_control_path &#123;</span><br><span class="line">	<span class="keyword">int</span> (*open_report_data)(<span class="keyword">int</span> open);</span><br><span class="line">	<span class="keyword">int</span> (*enable_nodata)(<span class="keyword">int</span> en);</span><br><span class="line">	<span class="keyword">int</span> (*set_delay)(u64 delay);</span><br><span class="line">	<span class="keyword">bool</span> is_report_input_direct;</span><br><span class="line">	<span class="keyword">bool</span> is_support_batch;</span><br><span class="line">	<span class="keyword">int</span> (*gyro_calibration)(<span class="keyword">int</span> type, <span class="keyword">int</span> cali[<span class="number">3</span>]);</span><br><span class="line">	<span class="keyword">bool</span> is_use_common_factory;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> gyro_data_path &#123;</span><br><span class="line">	<span class="keyword">int</span> (*get_data)(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y, <span class="keyword">int</span> *z, <span class="keyword">int</span> *status);</span><br><span class="line">	<span class="keyword">int</span> (*get_raw_data)(<span class="keyword">int</span> *x, <span class="keyword">int</span> *y, <span class="keyword">int</span> *z);</span><br><span class="line">	<span class="keyword">int</span> vender_div;</span><br><span class="line">&#125;;    </span><br><span class="line">    </span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\gyroscope\gyroscope.c    </span></span><br><span class="line">gyro_probe()</span><br><span class="line">    gyro_real_driver_init()</span><br><span class="line">    gyro_input_init() <span class="comment">// 初始化 input dev</span></span><br><span class="line">        input_register_device(dev)</span><br><span class="line"></span><br><span class="line">gyro_driver_add()</span><br><span class="line">    platform_driver_register()</span><br><span class="line">    </span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\gyroscope\gyrohub\gyrohub.c  <span class="comment">// sensorhub</span></span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\hardware\sensor\sensors.c</span></span><br><span class="line"><span class="keyword">struct</span> sensor_t sSensorList[] =</span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        .name       = GYROSCOPE,</span><br><span class="line">        .vendor     = GYROSCOPE_VENDER,</span><br><span class="line">        .version    = <span class="number">3</span>, <span class="comment">// 软件版本</span></span><br><span class="line">        .handle     = ID_GYROSCOPE+ID_OFFSET, <span class="comment">// sensor handle（识别 ID）</span></span><br><span class="line">        .type       = SENSOR_TYPE_GYROSCOPE, <span class="comment">// sensor 类型</span></span><br><span class="line">        .maxRange   = GYROSCOPE_RANGE,<span class="comment">//34.91f, // 数据最大范围</span></span><br><span class="line">        .resolution = GYROSCOPE_RESOLUTION,<span class="comment">//0.0107f, // 数据精度</span></span><br><span class="line">        .power      = GYROSCOPE_POWER,<span class="comment">//6.1f, // 电流消耗（mA）</span></span><br><span class="line">        .minDelay   = GYROSCOPE_MINDELAY,   <span class="comment">// 最小数据上报延迟</span></span><br><span class="line">		.maxDelay   = <span class="number">1000000</span>,               <span class="comment">// 最大延迟</span></span><br><span class="line">        .flags      = SENSOR_FLAG_CONTINUOUS_MODE,</span><br><span class="line">        .reserved   = &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">open_sensors()</span><br><span class="line">    init_nusensors()</span><br></pre></td></tr></table></figure>
<h1 id="附">附</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shell 文件路径</span></span><br><span class="line">/sys/bus/platform/drivers/xxx</span><br></pre></td></tr></table></figure>
<p>驱动数据和控制流：</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/work_flow.jpg" alt="flow"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这真的是一篇简析。。。 (╯_╰)  本来准备详细分析整个 sensor 架构的，实在时间紧张，只能先简析了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Platform information： MTK6797（X20）+ Android 7.0&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;Android_支持的传感器&quot;&gt;Android 支持的传感器&lt;/h1&gt;&lt;p&gt;现在 Android 支持多达数十种的各种各样的传感器，支持的类型如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/sensor_type.jpg&quot; alt=&quot;Sensor_Type&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Android_Sensor_架构&quot;&gt;Android Sensor 架构&lt;/h1&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
      <category term="源码分析" scheme="http://huaqianlee.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Android/Linux  I2C 驱动架构分析</title>
    <link href="http://huaqianlee.github.io/2017/12/03/Android/Android-Linux-i2c-driver-arch/"/>
    <id>http://huaqianlee.github.io/2017/12/03/Android/Android-Linux-i2c-driver-arch/</id>
    <published>2017-12-03T13:37:07.000Z</published>
    <updated>2019-04-06T14:25:27.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>分析传感器源码的时候，发现对 I2C 的驱动也有些忘记了，所以就再分析一下并形成这篇博文。</p>
<h1 id="驱动架构">驱动架构</h1><h2 id="I2C_驱动架构">I2C 驱动架构</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/i2c_arch.jpg" alt="i2c-arch"><br><a id="more"></a></p>
<h1 id="源码分析">源码分析</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\drivers\i2c</span></span><br></pre></td></tr></table></figure>
<h2 id="重要的结构体">重要的结构体</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\include\linux\i2c.h</span></span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 表示一个 i2c 适配器，即挂接在 i2c 总线上的 i2c 控制器</span><br><span class="line"> * i2c_adapter is the structure used to identify a physical i2c bus along</span><br><span class="line"> * with the access algorithms necessary to access it.</span><br><span class="line"> */</span><br><span class="line">struct i2c_adapter &#123;</span><br><span class="line">	struct module *owner;</span><br><span class="line">	unsigned int class;		  /* classes to allow probing <span class="keyword">for</span> */</span><br><span class="line">	const struct i2c_algorithm *algo; /* the algorithm to access the bus */</span><br><span class="line">	struct device dev;		/* the adapter device */</span><br><span class="line">	....</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 表示一个 i2c 设备驱动</span><br><span class="line"> */</span><br><span class="line">struct i2c_driver &#123;</span><br><span class="line">	unsigned int class;</span><br><span class="line"></span><br><span class="line">	/* Standard driver model interfaces */</span><br><span class="line">	int (*probe)(struct i2c_client *, const struct i2c_device_id *); // 匹配 i2c 设备（i2c_client）</span><br><span class="line">	int (*remove)(struct i2c_client *);</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">	struct device_driver driver;   </span><br><span class="line">	const struct i2c_device_id *id_table; // 此设备驱动服务的设备 ID</span><br><span class="line"></span><br><span class="line">	int (*detect)(struct i2c_client *, struct i2c_board_info *);</span><br><span class="line">	const unsigned short *address_list; // 此设备驱动支持的设备地址</span><br><span class="line">	struct list_head clients;  // 挂接此设备驱动匹配成功 i2c_client</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 表示一个 i2c 设备</span><br><span class="line"> */</span><br><span class="line">struct i2c_client &#123;</span><br><span class="line">	unsigned short flags;		/* div., see below		*/</span><br><span class="line">	unsigned short addr;		/* chip address - NOTE: <span class="number">7</span>bit	*/</span><br><span class="line">					/* addresses are stored <span class="keyword">in</span> the	*/</span><br><span class="line">					/* _LOWER_ <span class="number">7</span> bits		*/</span><br><span class="line">	char name[I2C_NAME_SIZE];</span><br><span class="line">	struct i2c_adapter *adapter;	/* the adapter we sit on	*/</span><br><span class="line">	struct device dev;		/* the device structure		*/</span><br><span class="line">	int irq;			/* irq issued by device		*/</span><br><span class="line">	struct list_head detected;</span><br><span class="line"><span class="comment">#ifdef CONFIG_MTK_I2C_EXTENSION</span></span><br><span class="line">	__u32 timing;			/* parameters of timings		*/</span><br><span class="line">	__u32 ext_flag;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 描述 i2c 设备信息</span><br><span class="line"> */</span><br><span class="line">struct i2c_board_info &#123;</span><br><span class="line">	char		<span class="built_in">type</span>[I2C_NAME_SIZE];</span><br><span class="line">	unsigned short	flags;</span><br><span class="line">	unsigned short	addr;</span><br><span class="line">	void		*platform_data;</span><br><span class="line">	struct dev_archdata	*archdata;</span><br><span class="line">	struct device_node *of_node;</span><br><span class="line">	struct acpi_dev_node acpi_node;</span><br><span class="line">	int		irq;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># alps\kernel-3.18\include\uapi\linux\i2c.h</span></span><br><span class="line">/*</span><br><span class="line"> * 表示一个 i2c 数据包</span><br><span class="line"> */</span><br><span class="line">struct i2c_msg &#123;</span><br><span class="line">	__u16 addr;	     /* slave address */</span><br><span class="line">	__u16 flags;</span><br><span class="line"><span class="comment">#define I2C_M_TEN		0x0010	/* this is a ten bit chip address */</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">#define I2C_M_RECV_LEN		0x0400	/* length will be first received byte */</span></span><br><span class="line">	__u16 len;		/* msg length				*/</span><br><span class="line">	__u8 *buf;		/* pointer to msg data			*/</span><br><span class="line"><span class="comment">#ifdef CONFIG_MTK_I2C_EXTENSION</span></span><br><span class="line">	__u32 timing;	/* parameters of timings		*/</span><br><span class="line">	__u32 ext_flag;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<blockquote>
</blockquote>
<h2 id="关键路径">关键路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\boot\dts\mt6797.dtsi</span></span><br><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\boot\dts\aeon6797_6m_n.dts</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># alps\kernel-3.18\drivers\i2c</span></span><br><span class="line">i2c-core.c：i2c核心层，设备驱动和总线驱动的桥梁</span><br><span class="line">i2c-dev.c：通用 i2c 设备驱动</span><br><span class="line">busses：开源的 adapter </span><br><span class="line">algos：i2c 通信算法</span><br><span class="line"></span><br><span class="line"><span class="comment"># alps\kernel-3.18\include\linux\i2c.h</span></span><br><span class="line"><span class="comment"># alps\kernel-3.18\include\uapi\linux\i2c.h</span></span><br></pre></td></tr></table></figure>
<h2 id="总线驱动层">总线驱动层</h2><p>总线驱动层主要实现外设驱动部分，初始化硬件（i2c控制器）和提供操作硬件的方法，与 i2c-dev 相对应，其负责的部分通俗点讲就是：知道怎么发数据，但不知道发什么数据。<br>其关键流程如下：</p>
<ol>
<li>获取资源</li>
<li>注册中断、使能时钟等初始化工作</li>
<li>构建 i2c_adapter</li>
<li>设置 i2c_adapter</li>
<li>注册 i2c_adapter<blockquote>
<p>这部分源码就不在此文分析了，感兴趣的朋友可以参考外设系列</p>
</blockquote>
</li>
</ol>
<h2 id="核心层（i2c-core）">核心层（i2c-core）</h2><p>构建一个 i2c 总线结构体,并且提供匹配方法和驱动用的结构体 ，如总线驱动层和设备驱动层的注册、注销等方法。此部分存在两个匹配过程：</p>
<ol>
<li>i2c 总线下的设备（i2c_client）与设备驱动（i2c_driver）之间的匹配。</li>
<li>i2c控制器（i2c_adapter）与设备之间的匹配。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\drivers\i2c\i2c-core.c</span></span><br><span class="line">struct bus_<span class="built_in">type</span> i2c_bus_<span class="built_in">type</span> = &#123;</span><br><span class="line">	.name		= <span class="string">"i2c"</span>,  // 总线名</span><br><span class="line">	.match		= i2c_device_match, // 匹配设备（i2c_client）与设备驱动（i2c_driver）</span><br><span class="line">	.probe		= i2c_device_probe,  // 注册挂载 i2c</span><br><span class="line">	.remove		= i2c_device_remove,</span><br><span class="line">	.shutdown	= i2c_device_shutdown,</span><br><span class="line">	.pm		= &amp;i2c_device_pm_ops,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"> __init i2c_init() // init 函数</span><br><span class="line">    <span class="comment"># kernel-3.18/drivers/base/bus.c</span></span><br><span class="line">    bus_register(&amp;i2c_bus_<span class="built_in">type</span>) // 注册i2c总线  <span class="string">"/sys/bus/i2c"</span></span><br><span class="line">    i2c_add_driver(&amp;dummy_driver) // // 注册 i2c 驱动创建“/sys/bus/i2c/driver/dummy” </span><br><span class="line">        i2c_register_driver() // 注册 i2c 驱动</span><br><span class="line">            driver_register(&amp;driver-&gt;driver); // 注册设备驱动，创建上面的“dummy”设备文件</span><br><span class="line">            INIT_LIST_HEAD(&amp;driver-&gt;clients)</span><br><span class="line">        </span><br><span class="line">i2c_device_probe()</span><br><span class="line">    i2c_verify_client(dev) // 获取 i2c_client</span><br><span class="line">    to_i2c_driver(dev-&gt;driver) // 获取 i2c_driver</span><br><span class="line">    driver-&gt;probe(client, i2c_match_id(driver-&gt;id_table,client)) // 调用设备驱动层 probe，查询外设（client）对应的 id</span><br><span class="line">        </span><br><span class="line">i2c_device_match()</span><br><span class="line">	client = i2c_verify_client(dev)// 通过 dev 获取 i2c_client</span><br><span class="line">	of_driver_match_device(dev, drv) // 通过 of 方式匹配</span><br><span class="line">	acpi_driver_match_device(dev, drv) // acpi 方式匹配</span><br><span class="line">	/* <span class="keyword">if</span> 上述两种方式皆未成功 */	</span><br><span class="line">	driver = to_i2c_driver(drv); //通过 drv 获取 i2c_driver</span><br><span class="line">	i2c_match_id(driver-&gt;id_table, client) // 通过查询 id_table 匹配</span><br><span class="line"></span><br><span class="line">i2c_master_send() // 发送一个 i2c 数据包</span><br><span class="line">    // 构建 i2c_msg</span><br><span class="line">    i2c_transfer()</span><br><span class="line">        __i2c_transfer()  // 发送数据包到总线驱动层</span><br><span class="line">i2c_master_recv()        </span><br><span class="line"></span><br><span class="line">/* 通过动态获取|指定 bus number 注册 i2c 控制器 */</span><br><span class="line">i2c_add_adapter()|i2c_add_numbered_adapter() </span><br><span class="line">    i2c_register_adapter(adapter)</span><br><span class="line">    	dev_<span class="built_in">set</span>_name(&amp;adap-&gt;dev, <span class="string">"i2c-%d"</span>, adap-&gt;nr); // 设置 adapter 名字 “i2c-%d”</span><br><span class="line">	    adap-&gt;dev.bus = &amp;i2c_bus_<span class="built_in">type</span>;</span><br><span class="line">	    adap-&gt;dev.type = &amp;i2c_adapter_<span class="built_in">type</span>;</span><br><span class="line">	    /*</span><br><span class="line">	     * 注册设备,  默认创建的设备文件是: /sys/devices/i2c-%d </span><br><span class="line">	     * 若注册 adapter 时指定了父设备，则为：/sys/devices/platform/xxx/i2c-%d </span><br><span class="line">	     */</span><br><span class="line">	    device_register(&amp;adap-&gt;dev);</span><br><span class="line">	    /*</span><br><span class="line">	     * 扫描 __i2c_board_list 匹配 adapter 与 i2c 次设备信息，匹配成功则创建 i2c 设备 （i2c_client）</span><br><span class="line">	     */</span><br><span class="line">	    i2c_scan_static_board_info() </span><br><span class="line">	        i2c_new_device() // 注册 i2c 设备</span><br><span class="line">	            i2c_dev_<span class="built_in">set</span>_name(adap, client) //  设置次设备名<span class="string">" %d-%04x"</span></span><br><span class="line">	            device_register(&amp;client-&gt;dev) //  注册次设备<span class="string">"/sys/devices/platform/xxx/i2c-%d/%d-%04x“ </span><br><span class="line"> </span><br><span class="line"># alps\kernel-3.18\include\linux\i2c.h</span><br><span class="line">i2c_add_driver(driver) </span><br><span class="line">    i2c_register_driver(THIS_MODULE, driver)</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>注：主设备表示特定的驱动程序；次设备表示使用该设备驱动的设备  </p>
</blockquote>
<h2 id="设备驱动层（i2c-dev）">设备驱动层（i2c-dev）</h2><p>设备驱动层主要是封装主机 i2c 的基本操作，给上层提供接口，与总线驱动层相对应，其：知道发什么数据，但不知道怎么发。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\drivers\i2c\i2c-dev.c （也可以是其他设备驱动文件，如：ov9650.c等。）</span></span><br><span class="line">static const struct file_operations i2cdev_fops = &#123;</span><br><span class="line">	.owner		= THIS_MODULE,</span><br><span class="line">	.llseek		= no_llseek,</span><br><span class="line">	.read		= i2cdev_<span class="built_in">read</span>,</span><br><span class="line">	.write		= i2cdev_write,</span><br><span class="line">	.unlocked_ioctl	= i2cdev_ioctl,</span><br><span class="line">	.open		= i2cdev_open,</span><br><span class="line">	.release	= i2cdev_release,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i2cdev_<span class="built_in">read</span>()</span><br><span class="line">    i2c_master_recv()</span><br><span class="line">    copy_to_user()</span><br><span class="line">i2cdev_write()</span><br><span class="line">    memdup_user()  // 分配内核空间，用户态到内核态的拷贝</span><br><span class="line">        copy_from_user()</span><br><span class="line">    i2c_master_send()</span><br><span class="line">...</span><br><span class="line">i2cdev_open()</span><br><span class="line">    i2c_dev_get_by_minor()</span><br><span class="line">    i2c_get_adapter()</span><br><span class="line">    // 设置 i2c client</span><br><span class="line"></span><br><span class="line">i2c_dev_init()</span><br><span class="line">    register_chrdev(I2C_MAJOR, <span class="string">"i2c"</span>, &amp;i2cdev_fops)</span><br><span class="line">    i2cdev_attach_adapter() // 绑定存在的 i2c 控制器（adapter）</span><br><span class="line">        adap = to_i2c_adapter(dev);</span><br><span class="line">	    i2c_dev = get_free_i2c_dev(adap);</span><br><span class="line">	    /* register this i2c device with the driver core */</span><br><span class="line">	    i2c_dev-&gt;dev = device_create(...<span class="string">"i2c-%d"</span>)</span><br></pre></td></tr></table></figure></p>
<h1 id="用户空间">用户空间</h1><p>这里只看一种通用的通过 JNI 操作 i2c 设备的方案，i2c-dev 提供的接口通过 JNI 给 APP 使用，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jni</span></span><br><span class="line">extern <span class="string">"C"</span> &#123;</span><br><span class="line">JNIEXPORT jint JNICALL Java_xxxxxx_xxx_I2c_open()</span><br><span class="line">JNIEXPORT jint JNICALL Java_xxxxxx_xxx_I2c_<span class="built_in">read</span>()</span><br><span class="line">JNIEXPORT jint JNICALL Java_xxxxxx_xxx_I2c_write()</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># app</span></span><br><span class="line">I2c.open(“/dev/i2c-x”)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">public static class I2c &#123;  </span><br><span class="line">        ...</span><br><span class="line">        public native int open(); </span><br><span class="line">        public native int <span class="built_in">read</span>(); </span><br><span class="line">        public native int write();  </span><br><span class="line">        ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;&lt;p&gt;分析传感器源码的时候，发现对 I2C 的驱动也有些忘记了，所以就再分析一下并形成这篇博文。&lt;/p&gt;
&lt;h1 id=&quot;驱动架构&quot;&gt;驱动架构&lt;/h1&gt;&lt;h2 id=&quot;I2C_驱动架构&quot;&gt;I2C 驱动架构&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/i2c_arch.jpg&quot; alt=&quot;i2c-arch&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
      <category term="源码分析" scheme="http://huaqianlee.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Android(Linux) 输入子系统解析</title>
    <link href="http://huaqianlee.github.io/2017/11/23/Android/Android-Linux-input-system-analysis/"/>
    <id>http://huaqianlee.github.io/2017/11/23/Android/Android-Linux-input-system-analysis/</id>
    <published>2017-11-23T14:42:04.000Z</published>
    <updated>2019-04-06T14:25:27.027Z</updated>
    
    <content type="html"><![CDATA[<p>Android 源码分析系列综述博文： <a href="http://huaqianlee.github.io/2100/11/21/Android/A-summary-of-Android-source-analysis/" target="_blank" rel="external">Android 系统源码分析综述</a></p>
<h1 id="前言">前言</h1><p>Android/Linux 输入设备总类繁杂，常见的有按键、键盘、触摸屏、鼠标、摇杆等，之前其驱动都是采用字符设备、misc 设备处理的，但是如此多的设备就导致驱动混乱，所以 Linux 引入了输入子系统在字符设备等上抽象出一层来统一输入设备的驱动。本文就基于 MTK Android 7.0 源码来分析一下输入子系统。</p>
<h1 id="输入子系统架构">输入子系统架构</h1><p>输入子系统的系统架构如下图所示：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.png" alt="input_system_arch"></p>
<blockquote>
<p>Framework 层以上只是简单跟了一下源码，没有深入查看</p>
</blockquote>
<a id="more"></a>
<h1 id="输入子系统分层解析">输入子系统分层解析</h1><h2 id="Hardware层">Hardware层</h2><p>硬件层主要就是按键、触摸屏、Sensor等各种输入设备。</p>
<h2 id="Kernel层">Kernel层</h2><p>Kernel 层主要分为三层，如下：</p>
<ol>
<li>Input 设备驱动层: 采集输入设备的数据信息，通过 Input Core 的 API 上报数据。</li>
<li>Input Core（核心层）：为事件处理层和设备驱动层提供接口API。</li>
<li>Event Handler（事件处理层）：通过核心层的API获取输入事件上报的数据，定义API与应用层交互。</li>
</ol>
<p>Kernel 层重要的数据结构如下：</p>
<table>
<thead>
<tr>
<th>数据结构</th>
<th>定义位置</th>
<th>简述</th>
</tr>
</thead>
<tbody>
<tr>
<td>struct input_dev</td>
<td>input.h</td>
<td>Input 设备驱动中实例化</td>
</tr>
<tr>
<td>struct evdev<br>struct mousedev<br>struct keybdev</td>
<td>evdev.c<br>mousedev.c<br>keybdev.c</td>
<td>Event Handler 层逻辑 input 设备的数据结构</td>
</tr>
<tr>
<td>struct input_handler</td>
<td>Input.h</td>
<td>Event handler 的结构，handler 层实例化</td>
</tr>
<tr>
<td>Struct input_handle</td>
<td>Input.h</td>
<td>用于创建驱动层 input_dev 和 handler 链表的链表项结构</td>
</tr>
</tbody>
</table>
<h3 id="数据结构部分">数据结构部分</h3><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\include\linux\input.h</span></span><br><span class="line"><span class="comment">/* 输入设备的语言描述 */</span></span><br><span class="line"><span class="keyword">struct</span> input_dev &#123;  <span class="comment">// 代表一个输入设备</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *name;  <span class="comment">// 设备名字，sys 文件名</span></span><br><span class="line">    <span class="keyword">struct</span> input_id id; <span class="comment">// 与 handler 匹配，总线类型、厂商、版本等信息</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 输入设备支持事件的位图（bitmap）*/</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> evbit[BITS_TO_LONGS(EV_CNT)]; <span class="comment">// 所有事件</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> keybit[BITS_TO_LONGS(KEY_CNT)]; <span class="comment">// 按键事件</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> relbit[BITS_TO_LONGS(REL_CNT)]; <span class="comment">// 相对位移事件</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> keycodemax;  <span class="comment">// 支持按键值个数</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> repeat_key; <span class="comment">// 最近一次按键值，用于连击</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> (*setkeycode)()   <span class="comment">// 修改当前 keymap</span></span><br><span class="line">    <span class="keyword">int</span> (*getkeycode)()   <span class="comment">// 检索keymap</span></span><br><span class="line">	...</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> key[BITS_TO_LONGS(KEY_CNT)];<span class="comment">// 设备当前按键状态</span></span><br><span class="line">	...</span><br><span class="line">	<span class="keyword">int</span> (*open)()</span><br><span class="line">	<span class="keyword">int</span> (*flush)();<span class="comment">// 处理传递给设备的事件，如：LED事件和声音事件</span></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">struct</span> input_handle __rcu *grab; <span class="comment">// 当前占用该设备的 input_handle</span></span><br><span class="line">    </span><br><span class="line">	<span class="keyword">struct</span> list_head	h_list; <span class="comment">// handle 链表，链接此input_dev</span></span><br><span class="line">	<span class="keyword">struct</span> list_head	node; <span class="comment">//  链入 input_dev_list</span></span><br><span class="line">	...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 事件处理，类似于中断处理函数 */</span></span><br><span class="line"><span class="keyword">struct</span> input_handler &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">void</span> *<span class="keyword">private</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">void</span> (*event)(); <span class="comment">// 处理设备驱动报告的事件</span></span><br><span class="line">	<span class="keyword">int</span> (*connect)();  <span class="comment">// 连接 handler 和 input_dev</span></span><br><span class="line">	<span class="keyword">void</span> (*disconnect)(); <span class="comment">// 断开连接</span></span><br><span class="line">	<span class="keyword">void</span> (*start)();  <span class="comment">// 启动指定 handle 的 handler 函数</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">char</span> *name; <span class="comment">// handler 名</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">struct</span> input_device_id *id_table; <span class="comment">// 输入设备id列表，匹配 input_dev</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">struct</span> list_head	h_list; <span class="comment">// 链入handle 链表</span></span><br><span class="line">	<span class="keyword">struct</span> list_head	node;  <span class="comment">// 链入 input_handler_list</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span><br><span class="line"> * 连接 input_dev 和 handler 的桥梁</span><br><span class="line"> * 一个 input_dev 可以对应多个 handler ， 一个 handler 也可以对应多个dev</span><br><span class="line">*/</span></span><br><span class="line"><span class="keyword">struct</span> input_handle &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> open; <span class="comment">// 设备打开次数（上层访问次数）</span></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">char</span> *name;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">struct</span> input_dev *dev;  <span class="comment">// 所属 input_dev</span></span><br><span class="line">	<span class="keyword">struct</span> input_handler *handler; <span class="comment">// 所属 handler</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">struct</span> list_head	d_node; <span class="comment">// 链入对应 input_dev 的 h_list</span></span><br><span class="line">	<span class="keyword">struct</span> list_head	h_node; <span class="comment">// 链入对应 handler de h_list</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps/kernel-3.18/include/uapi/linux/input.h</span></span><br><span class="line"><span class="comment">/* 事件载体，输入子系统的事件包装为 input_event 上传到 Framework*/</span></span><br><span class="line"><span class="keyword">struct</span> input_event &#123;</span><br><span class="line"> <span class="keyword">struct</span> timeval time; <span class="comment">// 时间戳</span></span><br><span class="line"> __u16 type;  <span class="comment">// 事件类型</span></span><br><span class="line"> __u16 code;  <span class="comment">// 事件代码</span></span><br><span class="line"> __s32 value;  <span class="comment">// 事件值，如坐标的偏移值</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="Input_设备驱动层">Input 设备驱动层</h3><p>这部分主要实现各种输入设备的自己硬件相关的驱动并上报事件，这部分驱动基本遵循如下流程：<br>1) 声明实例化input_dev 对象<br>2) 注册 input_dev</p>
<pre><code>- <span class="function"><span class="title">input_allocate_device</span><span class="params">()</span></span> 给设备分配空间，设置dev （实现于 <span class="tag">input</span>.c）
- 通过 <span class="function"><span class="title">input_register_device</span><span class="params">()</span></span> 注册 （实现于 <span class="tag">input</span>.c）
</code></pre><p>3) 硬件初始化，中断初始化，定义中断处理程序<br>4) 设置input_dev对象<br>5) 定义中断处理程序，上报事件</p>
<p>由于我自己有个外设系列源码分析，这里就不详细查看相关源码了，主要分析输入子系统的通用部分。设备驱动路径：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alps\kernel-<span class="number">3.18</span>\drivers\input</span><br></pre></td></tr></table></figure></p>
<h3 id="Input_Core">Input Core</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\input\input.c</span></span><br><span class="line">input_init()</span><br><span class="line">    class_register(&amp;input_class); <span class="comment">// 注册为输入设备类，创建 input_class</span></span><br><span class="line">    input_proc_init(); <span class="comment">// 创建 proc/bus/input 路径下设备文件</span></span><br><span class="line">        proc_mkdir(<span class="string">"bus/input"</span>, NULL);</span><br><span class="line">        proc_create(<span class="string">"devices"</span>..&amp;input_devices_fileops);  <span class="comment">// </span></span><br><span class="line">		proc_create(<span class="string">"handlers"</span>..&amp;input_handlers_fileops);	    </span><br><span class="line">    register_chrdev_region(MKDEV(INPUT_MAJOR, <span class="number">0</span>),INPUT_MAX_CHAR_DEVICES, <span class="string">"input"</span>);</span><br><span class="line"></span><br><span class="line">input_register_device() <span class="comment">// 通过 input core 注册 input_dev ，为设备驱动所调用 </span></span><br><span class="line">    __set_bit(EV_SYN, dev-&gt;evbit); <span class="comment">// 设为 EV_SYN/SYN_REPORT 事件，所有设备默认支持</span></span><br><span class="line">    __clear_bit(KEY_RESERVED, dev-&gt;keybit); <span class="comment">// KEY_RESERVED 事件不支持上传到用户空间</span></span><br><span class="line">    ... <span class="comment">// 设置 input_dev </span></span><br><span class="line">    device_add(&amp;dev-&gt;dev); <span class="comment">// 将 input_dev 注册到 sysfs</span></span><br><span class="line">    list_add_tail(&amp;dev-&gt;node, &amp;input_dev_list); <span class="comment">// 将 input_dev 加入input_dev_list</span></span><br><span class="line">	list_for_each_entry(handler, &amp;input_handler_list, node)</span><br><span class="line">		input_attach_handler(dev, handler);   <span class="comment">// 配对并 connect handler 和 input_dev</span></span><br><span class="line">		</span><br><span class="line">input_attach_handler()	</span><br><span class="line">    input_match_device(handler, dev) <span class="comment">// 配对handler 和 input_dev</span></span><br><span class="line">    handler-&gt;connect(handler, dev, id); <span class="comment">// connect</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">input_register_handler  <span class="comment">// 注册一个 input_handler </span></span><br><span class="line">	INIT_LIST_HEAD(&amp;handler-&gt;h_list);</span><br><span class="line">	list_add_tail(&amp;handler-&gt;node, &amp;input_handler_list);</span><br><span class="line">	list_for_each_entry(dev, &amp;input_dev_list, node)</span><br><span class="line">		input_attach_handler(dev, handler);  <span class="comment">// 同上</span></span><br><span class="line">		</span><br><span class="line">input_event() <span class="comment">// 上报新事件</span></span><br><span class="line">    input_handle_event()/input_repeat_key()</span><br><span class="line">      input_get_disposition <span class="comment">// 处理事件类型</span></span><br><span class="line">        input_pass_values()</span><br><span class="line">            input_to_handler()</span><br><span class="line">                handler-&gt;events() <span class="comment">// 对应 evdev.c 中 evdev_event()</span></span><br><span class="line">            input_start_autorepeat() <span class="comment">// 根据需要启动或停止自动重复上报</span></span><br><span class="line">            input_stop_autorepeat(dev)</span><br><span class="line">      input_handle_abs_event()      </span><br><span class="line">        input_abs_set_val(dev, ABS_MT_SLOT, mt-&gt;slot) <span class="comment">// 刷新等待槽事件</span></span><br><span class="line">input_start_autorepeat() <span class="comment">// 启动定时器，自动重复上报</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 类似于 input_event() , 不过忽略已经被捕获的事件和非拥有 dev 注入事件 */</span></span><br><span class="line">input_inject_event() </span><br><span class="line">    input_handle_event()</span><br><span class="line"></span><br><span class="line">input_open_device</span><br><span class="line">    handle-&gt;open++</span><br><span class="line">    dev-&gt;open(dev) <span class="comment">// 设备 open</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">input_dev_suspend()    </span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\include\linux\input.h</span></span><br><span class="line">input_report_xx() <span class="comment">// 上报事件，如键值</span></span><br><span class="line">	input_event()</span><br><span class="line">input_sync <span class="comment">// 同步事件</span></span><br><span class="line">	input_event()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************************</span><br><span class="line"> * 基于 input system 封装了一层轮询设备，为需要轮询的设备驱动提供支持</span><br><span class="line"> *********************************************************************/</span></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\include\linux\input-polldev.h</span></span><br><span class="line"><span class="keyword">struct</span> input_polled_dev</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\input\input-polldev.c</span></span><br><span class="line">input_register_polled_device()</span><br><span class="line">    NIT_DELAYED_WORK(&amp;dev-&gt;work, input_polled_device_work);</span><br><span class="line">input_open_polled_device()</span><br><span class="line">input_polldev_set_poll()</span><br></pre></td></tr></table></figure>
<h3 id="Event_Handler">Event Handler</h3><p>Event Handler 层以通用的 evdev.c 为例来解析，上层和 Kernel 层的交互在此文件完成。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\input\evdev.c</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">struct</span> input_handler evdev_handler = &#123;   <span class="comment">// input_handler</span></span><br><span class="line">	.event		= evdev_event,</span><br><span class="line">	.events		= evdev_events,</span><br><span class="line">	.connect	= evdev_connect,</span><br><span class="line">	.disconnect	= evdev_disconnect,</span><br><span class="line">	.legacy_minors	= <span class="keyword">true</span>,</span><br><span class="line">	.minor		= EVDEV_MINOR_BASE,</span><br><span class="line">	.name		= <span class="string">"evdev"</span>,</span><br><span class="line">	.id_table	= evdev_ids,</span><br><span class="line">&#125;;</span><br><span class="line">truct file_operations evdev_fops = &#123;  <span class="comment">// 对应于上层的操作函数</span></span><br><span class="line">	.owner		= THIS_MODULE,</span><br><span class="line">	.read		= evdev_read,</span><br><span class="line">	.write		= evdev_write,</span><br><span class="line">	.poll		= evdev_poll,</span><br><span class="line">	.open		= evdev_open,</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> evdev_client &#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">int</span> head;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">int</span> tail;</span><br><span class="line">    ....</span><br><span class="line">	<span class="keyword">struct</span> wake_lock wake_lock;</span><br><span class="line">	<span class="keyword">struct</span> list_head node;</span><br><span class="line">	<span class="keyword">struct</span> input_event buffer[];  <span class="comment">// 事件存储 buffer</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">evdev_init()</span><br><span class="line">    input_register_handler(&amp;evdev_handler) <span class="comment">// 定义于 input.c</span></span><br><span class="line">    </span><br><span class="line">evdev_connect()    </span><br><span class="line">    <span class="keyword">struct</span> evdev *evdev;</span><br><span class="line">    <span class="comment">/* 设置evdev */</span></span><br><span class="line">    dev_set_name(&amp;evdev-&gt;dev, <span class="string">"event%d"</span>, dev_no); <span class="comment">// 根据设备号命名handler</span></span><br><span class="line">    <span class="comment">/* 完成dev 和 handler 的连接关系*/</span></span><br><span class="line">    evdev-&gt;handle.dev = input_get_device(dev);</span><br><span class="line">    evdev-&gt;handle.handler = handler;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    cdev_init(&amp;evdev-&gt;cdev, &amp;evdev_fops); <span class="comment">//绑定 File 操作函数 </span></span><br><span class="line">    device_add(&amp;evdev-&gt;dev);<span class="comment">//注册设备到内核，会在 /dev/input 生成设备</span></span><br><span class="line">    </span><br><span class="line">evdev_event()</span><br><span class="line">    evdev_events()</span><br><span class="line">        evdev_pass_values()</span><br><span class="line">            __pass_event() <span class="comment">// 将事件加入 evdev_client， 并加入EV_SYN</span></span><br><span class="line">            wake_up_interruptible(&amp;evdev-&gt;wait) <span class="comment">// 唤醒，让上层读取事件数据（存于 evdev buffer）</span></span><br><span class="line">            </span><br><span class="line">evdev_flush()</span><br><span class="line">    input_flush_device() <span class="comment">// input.c</span></span><br><span class="line">    </span><br><span class="line">evdev_write()   <span class="comment">// 上层写入数据</span></span><br><span class="line">    input_event_from_user()</span><br><span class="line">    input_inject_event()</span><br><span class="line">evdev_read()   <span class="comment">//  上层读取数据</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">/* 内核与用户空间交互函数实现 */</span>    </span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\input\input-compat.c </span></span><br><span class="line">input_event_from_user()</span><br><span class="line">    copy_from_user()  </span><br><span class="line">input_event_to_user()</span><br></pre></td></tr></table></figure></p>
<h2 id="Framework_层">Framework 层</h2><p>Framework 层涉及面太广，内容也多，我现在阅读这部分上层源码也有些吃力，再加上时间原因，只简单跟读了几个关键文件。以后抽时间再跟读一下源码，产出一篇博客。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* native 部分关键路径*/</span></span><br><span class="line"># alps\frameworks\<span class="keyword">native</span>\services\inputflinger</span><br><span class="line"># alps\frameworks\<span class="keyword">native</span>\libs\input</span><br><span class="line"><span class="comment">/* 从设备文件（/dev/input）获取信息）*/</span></span><br><span class="line"># alps\frameworks\<span class="keyword">native</span>\services\inputflinger\EventHub.cpp</span><br><span class="line"># alps\frameworks\<span class="keyword">native</span>\services\inputflinger\InputManager.cpp</span><br><span class="line"><span class="comment">/* 从 EventHub 获取事件信息*/</span></span><br><span class="line"># alps\frameworks\<span class="keyword">native</span>\services\inputflinger\InputReader.cpp</span><br><span class="line"><span class="comment">/* 分发事件信息*/</span></span><br><span class="line"># alps\frameworks\<span class="keyword">native</span>\services\inputflinger\InputDispatcher.cpp</span><br><span class="line"># alps\frameworks\<span class="keyword">native</span>\services\inputflinger\InputListener.cpp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* framework 部分关键路径*/</span></span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\input</span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\wm</span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\input\InputManagerService.java</span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\wm\WindowManagerService.java</span><br></pre></td></tr></table></figure></p>
<h1 id="附_Shell_操作路径">附 Shell 操作路径</h1><p>在 Kernel 层生成三个路径及相关设备文件，如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /sys/class/input/</span></span><br><span class="line">event0  event11 event4 event7 input0  input11 input4 input7</span><br><span class="line">event1  event2  event5 event8 input1  input2  input5 input8</span><br><span class="line">event10 event3  event6 event9 input10 input3  input6 input9</span><br><span class="line"></span><br><span class="line"><span class="comment"># /dev/input </span></span><br><span class="line">event0 event10 event2 event4 event6 event8</span><br><span class="line">event1 event11 event3 event5 event7 event9</span><br><span class="line"></span><br><span class="line"><span class="comment"># /proc/bus/input  </span></span><br><span class="line">devices handlers</span><br><span class="line"><span class="comment"># cat devices  查看总线上的已经注册上的输入设备</span></span><br><span class="line">I: Bus=<span class="number">0019</span> Vendor=<span class="number">0000</span> Product=<span class="number">0000</span> Version=<span class="number">0000</span></span><br><span class="line">N: Name=<span class="string">"ACCDET"</span></span><br><span class="line">P: Phys=</span><br><span class="line">S: Sysfs=/devices/virtual/input/input0</span><br><span class="line">U: Uniq=</span><br><span class="line">H: Handlers=gpufreq_ib event0</span><br><span class="line">B: PROP=<span class="number">0</span></span><br><span class="line">B: EV=<span class="number">3</span></span><br><span class="line">B: KEY=<span class="number">40</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1000000000</span> c000001800000 <span class="number">0</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">I: Bus=<span class="number">0019</span> Vendor=<span class="number">0000</span> Product=<span class="number">0000</span> Version=<span class="number">0001</span></span><br><span class="line">N: Name=<span class="string">"fingerprint_key"</span></span><br><span class="line">P: Phys=</span><br><span class="line">S: Sysfs=/devices/virtual/input/input2</span><br><span class="line">U: Uniq=</span><br><span class="line">H: Handlers=gpufreq_ib event2</span><br><span class="line">B: PROP=<span class="number">0</span></span><br><span class="line">B: EV=<span class="number">3</span></span><br><span class="line">B: KEY=<span class="number">2000100000000000</span> <span class="number">180001</span>f <span class="number">8000000000000000</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">cat handlers // 查看注册的handler</span><br><span class="line">N: Number=<span class="number">0</span> Name=gpufreq_ib</span><br><span class="line">N: Number=<span class="number">1</span> Name=evdev Minor=<span class="number">64</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android 源码分析系列综述博文： &lt;a href=&quot;http://huaqianlee.github.io/2100/11/21/Android/A-summary-of-Android-source-analysis/&quot;&gt;Android 系统源码分析综述&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;&lt;p&gt;Android/Linux 输入设备总类繁杂，常见的有按键、键盘、触摸屏、鼠标、摇杆等，之前其驱动都是采用字符设备、misc 设备处理的，但是如此多的设备就导致驱动混乱，所以 Linux 引入了输入子系统在字符设备等上抽象出一层来统一输入设备的驱动。本文就基于 MTK Android 7.0 源码来分析一下输入子系统。&lt;/p&gt;
&lt;h1 id=&quot;输入子系统架构&quot;&gt;输入子系统架构&lt;/h1&gt;&lt;p&gt;输入子系统的系统架构如下图所示：&lt;br&gt;&lt;img src=&quot;https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.png&quot; alt=&quot;input_system_arch&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Framework 层以上只是简单跟了一下源码，没有深入查看&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
      <category term="源码分析" scheme="http://huaqianlee.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Android 电源管理之电池管理系统(BMS)</title>
    <link href="http://huaqianlee.github.io/2017/11/21/Android/BMS-of-Android-Power-Management/"/>
    <id>http://huaqianlee.github.io/2017/11/21/Android/BMS-of-Android-Power-Management/</id>
    <published>2017-11-21T13:56:28.000Z</published>
    <updated>2019-04-06T14:25:27.037Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Android 源码分析系列综述博文： <a href="http://huaqianlee.github.io/2100/11/21/Android/A-summary-of-Android-source-analysis/" target="_blank" rel="external">Android 系统源码分析综述</a></p>
</blockquote>
<p><em>Platform information： MTK6797（X20）+ Android 7.0</em></p>
<p>之前做高通的时候，对高通此部分做过粗略的分析，不过当时胡乱做的些笔记，只简单整理了几篇博客，感兴趣可以参考如下路径：</p>
<p><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(一)</a></p>
<p><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(二)</a></p>
<p><a href="http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(三)</a></p>
<p><a href="http://huaqianlee.github.io/2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/" target="_blank" rel="external">Android不带电量计的电量计算</a></p>
<p><a href="http://huaqianlee.github.io/2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/" target="_blank" rel="external">Android 电源管理架构</a></p>
<p><a href="http://huaqianlee.github.io/2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/" target="_blank" rel="external">Android电池监控系统-BMS-之电池系统架构 (有坑未填)</a></p>
<p><a href="http://huaqianlee.github.io/2015/06/24/Android/qaulcomm-bms-driver-analysis/" target="_blank" rel="external">高通电池管理系统（BMS）驱动分析</a></p>
<p><a href="http://huaqianlee.github.io/2015/06/24/Android/smb135x-charger-driver/" target="_blank" rel="external">高通 smb135x charger 驱动分析</a></p>
<p><a href="http://huaqianlee.github.io/2015/06/24/Android/qcom-pmic-driver/" target="_blank" rel="external">高通 PMIC 架构简析</a></p>
<p><a href="http://huaqianlee.github.io/2015/06/24/Android/linear-charger-driver/" target="_blank" rel="external">高通 linear charger 驱动分析</a></p>
<h1 id="充电简析">充电简析</h1><h2 id="充电状态机">充电状态机</h2><p>电池充电过程分为预充、恒流充电（CC模式）、恒压充电（CV模式）、涓流充电四个流程，MTK的状态机如下：</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/chargind_state.jpg" alt="state"><br><a id="more"></a></p>
<h2 id="充电简要流程框图">充电简要流程框图</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtkGauge_arch.jpg" alt="flow"></p>
<h1 id="BMS_架构">BMS 架构</h1><p>MTK 的 BMS 架构如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/battery%20introduction.jpg" alt="bms"></p>
<p>我准备将BMS从硬件到APP分为不同的架构层来分析。接下来分别分析下不同的架构层。</p>
<h2 id="硬件层">硬件层</h2><p>硬件层主要分为三个部分：PMIC，Fuel Gauge 和 ADC。本文主要分析软件，所以硬件就不准备深入研究了。</p>
<h3 id="1-1-1_PMIC">1.1.1 PMIC</h3><p>智能手机方案一般都会有一个PMIC芯片，有些也还会采用外接充电IC，使不使用外接IC，软件驱动会有一些区别。</p>
<h3 id="Fuel_Gauge">Fuel Gauge</h3><p>Fuel Gauge 是 MTK 为充放电、电量算法提供服务的一个硬件电路，电路中的电阻比较重要。</p>
<h3 id="ADC">ADC</h3><p>FGADC 和 AUXADC 分别采样电池的电流、电压（还会采样电池温度）。</p>
<h2 id="BootLoader层">BootLoader层</h2><p>BootLoader部分没有在上图表现出来，也可以将其归为driver部分。</p>
<h3 id="1-2-1_Preloader层">1.2.1 Preloader层</h3><p>此部分会对充电做一些初始设置，比如设置手机尽早开始充电以避免电池低电压不能进入接下来的充电状态，关键路径如下：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alps\vendor\mediatek\proprietary\bootable\bootloader\preloader\platform\mt6797\src\drivers\platform.c</span><br></pre></td></tr></table></figure></p>
<h3 id="LK层">LK层</h3><p>此部分主要针对充电主要做三件事：1. 启动方式、充电状态监测；2. 初始化充电IC；3. 充电器状态监测处理。</p>
<h4 id="启动方式、充电状态监测">启动方式、充电状态监测</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\include\platform\boot_mode.h</span></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\boot_mode.c</span></span><br><span class="line">boot_mode_select() <span class="comment">// 启动方式判断及处理</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\platform.c</span></span><br><span class="line">platform_init() &#123;</span><br><span class="line">    upmu_is_chr_det() <span class="comment">// 充电检测，Unplugged则关机</span></span><br><span class="line">    <span class="keyword">if</span> (kernel_charging_boot() == <span class="number">1</span>) &#123; <span class="comment">// 充电启动，显示关机充电信息</span></span><br><span class="line">        <span class="comment">/*判断充电设备和状态，显示充电图标和点亮充电指示灯*/</span></span><br><span class="line">        mt_disp_power(TRUE);</span><br><span class="line">		mt_disp_show_low_battery();</span><br><span class="line">		mt65xx_leds_brightness_set(<span class="number">6</span>, <span class="number">110</span>);</span><br><span class="line">    &#125;<span class="comment">// 否则，闹钟启动灯其他方式启动，显示开机界面</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">boot_mode_select(); <span class="comment">// 区分开机过程</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\mt_kernel_power_off_charging.c</span></span><br><span class="line">set_off_mode_charge_status()</span><br><span class="line">kernel_power_off_charging_detection(<span class="keyword">void</span>) &#123; <span class="comment">// 充电状态监测</span></span><br><span class="line">    get_off_mode_charge_status()</span><br><span class="line">	<span class="keyword">if</span> (upmu_is_chr_det() == KAL_TRUE) &#123;</span><br><span class="line">		<span class="keyword">if</span> (off_mode_status) &#123;</span><br><span class="line">			g_boot_mode = KERNEL_POWER_OFF_CHARGING_BOOT;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			g_boot_mode = NORMAL_BOOT;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		mt6575_power_off();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="初始化充电IC">初始化充电IC</h4><p>充电IC的初始化工作，有些可以被kernel驱动覆盖，有些不能，所以有时候一些修改记得在LK和kernel里面都得完成。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\mt_battery.c</span></span><br><span class="line">pchr_turn_on_charging() &#123; <span class="comment">//打开充电</span></span><br><span class="line">	bq25890_hw_init();</span><br><span class="line">	bq25890_charging_enable(bEnable);</span><br><span class="line">	bq25890_dump_register();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\rules.mk</span></span><br><span class="line">    ifeq ($(MTK_BQ25896_SUPPORT),yes)</span><br><span class="line">      OBJS +=$(LOCAL_DIR)/bq25890.o</span><br><span class="line">      DEFINES += MTK_BQ25896_SUPPORT</span><br><span class="line">      DEFINES += SWCHR_POWER_PATH</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\include\platform\bq25890.h</span></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\bq25890.c</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bq25890_hw_init</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"># 充电IC初始化及电流电压等相关设置</span></span><br></pre></td></tr></table></figure></p>
<h4 id="1-2-2-3_充电器状态监测处理">1.2.2.3 充电器状态监测处理</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\app\mt_boot\mt_boot.c</span></span><br><span class="line">boot_linux_fdt() &#123;</span><br><span class="line">    <span class="keyword">if</span> (kernel_charging_boot() == -<span class="number">1</span>) </span><br><span class="line">    	mt6575_power_off(); <span class="comment">// if Unplugged, 关机</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (kernel_charging_boot() == <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (pmic_detect_powerkey()) &#123;</span><br><span class="line">			mtk_arch_reset(<span class="number">1</span>); <span class="comment">// 跳转kernel前如果按键，重启</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="充电图标">充电图标</h4><p>MTK之前很多方案是在lk里面绘制关机充电图标，然后采样IPO协议实现关机充电。不过现在已采取高通类似方案在Health部分绘制关机充电图标了。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6755\mt_logo.c</span></span><br></pre></td></tr></table></figure></p>
<p>IPO方式流程图如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/power%20off%20charging.jpg" alt="IPO"></p>
<blockquote>
<p>由于初次接触MTK，又没有深入研究此部分，此部分如有错误，敬请谅解和指出。</p>
</blockquote>
<h2 id="Kernel层">Kernel层</h2><p>Kernel 部分软件流程框图，不过此图是我从MTK文档上截取没有做修改，所以图片中外部充电IC代码为Fan5405，对应于我的代码应该为bq24290（bq24296）。如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/kernel_cod_arch.jpg" alt="arch"></p>
<h3 id="1-3-1_ADC部分">1.3.1 ADC部分</h3><p>电流电压采样部分代码没有深入查看，主要看了如下一个文件：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\pmic_auxadc.c</span></span><br><span class="line">pmic_auxadc_init()</span><br><span class="line">PMIC_IMM_GetCurrent <span class="comment">// 算出电流</span></span><br></pre></td></tr></table></figure></p>
<h3 id="HAL部分">HAL部分</h3><p>此 HAL 并不是真正的 HAL 层，实际是驱动部分，实现部分结构体，针对 MTK 不同充电方案提供支持，读取各项参数。我所阅读的代码使用了外接充电 IC BQ24296（switch charger），驱动不会走 linear_charging.c，走 switch_charging.c + bq25896 驱动部分。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\charging_hw_pmic.c</span></span><br><span class="line">charging_value_to_parameter()</span><br><span class="line">charging_parameter_to_value()</span><br><span class="line">charging_hw_init() <span class="comment">// PMIC初始化</span></span><br><span class="line">charging_get/set_current()</span><br><span class="line">charging_sw_init()</span><br><span class="line">chr_control_interface()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\battery_meter_hal.h</span></span><br><span class="line">BATTERY_METER_CTRL_CMD</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\battery_meter_hal.c</span></span><br><span class="line"><span class="function">get_hw_ocv</span><br><span class="line"><span class="title">read_adc_v_bat_sense</span><span class="params">()</span>  <span class="comment">// 读取电池电压，根据宏判断 batsense 还是 isense</span></span><br><span class="line"></span><br><span class="line"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\bq25890.h</span><br><span class="line"><span class="comment">// 硬件定义及接口</span></span><br><span class="line"></span><br><span class="line"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\bq25890.c</span><br><span class="line"><span class="title">bq25890_driver_probe</span><span class="params">()</span> <span class="comment">// 注册驱动</span></span><br><span class="line"><span class="title">bq25890_get_xx</span><span class="params">()</span> <span class="comment">// get 接口</span></span><br><span class="line"><span class="title">bq25890_set_xx</span><span class="params">()</span> <span class="comment">// set 接口</span></span><br><span class="line"><span class="title">bq25890_hw_init</span><span class="params">()</span> </span><br><span class="line"></span><br><span class="line"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\charging_hw_bq25890.c</span><br><span class="line"><span class="title">is_chr_det</span><span class="params">()</span> <span class="comment">// 充电器检测</span></span><br><span class="line">    val </span>= pmic_get_register_value(MT6351_PMIC_RGS_CHRDET);</span><br><span class="line">charging_hw_init() <span class="comment">// 充电IC初始化     </span></span><br><span class="line">charging_sw_init() <span class="comment">// 充电IC初始化</span></span><br><span class="line">charging_get_xx() <span class="comment">// 封装后的 get 接口</span></span><br><span class="line">charging_get_charger_type() <span class="comment">// 获取充电器类型</span></span><br><span class="line">charging_set_xx() <span class="comment">// 封装后的 set 接口</span></span><br><span class="line">charging_set_current() <span class="comment">// 设置充电电流</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Common部分">Common部分</h3><p>PMIC充电控制、充电控制主线程、SW FG算法等内容在此部分实现。battery_common*.c 是一个关键文件，其是充电控制的主线程，battery 设备也由此文件注册。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\charging.h</span></span><br><span class="line">CHARGING_CTRL_CMD</span><br><span class="line">CHARGER_TYPE</span><br><span class="line">BATTERY_VOLTAGE_ENUM</span><br><span class="line">CHR_CURRENT_ENUM</span><br><span class="line"><span class="comment">// 如上等电池相关宏定义</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\battery_common.h</span></span><br><span class="line"><span class="comment">// 充电等相关参数定义</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps/kernel-3.18/drivers/power/mediatek/battery_common_fg_20.c </span></span><br><span class="line"><span class="comment">// 充电控制主线程</span></span><br><span class="line">power_supply_property xx <span class="comment">// 定义电池相关文件节点，后面接口函数对其更新</span></span><br><span class="line">upmu_is_chr_det() <span class="comment">// 充电状态监测</span></span><br><span class="line">wireless/ac/usb_get_get_property() <span class="comment">// 更新 charger</span></span><br><span class="line">battery_update() </span><br><span class="line">bat_routine_thread()</span><br><span class="line">    hrtimer_start() <span class="comment">// 开始定时器，定时更新数据</span></span><br><span class="line">battery_init() <span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\battery_meter.h</span></span><br><span class="line"><span class="comment">// SW FG 算法相关定义</span></span><br><span class="line"><span class="preprocessor"># alps/kernel-3.18/drivers/power/mediatek/battery_meter_fg_20.c </span></span><br><span class="line"><span class="comment">// SW FG算法,也即是OAM</span></span><br><span class="line">SW FG的原理：</span><br><span class="line">a.PMIC adc来获取raw vbat电压。</span><br><span class="line">b.通过ZCV表格，将vbat转换成OCV</span><br><span class="line">c.ocv-vbat/r 来获取电流I</span><br><span class="line">d.对电流i 进行积分，获取电量。</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * MTK vendor 封装了 FG2.0 算法，计算soc，然后通过netlink发送到Kernel</span><br><span class="line"> * 算法部分可以参考FG1.0的代码（battery_meter.c）</span><br><span class="line"> */</span></span><br><span class="line">BMT_status.SOC = battery_meter_get_battery_percentage()</span><br><span class="line">  gFG_capacity_by_c <span class="comment">//库仑计计算的电量值</span></span><br><span class="line">    bmd_ctrl_cmd_from_user（）<span class="comment">// meter  数据</span></span><br><span class="line">      <span class="built_in">memcpy</span>(&amp;gFG_capacity_by_c,...)</span><br><span class="line">        nl_data_handler（）-&gt;data = NLMSG_DATA(nlh)</span><br><span class="line"></span><br><span class="line">D0值：读取电池电压，将电池电压按对应电池的ZCV表查找对应的百分比，根据一定算法运算出的初始电量。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\mediatek\linear_charging.c</span></span><br><span class="line"><span class="comment">// PMIC充电控制， CC模式CV模式切换</span></span><br><span class="line">mtk_tuning_voltage()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*linear_charging.c 和 switch_charging.c二选一*/</span></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\mediatek\switch_charging.c</span></span><br><span class="line"><span class="comment">// SW charger充电控制， CC模式CV模式切换</span></span><br><span class="line">set_chr_input_current_limit()</span><br><span class="line">set_bat_sw_cv_charging_current_limit()</span><br><span class="line">...</span><br><span class="line">charging_full_check()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\pmic_chr_type_det.c</span></span><br></pre></td></tr></table></figure></p>
<p>Fuel Gauge Control 和 Charging Control 框图如下：</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/charging_control.jpg" alt="FG&amp;Charging Control"></p>
<h3 id="客制化部分">客制化部分</h3><p>不同于高通将电池曲线合入DTS，MTK是以头文件的形式合入电池曲线（好像也有DTS方式）。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\mt6797\include\mach\mt_battery_meter_table.h</span></span><br><span class="line"><span class="comment">// 充电IC温度检测上拉电阻配置</span></span><br><span class="line">BATTERY_PROFILE_STRUCT battery_profile_tx[] <span class="comment">// 合入不同温度下电池曲线的 DOD OCV</span></span><br><span class="line">R_PROFILE_STRUCT r_profile_t1[] <span class="comment">// 合入不同温度下电池曲线的电池内阻和OCV</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\mt6797\include\mach\mt_battery_meter.h</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> SOC_BY_HW_FG  <span class="comment">// 定义默认使用 Fuel Gauge， FG算法</span></span></span><br><span class="line"><span class="comment">/*#define HW_FG_FORCE_USE_SW_OCV*/</span></span><br><span class="line"><span class="comment">/*#define SOC_BY_SW_FG*/</span></span><br><span class="line"><span class="comment">// 电池参数配置，部分值来源于电池曲线表</span></span><br><span class="line">CUST_POWERON_DELTA_CAPACITY_TOLRANCE <span class="comment">// 重启电量记录范围</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\mt6797\include\mach\mt_charging.h</span></span><br><span class="line"><span class="comment">// 充电控制，充电电流、温度等宏定义</span></span><br></pre></td></tr></table></figure></p>
<h3 id="文件节点">文件节点</h3><p>电池状态、充电状态等文件节点的创建路径：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Power Supply Class Node </span></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\power_supply.h</span></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\power_supply_core.c</span></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\power_supply_sysfs.c</span></span><br><span class="line">power_supply_show_property()</span><br><span class="line">power_supply_attrs</span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\power_supply_leds.c</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Healthd模块">Healthd模块</h3><p>Healtdh模块是一个单独的进程，这部分主要做两件事：1. 读取电池数据，上报（BatteryService.java）； 2. 绘制关机图标。</p>
<h4 id="Main函数">Main函数</h4><p>healthd.cpp是Healthd模块的入口，也就是Main函数，如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\system\core\healthd\healthd.cpp</span></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * 针对不同方式定义执行函数</span><br><span class="line"> * android_ops  正常开机</span><br><span class="line"> * charger_ops  关机充电</span><br><span class="line"> * recovery_ops Recovery模式</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">struct</span> healthd_mode_ops android_ops = &#123;</span><br><span class="line">    .init = healthd_mode_android_init,</span><br><span class="line">    .preparetowait = healthd_mode_android_preparetowait,</span><br><span class="line">    .heartbeat = healthd_mode_nop_heartbeat,</span><br><span class="line">    .battery_update = healthd_mode_android_battery_update,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">uevent_event() <span class="comment">// uevent 事件处理</span></span><br><span class="line">    uevent_kernel_multicast_recv(uevent_fd, msg, UEVENT_MSG_LEN) <span class="comment">// 接收底层事件，并返回事件数量</span></span><br><span class="line">    <span class="comment">/*遍历事件，POWER_SUPPLY_SUBSYSTEM*/</span></span><br><span class="line">    healthd_battery_update() <span class="comment">// 电池信息更新入口，此处根据返回 Charging ？，设置 poll 唤醒周期</span></span><br><span class="line">        gBatteryMonitor-&gt;update()   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main() <span class="comment">// main函数,单独的进程</span></span><br><span class="line">    healthd_mode_ops = &amp;android_ops/&amp;charger_ops/&amp;recovery_ops; <span class="comment">// 选择执行函数体</span></span><br><span class="line">    <span class="function">healthd_init</span><br><span class="line">        <span class="title">epoll_create</span><span class="params">(MAX_EPOLL_EVENTS)</span></span>; <span class="comment">// 使用epoll进行IO复用, 在一个线程管理所以 fd</span></span><br><span class="line">        <span class="comment">/*</span><br><span class="line">         * 创建、注册监听三个事件，加入 epoll fd，每个事件都有其句柄函数</span><br><span class="line">         * gBinderfd ：监听Binder通信事件，句柄：binder_event（healthd_mode_android.cpp）</span><br><span class="line">         * uevent_fd： 监听底层电池 event，句柄:uevent_event()</span><br><span class="line">         * wakealarm_fd：监听wakealarm事件，句柄：wakealarm_event</span><br><span class="line">         * 在监听到事件后，epoll 就会在句柄函数里面做相应的更新操作，如上 uevent_event()</span><br><span class="line">         */</span></span><br><span class="line">        healthd_mode_ops-&gt;init(&amp;healthd_config)<span class="comment">// healthd_mode_android_init()</span></span><br><span class="line">        uevent_init()</span><br><span class="line">        wakealarm_init()</span><br><span class="line">        <span class="keyword">new</span> BatteryMonitor();</span><br><span class="line">    healthd_mainloop(); <span class="comment">// main函数，while(1) </span></span><br><span class="line">        <span class="keyword">if</span> (events[n].data.ptr) <span class="comment">// epoll遍历事件fd，调用处理函数</span></span><br><span class="line">                (*(<span class="keyword">void</span> (*)(<span class="keyword">int</span>))events[n].data.ptr)(events[n].events);</span><br><span class="line">        healthd_mode_ops-&gt;heartbeat();</span><br></pre></td></tr></table></figure></p>
<h4 id="正常开机">正常开机</h4><p>正常开机时电池信息更新：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/bat_update_func.jpg" alt="update_battery"></p>
<p>正常开机部分源码分析：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\system\core\healthd\BatteryPropertiesRegistrar.cpp</span></span><br><span class="line">BatteryPropertiesRegistrar::publish()<span class="comment">//将"batteryproperties"这个Service加入ServiceManager</span></span><br><span class="line">BatteryPropertiesRegistrar::notifyListeners() <span class="comment">// 遍历 listener ，通知上层监听者，如 BatteryService</span></span><br><span class="line">BatteryPropertiesRegistrar::registerListener() <span class="comment">// 上层通过Binder注册回调</span></span><br><span class="line">     healthd_battery_update();<span class="comment">// healthd.cpp</span></span><br><span class="line">BatteryPropertiesRegistrar::getProperty() <span class="comment">//BatteryManager.java主动查询时的对应接口</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\system\core\healthd\healthd_mode_android.cpp</span></span><br><span class="line">healthd_mode_android_battery_update</span><br><span class="line">    gBatteryPropertiesRegistrar-&gt;notifyListeners(*props) </span><br><span class="line">    </span><br><span class="line">healthd_mode_android_init()</span><br><span class="line">    ProcessState::self()-&gt;setThreadPoolMaxThreadCount(<span class="number">0</span>);<span class="comment">// 线程池里最大线程数</span></span><br><span class="line">    IPCThreadState::self()-&gt;disableBackgroundScheduling(<span class="keyword">true</span>);<span class="comment">// 禁用后台调度</span></span><br><span class="line">    IPCThreadState::self()-&gt;setupPolling(&amp;gBinderFd); <span class="comment">// 将Binder通信fd加入epoll</span></span><br><span class="line">    <span class="keyword">if</span> (healthd_register_event(gBinderFd, binder_event)) <span class="comment">//binder_event注册到gBinderFd</span></span><br><span class="line">    <span class="comment">/* 将"batteryproperties"加入ServiceManager */</span></span><br><span class="line">    gBatteryPropertiesRegistrar-&gt;publish(gBatteryPropertiesRegistrar);</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\system\core\healthd\BatteryMonitor.cpp </span></span><br><span class="line">BatteryMonitor::update(<span class="keyword">void</span>)</span><br><span class="line">    initBatteryProperties() <span class="comment">// 电池参数初始化</span></span><br><span class="line">    <span class="comment">/*获取文件节点数据封装于 BatteryProperties */</span></span><br><span class="line">    path.appendFormat(<span class="string">"%s/%s/online"</span>, POWER_SUPPLY_SYSFS_PATH, mChargerNames[i].<span class="built_in">string</span>());</span><br><span class="line">    ireadFromFile(path, buf, SIZE)</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">     * alps\system\core\healthd\healthd_board_default.cpp</span><br><span class="line">     * 将电池实时信息记录到 kernel log 中</span><br><span class="line">     */</span></span><br><span class="line">    healthd_board_battery_update(&amp;props);</span><br><span class="line">    healthd_mode_ops-&gt;battery_update(&amp;props) <span class="comment">// healthd_mode_android.cpp中update</span></span><br><span class="line">    </span><br><span class="line">BatteryMonitor::getXX  <span class="comment">// 获取电池状态和Health状况等</span></span><br><span class="line">BatteryMonitor::dumpState()</span><br><span class="line">BatteryMonitor::init() <span class="comment">//获取文件节点值，初始化（譬如加上节点路径： /sys/class/power_supply）写入mHealthdConfig</span></span><br></pre></td></tr></table></figure></p>
<h4 id="关机充电">关机充电</h4><p>关机充电部分主要就是更新电量、充电状态，更新UI。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\system\core\healthd\healthd_mode_charger.cpp</span></span><br><span class="line">dump_last_kmsg() // dump前记录最后一份<span class="built_in">log</span></span><br><span class="line">/*绘制关机充电图标*/</span><br><span class="line">draw_xx()</span><br><span class="line">redraw_screen()</span><br><span class="line">healthd_mode_charger_heartbeat() // 获取最新电池状态，更新</span><br><span class="line">    handle_input_state(charger, now);</span><br><span class="line">    handle_power_supply_state(charger, now);</span><br><span class="line">    update_screen_state()  // 更新屏幕显示</span><br><span class="line">healthd_mode_charger_init()</span><br><span class="line">healthd_mode_charger_battery_update()</span><br></pre></td></tr></table></figure></p>
<h2 id="Framework层">Framework层</h2><h3 id="Native层">Native层</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\frameworks\native\services\sensorservice\BatteryService.cpp</span></span><br><span class="line"><span class="comment">// 定义BatteryService.h中创建的BatteryService类的成员函数</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\frameworks\native\services\batteryservice\BatteryProperties.cpp</span></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * 容器Parcel读写电池相关信息</span><br><span class="line"> * 必须与frameworks/base/core/java/android/os/BatteryProperties.java 同步</span><br><span class="line"> */</span></span><br><span class="line">BatteryProperties::readFromParcel()</span><br><span class="line">BatteryProperties::writeToParcel()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\frameworks\native\services\batteryservice\BatteryProperty.cpp</span></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * Parcel read/write code must be kept in sync with</span><br><span class="line"> * frameworks/base/core/java/android/os/BatteryProperty.java</span><br><span class="line"> */</span></span><br><span class="line">BatteryProperty::readFromParcel()</span><br><span class="line">BatteryProperty::writeToParcel()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\frameworks\native\services\batteryservice\IBatteryPropertiesListener.cpp</span></span><br><span class="line"><span class="comment">// BatteryService.java中BatteryListener的父类</span></span><br><span class="line">batteryPropertiesChanged()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\frameworks\native\services\batteryservice\IBatteryPropertiesRegistrar.cpp</span></span><br><span class="line"><span class="comment">// BatteryManager.java和BatteryService.java通过其获取 batteryproperties ，与healthd中同步</span></span><br></pre></td></tr></table></figure>
<h3 id="Framework部分">Framework部分</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># alps\frameworks\base\services\core\java\com\android\server\BatteryService.<span class="function">java</span><br><span class="line"><span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">     * 通过ServiceManager获取batteryproperties Service，</span><br><span class="line">     * 然后将BatteryListener注册到batteryproperties中</span><br><span class="line">     */</span></span><br><span class="line">    IBinder b = ServiceManager.getService(<span class="string">"batteryproperties"</span>); </span><br><span class="line">    batteryPropertiesRegistrar.registerListener(<span class="keyword">new</span> BatteryListener());</span><br><span class="line">    publishBinderService(<span class="string">"battery"</span>, mBinderService);</span><br><span class="line">    publishLocalService(BatteryManagerInternal.class, <span class="keyword">new</span> LocalService());</span><br><span class="line"><span class="function">processValuesLocked     </span><br><span class="line">    <span class="title">shutdownIfNoPowerLocked</span><span class="params">()</span> <span class="comment">// 低电 Unplugged 关机广播</span></span><br><span class="line">    <span class="title">shutdownIfOverTempLocked</span><span class="params">()</span> <span class="comment">// 温度超出，关机广播</span></span><br><span class="line">    <span class="title">sendIntentLocked</span><span class="params">()</span> <span class="comment">// 电池信息改变，信息广播</span></span><br><span class="line">    </span><br><span class="line">class BatteryListener</span><br><span class="line">    batteryPropertiesChanged <span class="comment">// 监听到电池信息改变，更新信息</span></span><br><span class="line">        atteryService.<span class="keyword">this</span>.<span class="title">update</span><span class="params">(props)</span></span><br><span class="line">class Led <span class="comment">// 开机充电 LED 控制类</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryManager.java</span><br><span class="line"><span class="title">queryProperty</span><span class="params">()</span> <span class="comment">// 主动到 healthd 查询电池信息</span></span><br><span class="line">    IBinder b </span>= ServiceManager.getService(<span class="string">"batteryproperties"</span>);<span class="comment">//获取batteryproperties Service  </span></span><br><span class="line">    mBatteryPropertiesRegistrar = IBatteryPropertiesRegistrar.Stub.asInterface(b);<span class="comment">//接口转化</span></span><br><span class="line">    mBatteryPropertiesRegistrar.getProperty(id, prop) <span class="comment">// 调用到Healthd BatteryPropertiesRegistrar.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="javadoc">/******************************************************************</span><br><span class="line"> * 还有很多其他文件为上面两个文件提供服务，没有去详细分析了</span><br><span class="line"> * 如下简单介绍一下。</span><br><span class="line"> *****************************************************************/</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\am\BatteryStatsService.java</span><br><span class="line"><span class="comment">// 电池信息广播Intent（ACTION_BATTERY_CHANGED）用到的字符串和常量</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryManagerInternal.java</span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperties.aidl</span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperties.java</span><br><span class="line"><span class="comment">// 电池信息读写代码，与BatteryProperties.cpp同步</span></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperty.aidl</span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperty.java</span><br><span class="line"><span class="comment">// 电池信息读写代码，与BatteryProperties.cpp同步</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryStats.java</span><br><span class="line"> <span class="comment">// 存取电池使用情况统计，包括wakelocks, processes, packages, and services等</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatteryStatsImpl.aidl</span><br><span class="line"><span class="comment">// .aidl为接口定义文件， 定义电池状态信息及相关操作方法。</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatteryStatsImpl.java</span><br><span class="line"><span class="comment">// 影响电池的所有信息及操作，时间以ms为单位</span></span><br></pre></td></tr></table></figure>
<h3 id="APP部分">APP部分</h3><p>系统UI处理电流的部分路径主要如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatterySipper.java</span><br><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatteryStatsHelper.java</span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\BatteryMeterDrawable.java</span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\BatteryMeterView.java</span><br><span class="line"><span class="comment">// 创建系统广播接收器，接收电池信息广播，绘制电池状态图标</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\statusbar\policy\BatteryController.java</span><br><span class="line"><span class="comment">// 定义一个广播接收器并在构造器里注册接收电池信息广播，收到自己广播后回调修改pluged、level</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\power\PowerUI.java</span><br><span class="line"><span class="comment">// 创建系统广播接收器，接收电池信息广播，弹出低电警告等</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\qs\tiles\BatteryTile.java</span><br><span class="line"><span class="comment">// 定义电量百分比显示TextView类</span></span><br></pre></td></tr></table></figure></p>
<h1 id="关机充电流程">关机充电流程</h1><p>关机充电也是在kernel里面充电，充电控制流程与开机是一致的，前面也分析到了。这里补充一个MTK软件流程图。如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/power%20off%20charging2.jpg" alt="charging flow"></p>
<h1 id="总结">总结</h1><p>先留一个坑，等有时间了，再来绘制一个清晰易懂的流程框图。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Android 源码分析系列综述博文： &lt;a href=&quot;http://huaqianlee.github.io/2100/11/21/Android/A-summary-of-Android-source-analysis/&quot;&gt;Android 系统源码分析综述&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Platform information： MTK6797（X20）+ Android 7.0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;之前做高通的时候，对高通此部分做过粗略的分析，不过当时胡乱做的些笔记，只简单整理了几篇博客，感兴趣可以参考如下路径：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/&quot;&gt;高通平台Android源码bootloader分析之sbl1(一)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/&quot;&gt;高通平台Android源码bootloader分析之sbl1(二)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/&quot;&gt;高通平台Android源码bootloader分析之sbl1(三)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/&quot;&gt;Android不带电量计的电量计算&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/&quot;&gt;Android 电源管理架构&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/&quot;&gt;Android电池监控系统-BMS-之电池系统架构 (有坑未填)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/06/24/Android/qaulcomm-bms-driver-analysis/&quot;&gt;高通电池管理系统（BMS）驱动分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/06/24/Android/smb135x-charger-driver/&quot;&gt;高通 smb135x charger 驱动分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/06/24/Android/qcom-pmic-driver/&quot;&gt;高通 PMIC 架构简析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/06/24/Android/linear-charger-driver/&quot;&gt;高通 linear charger 驱动分析&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;充电简析&quot;&gt;充电简析&lt;/h1&gt;&lt;h2 id=&quot;充电状态机&quot;&gt;充电状态机&lt;/h2&gt;&lt;p&gt;电池充电过程分为预充、恒流充电（CC模式）、恒压充电（CV模式）、涓流充电四个流程，MTK的状态机如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/mtk/chargind_state.jpg&quot; alt=&quot;state&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
      <category term="源码分析" scheme="http://huaqianlee.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Android Selinux 权限及问题</title>
    <link href="http://huaqianlee.github.io/2017/11/14/Android/Android-SELinux-Permison-and-Question/"/>
    <id>http://huaqianlee.github.io/2017/11/14/Android/Android-SELinux-Permison-and-Question/</id>
    <published>2017-11-14T14:26:02.000Z</published>
    <updated>2017-12-27T14:29:36.393Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>由于现做的是MTK平台，源码路径基于MTK， 不过高通大同小异</p>
</blockquote>
<h2 id="说明">说明</h2><p>Android 5.0以后完全引入了 SEAndroid/SELinux 安全机制，这样即使拥有 root 权限或 chmod 777 ，仍然无法再JNI以上访问内核节点。</p>
<blockquote>
<p>其实在 Android 4.4 就有限制的启用此安全机制了。后面内容都按照 5.0  以后介绍，4.4 会有些许差异。</p>
</blockquote>
<h2 id="SELinux_Mode">SELinux Mode</h2><p>SELinux 分为两种模式，Android 5.0 后所有进程都使用 enforcing mode。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enforcing mode: 限制访问</span><br><span class="line">permissive mode: 只审查权限，不限制</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="SELinux_Policy文件路径">SELinux Policy文件路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Google 原生目录 </span></span><br><span class="line">external/sepolicy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 厂家目录，高通将 mediatek 换为 qcom</span></span><br><span class="line">alps\device\mediatek\common\sepolicy</span><br><span class="line">alps\device\mediatek\&lt;platform&gt;\sepolicy</span><br></pre></td></tr></table></figure>
<blockquote>
<p>编译时将以合并的方式将厂家policy追加到Google原生。</p>
</blockquote>
<h2 id="Log">Log</h2><p>没有权限时可以在内核找到如下 log ：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># avc: denied  &#123; 操作权限  &#125;  for pid=7201  comm=“进程名”  scontext=u:r:源类型:s0  tcontext=u:r:目标类型:s0  tclass=访问类型 permissive=0</span></span><br><span class="line"></span><br><span class="line">avc: denied &#123;getattr <span class="built_in">read</span>&#125; <span class="keyword">for</span> pid=<span class="number">7201</span> comm=<span class="string">"xxx.xxx"</span> scontext=u:r:system_app:s0 tcontext=u:r:shell_data_file:s0 tclass=dir permissive=<span class="number">0</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="comment">## 权限修改</span></span><br><span class="line">主要有三种方式，前两种只能用来测试，第三种是推荐的正式处理方式。</span><br><span class="line"><span class="comment">### adb在线修改seLinux</span></span><br><span class="line">```bash</span><br><span class="line"><span class="comment"># Enforcing - 表示已打开 ，Permissive - 表示已关闭</span></span><br><span class="line">getenforce;     //获取当前seLinux状态</span><br><span class="line">setenforce <span class="number">1</span>;   //打开seLinux</span><br><span class="line">setenforce <span class="number">0</span>;   //关闭seLinux</span><br></pre></td></tr></table></figure></p>
<h3 id="kernel中关闭">kernel中关闭</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\configs\xxx_defconfig</span></span><br><span class="line">CONFIG_SECURITY_SELINUX=y // 屏蔽此配置项</span><br></pre></td></tr></table></figure>
<h3 id="SELinux_Sepolicy中添加权限">SELinux Sepolicy中添加权限</h3><p>修改相应源类型.te文件（基本以源进程名命名），添加如下一行语句：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式</span></span><br><span class="line">allow  源类型 目标类型:访问类型 &#123;操作权限&#125;; // 注意分号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例，具体写法参考源码</span></span><br><span class="line">allow system_app shell_data_file:dir&#123;getattr <span class="built_in">read</span> write&#125;;</span><br><span class="line">allow mediaserver tfa9897_device:chr_file &#123; open <span class="built_in">read</span> write &#125;; </span><br><span class="line">allow system_server tfa9897_device:chr_file rw_file_perms; </span><br><span class="line"></span><br><span class="line">chr_file - 字符设备  file - 普通文件 dir - 目录</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>通常很少修改Google default 的policy, 推荐更新mediatek 下面的相关的policy. </p>
</blockquote>
<h3 id="新建节点">新建节点</h3><p>如果是自己新建的节点，需要在 sepolicy 路径下的 file_contexts 文件中做如下添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参考已有的格式</span></span><br><span class="line">/dev/goodix_fp                 u:object_r:goodixfp_device:s0</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>Android 5.0 修改的文件为device.te 和 file_contexts.be，而且device/mediatek/common/BoardConfig.mk 中的 BROAD_SEPOLICY_UNION 增加对应的xxxx.te。</p>
</blockquote>
<h2 id="编译">编译</h2><pre><code class="bash"><span class="comment"># 模块编译</span>
mmm external/sepolicy
make -j24 ramdisk-nodeps &amp; make -j24 bootimage-nodeps

<span class="comment"># 整编</span>
make -j24
</code></pre>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;由于现做的是MTK平台，源码路径基于MTK， 不过高通大同小异&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;说明&quot;&gt;说明&lt;/h2&gt;&lt;p&gt;Android 5.0以后完全引入了 SEAndroid/SELinux 安全机制，这样即使拥有 root 权限或 chmod 777 ，仍然无法再JNI以上访问内核节点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实在 Android 4.4 就有限制的启用此安全机制了。后面内容都按照 5.0  以后介绍，4.4 会有些许差异。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;SELinux_Mode&quot;&gt;SELinux Mode&lt;/h2&gt;&lt;p&gt;SELinux 分为两种模式，Android 5.0 后所有进程都使用 enforcing mode。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;enforcing mode: 限制访问&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permissive mode: 只审查权限，不限制&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
  </entry>
  
  <entry>
    <title>常用的快充技术简介</title>
    <link href="http://huaqianlee.github.io/2017/11/13/Android/What-is-fast-charge-now%EF%BC%9F/"/>
    <id>http://huaqianlee.github.io/2017/11/13/Android/What-is-fast-charge-now？/</id>
    <published>2017-11-12T16:01:36.000Z</published>
    <updated>2019-05-03T16:16:17.976Z</updated>
    
    <content type="html"><![CDATA[<p>技术发展越来越快，快充技术也一样，那现在怎么样才能算快充，有哪些快充技术呢？</p>
<h2 id="高通方案">高通方案</h2><h3 id="高通_Quick_Charge_方案">高通 Quick Charge 方案</h3><h4 id="QC_1-0">QC 1.0</h4><p>最高支持 5V/2A 充电功率(目前已经被划分为慢充)，基本都是骁龙 600 平台。<br><a id="more"></a></p>
<h4 id="QC_2-0">QC 2.0</h4><p>分为A版和B版，</p>
<ul>
<li><p>A版：包含 5V、9V 和 12V 三档，最大电流3A，适用于智能手机、平板电脑以及其它便携式电子设备，支持的平台包括了骁龙 200/400 /410/615/800/801/805/810，另外也授权给其他厂商使用，例如 Intel 的 Boost Master 快速充电技术其实也属于高通 QC2.0;</p>
</li>
<li><p>B版：支持20V电压，最大可以输出40w功率，应用于对充电速度要求更高的设备。</p>
</li>
</ul>
<h4 id="QC_3-0">QC 3.0</h4><p>为了保证不出现过度发热的问题，QC3.0标准主要是比QC2.0标准增加了一个“最佳电压智能调节”算法，以200mV增量为一档，提供从 3.6V 到 20V 电压的灵活选择，让手机厂商能够根据自身需求调整最佳电压，达到预期电流，提供充电效率同时降低功耗和发热。QC3.0 兼容的平台包括了高通骁龙 820、620、618、 617 和 430，并且向下兼容 QC2.0 和 QC1.0 的设备。</p>
<h4 id="QC_4-0">QC 4.0</h4><p>充电仅 15 分钟即可获得 50% 的电池电量。同时，QC4.0 还加入了对 USB Type-C 和 USB-PD 的支持。按照高通的说法来看，QC4.0 比 QC3.0 多了一项 Dual Charge 的技术。它能使充电速度提升20%，效率提升30%。除了以上这些，QC4.0 还优化了“最佳电压智能调节”的算法(INOV)，将电压继续细分，以 20mV 为一档;取消了 12V 的电压，5V 最大可输出 5.6A ，9V 最大可输出 3A。QC 4.0 兼容的平台包括了高通骁龙 835、660、630 和 635(635暂未发布) ，并且向下兼容 QC2.0 和 QC1.0 的设备.</p>
<p>在网上一张出自【电子发烧友】比较清晰明了的图，引用如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/android/qcom/fastcharge.png" alt="fastcharge"></p>
<h2 id="MTK方案">MTK方案</h2><h3 id="MTP_Pump_Express">MTP Pump Express</h3><ul>
<li>带Plus（Pump Express2.0）：可以支持到9V/12V，可以达到12V/3A,输出功率&gt;15W。</li>
<li>不带Plus：充电电流不超过2A，输出功率&lt;10W(目前已经被划分为慢充)。</li>
<li>Pump Express 3.0：开始使用低压直流的快速充电方式，如5.8V/6A的输出标准，最大输出功率可达34.8W。是全球首款采用USB Type-C接口进行充电的快充方案，可直接绕过手机充电电路，电流直接流入电池，降低充电时的发热。</li>
</ul>
<h2 id="厂家快充">厂家快充</h2><p>现在市面上各厂家的快充基本都是基于上述高通和MTK快充技术演变而来，套了个壳，换了个名。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;技术发展越来越快，快充技术也一样，那现在怎么样才能算快充，有哪些快充技术呢？&lt;/p&gt;
&lt;h2 id=&quot;高通方案&quot;&gt;高通方案&lt;/h2&gt;&lt;h3 id=&quot;高通_Quick_Charge_方案&quot;&gt;高通 Quick Charge 方案&lt;/h3&gt;&lt;h4 id=&quot;QC_1-0&quot;&gt;QC 1.0&lt;/h4&gt;&lt;p&gt;最高支持 5V/2A 充电功率(目前已经被划分为慢充)，基本都是骁龙 600 平台。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
      <category term="Qualcomm" scheme="http://huaqianlee.github.io/tags/Qualcomm/"/>
    
  </entry>
  
  <entry>
    <title>Getting Started With RecyclerView and CardView on Android</title>
    <link href="http://huaqianlee.github.io/2017/11/08/Android/Getting-Started-With-RecyclerView-and-CardView-on-Android/"/>
    <id>http://huaqianlee.github.io/2017/11/08/Android/Getting-Started-With-RecyclerView-and-CardView-on-Android/</id>
    <published>2017-11-08T14:23:59.000Z</published>
    <updated>2019-04-06T14:25:27.045Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>偶然看到这篇文章，觉得写得很好，简单明了，所以尝试将其翻译一下。</p>
</blockquote>
<p>如果你想创作一个用列表显示数据的Android应用，Android L提供了两个让你更容易实现的新特性：RecyclerView和CardView。通过用这些控件，可以很容易让你的app符合Google的Material Design规范。</p>
<p>创作APP时一个模板参考的好地方：<a href="https://go.redirectingat.com/?id=1342X589339&amp;site=code.tutsplus.com&amp;xs=1&amp;isjs=1&amp;url=https%3A%2F%2Fcodecanyon.net%2Fcategory%2Fmobile%2Fandroid%3F_ga%3D2.255032513.873197305.1503543294-826134730.1503543294&amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;xcreo=0&amp;xed=0&amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;xtz=-480" target="_blank" rel="external">Envato market</a>。你可以找到成千上万的APP模板，从<a href="https://go.redirectingat.com/?id=1342X589339&amp;site=code.tutsplus.com&amp;xs=1&amp;isjs=1&amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Flayar-tancep-youtube-app-for-android%2F5190062%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;xcreo=0&amp;xed=0&amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;xtz=-480" target="_blank" rel="external">Youtube</a>到<a href="https://go.redirectingat.com/?id=1342X589339&amp;site=code.tutsplus.com&amp;xs=1&amp;isjs=1&amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Fflappybot-an-obstacle-avoidance-game%2F6827330%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;xcreo=0&amp;xed=0&amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;xtz=-480" target="_blank" rel="external">obstacleavoidance game</a>。</p>
<p>或者你可以尝试一下<a href="https://codecanyon.net/item/universal-full-multipurpose-android-app/6512720?_ga=2.217207135.873197305.1503543294-826134730.1503543294" target="_blank" rel="external">通用的Android app模板</a>,它能为你创作任何种类app提供一个坚实的基础。<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/recyclerview_cardview/Universal-Android-app.png" alt="Universal-Android-app"><br><a id="more"></a></p>
<h1 id="前提">前提</h1><p>为了继续，你应该使用最新版本Android Studio。你可以从<a href="http://developer.android.com/sdk/index.html" target="_blank" rel="external">Android 开发者官网</a>获得它。</p>
<h2 id="支持老版本">支持老版本</h2><p>在写这篇文章时，只有少于2%的Android设备运行在Android L上。无论怎样，多亏v7 Support Library，你能使用RecyclerView和CardView控件运行在老版本的安卓设备上面，通过在你工程中build.grade文件添加如下依赖片段实现：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:cardview-v7:21.0.+'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:21.0.+'</span></span><br></pre></td></tr></table></figure></p>
<h2 id="创建CardView">创建CardView</h2><p><em>CardView</em>是一个<em>ViewGroup</em>，像其他<em>ViewGroup</em>一样，它能通过Layout xml文件添加到你的 <em>Activity</em> 或者 <em>Fragment</em>。</p>
<p>为了创建一个空<em>CardView</em>，你应该添加如下代码片段到你的layout XML文件中：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">        <span class="attribute">xmlns:card_view</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>最为一个更实际的例子，咱们创建一个<em>LinearLayout</em>并将<em>CardView</em>作为子控件放在里面。<em>CardView</em>可以代表一个人，包含如下信息：</p>
<ul>
<li><em>TextView</em> - 显示人名</li>
<li><em>TextView</em> - 显示年纪</li>
<li><em>ImageView</em> - 显示照片</li>
</ul>
<p>xml内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span> <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:padding</span>=<span class="value">"16dp"</span></span><br><span class="line">    &gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/cv"</span></span><br><span class="line">        &gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">RelativeLayout</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:padding</span>=<span class="value">"16dp"</span></span><br><span class="line">            &gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/person_photo"</span></span><br><span class="line">                <span class="attribute">android:layout_alignParentLeft</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:layout_alignParentTop</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:layout_marginRight</span>=<span class="value">"16dp"</span></span><br><span class="line">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/person_name"</span></span><br><span class="line">                <span class="attribute">android:layout_toRightOf</span>=<span class="value">"@+id/person_photo"</span></span><br><span class="line">                <span class="attribute">android:layout_alignParentTop</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:textSize</span>=<span class="value">"30sp"</span></span><br><span class="line">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/person_age"</span></span><br><span class="line">                <span class="attribute">android:layout_toRightOf</span>=<span class="value">"@+id/person_photo"</span></span><br><span class="line">                <span class="attribute">android:layout_below</span>=<span class="value">"@+id/person_name"</span></span><br><span class="line">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>如果这个xml文件被用作<em>Activity</em>的layout，并且给<em>TextView</em>和ImageView*设置有意义的值，那么在Android设备上面它看起来应该像这个样子：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/recyclerview_cardview/device_2015.png" alt="device"></p>
<h2 id="创建RecyclerView">创建RecyclerView</h2><h3 id="在Layout中定义它">在Layout中定义它</h3><p>使用一个<em>RecyclerView</em>实例有一些复杂，但是在layout xml中定义它十分简单。可以定义如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/rv"</span></span><br><span class="line">    /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>通过如下代码片段在你的<em>Activity</em>中去获得句柄：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RecyclerView rv = (RecyclerView)findViewById(R.id.rv);</span><br></pre></td></tr></table></figure></p>
<p>如果你确定<em>RecyclerView</em>的大小不会改变，你可以添加如下语句：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rv.setHasFixedSize(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure></p>
<h3 id="使用LayoutManager">使用LayoutManager</h3><p>和<em>ListView</em>不一样，<em>RecyclerView</em>需要一个<em>LayoutManger</em>去管理其子项的位置。你可以通过继承<em>RecyclerView.LayoutManager</em>类定义自己的<em>LayoutManager</em>。不过，大多数案子里面，你直接使用如下预定义的<em>LayoutManager</em>子类就可以了：</p>
<ul>
<li>LinearLayoutManager</li>
<li>GridLayoutManager</li>
<li>StaggeredGridLayoutManager<br>在这篇教程里，我将使用<em>LinearLayoutManager</em>，它默认将让你的<em>RecyclerView</em>看起来像一个<em>ListView</em>。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LinearLayoutManager llm = <span class="keyword">new</span> LinearLayoutManager(context);</span><br><span class="line">rv.setLayoutManager(llm);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="定义内容">定义内容</h3><p>和<em>ListView</em>一样，<em>RecyclerView</em>也需要一个适配器去接入数据。但是在创建适配器前，我们先创建我们需要的数据。创建一个简单的类来代表一个人然后写一个方法来初始化一个<em>Person</em>对象集：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    String age;</span><br><span class="line">    <span class="keyword">int</span> photoId;</span><br><span class="line"> </span><br><span class="line">    Person(String name, String age, <span class="keyword">int</span> photoId) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.photoId = photoId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">private</span> List&lt;Person&gt; persons;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// This method creates an ArrayList that has three Person objects</span></span><br><span class="line"><span class="comment">// Checkout the project associated with this tutorial on Github if</span></span><br><span class="line"><span class="comment">// you want to use the same images.</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initializeData</span><span class="params">()</span></span>&#123;</span><br><span class="line">    persons = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">"Emma Wilson"</span>, <span class="string">"23 years old"</span>, R.drawable.emma));</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">"Lavery Maiss"</span>, <span class="string">"25 years old"</span>, R.drawable.lavery));</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">"Lillie Watts"</span>, <span class="string">"35 years old"</span>, R.drawable.lillie));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="创建适配器">创建适配器</h3><p>要创建一个<em>RecyclerView</em>可以使用的适配器，你必须继承<em>RecyclerView.Adapter</em>。这个适配器遵循<strong>View holder</strong>设计模式，也就意味着你需要定义一个类继承与<em>RecyclerView.ViewHolder</em>。这种模式最大限度减少调用<em>findViewByIdea</em>方法。</p>
<p>前面我们已经在 XML Layout中定义了一个<em>CardView</em>代表一个人。我们将重复利用此布局文件。在我们自定义<em>ViewHolder</em>的构造方法中，初始化此视图属于<em>RecyclerView</em>的子项。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RVAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RVAdapter</span>.<span class="title">PersonViewHolder</span>&gt;</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;      </span><br><span class="line">        CardView cv;</span><br><span class="line">        TextView personName;</span><br><span class="line">        TextView personAge;</span><br><span class="line">        ImageView personPhoto;</span><br><span class="line"> </span><br><span class="line">        PersonViewHolder(View itemView) &#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cv = (CardView)itemView.findViewById(R.id.cv);</span><br><span class="line">            personName = (TextView)itemView.findViewById(R.id.person_name);</span><br><span class="line">            personAge = (TextView)itemView.findViewById(R.id.person_age);</span><br><span class="line">            personPhoto = (ImageView)itemView.findViewById(R.id.person_photo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来，为自定义适配器增加一个构造方法来处理<em>RecyclerView</em>显示的数据。我们的数据有<em>Person</em>对象集组成，添加如下代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; persons;</span><br><span class="line"> </span><br><span class="line">RVAdapter(List&lt;Person&gt; persons)&#123;</span><br><span class="line">    <span class="keyword">this</span>.persons = persons;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><em>RecyclerView.Adapter</em>有三个抽象方法必须被重写。咱们从<em>getItemCount</em>方法开始。这个方法返回子项存在数据的数量。对于我们由<em>List</em>形成的数据，我们只需要调用<em>List</em>对象的<em>size()</em>方法即可：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> persons.size();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来，重写<em>onCreateViewHolder</em>方法。正如方法名所展示，当自定义<em>ViewHolder</em>需要被初始化时调用。我们指明<em>RecyclerView</em>每个子项使用的布局。通过使用<em>LayoutInflater</em>完成，传递着结果到自定义的<em>ViewHolder</em>的构造方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PersonViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup viewGroup, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    View v = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.item, viewGroup, <span class="keyword">false</span>);</span><br><span class="line">    PersonViewHolder pvh = <span class="keyword">new</span> PersonViewHolder(v);</span><br><span class="line">    <span class="keyword">return</span> pvh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>重写<em>onBindViewHolder</em>方法去指明每一个<em>RecyclerView</em>子项的内容。这个反复与<em>ListView</em>的适配器的<em>getView</em>方法十分相似。在我们的例子中，你必须设置<em>CardView</em>中的名字、年纪以及照片。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(PersonViewHolder personViewHolder, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    personViewHolder.personName.setText(persons.get(i).name);</span><br><span class="line">    personViewHolder.personAge.setText(persons.get(i).age);</span><br><span class="line">    personViewHolder.personPhoto.setImageResource(persons.get(i).photoId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最好，你需要重写<em>onAttachedToRecyclerView</em>方法。我们就简单实用地直接调用父类的实现。</p>
<blockquote>
<p>注：新版本已经不需要重写此方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttachedToRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onAttachedToRecyclerView(recyclerView);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="实用适配器">实用适配器</h3><p>现在适配器准备好了，接下来就是让<em>Activity</em>通过适配器构造函数和<em>RecyclerView</em>的<em>setAdapter</em>去初始化和使用这个适配器了。添加如下代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RVAdapter adapter = <span class="keyword">new</span> RVAdapter(persons);</span><br><span class="line">rv.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<h3 id="编译及运行">编译及运行</h3><p>当你在你的Android设备上运行这个例程时，你将会看类似如下图片的结果：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/recyclerview_cardview/device-2015-02.png" alt="device"></p>
<h1 id="结论">结论</h1><p>在这篇教程，你已经学会了怎么去使用在Android L中引入的<em>CardView</em>和<em>RecyclerView</em>控件。你也明白了在Material Design应用中怎么去使用这些控件。注意：通过<em>RecyclerView</em>可以做几乎所有<em>ListView</em>所做的事，不过为了更少的代码，使用<em>ListView</em>仍然是一个比较好的选择。</p>
<p>你可以参考Android Developers reference去获得更多关于<em>CardView</em>和<em>RecyclerView</em>类的信息。</p>
<p>最好，如果你想更快速地开发你的app，不要忘记在Envato Market查看Android app templates。</p>
<blockquote>
<p><a href="https://code.tutsplus.com/tutorials/getting-started-with-recyclerview-and-cardview-on-android--cms-23465" target="_blank" rel="external">原文章地址。</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;偶然看到这篇文章，觉得写得很好，简单明了，所以尝试将其翻译一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你想创作一个用列表显示数据的Android应用，Android L提供了两个让你更容易实现的新特性：RecyclerView和CardView。通过用这些控件，可以很容易让你的app符合Google的Material Design规范。&lt;/p&gt;
&lt;p&gt;创作APP时一个模板参考的好地方：&lt;a href=&quot;https://go.redirectingat.com/?id=1342X589339&amp;amp;site=code.tutsplus.com&amp;amp;xs=1&amp;amp;isjs=1&amp;amp;url=https%3A%2F%2Fcodecanyon.net%2Fcategory%2Fmobile%2Fandroid%3F_ga%3D2.255032513.873197305.1503543294-826134730.1503543294&amp;amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;amp;xcreo=0&amp;amp;xed=0&amp;amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;amp;xtz=-480&quot;&gt;Envato market&lt;/a&gt;。你可以找到成千上万的APP模板，从&lt;a href=&quot;https://go.redirectingat.com/?id=1342X589339&amp;amp;site=code.tutsplus.com&amp;amp;xs=1&amp;amp;isjs=1&amp;amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Flayar-tancep-youtube-app-for-android%2F5190062%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;amp;xcreo=0&amp;amp;xed=0&amp;amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;amp;xtz=-480&quot;&gt;Youtube&lt;/a&gt;到&lt;a href=&quot;https://go.redirectingat.com/?id=1342X589339&amp;amp;site=code.tutsplus.com&amp;amp;xs=1&amp;amp;isjs=1&amp;amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Fflappybot-an-obstacle-avoidance-game%2F6827330%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;amp;xcreo=0&amp;amp;xed=0&amp;amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;amp;xtz=-480&quot;&gt;obstacleavoidance game&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;或者你可以尝试一下&lt;a href=&quot;https://codecanyon.net/item/universal-full-multipurpose-android-app/6512720?_ga=2.217207135.873197305.1503543294-826134730.1503543294&quot;&gt;通用的Android app模板&lt;/a&gt;,它能为你创作任何种类app提供一个坚实的基础。&lt;br&gt;&lt;img src=&quot;https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/recyclerview_cardview/Universal-Android-app.png&quot; alt=&quot;Universal-Android-app&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>纸币器和MDB协议</title>
    <link href="http://huaqianlee.github.io/2017/11/08/Other/MDB-ICP-protocol/"/>
    <id>http://huaqianlee.github.io/2017/11/08/Other/MDB-ICP-protocol/</id>
    <published>2017-11-08T14:22:45.000Z</published>
    <updated>2017-11-08T14:31:37.259Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MDB协议">MDB协议</h2><h3 id="简介">简介</h3><p>MDB/ICP协议为一个主从接口的串口通信标准的协议， 规定波特率为9600bps，总线有唯一主机（vending machine controller, VMC）和最多32个从机外设，每个外设设有唯一的地址和命令，且由主机初始化。</p>
<p>电源上电、总线复位或外设收到一个复位命令，所对应的外设都被禁止。在顺序初始化外设期间，VMC通过外设的应答来选择被外设所支持的特征。</p>
<blockquote>
<p>协议推荐所以主控制器VMC和外设都需支持所有低等级标准</p>
</blockquote>
<a id="more"></a>
<h3 id="通信格式">通信格式</h3><h4 id="字节格式">字节格式</h4><p>一个字节定义为11位：1个起始位+8个数据位+1个模式位+1个停止位。</p>
<ul>
<li>VMC发送数据到外设：模式位 = 1 表示为地址字节， = 0 表示为数据字节</li>
<li>外设发送数据到VMC：模式位 = 1 表示所有字节发送完成</li>
</ul>
<h4 id="块格式">块格式</h4><h5 id="主到从">主到从</h5><p>主控制器VMC发送给从机的数据格式：1个地址字节+n个数据字节+1个校验和节（最大不超过36个字节）。地址字节由 高5位外设地址+低三位外设命令组成。</p>
<p>主控制器响应外设时发送 ：ACK（应答）、NAK（不应答）、RET（重发）。5ms超时不响应相当于NAK。如从机5ms无响应，VMC应重发相同或不同命令， 知道从机响应或达到最大响应时间（硬币器2S、纸币器5S）。在此期间VMC应该同时访问其他外设。</p>
<p><strong>主控器VMC可以通过拉低发送线100ms以上对总线进行复位。</strong></p>
<h4 id="从到主">从到主</h4><p>从机发送到主控制器的数据格式：1数据块+1字节校验和（最大不超过36字节）。</p>
<p>从机外设响应主控制器发送数据时，主控制器VMC在5ms无响应时间内必须响应ACK、NAK或RET。否则外设需要重发数据或者在下一次会话时附加上数据。</p>
<h4 id="校验和">校验和</h4><p>校验和为所有地址及数据字节的累加和（不包含校验和字节）。</p>
<h4 id="总线复位">总线复位</h4><p>主控器VMC可以通过上拉激活发送线100ms以上对所有外设进行复位，复位后外设处于上电复位状态。</p>
<h4 id="一些标准">一些标准</h4><p>响应码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ACK - <span class="number">00</span>H   RET - AAH   NAK -  FFH</span><br></pre></td></tr></table></figure></p>
<p>外设地址：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Address             Definition  </span><br><span class="line">-------------------------------------------------</span><br><span class="line"><span class="number">00000</span>xxxB    (<span class="number">00</span>H)  Reserved <span class="keyword">for</span> VMC </span><br><span class="line"><span class="number">00001</span>xxxB    (<span class="number">08</span>H)  Changer  </span><br><span class="line"><span class="number">00010</span>xxxB    (<span class="number">10</span>H)  Cashless Device <span class="comment">#1  </span></span><br><span class="line"><span class="number">00011</span>xxxB    (<span class="number">18</span>H)  Communications Gateway </span><br><span class="line"><span class="number">00100</span>xxxB    (<span class="number">20</span>H)  Display  </span><br><span class="line"><span class="number">00101</span>xxxB    (<span class="number">28</span>H)  Energy Management System </span><br><span class="line"><span class="number">00110</span>xxxB    (<span class="number">30</span>H)  Bill Validator  </span><br><span class="line"><span class="number">00111</span>xxxB    (<span class="number">38</span>H)  Reserved <span class="keyword">for</span> Future Standard Peripheral</span><br><span class="line"><span class="number">01000</span>xxxB    (<span class="number">40</span>H)  Universal Satellite Device <span class="comment">#1 </span></span><br><span class="line"><span class="number">01001</span>xxxB    (<span class="number">48</span>H)  Universal Satellite Device <span class="comment">#2 </span></span><br><span class="line"><span class="number">01010</span>xxxB    (<span class="number">50</span>H)  Universal Satellite Device <span class="comment">#3 </span></span><br><span class="line"><span class="number">01011</span>xxxB    (<span class="number">58</span>H)  Coin Hopper or Tube - Dispenser </span><br><span class="line"><span class="number">01100</span>xxxB    (<span class="number">60</span>H)  Cashless Device <span class="comment">#2</span></span><br><span class="line"><span class="number">01101</span>xxxB    (<span class="number">68</span>H)  Reserved <span class="keyword">for</span> Future Standard Peripherals</span><br><span class="line">...</span><br><span class="line"><span class="number">11011</span>xxxB    (D8H)  Reserved <span class="keyword">for</span> Future Standard Peripherals</span><br><span class="line"><span class="number">11100</span>xxxB    (E0H)  Experimental Peripheral <span class="comment">#1</span></span><br><span class="line"><span class="number">11101</span>xxxB    (E8H)  Experimental Peripheral <span class="comment">#2 </span></span><br><span class="line"><span class="number">11110</span>xxxB    (F0H)  Vending Machine Specific Peripheral <span class="comment">#1 </span></span><br><span class="line"><span class="number">11111</span>xxxB    (F8H)  Vending Machine Specific Peripheral <span class="comment">#2</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MDB协议&quot;&gt;MDB协议&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;简介&lt;/h3&gt;&lt;p&gt;MDB/ICP协议为一个主从接口的串口通信标准的协议， 规定波特率为9600bps，总线有唯一主机（vending machine controller, VMC）和最多32个从机外设，每个外设设有唯一的地址和命令，且由主机初始化。&lt;/p&gt;
&lt;p&gt;电源上电、总线复位或外设收到一个复位命令，所对应的外设都被禁止。在顺序初始化外设期间，VMC通过外设的应答来选择被外设所支持的特征。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;协议推荐所以主控制器VMC和外设都需支持所有低等级标准&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Other" scheme="http://huaqianlee.github.io/categories/Other/"/>
    
    
      <category term="Protocol" scheme="http://huaqianlee.github.io/tags/Protocol/"/>
    
  </entry>
  
  <entry>
    <title>通过自定义侧边导航栏的RecyclerView动态加载布局</title>
    <link href="http://huaqianlee.github.io/2017/08/18/Android/Dynamic-loading-layout-by-recyclerview-item/"/>
    <id>http://huaqianlee.github.io/2017/08/18/Android/Dynamic-loading-layout-by-recyclerview-item/</id>
    <published>2017-08-18T14:45:08.000Z</published>
    <updated>2019-04-06T14:25:27.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备布局文件">准备布局文件</h2><p>布局一：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.constraint.ConstraintLayout</span></span><br><span class="line">        <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">        <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">tools:context</span>=<span class="value">"me.huaqianlee.forme.ToDoFragment"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span> <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">              <span class="attribute">android:layout_marginTop</span>=<span class="value">"50dp"</span></span><br><span class="line">              <span class="attribute">android:textSize</span>=<span class="value">"15sp"</span></span><br><span class="line">    <span class="attribute">android:text</span>=<span class="value">"This is Todo main view layout!"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>布局二：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.constraint.ConstraintLayout</span></span><br><span class="line">        <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">        <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">tools:context</span>=<span class="value">"me.huaqianlee.forme.ToDoFragment"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">ImageView</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span> <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">               <span class="attribute">android:scaleType</span>=<span class="value">"fitCenter"</span></span><br><span class="line">    <span class="attribute">android:src</span>=<span class="value">"@drawable/lee"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="准备Fragment，加载布局">准备Fragment，加载布局</h2><p>布局一：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateEventFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Nullable</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_date_event, container, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>布局二：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ToDoFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Nullable</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_todo, container, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="实现切换布局方法">实现切换布局方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line"> * 切换主界面视图工具类</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainViewSwitch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchMainView</span><span class="params">(BaseActivity activity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (SelectedNavItem.getSlectedNavItem()) &#123;</span><br><span class="line">            <span class="keyword">case</span> SelectedNavItem.TODO:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> ToDoFragment(),activity);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SelectedNavItem.DATEEVENT:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> DateEventFragment(), activity);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">replaceFragment</span><span class="params">(Fragment fragment, BaseActivity activity)</span> </span>&#123;</span><br><span class="line">        FragmentManager fragmentManager = activity.getSupportFragmentManager();</span><br><span class="line">        FragmentTransaction transaction = fragmentManager.beginTransaction();</span><br><span class="line">        transaction.replace(R.id.main_view_layout, fragment);</span><br><span class="line">        transaction.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="切换布局">切换布局</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">adapter.setOnItemClickListener(<span class="keyword">new</span> NavFuncAdapter.OnItemClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MainViewSwitch().switchMainView(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>这篇博文只是一个简单粗糙的总结， RecyclerView点击事件的实现可以查看博客：<a href="">RecyclerView选中效果、Item点击事件的实现</a>。</p>
<h2 id="源码地址">源码地址</h2><p><a href="https://github.com/huaqianlee/ForMe" target="_blank" rel="external">ForMe</a></p>
<h2 id="效果">效果</h2><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/app/dynamic_layout_effect.gif" alt="effect"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备布局文件&quot;&gt;准备布局文件&lt;/h2&gt;&lt;p&gt;布局一：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;android.support.constraint.ConstraintLayout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;xmlns:tools&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;xmlns:app&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;tools:context&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;me.huaqianlee.forme.ToDoFragment&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attribute&quot;&gt;android:layout_marginTop&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;50dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attribute&quot;&gt;android:textSize&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;15sp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;This is Todo main view layout!&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;android.support.constraint.ConstraintLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>按返回键只关闭DrawerLayout侧边栏不退出Activity的实现方案</title>
    <link href="http://huaqianlee.github.io/2017/08/18/Android/hides-navigation-in-drawerlayou/"/>
    <id>http://huaqianlee.github.io/2017/08/18/Android/hides-navigation-in-drawerlayou/</id>
    <published>2017-08-18T14:44:17.000Z</published>
    <updated>2017-08-18T15:06:05.163Z</updated>
    
    <content type="html"><![CDATA[<p>今天写自己的练习APP时，发现侧边导航栏可见时，我按返回键，Activity直接退出了， 可是我想要的是只是关闭侧边栏，研究了一下，其实解决办法挺简单。</p>
<p>只需要在Activity中重写onBackPressed()即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">private DrawerLayout mlayout; </span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void <span class="function"><span class="title">onBackPressed</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> (mlayout.isDrawerOpen(findViewById(R.id.nav_left_layout)))</span><br><span class="line">        mlayout.closeDrawers();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        super.onBackPressed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># R.id.nav_left_layout为侧边栏显示部分顶层Layout</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天写自己的练习APP时，发现侧边导航栏可见时，我按返回键，Activity直接退出了， 可是我想要的是只是关闭侧边栏，研究了一下，其实解决办法挺简单。&lt;/p&gt;
&lt;p&gt;只需要在Activity中重写onBackPressed()即可：&lt;br&gt;&lt;figure class=&quot;h
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView Item选中效果及点击事件的实现</title>
    <link href="http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/"/>
    <id>http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/</id>
    <published>2017-08-17T11:46:41.000Z</published>
    <updated>2019-04-06T14:25:27.060Z</updated>
    
    <content type="html"><![CDATA[<p>最近需要对RecyclerView的Item实现选中效果和Item点击事件，尝试了两种方式。</p>
<h1 id="受限的简易实现方案">受限的简易实现方案</h1><h2 id="布局文件">布局文件</h2><p>首先在Item的布局文件中加入如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">android:clickable=<span class="string">"true"</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">"true"</span></span><br><span class="line">android:focusable=<span class="string">"true"</span></span><br><span class="line">android:background=<span class="string">"@drawable/selector_item_selected"</span></span><br></pre></td></tr></table></figure></p>
<p>完成selector_item_selected.xml：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;selector xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span><br><span class="line">    &lt;item android:state_focused=<span class="string">"true"</span> android:drawable=<span class="string">"@drawable/select"</span>/&gt;</span><br><span class="line">    &lt;item android:state_focused=<span class="string">"false"</span> android:drawable=<span class="string">"@drawable/un_select"</span>/&gt;</span><br><span class="line">&lt;/selector&gt;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>实现select和unselect资源（也可以直接找两张图片）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unselect.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> &gt;</span><br><span class="line">    &lt;gradient</span><br><span class="line">            android:startColor=<span class="string">"#FFF"</span></span><br><span class="line">            android:endColor=<span class="string">"#FFF"</span></span><br><span class="line">            android:centerColor=<span class="string">"#FFF"</span></span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/shape&gt;</span><br><span class="line"><span class="comment"># select.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> &gt;</span><br><span class="line">    &lt;gradient</span><br><span class="line">            android:startColor=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">            android:endColor=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">            android:centerColor=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/shape&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="代码">代码</h2><p>只需要onBindViewHolder方法中添加如下代码即可：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    holder.itemView.setSelected(position == SelectedNavItem.getSlectedNavItem()); </span><br><span class="line">    <span class="comment">/*item点击事件的一种实现方式*/</span></span><br><span class="line">    holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    holder.cardView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="更实用的实现方案">更实用的实现方案</h1><p>上面的方案有挺多局限性， 这个方案主要通过注册按键事件来实现。</p>
<h2 id="布局">布局</h2><p>删掉上一种方案加入属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">android:clickable=<span class="string">"true"</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">"true"</span></span><br><span class="line">android:focusable=<span class="string">"true"</span></span><br><span class="line">android:background=<span class="string">"@drawable/selector_item_selected"</span></span><br></pre></td></tr></table></figure></p>
<h2 id="代码-1">代码</h2><p>在adpter中定义可在其他地方使用的OnItemClickListener接口，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> OnItemClickListener onItemClickListener = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*暴露给外部的方法*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickListener</span><span class="params">(OnItemClickListener listener)</span> </span>&#123;</span><br><span class="line">    onItemClickListener = listener;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现选中效果，然后为每个itemview添加并注册点击事件，并将点击事件传给外面的调用者，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="keyword">final</span> <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置选中状态*/</span></span><br><span class="line">    <span class="keyword">if</span> (position == SelectedNavItem.getSlectedNavItem()) &#123;</span><br><span class="line">        holder.itemView.setBackground(mContext.getResources().getDrawable(R.drawable.selected));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        holder.itemView.setBackground(mContext.getResources().getDrawable(R.drawable.un_select));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            onItemClickListener.onItemClick(holder.itemView, position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Activity中的代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adapter.setOnItemClickListener(<span class="keyword">new</span> NavFuncAdapter.OnItemClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        SelectedNavItem.setSlectedNavItem(position);<span class="comment">//自定义的方法，告诉adpter被点击item</span></span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h1 id="源码地址">源码地址</h1><p><a href="https://github.com/huaqianlee/ForMe" target="_blank" rel="external">ForMe</a></p>
<h1 id="效果">效果</h1><p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/forme/select_item_effct.gif" alt="nav_item_selected"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近需要对RecyclerView的Item实现选中效果和Item点击事件，尝试了两种方式。&lt;/p&gt;
&lt;h1 id=&quot;受限的简易实现方案&quot;&gt;受限的简易实现方案&lt;/h1&gt;&lt;h2 id=&quot;布局文件&quot;&gt;布局文件&lt;/h2&gt;&lt;p&gt;首先在Item的布局文件中加入如下代码：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android:clickable=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:focusableInTouchMode=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:focusable=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:background=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/selector_item_selected&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;完成selector_item_selected.xml：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;selector xmlns:android=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:state_focused=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; android:drawable=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/select&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:state_focused=&lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt; android:drawable=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/un_select&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/selector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>基于DrawerLayout打造卡片式Navigation</title>
    <link href="http://huaqianlee.github.io/2017/08/17/Android/the-card-navigation-base-on-drawerlayout/"/>
    <id>http://huaqianlee.github.io/2017/08/17/Android/the-card-navigation-base-on-drawerlayout/</id>
    <published>2017-08-17T11:46:16.000Z</published>
    <updated>2019-04-06T14:25:27.056Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间开始了利用空闲时间做一个练习APP <a href="https://github.com/huaqianlee/ForMe" target="_blank" rel="external">ForMe</a>。根据设计APP需要通过左边导航栏切换主界面功能，自己平时在使用Google的NewsTab，觉得很不错，就准备参考其界面来设计。</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/app/newstab_view.jpg" alt="newsTab"></p>
<a id="more"></a>
<h2 id="尝试通过NavigationView实现">尝试通过NavigationView实现</h2><p>首选的是通过DrawerLayout和NavigationView来实现，首先引入依赖：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:design:25.3.1'</span></span><br><span class="line">compile <span class="string">'de.hdodenhof:circleimageview:2.1.0'</span>  // 对头布局头像处理提供支持</span><br></pre></td></tr></table></figure></p>
<p>然后实现侧边栏头布局：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"180dp"</span></span><br><span class="line">                android:padding=<span class="string">"10dp"</span></span><br><span class="line">                android:background=<span class="string">"?attr/colorPrimary"</span>&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;de.hdodenhof.circleimageview.CircleImageView</span><br><span class="line">            android:id=<span class="string">"@+id/nav_icon"</span></span><br><span class="line">            android:layout_width=<span class="string">"70dp"</span></span><br><span class="line">            android:layout_height=<span class="string">"70dp"</span></span><br><span class="line">            android:layout_centerInParent=<span class="string">"true"</span></span><br><span class="line">            android:src=<span class="string">"@drawable/lee"</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">              android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">              android:textColor=<span class="string">"#fff"</span></span><br><span class="line">              android:layout_above=<span class="string">"@+id/mail"</span></span><br><span class="line">              android:id=<span class="string">"@+id/usr"</span></span><br><span class="line">              android:textSize=<span class="string">"15sp"</span></span><br><span class="line">              android:text=<span class="string">"@string/me"</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">              android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">              android:id=<span class="string">"@+id/mail"</span></span><br><span class="line">              android:text=<span class="string">"huaqianlee@gmail.com"</span></span><br><span class="line">              android:layout_alignParentBottom=<span class="string">"true"</span></span><br><span class="line">              android:textSize=<span class="string">"15sp"</span></span><br><span class="line">              android:textColor=<span class="string">"#fff"</span></span><br><span class="line">              /&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>实现菜单：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;menu xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span><br><span class="line">    &lt;group android:checkableBehavior=<span class="string">"single"</span>&gt; //指定这一组菜单项单选 , group可以添加横线</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_call"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_call"</span></span><br><span class="line">                android:title=<span class="string">"Call"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_friends"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_friends"</span></span><br><span class="line">                android:title=<span class="string">"Friends"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_location"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_location"</span></span><br><span class="line">                android:title=<span class="string">"Location"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_mail"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_mail"</span></span><br><span class="line">                android:title=<span class="string">"Mail"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_task"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_task"</span></span><br><span class="line">                android:title=<span class="string">"Tasks"</span>/&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure></p>
<p>引入布局：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.v4.widget.DrawerLayout</span><br><span class="line">        xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:id=<span class="string">"@+id/drawer_layout"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        tools:context=<span class="string">"me.huaqianlee.forme.MainActivity"</span>&gt;</span><br><span class="line">    &lt;!--xmlns:app=<span class="string">"http://schemas.android.com/apk/me.huaqianlee.forme"</span>--&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">                android:id=<span class="string">"@+id/tool_bar"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"?attr/actionBarSize"</span></span><br><span class="line">                android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">                android:theme=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span><br><span class="line">                app:popupTheme=<span class="string">"@style/Theme.AppCompat.Light"</span></span><br><span class="line">                app:layout_scrollFlags=<span class="string">"enterAlways|snap|scroll"</span></span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/android.support.v7.widget.Toolbar&gt;</span><br><span class="line">    &lt;/android.support.design.widget.CoordinatorLayout&gt;        </span><br><span class="line">    &lt;android.support.design.widget.NavigationView</span><br><span class="line">        android:id=<span class="string">"@+id/nav_view"</span></span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        app:headerLayout=<span class="string">"@layout/nav_header"</span></span><br><span class="line">        app:menu=<span class="string">"@menu/nav_menu"</span></span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure></p>
<p>使能侧边栏提示图标：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DrawerLayout mlayout = (DrawerLayout) findViewById(R.id.drawer_layout);</span><br><span class="line">ActionBar actionBar = getSupportActionBar();//获得ToolBar</span><br><span class="line"><span class="keyword">if</span> (actionBar != null) &#123;</span><br><span class="line">    actionBar.setDisplayHomeAsUpEnabled(<span class="literal">true</span>);</span><br><span class="line">    actionBar.setHomeAsUpIndicator(R.drawable.ic_menu); //设置图标，默认是一个箭头</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>好了，这样子效果就出来了：</p>
<p><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/app/navigation_view.jpg" alt="nav_view"></p>
<p>可是这样子只能做到菜单式的侧边栏，不能实现我的需求。我尝试着找到一种方式来实现卡片式显示，但是最终没能找到。</p>
<h2 id="自定义卡片式侧边栏">自定义卡片式侧边栏</h2><p>既然用google提供库文件不能实现，就只好选择自定义来实现了.</p>
<p>在DrawerLayout中自己定义布局，将侧边栏头布局引入，然后通过RecyclerView来实现卡片式显示.<br>在开始前，首先得引入相应的依赖，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:recyclerview-v7:25.3.1'</span></span><br><span class="line">compile <span class="string">'com.android.support:cardview-v7:25.3.1'</span></span><br></pre></td></tr></table></figure></p>
<p>实现侧边栏的布局：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.v4.widget.DrawerLayout</span><br><span class="line">        xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:id=<span class="string">"@+id/drawer_layout"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        tools:context=<span class="string">"me.huaqianlee.forme.MainActivity"</span>&gt;</span><br><span class="line">    &lt;!--xmlns:app=<span class="string">"http://schemas.android.com/apk/me.huaqianlee.forme"</span>--&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">                android:id=<span class="string">"@+id/tool_bar"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"?attr/actionBarSize"</span></span><br><span class="line">                android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">                android:theme=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span><br><span class="line">                app:popupTheme=<span class="string">"@style/Theme.AppCompat.Light"</span></span><br><span class="line">                app:layout_scrollFlags=<span class="string">"enterAlways|snap|scroll"</span></span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/android.support.v7.widget.Toolbar&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;FrameLayout</span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        &gt;</span><br><span class="line">            </span><br><span class="line">            &lt;ImageView</span><br><span class="line">                    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                    android:src=<span class="string">"@drawable/lee"</span>/&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/FrameLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;RelativeLayout android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_gravity=<span class="string">"start"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">                        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                        android:layout_height=<span class="string">"180dp"</span></span><br><span class="line">                        android:id=<span class="string">"@+id/nav_layout"</span></span><br><span class="line">                        android:padding=<span class="string">"10dp"</span></span><br><span class="line">                        android:background=<span class="string">"?attr/colorPrimary"</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;de.hdodenhof.circleimageview.CircleImageView</span><br><span class="line">                    android:id=<span class="string">"@+id/nav_icon"</span></span><br><span class="line">                    android:layout_width=<span class="string">"70dp"</span></span><br><span class="line">                    android:layout_height=<span class="string">"70dp"</span></span><br><span class="line">                    android:layout_centerInParent=<span class="string">"true"</span></span><br><span class="line">                    android:src=<span class="string">"@drawable/lee"</span>/&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:textColor=<span class="string">"#fff"</span></span><br><span class="line">                      android:layout_above=<span class="string">"@+id/mail"</span></span><br><span class="line">                      android:id=<span class="string">"@+id/usr"</span></span><br><span class="line">                      android:textSize=<span class="string">"15sp"</span></span><br><span class="line">                      android:text=<span class="string">"@string/me"</span>/&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:id=<span class="string">"@+id/mail"</span></span><br><span class="line">                      android:text=<span class="string">"huaqianlee@gmail.com"</span></span><br><span class="line">                      android:layout_alignParentBottom=<span class="string">"true"</span></span><br><span class="line">                      android:textSize=<span class="string">"15sp"</span></span><br><span class="line">                      android:textColor=<span class="string">"#fff"</span></span><br><span class="line">            /&gt;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        &lt;/RelativeLayout&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;FrameLayout</span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                android:background=<span class="string">"#fff"</span></span><br><span class="line">                android:layout_below=<span class="string">"@+id/nav_layout"</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">                    android:id=<span class="string">"@+id/nav_recycler_view"</span></span><br><span class="line">                    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;/android.support.v7.widget.RecyclerView&gt;</span><br><span class="line">        &lt;/FrameLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/RelativeLayout&gt;</span><br><span class="line">&lt;/android.support.v4.widget.DrawerLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>在写相关代码之前，先写好卡片的布局文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.v7.widget.CardView</span><br><span class="line">        xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_margin=<span class="string">"2dp"</span></span><br><span class="line">        app:cardCornerRadius=<span class="string">"4dp"</span>&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">            android:id=<span class="string">"@+id/nav_func_layout"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">            android:background=<span class="string">"#fff"</span></span><br><span class="line">            android:orientation=<span class="string">"vertical"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;ImageView</span><br><span class="line">                android:id=<span class="string">"@+id/nav_func_image"</span> android:layout_margin=<span class="string">"10dp"</span> android:layout_width=<span class="string">"match_parent"</span> android:layout_height=<span class="string">"100dp"</span></span><br><span class="line">                android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">                android:scaleType=<span class="string">"centerCrop"</span>/&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">                android:id=<span class="string">"@+id/nav_func_name"</span></span><br><span class="line">                android:layout_margin=<span class="string">"5dp"</span></span><br><span class="line">                android:textSize=<span class="string">"16sp"</span></span><br><span class="line">                android:layout_gravity=<span class="string">"center"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"wrap_content"</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/android.support.v7.widget.CardView&gt;</span><br></pre></td></tr></table></figure></p>
<p>接下来就该卡片显示（RecylerView）的代码了。<br>首先实现卡片bean：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package me.huaqianlee.forme.bean;</span><br><span class="line"></span><br><span class="line">public class Func &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private int imageId;</span><br><span class="line"></span><br><span class="line">    public <span class="function"><span class="title">Func</span></span>()&#123;&#125;</span><br><span class="line">    public Func (String name, int imageId) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String <span class="function"><span class="title">getName</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void <span class="built_in">set</span>Name(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int <span class="function"><span class="title">getImageId</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void <span class="built_in">set</span>ImageId(int imageId) &#123;</span><br><span class="line">        this.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现Adapter：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">public class NavFuncAdapter extends RecyclerView.Adapter&lt;NavFuncAdapter.ViewHolder&gt; &#123;</span><br><span class="line">    private Context mContext;</span><br><span class="line">    private List&lt;Func&gt; mLists;</span><br><span class="line"></span><br><span class="line">    public NavFuncAdapter(List&lt;Func&gt; lists) &#123;</span><br><span class="line">        mLists = lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mContext == null) &#123;</span><br><span class="line">            mContext = parent.getContext();</span><br><span class="line">        &#125;</span><br><span class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.func_item, parent, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">return</span> new ViewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onBindViewHolder(ViewHolder holder, int position) &#123;</span><br><span class="line">        Func func = mLists.get(position);</span><br><span class="line">        holder.funcName.setText(func.getName());</span><br><span class="line">        Glide.with(mContext).load(func.getImageId()).into(holder.funcImage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int <span class="function"><span class="title">getItemCount</span></span>() &#123;</span><br><span class="line">          <span class="built_in">return</span> mLists.size();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public class ViewHolder extends RecyclerView.ViewHolder &#123;</span><br><span class="line">        CardView cardView;</span><br><span class="line">        ImageView funcImage;</span><br><span class="line">        TextView funcName;</span><br><span class="line"></span><br><span class="line">        public ViewHolder(View itemView) &#123;</span><br><span class="line">            super(itemView);</span><br><span class="line">            cardView = (CardView) itemView;</span><br><span class="line">            funcImage = (ImageView) itemView.findViewById(R.id.nav_func_image);</span><br><span class="line">            funcName = (TextView) itemView.findViewById(R.id.nav_func_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>添加卡片显示代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化卡片</span></span><br><span class="line">private Func [] funcs = &#123;new Func (<span class="string">"Call"</span>,R.drawable.nav_call),new Func(<span class="string">"Friends"</span>,R.drawable.nav_friends),new Func(<span class="string">"Location"</span>,R.drawable.nav_location),</span><br><span class="line">new Func(<span class="string">"Mail"</span>, R.drawable.nav_mail), new Func(<span class="string">"Tasks"</span>,R.drawable.nav_task)&#125;;</span><br><span class="line">private void <span class="function"><span class="title">initFunc</span></span>() &#123;</span><br><span class="line">    funcList.clear();</span><br><span class="line">    Func toDoFunc = new Func();</span><br><span class="line">    toDoFunc.setImageId(R.drawable.todo_icon);</span><br><span class="line">    toDoFunc.setName(<span class="string">"ToDO"</span>);</span><br><span class="line">    funcList.add(toDoFunc);</span><br><span class="line"></span><br><span class="line">    Func toDoFunc2 = new Func(<span class="string">"Lee"</span>, R.drawable.lee);</span><br><span class="line">    funcList.add(toDoFunc2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i&lt;funcs.length;i++) &#123;</span><br><span class="line">        funcList.add(funcs[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># RecyclerView显示</span></span><br><span class="line">initFunc();</span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(R.id.nav_recycler_view);</span><br><span class="line">GridLayoutManager layoutManager = new GridLayoutManager(this,<span class="number">2</span>);</span><br><span class="line">recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">NavFuncAdapter adapter = new NavFuncAdapter(funcList);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<p>这样子就实现了卡片式侧边栏了，效果如下：<br><img src="https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/nav_card_p.jpg" alt="nav_custom"></p>
<p>Item选中效果的实现方式见：<a href="http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/" target="_blank" rel="external">RecyclerView选中效果的实现</a> .</p>
<p>今天先这样子粗糙地写这篇博客，后续完善了有时间再更新一下。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间开始了利用空闲时间做一个练习APP &lt;a href=&quot;https://github.com/huaqianlee/ForMe&quot;&gt;ForMe&lt;/a&gt;。根据设计APP需要通过左边导航栏切换主界面功能，自己平时在使用Google的NewsTab，觉得很不错，就准备参考其界面来设计。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://andylee-1258982386.cos.ap-chengdu.myqcloud.com/blog/app/newstab_view.jpg&quot; alt=&quot;newsTab&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>no no no, go go go</title>
    <link href="http://huaqianlee.github.io/2017/07/20/Life/no-no-no-go-go-go/"/>
    <id>http://huaqianlee.github.io/2017/07/20/Life/no-no-no-go-go-go/</id>
    <published>2017-07-20T11:29:53.000Z</published>
    <updated>2019-04-06T13:32:59.468Z</updated>
    
    <content type="html"><![CDATA[<p><img src="image//life/bing.jpg" alt="bing"></p>
<p>最近工作一忙起来，自己又懈怠了， 回家啥都不想做，大多数时候都是锻炼一下，然后撸两把王者，就睡觉了。 好忧伤，人越来越没有以前的激情了， 有时候都在想接受现状，拿着不算太差的工资，好好上班，不用花时间去折腾学习了。这种想法好可怕！</p>
<p>调整调整！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;image//life/bing.jpg&quot; alt=&quot;bing&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近工作一忙起来，自己又懈怠了， 回家啥都不想做，大多数时候都是锻炼一下，然后撸两把王者，就睡觉了。 好忧伤，人越来越没有以前的激情了， 有时候都在想接受现状，拿着不算太差
    
    </summary>
    
      <category term="Life" scheme="http://huaqianlee.github.io/categories/Life/"/>
    
    
      <category term="成长" scheme="http://huaqianlee.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>MTK Modem 问题集</title>
    <link href="http://huaqianlee.github.io/2017/07/12/Android/MTK-Modem-%E9%97%AE%E9%A2%98%E9%9B%86/"/>
    <id>http://huaqianlee.github.io/2017/07/12/Android/MTK-Modem-问题集/</id>
    <published>2017-07-12T15:01:42.000Z</published>
    <updated>2017-07-12T15:02:54.498Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始做MTK相关的工作，在第一步编译Modem时就遇到了挺多问题。特在此文整理和Modem相关的问题。</p>
<h1 id="编译相关问题">编译相关问题</h1><a id="more"></a>
<h2 id="编译权限问题">编译权限问题</h2><p>编译时提示如下权限问题：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">*******************************************</span><br><span class="line">* [OS]                : Linux</span><br><span class="line">* [PERL]              : v5.<span class="number">10.1</span> or v5.<span class="number">14.2</span></span><br><span class="line">* [MAKE]              : GNU Make v3.<span class="number">81</span></span><br><span class="line">* [SHELL]             : GNU bash v4.<span class="number">1.5</span></span><br><span class="line">* [GCC-ARM-NONE-EABI] : v4.<span class="number">6.2</span> or above</span><br><span class="line">* [NATIVE GCC(UBUNTU)]: v4.<span class="number">5</span> or above</span><br><span class="line"></span><br><span class="line">*******************************************</span><br><span class="line"> Start checking current Build Environment  </span><br><span class="line">*******************************************</span><br><span class="line">* [PERL]              : v5.<span class="number">14.2</span>            [OK] !!!</span><br><span class="line">* [MAKE]              : GNU Make v3.<span class="number">81</span>     [OK] !!!</span><br><span class="line">* [SHELL]             : GNU bash v4.<span class="number">2.25</span>    [HIGHER THAN RECOMMENDED] !!!</span><br><span class="line">sh: <span class="number">1</span>: tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-gcc: Permission denied</span><br><span class="line">* [GCC-ARM-NONE-EABI] : [UNKNOWN VERSION] !!!</span><br><span class="line">* [NATIVE GCC(UBUNTU)]: gcc (Ubuntu/Linaro <span class="number">4.6</span>.<span class="number">3</span>-<span class="number">1</span>ubuntu5) <span class="number">4.6</span>.<span class="number">3</span>  [OK] !!!</span><br><span class="line"></span><br><span class="line">current Build Env. is not recommendation </span><br><span class="line">To avoid unexpected errors , please install the recommended Tool Chain.</span><br><span class="line">*******************************************</span><br><span class="line">  Build Environment is NOT RECOMMENDED!</span><br><span class="line">*******************************************</span><br><span class="line"></span><br><span class="line">makefile check is <span class="keyword">done</span></span><br><span class="line">/bin/bash: tools/init/strcmpex_linux.exe: Permission denied</span><br><span class="line">make: *** [getoptions] Error <span class="number">126</span></span><br></pre></td></tr></table></figure></p>
<p>这种问题很好解决， 通过chmod对其提供执行权限即可。</p>
<h2 id="不能定位数据库问题">不能定位数据库问题</h2><p>提示不能定位原始codegen 数据库，错误log如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ERROR] Cannot determine the original codegen database: BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P1 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P10 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P11 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P12 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P13 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P14 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P15 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P16 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P17 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P18 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P19 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P2 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P20 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P21 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P3 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P4 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P5 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P6 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P7 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P8 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P9</span><br><span class="line">make[<span class="number">1</span>]: *** [build/ZECHIN6737T_65_M0/LWG_DSDS_COTSX/bin/dep/codegen_dep/cgen_cfg_Modem.det] Error <span class="number">2</span></span><br><span class="line">make: *** [cgen] Error <span class="number">2</span></span><br></pre></td></tr></table></figure></p>
<p>此问题是因为[mt6735m_all_modem\mtk_rel\ZECHIN6737T_65_M0\LTG_DSDS\dhl\database]路径下面太多的数据库文件，只需要将多余的删除掉即可。</p>
<h2 id="编译工具链问题">编译工具链问题</h2><p>提示某些工具不能找到，log如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lnosys</span><br><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lm</span><br><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lc</span><br><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lgcc</span><br></pre></td></tr></table></figure></p>
<p>此问题是因为代码里面的gcc工具链有问题，需要重新安装正确的工具链，由于十分不好找，所以我上传了百度云：<a href="http://pan.baidu.com/s/1pLblCkN" target="_blank" rel="external">GCC地址</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近开始做MTK相关的工作，在第一步编译Modem时就遇到了挺多问题。特在此文整理和Modem相关的问题。&lt;/p&gt;
&lt;h1 id=&quot;编译相关问题&quot;&gt;编译相关问题&lt;/h1&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
  </entry>
  
  <entry>
    <title>实现真正意义上的第一个APP之启程</title>
    <link href="http://huaqianlee.github.io/2017/07/11/Android/%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E6%84%8F%E4%B9%89%E4%B8%8A%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAAPP%E4%B9%8B%E5%90%AF%E7%A8%8B/"/>
    <id>http://huaqianlee.github.io/2017/07/11/Android/实现真正意义上的第一个APP之启程/</id>
    <published>2017-07-11T13:20:58.000Z</published>
    <updated>2017-07-11T13:25:04.928Z</updated>
    
    <content type="html"><![CDATA[<p>自学了这么久的Android，各种例程和Demo敲了不少，但是还未自己从头设计实现过一个完整的APP，今天准备根据自己的需求定制一款APP：ForMe（暂定此名）。第一次完全自己设计实现，可能会有很多问题，自己边学边优化。</p>
<a id="more"></a>
<h2 id="功能">功能</h2><p>根据自己平时的生活，目前暂时拟定如下功能：</p>
<ol>
<li>可自由选择默认显示界面</li>
<li>TODOLIST - 足够使用的精简模块</li>
<li>读取通讯录生日信息，查看提醒</li>
<li>英语学习，录入和复习</li>
<li>引入讯飞语音识别，思考所有功能与其结合</li>
<li>公交查询，自动播报还有几个站多少时间</li>
<li>支持MarkDown录入随笔博客，并可以导出</li>
<li>支持NFC读取卡片信息</li>
</ol>
<p>目前想到需要这些功能，一步步实现。</p>
<h2 id="UI设计">UI设计</h2><p>虽然没有多少审美细胞，但是也想自己来设计UI。本想先设计出UI效果，但这方面接触太少，短时间内难以做出来，所以就先放一放，后期再来完整设计。</p>
<h2 id="TODOLIST">TODOLIST</h2><p>一直需要一个TODOLIST来提醒自己，所以先实现此部分，做一个精简版的模块，使用Material Design语言来设计。碰巧在Github上面有看到一个类似项目<a href="https://github.com/avjinder/Minimal-Todo" target="_blank" rel="external">Minimal-Todo</a>，UI风格我挺喜欢的，这部分的UI就准备直接借用此项目的图片了。</p>
<p>好的就这样了， 开始一步一步地做。</p>
<blockquote>
<p>在公司完成这个计划，现在公司空调有问题，热死了，感觉都要虚脱了的感觉。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自学了这么久的Android，各种例程和Demo敲了不少，但是还未自己从头设计实现过一个完整的APP，今天准备根据自己的需求定制一款APP：ForMe（暂定此名）。第一次完全自己设计实现，可能会有很多问题，自己边学边优化。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>Android Kotlin之曲折HelloWord</title>
    <link href="http://huaqianlee.github.io/2017/05/23/Kotlin/Kotlin-HElloWorld/"/>
    <id>http://huaqianlee.github.io/2017/05/23/Kotlin/Kotlin-HElloWorld/</id>
    <published>2017-05-23T00:09:56.000Z</published>
    <updated>2017-08-21T13:54:41.570Z</updated>
    
    <content type="html"><![CDATA[<p>最近工作业余时间一直在自学Android，Google I/O 2017 惊闻Kotlin成为Google支持的官方语言，当然得紧跟“中央”的脚步，开始程序入门必备之HelloWord，殊不知这个HelloWord充满了曲折。</p>
<h2 id="了解Kotlin">了解Kotlin</h2><p>知道了Kotlin之后就开始在网上搜集相关资料，发现了如下个人觉得比较好的资料：<br><a href="https://kotlinlang.org/docs/tutorials/kotlin-android.html" target="_blank" rel="external">Getting started with Android and Kotlin</a><br><a href="https://github.com/JetBrains/kotlin" target="_blank" rel="external">kotlin项目</a><br><a href="https://github.com/JetBrains/kotlin-examples" target="_blank" rel="external">kotlin配置及与java的互操作</a><br><a href="https://github.com/Kotlin/kotlin-koans" target="_blank" rel="external">kotlin语法练习</a><br><a href="doc/kotlin-docs.pdf">Kotlin1.1手册</a><br><a href="http://tanfujun.com/kotlin-web-site-cn/docs/reference/" target="_blank" rel="external">kotlin中文网</a><br><a href="https://kotlinlang.org/" target="_blank" rel="external">kotlin官网</a><br><a href="https://github.com/huanglizhuo/kotlin-in-chinese" target="_blank" rel="external">中文kotlin项目</a><br><a id="more"></a></p>
<h2 id="曲折之路">曲折之路</h2><h3 id="安装插件+HelloWorld">安装插件+HelloWorld</h3><p>自己一直是使用的Android Studio的稳定版，通过<strong>File-&gt;setting-&gt;Install JetBrains Plugins</strong>安装了Kotlin插件。安装完成后会发现<strong>Tools-&gt;Kotlin</strong>工具，可以进行相关Kotlin操作。</p>
<p>插件装好后，新建HelloWord项目，新建完成后打开MainActivity.java，然后通过<strong>Code-&gt;Convert Java File to Kotlin File</strong>或者<strong>Ctrl+Alt+Shift+K</strong>将其转换为kt文件，Android Studio将自动在build.gradle文件添加依赖，如下：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ext.kotlin_version = <span class="string">'1.1.2-4'</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">classpath</span> <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span></span><br></pre></td></tr></table></figure></p>
<p>本以为马上就是见证奇迹的时刻了，可惜各种错误纷至沓来，主要就集中在Android Studio不能成功自动下载kotlin的相关依赖，翻墙下载也不能成功，所以就通过错误log和Task手动下载相关包，这样解决了大部分问题，但是仍然不能成功编译。</p>
<h3 id="Android_Studio_3-0">Android Studio 3.0</h3><p>折腾良久不能成功， 就决定下载Google新发布的自带Kotlin的3.0。下载安装完成后，导入HellowWorld项目，又出现了一大堆翻墙不能解决的gradle和kotlin依赖下载问题，所以又通过手动下载的方式解决了问题。3.0自动对项目的一些依赖进行了更新，kotlin更新为如下：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ext.kotlin_version = <span class="string">'1.1.3-eap-34'</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">classpath</span> <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>自带Kotlin的IDE，新建项目的时候就能选择kotin或者java</p>
</blockquote>
<p>本以为终于可以开心的见证奇迹了，3.0 和我的Ubuntu16.1又出现了兼容性问题，由于之前不小心把系统升级后已经多次遇到和软件不够兼容的问题，所以这次就放弃继续折腾，就准备再切换回Android Studio2.3.2再试试，实在不行就只有备份重装系统了。</p>
<blockquote>
<p>血的教训：Linux开发机千万要用之前的稳定版本，不要升级到最新系统。</p>
</blockquote>
<h3 id="终见证奇迹">终见证奇迹</h3><p>Android3.0+ubuntu16.01 不成功，最终用回2.3.2+kotlin插件，老天总算没让继续折腾，通过3.0更新了Kotlin版本后，在2.3.2中一下就编译过了，赶紧如下添加一点代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class KotlinActivity : AppCompatActivity() &#123;</span><br><span class="line"></span><br><span class="line">    private lateinit var hello_view:android.widget.TextView</span><br><span class="line">    //private lateinit var hello_anko:android.widget.TextView</span><br><span class="line"></span><br><span class="line">    override fun onCreate(savedInstanceState: Bundle?) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_kotlin)</span><br><span class="line"></span><br><span class="line">        hello_view = findViewById(R.id.hello_view) as android.widget.TextView</span><br><span class="line">        hello_view.text = "Hello, Kotlin! "</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>编译下载，终于在手机里面看到了：Hello，Kotlin！。</p>
<p>不过仍然有一个小瑕疵，由于兼容性有些问题，总会有IDE Error和Plugin Error提示，不过就这样子将就用了，不准备耗掉大量时间来折腾系统了，相信随着Google的更新和系统补丁，这些问题终将解决。</p>
<h2 id="Anko项目">Anko项目</h2><p>尝试了一下比较火的开源项目<a href="https://github.com/Kotlin/anko" target="_blank" rel="external">Anko</a>，通过Anko实现HelloWord。<br>引入依赖，我这里选择了自己能用到的部分依赖，如下：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ext.anko_version = <span class="string">"0.10"</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">compile</span> <span class="string">"org.jetbrains.anko:anko-sdk25:$anko_version"</span> <span class="comment">// sdk15, sdk19, sdk21, sdk23 are also available</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">"org.jetbrains.anko:anko-appcompat-v7:$anko_version"</span></span><br></pre></td></tr></table></figure></p>
<p>实现代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#24120;&#35268;&#29992;&#27861;&#10;private lateinit var hello_anko:android.widget.TextView&#10;hello_anko = find&#60;TextView&#62;(R.id.hello_anko) //&#21487;&#20197;&#30465;&#30053;&#27867;&#22411;&#10;&#10;# &#30452;&#25509;&#23558;TextView&#30340;id&#24403;&#20316;&#31034;&#20363;&#10;hello_anko.text = &#34;Hello, Anko!&#34;&#10;&#10;# &#21160;&#24577;&#21152;&#36733;&#24067;&#23616;&#10;verticalLayout &#123;&#10;    val name = editText()&#10;    button(&#34;Say Hello&#34;) &#123;&#10;        onClick &#123; toast(&#34;Hello, $&#123;name.text&#125;!&#34;) &#125;&#10;    &#125;&#10;&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Kotlin学习项目">Kotlin学习项目</h2><p><a href="https://github.com/huaqianlee/KotlinDemo" target="_blank" rel="external">Github地址</a></p>
<h2 id="附上一点经验">附上一点经验</h2><ol>
<li><p>依赖包总是下载失败时，通过log和Task确定链接，手动下载然后放到相应路径。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 依赖包路徑，可以通过ExternalLibraries-&gt;&lt;PackegName&gt;-&gt;Library Properties查看</span></span><br><span class="line">/home/lee/.gradle/caches/modules-<span class="number">2</span>/files-<span class="number">2.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gradle路徑</span></span><br><span class="line">/home/lee/.gradle/wrapper/dists</span><br><span class="line"></span><br><span class="line"><span class="comment"># gradle下载路径</span></span><br><span class="line">http://services.gradle.org/distributions/</span><br></pre></td></tr></table></figure>
</li>
<li><p>图形界面查看和添加依赖</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看</span></span><br><span class="line">Project Structure-&gt;app-&gt;Dependencies</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加, 这样添加后会自动在build.gradle中添加语句</span></span><br><span class="line">Project Structure-&gt;app-&gt;Dependencies-&gt;+-&gt;Library/Jar/Module Dependency</span><br></pre></td></tr></table></figure>
<p>看log耐心一些，做一些分析尝试，再加上Google会找到原因的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近工作业余时间一直在自学Android，Google I/O 2017 惊闻Kotlin成为Google支持的官方语言，当然得紧跟“中央”的脚步，开始程序入门必备之HelloWord，殊不知这个HelloWord充满了曲折。&lt;/p&gt;
&lt;h2 id=&quot;了解Kotlin&quot;&gt;了解Kotlin&lt;/h2&gt;&lt;p&gt;知道了Kotlin之后就开始在网上搜集相关资料，发现了如下个人觉得比较好的资料：&lt;br&gt;&lt;a href=&quot;https://kotlinlang.org/docs/tutorials/kotlin-android.html&quot;&gt;Getting started with Android and Kotlin&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/JetBrains/kotlin&quot;&gt;kotlin项目&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;kotlin配置及与java的互操作&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Kotlin/kotlin-koans&quot;&gt;kotlin语法练习&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;doc/kotlin-docs.pdf&quot;&gt;Kotlin1.1手册&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://tanfujun.com/kotlin-web-site-cn/docs/reference/&quot;&gt;kotlin中文网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://kotlinlang.org/&quot;&gt;kotlin官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/huanglizhuo/kotlin-in-chinese&quot;&gt;中文kotlin项目&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Kotlin" scheme="http://huaqianlee.github.io/categories/Kotlin/"/>
    
    
      <category term="Android Studio" scheme="http://huaqianlee.github.io/tags/Android-Studio/"/>
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
</feed>
