<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andy.Lee&#39;s  Blog</title>
  <subtitle>Good good study, day day up !</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huaqianlee.github.io/"/>
  <updated>2017-11-22T13:24:02.435Z</updated>
  <id>http://huaqianlee.github.io/</id>
  
  <author>
    <name>Andy.Lee</name>
    <email>huaqianlee@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android 系统源码分析综述：整理总结源码分析的所有博客</title>
    <link href="http://huaqianlee.github.io/2020/11/21/Android/A-summary-of-Android-source-analysis/"/>
    <id>http://huaqianlee.github.io/2020/11/21/Android/A-summary-of-Android-source-analysis/</id>
    <published>2020-11-21T13:55:43.000Z</published>
    <updated>2017-11-22T13:24:02.435Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>一直都想对整个Android系统的源码做一个完整的分析，并形成一些有质量的文章。之前做高通平台时，也零零碎碎的分析过一些Android系统的源码，但是当时基本都是用笔记软件随意做了一些记录，没有系统性的总结，导致很多东西又忘记了。最近开始做MTK平台，就准备开始抽空好好跟读一下源码，边分析边写博客。</p>
</blockquote>
<h1 id="一、_前言">一、 前言</h1><p>之前的几篇高通的博客是基于Android 4.4 分析，现在准备通过工作时 MTK 平台 Android 7.0 的源码来进行分析，不过也会将以前基于高通的博客归类于此文。</p>
<p>以前看代码，喜欢按照调用流程一步步的完整跟下来，这样比较费时间，尤其觉得对于驱动部分不是很必要，所以这次就准备主要专注于关键文件和关键函数，以及软件框架。<br><a id="more"></a></p>
<h1 id="二、Android架构">二、Android架构</h1><h1 id="三、源码分析">三、源码分析</h1><p>准备从三个方向来分析源码，一是从工作相关的方向，将所有外设，从最底层到最上层；二是针对某些模块的代码进行分析；三是根据系统源码架构和结构一层一层分析原理。</p>
<h2 id="3-1_外设方向">3.1 外设方向</h2><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/" target="_blank" rel="external">Android不带电量计的电量计算</a></td>
<td>高通不带库仑计电池电量算法</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/" target="_blank" rel="external">Android 电源管理架构</a></td>
<td>高通PMU架构与电源管理机制简析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/" target="_blank" rel="external">Android电池监控系统-BMS (有坑未填)</a></td>
<td>高通BMS系统源码简析</td>
</tr>
</tbody>
</table>
<h2 id="3-2_代码模块方向">3.2 代码模块方向</h2><h3 id="3-2-0_系统方向">3.2.0 系统方向</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/23/Android/%E9%AB%98%E9%80%9AAndroid%E8%AE%BE%E5%A4%87%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90-%E4%BB%8Epower-on%E4%B8%8A%E7%94%B5%E5%88%B0Home-Lanucher%E5%90%AF%E5%8A%A8/" target="_blank" rel="external">高通Android设备启动流程分析</a></td>
<td>从power-on上电到Home Lanucher启动</td>
</tr>
</tbody>
</table>
<h3 id="3-2-1_BootLoader部分">3.2.1 BootLoader部分</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(一)</a></td>
<td>高通boot架构和sbl源码执行流程</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(二)</a></td>
<td>CDT解析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(三)</a></td>
<td>log系统和下载升级</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/25/Android/Android%E6%BA%90%E7%A0%81bootable%E8%A7%A3%E6%9E%90%E4%B9%8BLK-bootloader-little-kernel/" target="_blank" rel="external">Android源码bootable解析之bootloader LK(little kernel)</a></td>
<td>LK目录和LK源码流程</td>
</tr>
</tbody>
</table>
<h3 id="3-2-2_Kernel部分">3.2.2 Kernel部分</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/08/19/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BLinux%E5%86%85%E6%A0%B8%E8%AE%BE%E5%A4%87%E6%A0%91-DT-Device-Tree-dts%E6%96%87%E4%BB%B6/" target="_blank" rel="external">Linux内核设备树(DT - Device Tree)</a></td>
<td>基于高通平台分析设备树</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2017/11/14/Android/Android-SELinux-Permison-and-Question/" target="_blank" rel="external">Android Selinux 权限及问题</a></td>
<td>SELinux权限介绍及问题解决</td>
</tr>
</tbody>
</table>
<h3 id="3-2-3_日志系统">3.2.3 日志系统</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/18/Android/Android-Logging-system-Android%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/" target="_blank" rel="external">Android日志系统详解</a></td>
<td>logging system</td>
</tr>
</tbody>
</table>
<h3 id="3-2-4_编译系统">3.2.4 编译系统</h3><table>
<thead>
<tr>
<th>文章名</th>
<th>概述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/11/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%80/" target="_blank" rel="external">Android编译过程详解之一</a></td>
<td>高通自定义脚本与lunch</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%BA%8C/" target="_blank" rel="external">Android编译过程详解之二</a></td>
<td>Build系统及.mk文件解析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/12/Android/Android%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B8%89/" target="_blank" rel="external">Android编译过程详解之三</a></td>
<td>客制化解析</td>
</tr>
<tr>
<td><a href="http://huaqianlee.github.io/2015/07/12/Android/About-ActivityNotFoundException-Unable-to-find-explicit-activity-class-Android-mk%E8%A7%A3%E6%9E%90/" target="_blank" rel="external">Android.mk解析</a></td>
<td>一个bug及Android.mk文件详解</td>
</tr>
</tbody>
</table>
<h2 id="3-3_架构原理方向">3.3 架构原理方向</h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一直都想对整个Android系统的源码做一个完整的分析，并形成一些有质量的文章。之前做高通平台时，也零零碎碎的分析过一些Android系统的源码，但是当时基本都是用笔记软件随意做了一些记录，没有系统性的总结，导致很多东西又忘记了。最近开始做MTK平台，就准备开始抽空好好跟读一下源码，边分析边写博客。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、_前言&quot;&gt;一、 前言&lt;/h1&gt;&lt;p&gt;之前的几篇高通的博客是基于Android 4.4 分析，现在准备通过工作时 MTK 平台 Android 7.0 的源码来进行分析，不过也会将以前基于高通的博客归类于此文。&lt;/p&gt;
&lt;p&gt;以前看代码，喜欢按照调用流程一步步的完整跟下来，这样比较费时间，尤其觉得对于驱动部分不是很必要，所以这次就准备主要专注于关键文件和关键函数，以及软件框架。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
      <category term="Qualcomm" scheme="http://huaqianlee.github.io/tags/Qualcomm/"/>
    
      <category term="源码分析" scheme="http://huaqianlee.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Android 电源管理之电池管理系统(BMS)</title>
    <link href="http://huaqianlee.github.io/2017/11/21/Android/BMS-of-Android-Power-Management/"/>
    <id>http://huaqianlee.github.io/2017/11/21/Android/BMS-of-Android-Power-Management/</id>
    <published>2017-11-21T13:56:28.000Z</published>
    <updated>2017-11-21T14:13:35.856Z</updated>
    
    <content type="html"><![CDATA[<p><em>Platform information： MTK6797（X20）+ Android 7.0</em></p>
<p>之前做高通的时候，对高通此部分做过粗略的分析，不过当时胡乱做的些笔记，只简单整理了几篇博客，感兴趣可以参考如下路径：</p>
<p><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(一)</a></p>
<p><a href="http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(二)</a></p>
<p><a href="http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/" target="_blank" rel="external">高通平台Android源码bootloader分析之sbl1(三)</a></p>
<p><a href="http://huaqianlee.github.io/2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/" target="_blank" rel="external">Android不带电量计的电量计算</a></p>
<p><a href="http://huaqianlee.github.io/2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/" target="_blank" rel="external">Android 电源管理架构</a></p>
<p><a href="http://huaqianlee.github.io/2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/" target="_blank" rel="external">Android电池监控系统-BMS-之电池系统架构 (有坑未填)</a></p>
<h1 id="零、充电简析">零、充电简析</h1><h2 id="0-1_充电状态机">0.1 充电状态机</h2><p>电池充电过程分为预充、恒流充电（CC模式）、恒压充电（CV模式）、涓流充电四个流程，MTK的状态机如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/mtk/chargind_state.jpg" alt="state"><br><a id="more"></a></p>
<h2 id="0-2_充电简要流程框图">0.2 充电简要流程框图</h2><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/mtkGauge_arch.jpg" alt="flow"></p>
<h1 id="一、BMS_架构">一、BMS 架构</h1><p>MTK 的 BMS 架构如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/mtk/battery%20introduction.jpg" alt="bms"></p>
<p>我准备将BMS从硬件到APP分为不同的架构层来分析。接下来分别分析下不同的架构层。</p>
<h2 id="1-1_硬件层">1.1 硬件层</h2><p>硬件层主要分为三个部分：PMIC，Fuel Gauge 和 ADC。本文主要分析软件，所以硬件就不准备深入研究了。</p>
<h3 id="1-1-1_PMIC">1.1.1 PMIC</h3><p>智能手机方案一般都会有一个PMIC芯片，有些也还会采用外接充电IC，使不使用外接IC，软件驱动会有一些区别。</p>
<h3 id="1-1-2_Fuel_Gauge">1.1.2 Fuel Gauge</h3><p>Fuel Gauge 是 MTK 为充放电、电量算法提供服务的一个硬件电路，电路中的电阻比较重要。</p>
<h3 id="1-1-3_ADC">1.1.3 ADC</h3><p>FGADC 和 AUXADC 分别采样电池的电流、电压（还会采样电池温度）。</p>
<h2 id="1-2_BootLoader层">1.2 BootLoader层</h2><p>BootLoader部分没有在上图表现出来，也可以将其归为driver部分。</p>
<h3 id="1-2-1_Preloader层">1.2.1 Preloader层</h3><p>此部分会对充电做一些初始设置，比如设置手机尽早开始充电以避免电池低电压不能进入接下来的充电状态，关键路径如下：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alps\vendor\mediatek\proprietary\bootable\bootloader\preloader\platform\mt6797\src\drivers\platform.c</span><br></pre></td></tr></table></figure></p>
<h3 id="1-2-2_LK层">1.2.2 LK层</h3><p>此部分主要针对充电主要做三件事：1. 启动方式、充电状态监测；2. 初始化充电IC；3. 充电器状态监测处理。</p>
<h4 id="1-2-2-1_启动方式、充电状态监测">1.2.2.1 启动方式、充电状态监测</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\include\platform\boot_mode.h</span></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\boot_mode.c</span></span><br><span class="line">boot_mode_select() <span class="comment">// 启动方式判断及处理</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\platform.c</span></span><br><span class="line">platform_init() &#123;</span><br><span class="line">    upmu_is_chr_det() <span class="comment">// 充电检测，Unplugged则关机</span></span><br><span class="line">    <span class="keyword">if</span> (kernel_charging_boot() == <span class="number">1</span>) &#123; <span class="comment">// 充电启动，显示关机充电信息</span></span><br><span class="line">        <span class="comment">/*判断充电设备和状态，显示充电图标和点亮充电指示灯*/</span></span><br><span class="line">        mt_disp_power(TRUE);</span><br><span class="line">		mt_disp_show_low_battery();</span><br><span class="line">		mt65xx_leds_brightness_set(<span class="number">6</span>, <span class="number">110</span>);</span><br><span class="line">    &#125;<span class="comment">// 否则，闹钟启动灯其他方式启动，显示开机界面</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">boot_mode_select(); <span class="comment">// 区分开机过程</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\mt_kernel_power_off_charging.c</span></span><br><span class="line">set_off_mode_charge_status()</span><br><span class="line">kernel_power_off_charging_detection(<span class="keyword">void</span>) &#123; <span class="comment">// 充电状态监测</span></span><br><span class="line">    get_off_mode_charge_status()</span><br><span class="line">	<span class="keyword">if</span> (upmu_is_chr_det() == KAL_TRUE) &#123;</span><br><span class="line">		<span class="keyword">if</span> (off_mode_status) &#123;</span><br><span class="line">			g_boot_mode = KERNEL_POWER_OFF_CHARGING_BOOT;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			g_boot_mode = NORMAL_BOOT;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		mt6575_power_off();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="1-2-2-2_初始化充电IC">1.2.2.2 初始化充电IC</h4><p>充电IC的初始化工作，有些可以被kernel驱动覆盖，有些不能，所以有时候一些修改记得在LK和kernel里面都得完成。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\mt_battery.c</span></span><br><span class="line">pchr_turn_on_charging() &#123; <span class="comment">//打开充电</span></span><br><span class="line">	bq25890_hw_init();</span><br><span class="line">	bq25890_charging_enable(bEnable);</span><br><span class="line">	bq25890_dump_register();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\rules.mk</span></span><br><span class="line">    ifeq ($(MTK_BQ25896_SUPPORT),yes)</span><br><span class="line">      OBJS +=$(LOCAL_DIR)/bq25890.o</span><br><span class="line">      DEFINES += MTK_BQ25896_SUPPORT</span><br><span class="line">      DEFINES += SWCHR_POWER_PATH</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\include\platform\bq25890.h</span></span><br><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6797\bq25890.c</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bq25890_hw_init</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"># 充电IC初始化及电流电压等相关设置</span></span><br></pre></td></tr></table></figure></p>
<h4 id="1-2-2-3_充电器状态监测处理">1.2.2.3 充电器状态监测处理</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\app\mt_boot\mt_boot.c</span></span><br><span class="line">boot_linux_fdt() &#123;</span><br><span class="line">    <span class="keyword">if</span> (kernel_charging_boot() == -<span class="number">1</span>) </span><br><span class="line">    	mt6575_power_off(); <span class="comment">// if Unplugged, 关机</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (kernel_charging_boot() == <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (pmic_detect_powerkey()) &#123;</span><br><span class="line">			mtk_arch_reset(<span class="number">1</span>); <span class="comment">// 跳转kernel前如果按键，重启</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="1-2-2-4_充电图标">1.2.2.4 充电图标</h4><p>MTK之前很多方案是在lk里面绘制关机充电图标，然后采样IPO协议实现关机充电。不过现在已采取高通类似方案在Health部分绘制关机充电图标了。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\vendor\mediatek\proprietary\bootable\bootloader\lk\platform\mt6755\mt_logo.c</span></span><br></pre></td></tr></table></figure></p>
<p>IPO方式流程图如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/mtk/power%20off%20charging.jpg" alt="IPO"></p>
<blockquote>
<p>由于初次接触MTK，又没有深入研究此部分，此部分如有错误，敬请谅解和指出。</p>
</blockquote>
<h2 id="1-3_Kernel层">1.3 Kernel层</h2><p>Kernel 部分软件流程框图，不过此图是我从MTK文档上截取没有做修改，所以图片中外部充电IC代码为Fan5405，对应于我的代码应该为bq24290（bq24296）。如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/mtk/kernel_cod_arch.jpg" alt="arch"></p>
<h3 id="1-3-1_ADC部分">1.3.1 ADC部分</h3><p>电流电压采样部分代码没有深入查看，主要看了如下一个文件：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\pmic_auxadc.c</span></span><br><span class="line">pmic_auxadc_init()</span><br><span class="line">PMIC_IMM_GetCurrent <span class="comment">// 算出电流</span></span><br></pre></td></tr></table></figure></p>
<h3 id="1-3-2_Common部分">1.3.2 Common部分</h3><p>PMIC充电控制、充电控制主线程、SW FG算法等内容在此部分实现。battery_common*.c 是一个关键文件，其是充电控制的主线程，battery 设备也由此文件注册。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\charging.h</span></span><br><span class="line">CHARGING_CTRL_CMD</span><br><span class="line">CHARGER_TYPE</span><br><span class="line">BATTERY_VOLTAGE_ENUM</span><br><span class="line">CHR_CURRENT_ENUM</span><br><span class="line"><span class="comment">// 如上等电池相关宏定义</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\battery_common.h</span></span><br><span class="line"><span class="comment">// 充电等相关参数定义</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps/kernel-3.18/drivers/power/mediatek/battery_common_fg_20.c </span></span><br><span class="line"><span class="comment">// 充电控制主线程</span></span><br><span class="line">power_supply_property xx <span class="comment">// 定义电池相关文件节点，后面接口函数对其更新</span></span><br><span class="line">upmu_is_chr_det() <span class="comment">// 充电状态监测</span></span><br><span class="line">wireless/ac/usb_get_get_property() <span class="comment">// 更新 charger</span></span><br><span class="line">battery_update() </span><br><span class="line">bat_routine_thread()</span><br><span class="line">    hrtimer_start() <span class="comment">// 开始定时器，定时更新数据</span></span><br><span class="line">battery_init() <span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\battery_meter.h</span></span><br><span class="line"><span class="comment">// SW FG 算法相关定义</span></span><br><span class="line"><span class="preprocessor"># alps/kernel-3.18/drivers/power/mediatek/battery_meter_fg_20.c </span></span><br><span class="line"><span class="comment">// SW FG算法,也即是OAM</span></span><br><span class="line">SW FG的原理：</span><br><span class="line">a.PMIC adc来获取raw vbat电压。</span><br><span class="line">b.通过ZCV表格，将vbat转换成OCV</span><br><span class="line">c.ocv-vbat/r 来获取电流I</span><br><span class="line">d.对电流i 进行积分，获取电量。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\mediatek\linear_charging.c</span></span><br><span class="line"><span class="comment">// PMIC充电控制， CC模式CV模式切换</span></span><br><span class="line">mtk_tuning_voltage()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*linear_charging.c 和 switch_charging.c二选一*/</span></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\mediatek\switch_charging.c</span></span><br><span class="line"><span class="comment">// SW charger充电控制， CC模式CV模式切换</span></span><br><span class="line">set_chr_input_current_limit()</span><br><span class="line">set_bat_sw_cv_charging_current_limit()</span><br><span class="line">...</span><br><span class="line">charging_full_check()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\pmic_chr_type_det.c</span></span><br></pre></td></tr></table></figure></p>
<p>Fuel Gauge Control 和 Charging Control 框图如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/mtk/charging_control.jpg" alt="FG&amp;Charging Control"></p>
<h3 id="1-3-3_HAL部分">1.3.3 HAL部分</h3><p>我所阅读的代码使用了外接充电 IC BQ24296（switch charger），驱动不会走 linear_charging.c，走 switch_charging.c + bq25896 驱动部分。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\charging_hw_pmic.c</span></span><br><span class="line">charging_value_to_parameter()</span><br><span class="line">charging_parameter_to_value()</span><br><span class="line">charging_hw_init() <span class="comment">// PMIC初始化</span></span><br><span class="line">charging_get/set_current()</span><br><span class="line">charging_sw_init()</span><br><span class="line">chr_control_interface()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\battery_meter_hal.h</span></span><br><span class="line">BATTERY_METER_CTRL_CMD</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\battery_meter_hal.c</span></span><br><span class="line">get_hw_ocv</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\bq25890.h</span></span><br><span class="line"><span class="comment">// 硬件定义及接口</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\bq25890.c</span></span><br><span class="line">bq25890_driver_probe() <span class="comment">// 注册驱动</span></span><br><span class="line">bq25890_get_xx() <span class="comment">// get 接口</span></span><br><span class="line">bq25890_set_xx() <span class="comment">// set 接口</span></span><br><span class="line">bq25890_hw_init() </span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\power\mt6797\charging_hw_bq25890.c</span></span><br><span class="line">is_chr_det() <span class="comment">// 充电器检测</span></span><br><span class="line">    val = pmic_get_register_value(MT6351_PMIC_RGS_CHRDET);</span><br><span class="line">charging_hw_init() <span class="comment">// 充电IC初始化     </span></span><br><span class="line">charging_sw_init() <span class="comment">// 充电IC初始化</span></span><br><span class="line">charging_get_xx() <span class="comment">// 封装后的 get 接口</span></span><br><span class="line">charging_get_charger_type() <span class="comment">// 获取充电器类型</span></span><br><span class="line">charging_set_xx() <span class="comment">// 封装后的 set 接口</span></span><br><span class="line">charging_set_current() <span class="comment">// 设置充电电流</span></span><br></pre></td></tr></table></figure></p>
<h3 id="1-3-4_客制化部分">1.3.4 客制化部分</h3><p>不同于高通将电池曲线合入DTS，MTK是以头文件的形式合入电池曲线（好像也有DTS方式）。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\mt6797\include\mach\mt_battery_meter_table.h</span></span><br><span class="line"><span class="comment">// 充电IC温度检测上拉电阻配置</span></span><br><span class="line">BATTERY_PROFILE_STRUCT battery_profile_tx[] <span class="comment">// 合入不同温度下电池曲线的 DOD OCV</span></span><br><span class="line">R_PROFILE_STRUCT r_profile_t1[] <span class="comment">// 合入不同温度下电池曲线的电池内阻和OCV</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\mt6797\include\mach\mt_battery_meter.h</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> SOC_BY_HW_FG  <span class="comment">// 定义默认使用 Fuel Gauge， FG算法</span></span></span><br><span class="line"><span class="comment">/*#define HW_FG_FORCE_USE_SW_OCV*/</span></span><br><span class="line"><span class="comment">/*#define SOC_BY_SW_FG*/</span></span><br><span class="line"><span class="comment">// 电池参数配置，部分值来源于电池曲线表</span></span><br><span class="line">CUST_POWERON_DELTA_CAPACITY_TOLRANCE <span class="comment">// 重启电量记录范围</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\misc\mediatek\include\mt-plat\mt6797\include\mach\mt_charging.h</span></span><br><span class="line"><span class="comment">// 充电控制，充电电流、温度等宏定义</span></span><br></pre></td></tr></table></figure></p>
<h3 id="1-3-5_文件节点">1.3.5 文件节点</h3><p>电池状态、充电状态等文件节点的创建路径：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Power Supply Class Node </span></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\power_supply.h</span></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\power_supply_core.c</span></span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\power_supply_sysfs.c</span></span><br><span class="line">power_supply_show_property()</span><br><span class="line">power_supply_attrs</span><br><span class="line"><span class="preprocessor"># alps\kernel-3.18\drivers\power\power_supply_leds.c</span></span><br></pre></td></tr></table></figure></p>
<h3 id="1-4_Healthd模块">1.4 Healthd模块</h3><p>Healtdh模块是一个单独的进程，这部分主要做两件事：1. 读取电池数据，上报（BatteryService.java）； 2. 绘制关机图标。</p>
<h4 id="1-4-1_Main函数">1.4.1 Main函数</h4><p>healthd.cpp是Healthd模块的入口，也就是Main函数，如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\system\core\healthd\healthd.cpp</span></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * 针对不同方式定义执行函数</span><br><span class="line"> * android_ops  正常开机</span><br><span class="line"> * charger_ops  关机充电</span><br><span class="line"> * recovery_ops Recovery模式</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">struct</span> healthd_mode_ops android_ops = &#123;</span><br><span class="line">    .init = healthd_mode_android_init,</span><br><span class="line">    .preparetowait = healthd_mode_android_preparetowait,</span><br><span class="line">    .heartbeat = healthd_mode_nop_heartbeat,</span><br><span class="line">    .battery_update = healthd_mode_android_battery_update,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">uevent_event() <span class="comment">// uevent 事件处理</span></span><br><span class="line">    uevent_kernel_multicast_recv(uevent_fd, msg, UEVENT_MSG_LEN) <span class="comment">// 接收底层事件，并返回事件数量</span></span><br><span class="line">    <span class="comment">/*遍历事件，POWER_SUPPLY_SUBSYSTEM*/</span></span><br><span class="line">    healthd_battery_update() <span class="comment">// 电池信息更新入口，此处根据返回 Charging ？，设置 poll 唤醒周期</span></span><br><span class="line">        gBatteryMonitor-&gt;update()   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main() <span class="comment">// main函数,单独的进程</span></span><br><span class="line">    healthd_mode_ops = &amp;android_ops/&amp;charger_ops/&amp;recovery_ops; <span class="comment">// 选择执行函数体</span></span><br><span class="line">    <span class="function">healthd_init</span><br><span class="line">        <span class="title">epoll_create</span><span class="params">(MAX_EPOLL_EVENTS)</span></span>; <span class="comment">// 使用epoll进行IO复用, 在一个线程管理所以 fd</span></span><br><span class="line">        <span class="comment">/*</span><br><span class="line">         * 创建、注册监听三个事件，加入 epoll fd，每个事件都有其句柄函数</span><br><span class="line">         * gBinderfd ：监听Binder通信事件，句柄：binder_event（healthd_mode_android.cpp）</span><br><span class="line">         * uevent_fd： 监听底层电池 event，句柄:uevent_event()</span><br><span class="line">         * wakealarm_fd：监听wakealarm事件，句柄：wakealarm_event</span><br><span class="line">         * 在监听到事件后，epoll 就会在句柄函数里面做相应的更新操作，如上 uevent_event()</span><br><span class="line">         */</span></span><br><span class="line">        healthd_mode_ops-&gt;init(&amp;healthd_config)<span class="comment">// healthd_mode_android_init()</span></span><br><span class="line">        uevent_init()</span><br><span class="line">        wakealarm_init()</span><br><span class="line">        <span class="keyword">new</span> BatteryMonitor();</span><br><span class="line">    healthd_mainloop(); <span class="comment">// main函数，while(1) </span></span><br><span class="line">        <span class="keyword">if</span> (events[n].data.ptr) <span class="comment">// epoll遍历事件fd，调用处理函数</span></span><br><span class="line">                (*(<span class="keyword">void</span> (*)(<span class="keyword">int</span>))events[n].data.ptr)(events[n].events);</span><br><span class="line">        healthd_mode_ops-&gt;heartbeat();</span><br></pre></td></tr></table></figure></p>
<h4 id="1-4-2_正常开机">1.4.2 正常开机</h4><p>正常开机时电池信息更新：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/mtk/bat_update_func.jpg" alt="update_battery"></p>
<p>正常开机部分源码分析：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\system\core\healthd\BatteryPropertiesRegistrar.cpp</span></span><br><span class="line">BatteryPropertiesRegistrar::publish()<span class="comment">//将"batteryproperties"这个Service加入ServiceManager</span></span><br><span class="line">BatteryPropertiesRegistrar::notifyListeners() <span class="comment">// 遍历 listener ，通知上层监听者，如 BatteryService</span></span><br><span class="line">BatteryPropertiesRegistrar::registerListener() <span class="comment">// 上层通过Binder注册回调</span></span><br><span class="line">     healthd_battery_update();<span class="comment">// healthd.cpp</span></span><br><span class="line">BatteryPropertiesRegistrar::getProperty() <span class="comment">//BatteryManager.java主动查询时的对应接口</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\system\core\healthd\healthd_mode_android.cpp</span></span><br><span class="line">healthd_mode_android_battery_update</span><br><span class="line">    gBatteryPropertiesRegistrar-&gt;notifyListeners(*props) </span><br><span class="line">    </span><br><span class="line">healthd_mode_android_init()</span><br><span class="line">    ProcessState::self()-&gt;setThreadPoolMaxThreadCount(<span class="number">0</span>);<span class="comment">// 线程池里最大线程数</span></span><br><span class="line">    IPCThreadState::self()-&gt;disableBackgroundScheduling(<span class="keyword">true</span>);<span class="comment">// 禁用后台调度</span></span><br><span class="line">    IPCThreadState::self()-&gt;setupPolling(&amp;gBinderFd); <span class="comment">// 将Binder通信fd加入epoll</span></span><br><span class="line">    <span class="keyword">if</span> (healthd_register_event(gBinderFd, binder_event)) <span class="comment">//binder_event注册到gBinderFd</span></span><br><span class="line">    <span class="comment">/* 将"batteryproperties"加入ServiceManager */</span></span><br><span class="line">    gBatteryPropertiesRegistrar-&gt;publish(gBatteryPropertiesRegistrar);</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\system\core\healthd\BatteryMonitor.cpp </span></span><br><span class="line">BatteryMonitor::update(<span class="keyword">void</span>)</span><br><span class="line">    initBatteryProperties() <span class="comment">// 电池参数初始化</span></span><br><span class="line">    <span class="comment">/*获取文件节点数据封装于 BatteryProperties */</span></span><br><span class="line">    path.appendFormat(<span class="string">"%s/%s/online"</span>, POWER_SUPPLY_SYSFS_PATH, mChargerNames[i].<span class="built_in">string</span>());</span><br><span class="line">    ireadFromFile(path, buf, SIZE)</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">     * alps\system\core\healthd\healthd_board_default.cpp</span><br><span class="line">     * 将电池实时信息记录到 kernel log 中</span><br><span class="line">     */</span></span><br><span class="line">    healthd_board_battery_update(&amp;props);</span><br><span class="line">    healthd_mode_ops-&gt;battery_update(&amp;props) <span class="comment">// healthd_mode_android.cpp中update</span></span><br><span class="line">    </span><br><span class="line">BatteryMonitor::getXX  <span class="comment">// 获取电池状态和Health状况等</span></span><br><span class="line">BatteryMonitor::dumpState()</span><br><span class="line">BatteryMonitor::init() <span class="comment">//获取文件节点值，初始化（譬如加上节点路径： /sys/class/power_supply）写入mHealthdConfig</span></span><br></pre></td></tr></table></figure></p>
<h4 id="1-4-3_关机充电">1.4.3 关机充电</h4><p>关机充电部分主要就是更新电量、充电状态，更新UI。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\system\core\healthd\healthd_mode_charger.cpp</span></span><br><span class="line">dump_last_kmsg() // dump前记录最后一份<span class="built_in">log</span></span><br><span class="line">/*绘制关机充电图标*/</span><br><span class="line">draw_xx()</span><br><span class="line">redraw_screen()</span><br><span class="line">healthd_mode_charger_heartbeat() // 获取最新电池状态，更新</span><br><span class="line">    handle_input_state(charger, now);</span><br><span class="line">    handle_power_supply_state(charger, now);</span><br><span class="line">    update_screen_state()  // 更新屏幕显示</span><br><span class="line">healthd_mode_charger_init()</span><br><span class="line">healthd_mode_charger_battery_update()</span><br></pre></td></tr></table></figure></p>
<h2 id="1-5_Framework层">1.5 Framework层</h2><h3 id="1-5-1_Native层">1.5.1 Native层</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># alps\frameworks\native\services\sensorservice\BatteryService.cpp</span></span><br><span class="line"><span class="comment">// 定义BatteryService.h中创建的BatteryService类的成员函数</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\frameworks\native\services\batteryservice\BatteryProperties.cpp</span></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * 容器Parcel读写电池相关信息</span><br><span class="line"> * 必须与frameworks/base/core/java/android/os/BatteryProperties.java 同步</span><br><span class="line"> */</span></span><br><span class="line">BatteryProperties::readFromParcel()</span><br><span class="line">BatteryProperties::writeToParcel()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\frameworks\native\services\batteryservice\BatteryProperty.cpp</span></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * Parcel read/write code must be kept in sync with</span><br><span class="line"> * frameworks/base/core/java/android/os/BatteryProperty.java</span><br><span class="line"> */</span></span><br><span class="line">BatteryProperty::readFromParcel()</span><br><span class="line">BatteryProperty::writeToParcel()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\frameworks\native\services\batteryservice\IBatteryPropertiesListener.cpp</span></span><br><span class="line"><span class="comment">// BatteryService.java中BatteryListener的父类</span></span><br><span class="line">batteryPropertiesChanged()</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># alps\frameworks\native\services\batteryservice\IBatteryPropertiesRegistrar.cpp</span></span><br><span class="line"><span class="comment">// BatteryManager.java和BatteryService.java通过其获取 batteryproperties ，与healthd中同步</span></span><br></pre></td></tr></table></figure>
<h3 id="1-5-2_Framework部分">1.5.2 Framework部分</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># alps\frameworks\base\services\core\java\com\android\server\BatteryService.<span class="function">java</span><br><span class="line"><span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">     * 通过ServiceManager获取batteryproperties Service，</span><br><span class="line">     * 然后将BatteryListener注册到batteryproperties中</span><br><span class="line">     */</span></span><br><span class="line">    IBinder b = ServiceManager.getService(<span class="string">"batteryproperties"</span>); </span><br><span class="line">    batteryPropertiesRegistrar.registerListener(<span class="keyword">new</span> BatteryListener());</span><br><span class="line">    publishBinderService(<span class="string">"battery"</span>, mBinderService);</span><br><span class="line">    publishLocalService(BatteryManagerInternal.class, <span class="keyword">new</span> LocalService());</span><br><span class="line"><span class="function">processValuesLocked     </span><br><span class="line">    <span class="title">shutdownIfNoPowerLocked</span><span class="params">()</span> <span class="comment">// 低电 Unplugged 关机广播</span></span><br><span class="line">    <span class="title">shutdownIfOverTempLocked</span><span class="params">()</span> <span class="comment">// 温度超出，关机广播</span></span><br><span class="line">    <span class="title">sendIntentLocked</span><span class="params">()</span> <span class="comment">// 电池信息改变，信息广播</span></span><br><span class="line">    </span><br><span class="line">class BatteryListener</span><br><span class="line">    batteryPropertiesChanged <span class="comment">// 监听到电池信息改变，更新信息</span></span><br><span class="line">        atteryService.<span class="keyword">this</span>.<span class="title">update</span><span class="params">(props)</span></span><br><span class="line">class Led <span class="comment">// 开机充电 LED 控制类</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryManager.java</span><br><span class="line"><span class="title">queryProperty</span><span class="params">()</span> <span class="comment">// 主动到 healthd 查询电池信息</span></span><br><span class="line">    IBinder b </span>= ServiceManager.getService(<span class="string">"batteryproperties"</span>);<span class="comment">//获取batteryproperties Service  </span></span><br><span class="line">    mBatteryPropertiesRegistrar = IBatteryPropertiesRegistrar.Stub.asInterface(b);<span class="comment">//接口转化</span></span><br><span class="line">    mBatteryPropertiesRegistrar.getProperty(id, prop) <span class="comment">// 调用到Healthd BatteryPropertiesRegistrar.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="javadoc">/******************************************************************</span><br><span class="line"> * 还有很多其他文件为上面两个文件提供服务，没有去详细分析了</span><br><span class="line"> * 如下简单介绍一下。</span><br><span class="line"> *****************************************************************/</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\services\core\java\com\android\server\am\BatteryStatsService.java</span><br><span class="line"><span class="comment">// 电池信息广播Intent（ACTION_BATTERY_CHANGED）用到的字符串和常量</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryManagerInternal.java</span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperties.aidl</span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperties.java</span><br><span class="line"><span class="comment">// 电池信息读写代码，与BatteryProperties.cpp同步</span></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperty.aidl</span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryProperty.java</span><br><span class="line"><span class="comment">// 电池信息读写代码，与BatteryProperties.cpp同步</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\android\os\BatteryStats.java</span><br><span class="line"> <span class="comment">// 存取电池使用情况统计，包括wakelocks, processes, packages, and services等</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatteryStatsImpl.aidl</span><br><span class="line"><span class="comment">// .aidl为接口定义文件， 定义电池状态信息及相关操作方法。</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatteryStatsImpl.java</span><br><span class="line"><span class="comment">// 影响电池的所有信息及操作，时间以ms为单位</span></span><br></pre></td></tr></table></figure>
<h3 id="1-5-3_APP部分">1.5.3 APP部分</h3><p>系统UI处理电流的部分路径主要如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatterySipper.java</span><br><span class="line"># alps\frameworks\base\core\java\com\android\internal\os\BatteryStatsHelper.java</span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\BatteryMeterDrawable.java</span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\BatteryMeterView.java</span><br><span class="line"><span class="comment">// 创建系统广播接收器，接收电池信息广播，绘制电池状态图标</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\statusbar\policy\BatteryController.java</span><br><span class="line"><span class="comment">// 定义一个广播接收器并在构造器里注册接收电池信息广播，收到自己广播后回调修改pluged、level</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\power\PowerUI.java</span><br><span class="line"><span class="comment">// 创建系统广播接收器，接收电池信息广播，弹出低电警告等</span></span><br><span class="line"></span><br><span class="line"># alps\frameworks\base\packages\SystemUI\src\com\android\systemui\qs\tiles\BatteryTile.java</span><br><span class="line"><span class="comment">// 定义电量百分比显示TextView类</span></span><br></pre></td></tr></table></figure></p>
<h1 id="二、_关机充电流程">二、 关机充电流程</h1><p>关机充电也是在kernel里面充电，充电控制流程与开机是一致的，前面也分析到了。这里补充一个MTK软件流程图。如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/mtk/power%20off%20charging2.jpg" alt="charging flow"></p>
<h1 id="三、总结">三、总结</h1><p>先留一个坑，等有时间了，再来绘制一个清晰易懂的流程框图。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;Platform information： MTK6797（X20）+ Android 7.0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;之前做高通的时候，对高通此部分做过粗略的分析，不过当时胡乱做的些笔记，只简单整理了几篇博客，感兴趣可以参考如下路径：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%80/&quot;&gt;高通平台Android源码bootloader分析之sbl1(一)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/08/15/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%BA%8C/&quot;&gt;高通平台Android源码bootloader分析之sbl1(二)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/08/18/Android/%E9%AB%98%E9%80%9A%E5%B9%B3%E5%8F%B0Android%E6%BA%90%E7%A0%81bootloader%E5%88%86%E6%9E%90%E4%B9%8Bsbl1-%E4%B8%89/&quot;&gt;高通平台Android源码bootloader分析之sbl1(三)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/01/21/Android/%E9%AB%98%E9%80%9AAndroid%E4%B8%8D%E5%B8%A6%E7%94%B5%E9%87%8F%E8%AE%A1%E7%9A%84%E7%94%B5%E9%87%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E5%BC%8F/&quot;&gt;Android不带电量计的电量计算&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/05/30/Android/Android%E7%94%B5%E6%BA%90%E7%AE%A1%E7%90%86%E6%9E%B6%E6%9E%84/&quot;&gt;Android 电源管理架构&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2015/06/06/Android/Android%E7%94%B5%E6%B1%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-BMS-%E4%B9%8B%E7%94%B5%E6%B1%A0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/&quot;&gt;Android电池监控系统-BMS-之电池系统架构 (有坑未填)&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;零、充电简析&quot;&gt;零、充电简析&lt;/h1&gt;&lt;h2 id=&quot;0-1_充电状态机&quot;&gt;0.1 充电状态机&lt;/h2&gt;&lt;p&gt;电池充电过程分为预充、恒流充电（CC模式）、恒压充电（CV模式）、涓流充电四个流程，MTK的状态机如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/android/mtk/chargind_state.jpg&quot; alt=&quot;state&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
      <category term="源码分析" scheme="http://huaqianlee.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Android Selinux 权限及问题</title>
    <link href="http://huaqianlee.github.io/2017/11/14/Android/Android-SELinux-Permison-and-Question/"/>
    <id>http://huaqianlee.github.io/2017/11/14/Android/Android-SELinux-Permison-and-Question/</id>
    <published>2017-11-14T14:26:02.000Z</published>
    <updated>2017-11-14T14:29:00.974Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>由于现做的是MTK平台，源码路径基于MTK， 不过高通大同小异</p>
</blockquote>
<h2 id="说明">说明</h2><p>Android 5.0以后完全引入了 SEAndroid/SELinux 安全机制，这样即使拥有 root 权限或 chmod 777 ，仍然无法再JNI以上访问内核节点。</p>
<blockquote>
<p>其实在 Android 4.4 就有限制的启用此安全机制了。后面内容都按照 5.0  以后介绍，4.4 会有些许差异。</p>
</blockquote>
<h2 id="SELinux_Mode">SELinux Mode</h2><p>SELinux 分为两种模式，Android 5.0 后所有进程都使用 enforcing mode。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enforcing mode: 限制访问</span><br><span class="line">permissive mode: 只审查权限，不限制</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="SELinux_Policy文件路径">SELinux Policy文件路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Google 原生目录 </span></span><br><span class="line">external/sepolicy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 厂家目录，高通将 mediatek 换为 qcom</span></span><br><span class="line">alps\device\mediatek\common\sepolicy</span><br><span class="line">alps\device\mediatek\&lt;platform&gt;\sepolicy</span><br></pre></td></tr></table></figure>
<blockquote>
<p>编译时将以合并的方式将厂家policy追加到Google原生。</p>
</blockquote>
<h2 id="Log">Log</h2><p>没有权限时可以在内核找到如下 log ：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># avc: denied  &#123; 操作权限  &#125;  for pid=7201  comm=“进程名”  scontext=u:r:源类型:s0  tcontext=u:r:目标类型:s0  tclass=访问类型 permissive=0</span></span><br><span class="line"></span><br><span class="line">avc: denied &#123;getattr <span class="built_in">read</span>&#125; <span class="keyword">for</span> pid=<span class="number">7201</span> comm=<span class="string">"xxx.xxx"</span> scontext=u:r:system_app:s0 tcontext=u:r:shell_data_file:s0 tclass=dir permissive=<span class="number">0</span></span><br><span class="line">``` </span><br><span class="line"><span class="comment">## 权限修改</span></span><br><span class="line">主要有三种方式，前两种只能用来测试，第三种是推荐的正式处理方式。</span><br><span class="line"><span class="comment">### adb在线修改seLinux</span></span><br><span class="line">```bash</span><br><span class="line"><span class="comment"># Enforcing - 表示已打开 ，Permissive - 表示已关闭</span></span><br><span class="line">getenforce;     //获取当前seLinux状态</span><br><span class="line">setenforce <span class="number">1</span>;   //打开seLinux</span><br><span class="line">setenforce <span class="number">0</span>;   //关闭seLinux</span><br></pre></td></tr></table></figure></p>
<h3 id="kernel中关闭">kernel中关闭</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alps\kernel-3.18\arch\arm64\configs\xxx_defconfig</span></span><br><span class="line">CONFIG_SECURITY_SELINUX=y // 屏蔽此配置项</span><br></pre></td></tr></table></figure>
<h3 id="SELinux_Sepolicy中添加权限">SELinux Sepolicy中添加权限</h3><p>修改相应源类型.te文件（基本以源进程名命名），添加如下一行语句：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式</span></span><br><span class="line">allow  源类型 目标类型:访问类型 &#123;操作权限&#125;; // 注意分号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例，具体写法参考源码</span></span><br><span class="line">allow system_app shell_data_file:dir&#123;getattr <span class="built_in">read</span> write&#125;;</span><br><span class="line">allow mediaserver tfa9897_device:chr_file &#123; open <span class="built_in">read</span> write &#125;; </span><br><span class="line">allow system_server tfa9897_device:chr_file rw_file_perms; </span><br><span class="line"></span><br><span class="line">chr_file - 字符设备  file - 普通文件 dir - 目录</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>通常很少修改Google default 的policy, 推荐更新mediatek 下面的相关的policy. </p>
</blockquote>
<h3 id="新建节点">新建节点</h3><p>如果是自己新建的节点，需要在 sepolicy 路径下的 file_contexts 文件中做如下添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参考已有的格式</span></span><br><span class="line">/dev/goodix_fp                 u:object_r:goodixfp_device:s0</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>Android 5.0 修改的文件为device.te 和 file_contexts.be，而且device/mediatek/common/BoardConfig.mk 中的 BROAD_SEPOLICY_UNION 增加对应的xxxx.te。</p>
</blockquote>
<h2 id="编译">编译</h2><pre><code class="bash"><span class="comment"># 模块编译</span>
mmm external/sepolicy
make -j24 ramdisk-nodeps &amp; make -j24 bootimage-nodeps

<span class="comment"># 整编</span>
make -j24
</code></pre>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;由于现做的是MTK平台，源码路径基于MTK， 不过高通大同小异&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;说明&quot;&gt;说明&lt;/h2&gt;&lt;p&gt;Android 5.0以后完全引入了 SEAndroid/SELinux 安全机制，这样即使拥有 root 权限或 chmod 777 ，仍然无法再JNI以上访问内核节点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实在 Android 4.4 就有限制的启用此安全机制了。后面内容都按照 5.0  以后介绍，4.4 会有些许差异。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;SELinux_Mode&quot;&gt;SELinux Mode&lt;/h2&gt;&lt;p&gt;SELinux 分为两种模式，Android 5.0 后所有进程都使用 enforcing mode。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;enforcing mode: 限制访问&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permissive mode: 只审查权限，不限制&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
  </entry>
  
  <entry>
    <title>What is fast charge now？</title>
    <link href="http://huaqianlee.github.io/2017/11/13/Android/What-is-fast-charge-now%EF%BC%9F/"/>
    <id>http://huaqianlee.github.io/2017/11/13/Android/What-is-fast-charge-now？/</id>
    <published>2017-11-12T16:01:36.000Z</published>
    <updated>2017-11-16T16:02:56.943Z</updated>
    
    <content type="html"><![CDATA[<p>技术发展越来越快，快充技术也一样，那现在怎么样才能算快充，有哪些快充技术呢？</p>
<h2 id="高通方案">高通方案</h2><h3 id="高通_Quick_Charge_方案">高通 Quick Charge 方案</h3><h4 id="QC_1-0">QC 1.0</h4><p>最高支持5V/2A充电功率(目前已经被划分为慢充)，基本都是骁龙600平台。<br><a id="more"></a></p>
<h4 id="QC_2-0">QC 2.0</h4><p>分为A版和B版，</p>
<ul>
<li>A版：包含5V、9V和12V三档，最大电流3A，适用于智能手机、平板电脑以及其它便携式电子设备，支持的平台包括了骁龙200/400 /410/615/800/801/805/810，另外也授权给其他厂商使用，例如Intel的Boost Master快速充电技术其实也属于高通QC2.0；</li>
<li>B版：支持20V电压，最大可以输出40w功率，应用于对充电速度要求更高的设备。<h4 id="QC_3-0">QC 3.0</h4>为了保证不出现过度发热的问题，QC3.0标准主要是比QC2.0标准增加了一个“最佳电压智能调节”算法，以200mV增量为一档，提供从3.6V到20V电压的灵活选择，让手机厂商能够根据自身需求调整最佳电压，达到预期电流，提供充电效率同时降低功耗和发热。QC 3.0兼容的平台包括了高通骁龙820、620、618、 617和430，并且向下兼容QC2.0和QC1.0的设备。<h4 id="QC_4-0">QC 4.0</h4>充电仅15分钟即可获得50%的电池电量。同时，QC 4.0还加入了对USB Type-C和USB-PD的支持。按照高通的说法来看，QC4.0比QC3.0多了一项Dual Charge的技术。它能使充电速度提升20%，效率提升30%。除了以上这些，QC4.0还优化了“最佳电压智能调节”的算法，将电压继续细分，以20mV为一档;取消了12V的电压，5V最大可输出5.6A，9V最大可输出3A。QC 4.0兼容的平台包括了高通骁龙835、660、630和635(635暂未发布)，并且向下兼容QC2.0和QC1.0的设备</li>
</ul>
<h2 id="MTK方案">MTK方案</h2><h3 id="MTP_Pump_Express">MTP Pump Express</h3><ul>
<li>带Plus（Pump Express2.0）：可以支持到9V/12V，可以达到12V/3A,输出功率&gt;15W。</li>
<li>不带Plus：充电电流不超过2A，输出功率&lt;10W(目前已经被划分为慢充)。</li>
<li>Pump Express 3.0：开始使用低压直流的快速充电方式，如5.8V/6A的输出标准，最大输出功率可达34.8W。是全球首款采用USB Type-C接口进行充电的快充方案，可直接绕过手机充电电路，电流直接流入电池，降低充电时的发热。</li>
</ul>
<h2 id="厂家快充">厂家快充</h2><p>现在市面上各厂家的快充基本都是基于上述高通和MTK快充技术演变而来，套了个壳，换了个名。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;技术发展越来越快，快充技术也一样，那现在怎么样才能算快充，有哪些快充技术呢？&lt;/p&gt;
&lt;h2 id=&quot;高通方案&quot;&gt;高通方案&lt;/h2&gt;&lt;h3 id=&quot;高通_Quick_Charge_方案&quot;&gt;高通 Quick Charge 方案&lt;/h3&gt;&lt;h4 id=&quot;QC_1-0&quot;&gt;QC 1.0&lt;/h4&gt;&lt;p&gt;最高支持5V/2A充电功率(目前已经被划分为慢充)，基本都是骁龙600平台。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
      <category term="Qualcomm" scheme="http://huaqianlee.github.io/tags/Qualcomm/"/>
    
  </entry>
  
  <entry>
    <title>Getting Started With RecyclerView and CardView on Android</title>
    <link href="http://huaqianlee.github.io/2017/11/08/Android/Getting-Started-With-RecyclerView-and-CardView-on-Android/"/>
    <id>http://huaqianlee.github.io/2017/11/08/Android/Getting-Started-With-RecyclerView-and-CardView-on-Android/</id>
    <published>2017-11-08T14:23:59.000Z</published>
    <updated>2017-11-08T14:25:42.127Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>偶然看到这篇文章，觉得写得很好，简单明了，所以尝试将其翻译一下。</p>
</blockquote>
<p>如果你想创作一个用列表显示数据的Android应用，Android L提供了两个让你更容易实现的新特性：RecyclerView和CardView。通过用这些控件，可以很容易让你的app符合Google的Material Design规范。</p>
<p>创作APP时一个模板参考的好地方：<a href="https://go.redirectingat.com/?id=1342X589339&amp;site=code.tutsplus.com&amp;xs=1&amp;isjs=1&amp;url=https%3A%2F%2Fcodecanyon.net%2Fcategory%2Fmobile%2Fandroid%3F_ga%3D2.255032513.873197305.1503543294-826134730.1503543294&amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;xcreo=0&amp;xed=0&amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;xtz=-480" target="_blank" rel="external">Envato market</a>。你可以找到成千上万的APP模板，从<a href="https://go.redirectingat.com/?id=1342X589339&amp;site=code.tutsplus.com&amp;xs=1&amp;isjs=1&amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Flayar-tancep-youtube-app-for-android%2F5190062%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;xcreo=0&amp;xed=0&amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;xtz=-480" target="_blank" rel="external">Youtube</a>到<a href="https://go.redirectingat.com/?id=1342X589339&amp;site=code.tutsplus.com&amp;xs=1&amp;isjs=1&amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Fflappybot-an-obstacle-avoidance-game%2F6827330%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;xcreo=0&amp;xed=0&amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;xtz=-480" target="_blank" rel="external">obstacleavoidance game</a>。</p>
<p>或者你可以尝试一下<a href="https://codecanyon.net/item/universal-full-multipurpose-android-app/6512720?_ga=2.217207135.873197305.1503543294-826134730.1503543294" target="_blank" rel="external">通用的Android app模板</a>,它能为你创作任何种类app提供一个坚实的基础。<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/recyclerview_cardview/Universal-Android-app.png" alt="Universal-Android-app"><br><a id="more"></a></p>
<h1 id="前提">前提</h1><p>为了继续，你应该使用最新版本Android Studio。你可以从<a href="http://developer.android.com/sdk/index.html" target="_blank" rel="external">Android 开发者官网</a>获得它。</p>
<h2 id="支持老版本">支持老版本</h2><p>在写这篇文章时，只有少于2%的Android设备运行在Android L上。无论怎样，多亏v7 Support Library，你能使用RecyclerView和CardView控件运行在老版本的安卓设备上面，通过在你工程中build.grade文件添加如下依赖片段实现：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:cardview-v7:21.0.+'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:21.0.+'</span></span><br></pre></td></tr></table></figure></p>
<h2 id="创建CardView">创建CardView</h2><p><em>CardView</em>是一个<em>ViewGroup</em>，像其他<em>ViewGroup</em>一样，它能通过Layout xml文件添加到你的 <em>Activity</em> 或者 <em>Fragment</em>。</p>
<p>为了创建一个空<em>CardView</em>，你应该添加如下代码片段到你的layout XML文件中：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">        <span class="attribute">xmlns:card_view</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>最为一个更实际的例子，咱们创建一个<em>LinearLayout</em>并将<em>CardView</em>作为子控件放在里面。<em>CardView</em>可以代表一个人，包含如下信息：</p>
<ul>
<li><em>TextView</em> - 显示人名</li>
<li><em>TextView</em> - 显示年纪</li>
<li><em>ImageView</em> - 显示照片</li>
</ul>
<p>xml内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span> <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:padding</span>=<span class="value">"16dp"</span></span><br><span class="line">    &gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/cv"</span></span><br><span class="line">        &gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="title">RelativeLayout</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:padding</span>=<span class="value">"16dp"</span></span><br><span class="line">            &gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/person_photo"</span></span><br><span class="line">                <span class="attribute">android:layout_alignParentLeft</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:layout_alignParentTop</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:layout_marginRight</span>=<span class="value">"16dp"</span></span><br><span class="line">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/person_name"</span></span><br><span class="line">                <span class="attribute">android:layout_toRightOf</span>=<span class="value">"@+id/person_photo"</span></span><br><span class="line">                <span class="attribute">android:layout_alignParentTop</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:textSize</span>=<span class="value">"30sp"</span></span><br><span class="line">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/person_age"</span></span><br><span class="line">                <span class="attribute">android:layout_toRightOf</span>=<span class="value">"@+id/person_photo"</span></span><br><span class="line">                <span class="attribute">android:layout_below</span>=<span class="value">"@+id/person_name"</span></span><br><span class="line">                /&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>如果这个xml文件被用作<em>Activity</em>的layout，并且给<em>TextView</em>和ImageView*设置有意义的值，那么在Android设备上面它看起来应该像这个样子：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/recyclerview_cardview/device_2015.png" alt="device"></p>
<h2 id="创建RecyclerView">创建RecyclerView</h2><h3 id="在Layout中定义它">在Layout中定义它</h3><p>使用一个<em>RecyclerView</em>实例有一些复杂，但是在layout xml中定义它十分简单。可以定义如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/rv"</span></span><br><span class="line">    /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>通过如下代码片段在你的<em>Activity</em>中去获得句柄：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RecyclerView rv = (RecyclerView)findViewById(R.id.rv);</span><br></pre></td></tr></table></figure></p>
<p>如果你确定<em>RecyclerView</em>的大小不会改变，你可以添加如下语句：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rv.setHasFixedSize(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure></p>
<h3 id="使用LayoutManager">使用LayoutManager</h3><p>和<em>ListView</em>不一样，<em>RecyclerView</em>需要一个<em>LayoutManger</em>去管理其子项的位置。你可以通过继承<em>RecyclerView.LayoutManager</em>类定义自己的<em>LayoutManager</em>。不过，大多数案子里面，你直接使用如下预定义的<em>LayoutManager</em>子类就可以了：</p>
<ul>
<li>LinearLayoutManager</li>
<li>GridLayoutManager</li>
<li>StaggeredGridLayoutManager<br>在这篇教程里，我将使用<em>LinearLayoutManager</em>，它默认将让你的<em>RecyclerView</em>看起来像一个<em>ListView</em>。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LinearLayoutManager llm = <span class="keyword">new</span> LinearLayoutManager(context);</span><br><span class="line">rv.setLayoutManager(llm);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="定义内容">定义内容</h3><p>和<em>ListView</em>一样，<em>RecyclerView</em>也需要一个适配器去接入数据。但是在创建适配器前，我们先创建我们需要的数据。创建一个简单的类来代表一个人然后写一个方法来初始化一个<em>Person</em>对象集：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    String age;</span><br><span class="line">    <span class="keyword">int</span> photoId;</span><br><span class="line"> </span><br><span class="line">    Person(String name, String age, <span class="keyword">int</span> photoId) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.photoId = photoId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">private</span> List&lt;Person&gt; persons;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// This method creates an ArrayList that has three Person objects</span></span><br><span class="line"><span class="comment">// Checkout the project associated with this tutorial on Github if</span></span><br><span class="line"><span class="comment">// you want to use the same images.</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initializeData</span><span class="params">()</span></span>&#123;</span><br><span class="line">    persons = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">"Emma Wilson"</span>, <span class="string">"23 years old"</span>, R.drawable.emma));</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">"Lavery Maiss"</span>, <span class="string">"25 years old"</span>, R.drawable.lavery));</span><br><span class="line">    persons.add(<span class="keyword">new</span> Person(<span class="string">"Lillie Watts"</span>, <span class="string">"35 years old"</span>, R.drawable.lillie));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="创建适配器">创建适配器</h3><p>要创建一个<em>RecyclerView</em>可以使用的适配器，你必须继承<em>RecyclerView.Adapter</em>。这个适配器遵循<strong>View holder</strong>设计模式，也就意味着你需要定义一个类继承与<em>RecyclerView.ViewHolder</em>。这种模式最大限度减少调用<em>findViewByIdea</em>方法。</p>
<p>前面我们已经在 XML Layout中定义了一个<em>CardView</em>代表一个人。我们将重复利用此布局文件。在我们自定义<em>ViewHolder</em>的构造方法中，初始化此视图属于<em>RecyclerView</em>的子项。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RVAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RVAdapter</span>.<span class="title">PersonViewHolder</span>&gt;</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;      </span><br><span class="line">        CardView cv;</span><br><span class="line">        TextView personName;</span><br><span class="line">        TextView personAge;</span><br><span class="line">        ImageView personPhoto;</span><br><span class="line"> </span><br><span class="line">        PersonViewHolder(View itemView) &#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cv = (CardView)itemView.findViewById(R.id.cv);</span><br><span class="line">            personName = (TextView)itemView.findViewById(R.id.person_name);</span><br><span class="line">            personAge = (TextView)itemView.findViewById(R.id.person_age);</span><br><span class="line">            personPhoto = (ImageView)itemView.findViewById(R.id.person_photo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来，为自定义适配器增加一个构造方法来处理<em>RecyclerView</em>显示的数据。我们的数据有<em>Person</em>对象集组成，添加如下代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; persons;</span><br><span class="line"> </span><br><span class="line">RVAdapter(List&lt;Person&gt; persons)&#123;</span><br><span class="line">    <span class="keyword">this</span>.persons = persons;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><em>RecyclerView.Adapter</em>有三个抽象方法必须被重写。咱们从<em>getItemCount</em>方法开始。这个方法返回子项存在数据的数量。对于我们由<em>List</em>形成的数据，我们只需要调用<em>List</em>对象的<em>size()</em>方法即可：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> persons.size();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来，重写<em>onCreateViewHolder</em>方法。正如方法名所展示，当自定义<em>ViewHolder</em>需要被初始化时调用。我们指明<em>RecyclerView</em>每个子项使用的布局。通过使用<em>LayoutInflater</em>完成，传递着结果到自定义的<em>ViewHolder</em>的构造方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PersonViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup viewGroup, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    View v = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.item, viewGroup, <span class="keyword">false</span>);</span><br><span class="line">    PersonViewHolder pvh = <span class="keyword">new</span> PersonViewHolder(v);</span><br><span class="line">    <span class="keyword">return</span> pvh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>重写<em>onBindViewHolder</em>方法去指明每一个<em>RecyclerView</em>子项的内容。这个反复与<em>ListView</em>的适配器的<em>getView</em>方法十分相似。在我们的例子中，你必须设置<em>CardView</em>中的名字、年纪以及照片。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(PersonViewHolder personViewHolder, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    personViewHolder.personName.setText(persons.get(i).name);</span><br><span class="line">    personViewHolder.personAge.setText(persons.get(i).age);</span><br><span class="line">    personViewHolder.personPhoto.setImageResource(persons.get(i).photoId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最好，你需要重写<em>onAttachedToRecyclerView</em>方法。我们就简单实用地直接调用父类的实现。</p>
<blockquote>
<p>注：新版本已经不需要重写此方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttachedToRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onAttachedToRecyclerView(recyclerView);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="实用适配器">实用适配器</h3><p>现在适配器准备好了，接下来就是让<em>Activity</em>通过适配器构造函数和<em>RecyclerView</em>的<em>setAdapter</em>去初始化和使用这个适配器了。添加如下代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RVAdapter adapter = <span class="keyword">new</span> RVAdapter(persons);</span><br><span class="line">rv.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<h3 id="编译及运行">编译及运行</h3><p>当你在你的Android设备上运行这个例程时，你将会看类似如下图片的结果：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/recyclerview_cardview/device-2015-02.png" alt="device"></p>
<h1 id="结论">结论</h1><p>在这篇教程，你已经学会了怎么去使用在Android L中引入的<em>CardView</em>和<em>RecyclerView</em>控件。你也明白了在Material Design应用中怎么去使用这些控件。注意：通过<em>RecyclerView</em>可以做几乎所有<em>ListView</em>所做的事，不过为了更少的代码，使用<em>ListView</em>仍然是一个比较好的选择。</p>
<p>你可以参考Android Developers reference去获得更多关于<em>CardView</em>和<em>RecyclerView</em>类的信息。</p>
<p>最好，如果你想更快速地开发你的app，不要忘记在Envato Market查看Android app templates。</p>
<blockquote>
<p><a href="https://code.tutsplus.com/tutorials/getting-started-with-recyclerview-and-cardview-on-android--cms-23465" target="_blank" rel="external">原文章地址。</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;偶然看到这篇文章，觉得写得很好，简单明了，所以尝试将其翻译一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你想创作一个用列表显示数据的Android应用，Android L提供了两个让你更容易实现的新特性：RecyclerView和CardView。通过用这些控件，可以很容易让你的app符合Google的Material Design规范。&lt;/p&gt;
&lt;p&gt;创作APP时一个模板参考的好地方：&lt;a href=&quot;https://go.redirectingat.com/?id=1342X589339&amp;amp;site=code.tutsplus.com&amp;amp;xs=1&amp;amp;isjs=1&amp;amp;url=https%3A%2F%2Fcodecanyon.net%2Fcategory%2Fmobile%2Fandroid%3F_ga%3D2.255032513.873197305.1503543294-826134730.1503543294&amp;amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;amp;xcreo=0&amp;amp;xed=0&amp;amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;amp;xtz=-480&quot;&gt;Envato market&lt;/a&gt;。你可以找到成千上万的APP模板，从&lt;a href=&quot;https://go.redirectingat.com/?id=1342X589339&amp;amp;site=code.tutsplus.com&amp;amp;xs=1&amp;amp;isjs=1&amp;amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Flayar-tancep-youtube-app-for-android%2F5190062%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;amp;xcreo=0&amp;amp;xed=0&amp;amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;amp;xtz=-480&quot;&gt;Youtube&lt;/a&gt;到&lt;a href=&quot;https://go.redirectingat.com/?id=1342X589339&amp;amp;site=code.tutsplus.com&amp;amp;xs=1&amp;amp;isjs=1&amp;amp;url=https%3A%2F%2Fcodecanyon.net%2Fitem%2Fflappybot-an-obstacle-avoidance-game%2F6827330%3F_ga%3D2.248270926.873197305.1503543294-826134730.1503543294&amp;amp;xguid=6c32060c165aa0d81cc926f785d03c1a&amp;amp;xuuid=40b87ed972cd06dc4bfc1a62b8c59465&amp;amp;xsessid=e18f51adda215e4913eb634122cf8895&amp;amp;xcreo=0&amp;amp;xed=0&amp;amp;sref=https%3A%2F%2Fcode.tutsplus.com%2Ftutorials%2Fgetting-started-with-recyclerview-and-cardview-on-android--cms-23465&amp;amp;xtz=-480&quot;&gt;obstacleavoidance game&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;或者你可以尝试一下&lt;a href=&quot;https://codecanyon.net/item/universal-full-multipurpose-android-app/6512720?_ga=2.217207135.873197305.1503543294-826134730.1503543294&quot;&gt;通用的Android app模板&lt;/a&gt;,它能为你创作任何种类app提供一个坚实的基础。&lt;br&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/blog/recyclerview_cardview/Universal-Android-app.png&quot; alt=&quot;Universal-Android-app&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>纸币器和MDB协议</title>
    <link href="http://huaqianlee.github.io/2017/11/08/Other/MDB-ICP-protocol/"/>
    <id>http://huaqianlee.github.io/2017/11/08/Other/MDB-ICP-protocol/</id>
    <published>2017-11-08T14:22:45.000Z</published>
    <updated>2017-11-08T14:31:37.259Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MDB协议">MDB协议</h2><h3 id="简介">简介</h3><p>MDB/ICP协议为一个主从接口的串口通信标准的协议， 规定波特率为9600bps，总线有唯一主机（vending machine controller, VMC）和最多32个从机外设，每个外设设有唯一的地址和命令，且由主机初始化。</p>
<p>电源上电、总线复位或外设收到一个复位命令，所对应的外设都被禁止。在顺序初始化外设期间，VMC通过外设的应答来选择被外设所支持的特征。</p>
<blockquote>
<p>协议推荐所以主控制器VMC和外设都需支持所有低等级标准</p>
</blockquote>
<a id="more"></a>
<h3 id="通信格式">通信格式</h3><h4 id="字节格式">字节格式</h4><p>一个字节定义为11位：1个起始位+8个数据位+1个模式位+1个停止位。</p>
<ul>
<li>VMC发送数据到外设：模式位 = 1 表示为地址字节， = 0 表示为数据字节</li>
<li>外设发送数据到VMC：模式位 = 1 表示所有字节发送完成</li>
</ul>
<h4 id="块格式">块格式</h4><h5 id="主到从">主到从</h5><p>主控制器VMC发送给从机的数据格式：1个地址字节+n个数据字节+1个校验和节（最大不超过36个字节）。地址字节由 高5位外设地址+低三位外设命令组成。</p>
<p>主控制器响应外设时发送 ：ACK（应答）、NAK（不应答）、RET（重发）。5ms超时不响应相当于NAK。如从机5ms无响应，VMC应重发相同或不同命令， 知道从机响应或达到最大响应时间（硬币器2S、纸币器5S）。在此期间VMC应该同时访问其他外设。</p>
<p><strong>主控器VMC可以通过拉低发送线100ms以上对总线进行复位。</strong></p>
<h4 id="从到主">从到主</h4><p>从机发送到主控制器的数据格式：1数据块+1字节校验和（最大不超过36字节）。</p>
<p>从机外设响应主控制器发送数据时，主控制器VMC在5ms无响应时间内必须响应ACK、NAK或RET。否则外设需要重发数据或者在下一次会话时附加上数据。</p>
<h4 id="校验和">校验和</h4><p>校验和为所有地址及数据字节的累加和（不包含校验和字节）。</p>
<h4 id="总线复位">总线复位</h4><p>主控器VMC可以通过上拉激活发送线100ms以上对所有外设进行复位，复位后外设处于上电复位状态。</p>
<h4 id="一些标准">一些标准</h4><p>响应码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ACK - <span class="number">00</span>H   RET - AAH   NAK -  FFH</span><br></pre></td></tr></table></figure></p>
<p>外设地址：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Address             Definition  </span><br><span class="line">-------------------------------------------------</span><br><span class="line"><span class="number">00000</span>xxxB    (<span class="number">00</span>H)  Reserved <span class="keyword">for</span> VMC </span><br><span class="line"><span class="number">00001</span>xxxB    (<span class="number">08</span>H)  Changer  </span><br><span class="line"><span class="number">00010</span>xxxB    (<span class="number">10</span>H)  Cashless Device <span class="comment">#1  </span></span><br><span class="line"><span class="number">00011</span>xxxB    (<span class="number">18</span>H)  Communications Gateway </span><br><span class="line"><span class="number">00100</span>xxxB    (<span class="number">20</span>H)  Display  </span><br><span class="line"><span class="number">00101</span>xxxB    (<span class="number">28</span>H)  Energy Management System </span><br><span class="line"><span class="number">00110</span>xxxB    (<span class="number">30</span>H)  Bill Validator  </span><br><span class="line"><span class="number">00111</span>xxxB    (<span class="number">38</span>H)  Reserved <span class="keyword">for</span> Future Standard Peripheral</span><br><span class="line"><span class="number">01000</span>xxxB    (<span class="number">40</span>H)  Universal Satellite Device <span class="comment">#1 </span></span><br><span class="line"><span class="number">01001</span>xxxB    (<span class="number">48</span>H)  Universal Satellite Device <span class="comment">#2 </span></span><br><span class="line"><span class="number">01010</span>xxxB    (<span class="number">50</span>H)  Universal Satellite Device <span class="comment">#3 </span></span><br><span class="line"><span class="number">01011</span>xxxB    (<span class="number">58</span>H)  Coin Hopper or Tube - Dispenser </span><br><span class="line"><span class="number">01100</span>xxxB    (<span class="number">60</span>H)  Cashless Device <span class="comment">#2</span></span><br><span class="line"><span class="number">01101</span>xxxB    (<span class="number">68</span>H)  Reserved <span class="keyword">for</span> Future Standard Peripherals</span><br><span class="line">...</span><br><span class="line"><span class="number">11011</span>xxxB    (D8H)  Reserved <span class="keyword">for</span> Future Standard Peripherals</span><br><span class="line"><span class="number">11100</span>xxxB    (E0H)  Experimental Peripheral <span class="comment">#1</span></span><br><span class="line"><span class="number">11101</span>xxxB    (E8H)  Experimental Peripheral <span class="comment">#2 </span></span><br><span class="line"><span class="number">11110</span>xxxB    (F0H)  Vending Machine Specific Peripheral <span class="comment">#1 </span></span><br><span class="line"><span class="number">11111</span>xxxB    (F8H)  Vending Machine Specific Peripheral <span class="comment">#2</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MDB协议&quot;&gt;MDB协议&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;简介&lt;/h3&gt;&lt;p&gt;MDB/ICP协议为一个主从接口的串口通信标准的协议， 规定波特率为9600bps，总线有唯一主机（vending machine controller, VMC）和最多32个从机外设，每个外设设有唯一的地址和命令，且由主机初始化。&lt;/p&gt;
&lt;p&gt;电源上电、总线复位或外设收到一个复位命令，所对应的外设都被禁止。在顺序初始化外设期间，VMC通过外设的应答来选择被外设所支持的特征。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;协议推荐所以主控制器VMC和外设都需支持所有低等级标准&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Other" scheme="http://huaqianlee.github.io/categories/Other/"/>
    
    
      <category term="Protocol" scheme="http://huaqianlee.github.io/tags/Protocol/"/>
    
  </entry>
  
  <entry>
    <title>通过自定义侧边导航栏的RecyclerView动态加载布局</title>
    <link href="http://huaqianlee.github.io/2017/08/18/Android/Dynamic-loading-layout-by-recyclerview-item/"/>
    <id>http://huaqianlee.github.io/2017/08/18/Android/Dynamic-loading-layout-by-recyclerview-item/</id>
    <published>2017-08-18T14:45:08.000Z</published>
    <updated>2017-08-19T05:15:01.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备布局文件">准备布局文件</h2><p>布局一：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.constraint.ConstraintLayout</span></span><br><span class="line">        <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">        <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">tools:context</span>=<span class="value">"me.huaqianlee.forme.ToDoFragment"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span> <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">              <span class="attribute">android:layout_marginTop</span>=<span class="value">"50dp"</span></span><br><span class="line">              <span class="attribute">android:textSize</span>=<span class="value">"15sp"</span></span><br><span class="line">    <span class="attribute">android:text</span>=<span class="value">"This is Todo main view layout!"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>布局二：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.constraint.ConstraintLayout</span></span><br><span class="line">        <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">        <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">tools:context</span>=<span class="value">"me.huaqianlee.forme.ToDoFragment"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">ImageView</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span> <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">               <span class="attribute">android:scaleType</span>=<span class="value">"fitCenter"</span></span><br><span class="line">    <span class="attribute">android:src</span>=<span class="value">"@drawable/lee"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.constraint.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="准备Fragment，加载布局">准备Fragment，加载布局</h2><p>布局一：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateEventFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Nullable</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_date_event, container, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>布局二：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ToDoFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Nullable</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_todo, container, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="实现切换布局方法">实现切换布局方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line"> * 切换主界面视图工具类</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainViewSwitch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchMainView</span><span class="params">(BaseActivity activity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (SelectedNavItem.getSlectedNavItem()) &#123;</span><br><span class="line">            <span class="keyword">case</span> SelectedNavItem.TODO:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> ToDoFragment(),activity);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SelectedNavItem.DATEEVENT:</span><br><span class="line">                replaceFragment(<span class="keyword">new</span> DateEventFragment(), activity);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">replaceFragment</span><span class="params">(Fragment fragment, BaseActivity activity)</span> </span>&#123;</span><br><span class="line">        FragmentManager fragmentManager = activity.getSupportFragmentManager();</span><br><span class="line">        FragmentTransaction transaction = fragmentManager.beginTransaction();</span><br><span class="line">        transaction.replace(R.id.main_view_layout, fragment);</span><br><span class="line">        transaction.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="切换布局">切换布局</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">adapter.setOnItemClickListener(<span class="keyword">new</span> NavFuncAdapter.OnItemClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MainViewSwitch().switchMainView(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>这篇博文只是一个简单粗糙的总结， RecyclerView点击事件的实现可以查看博客：<a href="">RecyclerView选中效果、Item点击事件的实现</a>。</p>
<h2 id="源码地址">源码地址</h2><p><a href="https://github.com/huaqianlee/ForMe" target="_blank" rel="external">ForMe</a></p>
<h2 id="效果">效果</h2><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/app/dynamic_layout_effect.gif" alt="effect"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备布局文件&quot;&gt;准备布局文件&lt;/h2&gt;&lt;p&gt;布局一：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;android.support.constraint.ConstraintLayout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;xmlns:tools&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;xmlns:app&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;tools:context&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;me.huaqianlee.forme.ToDoFragment&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;TextView&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attribute&quot;&gt;android:layout_marginTop&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;50dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attribute&quot;&gt;android:textSize&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;15sp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;This is Todo main view layout!&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;android.support.constraint.ConstraintLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>按返回键只关闭DrawerLayout侧边栏不退出Activity的实现方案</title>
    <link href="http://huaqianlee.github.io/2017/08/18/Android/hides-navigation-in-drawerlayou/"/>
    <id>http://huaqianlee.github.io/2017/08/18/Android/hides-navigation-in-drawerlayou/</id>
    <published>2017-08-18T14:44:17.000Z</published>
    <updated>2017-08-18T15:06:05.163Z</updated>
    
    <content type="html"><![CDATA[<p>今天写自己的练习APP时，发现侧边导航栏可见时，我按返回键，Activity直接退出了， 可是我想要的是只是关闭侧边栏，研究了一下，其实解决办法挺简单。</p>
<p>只需要在Activity中重写onBackPressed()即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">private DrawerLayout mlayout; </span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void <span class="function"><span class="title">onBackPressed</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> (mlayout.isDrawerOpen(findViewById(R.id.nav_left_layout)))</span><br><span class="line">        mlayout.closeDrawers();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        super.onBackPressed();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># R.id.nav_left_layout为侧边栏显示部分顶层Layout</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天写自己的练习APP时，发现侧边导航栏可见时，我按返回键，Activity直接退出了， 可是我想要的是只是关闭侧边栏，研究了一下，其实解决办法挺简单。&lt;/p&gt;
&lt;p&gt;只需要在Activity中重写onBackPressed()即可：&lt;br&gt;&lt;figure class=&quot;h
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView Item选中效果及点击事件的实现</title>
    <link href="http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/"/>
    <id>http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/</id>
    <published>2017-08-17T11:46:41.000Z</published>
    <updated>2017-08-18T14:59:32.134Z</updated>
    
    <content type="html"><![CDATA[<p>最近需要对RecyclerView的Item实现选中效果和Item点击事件，尝试了两种方式。</p>
<h1 id="受限的简易实现方案">受限的简易实现方案</h1><h2 id="布局文件">布局文件</h2><p>首先在Item的布局文件中加入如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">android:clickable=<span class="string">"true"</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">"true"</span></span><br><span class="line">android:focusable=<span class="string">"true"</span></span><br><span class="line">android:background=<span class="string">"@drawable/selector_item_selected"</span></span><br></pre></td></tr></table></figure></p>
<p>完成selector_item_selected.xml：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;selector xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span><br><span class="line">    &lt;item android:state_focused=<span class="string">"true"</span> android:drawable=<span class="string">"@drawable/select"</span>/&gt;</span><br><span class="line">    &lt;item android:state_focused=<span class="string">"false"</span> android:drawable=<span class="string">"@drawable/un_select"</span>/&gt;</span><br><span class="line">&lt;/selector&gt;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>实现select和unselect资源（也可以直接找两张图片）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unselect.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> &gt;</span><br><span class="line">    &lt;gradient</span><br><span class="line">            android:startColor=<span class="string">"#FFF"</span></span><br><span class="line">            android:endColor=<span class="string">"#FFF"</span></span><br><span class="line">            android:centerColor=<span class="string">"#FFF"</span></span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/shape&gt;</span><br><span class="line"><span class="comment"># select.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;shape xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span> &gt;</span><br><span class="line">    &lt;gradient</span><br><span class="line">            android:startColor=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">            android:endColor=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">            android:centerColor=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/shape&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="代码">代码</h2><p>只需要onBindViewHolder方法中添加如下代码即可：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    holder.itemView.setSelected(position == SelectedNavItem.getSlectedNavItem()); </span><br><span class="line">    <span class="comment">/*item点击事件的一种实现方式*/</span></span><br><span class="line">    holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    holder.cardView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="更实用的实现方案">更实用的实现方案</h1><p>上面的方案有挺多局限性， 这个方案主要通过注册按键事件来实现。</p>
<h2 id="布局">布局</h2><p>删掉上一种方案加入属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">android:clickable=<span class="string">"true"</span></span><br><span class="line">android:focusableInTouchMode=<span class="string">"true"</span></span><br><span class="line">android:focusable=<span class="string">"true"</span></span><br><span class="line">android:background=<span class="string">"@drawable/selector_item_selected"</span></span><br></pre></td></tr></table></figure></p>
<h2 id="代码-1">代码</h2><p>在adpter中定义可在其他地方使用的OnItemClickListener接口，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> OnItemClickListener onItemClickListener = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*暴露给外部的方法*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickListener</span><span class="params">(OnItemClickListener listener)</span> </span>&#123;</span><br><span class="line">    onItemClickListener = listener;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现选中效果，然后为每个itemview添加并注册点击事件，并将点击事件传给外面的调用者，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="keyword">final</span> <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置选中状态*/</span></span><br><span class="line">    <span class="keyword">if</span> (position == SelectedNavItem.getSlectedNavItem()) &#123;</span><br><span class="line">        holder.itemView.setBackground(mContext.getResources().getDrawable(R.drawable.selected));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        holder.itemView.setBackground(mContext.getResources().getDrawable(R.drawable.un_select));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    holder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            onItemClickListener.onItemClick(holder.itemView, position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Activity中的代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adapter.setOnItemClickListener(<span class="keyword">new</span> NavFuncAdapter.OnItemClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        SelectedNavItem.setSlectedNavItem(position);<span class="comment">//自定义的方法，告诉adpter被点击item</span></span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h1 id="源码地址">源码地址</h1><p><a href="https://github.com/huaqianlee/ForMe" target="_blank" rel="external">ForMe</a></p>
<h1 id="效果">效果</h1><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/forme/select_item_effct.gif" alt="nav_item_selected"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近需要对RecyclerView的Item实现选中效果和Item点击事件，尝试了两种方式。&lt;/p&gt;
&lt;h1 id=&quot;受限的简易实现方案&quot;&gt;受限的简易实现方案&lt;/h1&gt;&lt;h2 id=&quot;布局文件&quot;&gt;布局文件&lt;/h2&gt;&lt;p&gt;首先在Item的布局文件中加入如下代码：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android:clickable=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:focusableInTouchMode=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:focusable=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:background=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/selector_item_selected&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;完成selector_item_selected.xml：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;selector xmlns:android=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:state_focused=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; android:drawable=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/select&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:state_focused=&lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt; android:drawable=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/un_select&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/selector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>基于DrawerLayout打造卡片式Navigation</title>
    <link href="http://huaqianlee.github.io/2017/08/17/Android/the-card-navigation-base-on-drawerlayout/"/>
    <id>http://huaqianlee.github.io/2017/08/17/Android/the-card-navigation-base-on-drawerlayout/</id>
    <published>2017-08-17T11:46:16.000Z</published>
    <updated>2017-08-19T04:21:48.225Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间开始了利用空闲时间做一个练习APP <a href="https://github.com/huaqianlee/ForMe" target="_blank" rel="external">ForMe</a>。根据设计APP需要通过左边导航栏切换主界面功能，自己平时在使用Google的NewsTab，觉得很不错，就准备参考其界面来设计。</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/app/newstab_view.jpg" alt="newsTab"></p>
<a id="more"></a>
<h2 id="尝试通过NavigationView实现">尝试通过NavigationView实现</h2><p>首选的是通过DrawerLayout和NavigationView来实现，首先引入依赖：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:design:25.3.1'</span></span><br><span class="line">compile <span class="string">'de.hdodenhof:circleimageview:2.1.0'</span>  // 对头布局头像处理提供支持</span><br></pre></td></tr></table></figure></p>
<p>然后实现侧边栏头布局：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"180dp"</span></span><br><span class="line">                android:padding=<span class="string">"10dp"</span></span><br><span class="line">                android:background=<span class="string">"?attr/colorPrimary"</span>&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;de.hdodenhof.circleimageview.CircleImageView</span><br><span class="line">            android:id=<span class="string">"@+id/nav_icon"</span></span><br><span class="line">            android:layout_width=<span class="string">"70dp"</span></span><br><span class="line">            android:layout_height=<span class="string">"70dp"</span></span><br><span class="line">            android:layout_centerInParent=<span class="string">"true"</span></span><br><span class="line">            android:src=<span class="string">"@drawable/lee"</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">              android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">              android:textColor=<span class="string">"#fff"</span></span><br><span class="line">              android:layout_above=<span class="string">"@+id/mail"</span></span><br><span class="line">              android:id=<span class="string">"@+id/usr"</span></span><br><span class="line">              android:textSize=<span class="string">"15sp"</span></span><br><span class="line">              android:text=<span class="string">"@string/me"</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">              android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">              android:id=<span class="string">"@+id/mail"</span></span><br><span class="line">              android:text=<span class="string">"huaqianlee@gmail.com"</span></span><br><span class="line">              android:layout_alignParentBottom=<span class="string">"true"</span></span><br><span class="line">              android:textSize=<span class="string">"15sp"</span></span><br><span class="line">              android:textColor=<span class="string">"#fff"</span></span><br><span class="line">              /&gt;</span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>实现菜单：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;menu xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span><br><span class="line">    &lt;group android:checkableBehavior=<span class="string">"single"</span>&gt; //指定这一组菜单项单选 , group可以添加横线</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_call"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_call"</span></span><br><span class="line">                android:title=<span class="string">"Call"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_friends"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_friends"</span></span><br><span class="line">                android:title=<span class="string">"Friends"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_location"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_location"</span></span><br><span class="line">                android:title=<span class="string">"Location"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_mail"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_mail"</span></span><br><span class="line">                android:title=<span class="string">"Mail"</span>/&gt;</span><br><span class="line">        &lt;item</span><br><span class="line">                android:id=<span class="string">"@+id/nav_task"</span></span><br><span class="line">                android:icon=<span class="string">"@drawable/nav_task"</span></span><br><span class="line">                android:title=<span class="string">"Tasks"</span>/&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure></p>
<p>引入布局：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.v4.widget.DrawerLayout</span><br><span class="line">        xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:id=<span class="string">"@+id/drawer_layout"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        tools:context=<span class="string">"me.huaqianlee.forme.MainActivity"</span>&gt;</span><br><span class="line">    &lt;!--xmlns:app=<span class="string">"http://schemas.android.com/apk/me.huaqianlee.forme"</span>--&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">                android:id=<span class="string">"@+id/tool_bar"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"?attr/actionBarSize"</span></span><br><span class="line">                android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">                android:theme=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span><br><span class="line">                app:popupTheme=<span class="string">"@style/Theme.AppCompat.Light"</span></span><br><span class="line">                app:layout_scrollFlags=<span class="string">"enterAlways|snap|scroll"</span></span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/android.support.v7.widget.Toolbar&gt;</span><br><span class="line">    &lt;/android.support.design.widget.CoordinatorLayout&gt;        </span><br><span class="line">    &lt;android.support.design.widget.NavigationView</span><br><span class="line">        android:id=<span class="string">"@+id/nav_view"</span></span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        app:headerLayout=<span class="string">"@layout/nav_header"</span></span><br><span class="line">        app:menu=<span class="string">"@menu/nav_menu"</span></span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure></p>
<p>使能侧边栏提示图标：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DrawerLayout mlayout = (DrawerLayout) findViewById(R.id.drawer_layout);</span><br><span class="line">ActionBar actionBar = getSupportActionBar();//获得ToolBar</span><br><span class="line"><span class="keyword">if</span> (actionBar != null) &#123;</span><br><span class="line">    actionBar.setDisplayHomeAsUpEnabled(<span class="literal">true</span>);</span><br><span class="line">    actionBar.setHomeAsUpIndicator(R.drawable.ic_menu); //设置图标，默认是一个箭头</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>好了，这样子效果就出来了：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/app/navigation_view.jpg" alt="nav_view"></p>
<p>可是这样子只能做到菜单式的侧边栏，不能实现我的需求。我尝试着找到一种方式来实现卡片式显示，但是最终没能找到。</p>
<h2 id="自定义卡片式侧边栏">自定义卡片式侧边栏</h2><p>既然用google提供库文件不能实现，就只好选择自定义来实现了.</p>
<p>在DrawerLayout中自己定义布局，将侧边栏头布局引入，然后通过RecyclerView来实现卡片式显示.<br>在开始前，首先得引入相应的依赖，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:recyclerview-v7:25.3.1'</span></span><br><span class="line">compile <span class="string">'com.android.support:cardview-v7:25.3.1'</span></span><br></pre></td></tr></table></figure></p>
<p>实现侧边栏的布局：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.v4.widget.DrawerLayout</span><br><span class="line">        xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:id=<span class="string">"@+id/drawer_layout"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        tools:context=<span class="string">"me.huaqianlee.forme.MainActivity"</span>&gt;</span><br><span class="line">    &lt;!--xmlns:app=<span class="string">"http://schemas.android.com/apk/me.huaqianlee.forme"</span>--&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">                android:id=<span class="string">"@+id/tool_bar"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"?attr/actionBarSize"</span></span><br><span class="line">                android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">                android:theme=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span><br><span class="line">                app:popupTheme=<span class="string">"@style/Theme.AppCompat.Light"</span></span><br><span class="line">                app:layout_scrollFlags=<span class="string">"enterAlways|snap|scroll"</span></span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/android.support.v7.widget.Toolbar&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;FrameLayout</span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        &gt;</span><br><span class="line">            </span><br><span class="line">            &lt;ImageView</span><br><span class="line">                    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                    android:src=<span class="string">"@drawable/lee"</span>/&gt;</span><br><span class="line">            </span><br><span class="line">        &lt;/FrameLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;RelativeLayout android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_gravity=<span class="string">"start"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">                        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                        android:layout_height=<span class="string">"180dp"</span></span><br><span class="line">                        android:id=<span class="string">"@+id/nav_layout"</span></span><br><span class="line">                        android:padding=<span class="string">"10dp"</span></span><br><span class="line">                        android:background=<span class="string">"?attr/colorPrimary"</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;de.hdodenhof.circleimageview.CircleImageView</span><br><span class="line">                    android:id=<span class="string">"@+id/nav_icon"</span></span><br><span class="line">                    android:layout_width=<span class="string">"70dp"</span></span><br><span class="line">                    android:layout_height=<span class="string">"70dp"</span></span><br><span class="line">                    android:layout_centerInParent=<span class="string">"true"</span></span><br><span class="line">                    android:src=<span class="string">"@drawable/lee"</span>/&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:textColor=<span class="string">"#fff"</span></span><br><span class="line">                      android:layout_above=<span class="string">"@+id/mail"</span></span><br><span class="line">                      android:id=<span class="string">"@+id/usr"</span></span><br><span class="line">                      android:textSize=<span class="string">"15sp"</span></span><br><span class="line">                      android:text=<span class="string">"@string/me"</span>/&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;TextView android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                      android:id=<span class="string">"@+id/mail"</span></span><br><span class="line">                      android:text=<span class="string">"huaqianlee@gmail.com"</span></span><br><span class="line">                      android:layout_alignParentBottom=<span class="string">"true"</span></span><br><span class="line">                      android:textSize=<span class="string">"15sp"</span></span><br><span class="line">                      android:textColor=<span class="string">"#fff"</span></span><br><span class="line">            /&gt;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        &lt;/RelativeLayout&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;FrameLayout</span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                android:background=<span class="string">"#fff"</span></span><br><span class="line">                android:layout_below=<span class="string">"@+id/nav_layout"</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">                    android:id=<span class="string">"@+id/nav_recycler_view"</span></span><br><span class="line">                    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                    android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;/android.support.v7.widget.RecyclerView&gt;</span><br><span class="line">        &lt;/FrameLayout&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/RelativeLayout&gt;</span><br><span class="line">&lt;/android.support.v4.widget.DrawerLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>在写相关代码之前，先写好卡片的布局文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.v7.widget.CardView</span><br><span class="line">        xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_margin=<span class="string">"2dp"</span></span><br><span class="line">        app:cardCornerRadius=<span class="string">"4dp"</span>&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">            android:id=<span class="string">"@+id/nav_func_layout"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">            android:background=<span class="string">"#fff"</span></span><br><span class="line">            android:orientation=<span class="string">"vertical"</span>&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;ImageView</span><br><span class="line">                android:id=<span class="string">"@+id/nav_func_image"</span> android:layout_margin=<span class="string">"10dp"</span> android:layout_width=<span class="string">"match_parent"</span> android:layout_height=<span class="string">"100dp"</span></span><br><span class="line">                android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">                android:scaleType=<span class="string">"centerCrop"</span>/&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">                android:id=<span class="string">"@+id/nav_func_name"</span></span><br><span class="line">                android:layout_margin=<span class="string">"5dp"</span></span><br><span class="line">                android:textSize=<span class="string">"16sp"</span></span><br><span class="line">                android:layout_gravity=<span class="string">"center"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"wrap_content"</span>/&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/android.support.v7.widget.CardView&gt;</span><br></pre></td></tr></table></figure></p>
<p>接下来就该卡片显示（RecylerView）的代码了。<br>首先实现卡片bean：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package me.huaqianlee.forme.bean;</span><br><span class="line"></span><br><span class="line">public class Func &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private int imageId;</span><br><span class="line"></span><br><span class="line">    public <span class="function"><span class="title">Func</span></span>()&#123;&#125;</span><br><span class="line">    public Func (String name, int imageId) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String <span class="function"><span class="title">getName</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void <span class="built_in">set</span>Name(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int <span class="function"><span class="title">getImageId</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void <span class="built_in">set</span>ImageId(int imageId) &#123;</span><br><span class="line">        this.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现Adapter：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">public class NavFuncAdapter extends RecyclerView.Adapter&lt;NavFuncAdapter.ViewHolder&gt; &#123;</span><br><span class="line">    private Context mContext;</span><br><span class="line">    private List&lt;Func&gt; mLists;</span><br><span class="line"></span><br><span class="line">    public NavFuncAdapter(List&lt;Func&gt; lists) &#123;</span><br><span class="line">        mLists = lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mContext == null) &#123;</span><br><span class="line">            mContext = parent.getContext();</span><br><span class="line">        &#125;</span><br><span class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.func_item, parent, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">return</span> new ViewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onBindViewHolder(ViewHolder holder, int position) &#123;</span><br><span class="line">        Func func = mLists.get(position);</span><br><span class="line">        holder.funcName.setText(func.getName());</span><br><span class="line">        Glide.with(mContext).load(func.getImageId()).into(holder.funcImage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int <span class="function"><span class="title">getItemCount</span></span>() &#123;</span><br><span class="line">          <span class="built_in">return</span> mLists.size();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public class ViewHolder extends RecyclerView.ViewHolder &#123;</span><br><span class="line">        CardView cardView;</span><br><span class="line">        ImageView funcImage;</span><br><span class="line">        TextView funcName;</span><br><span class="line"></span><br><span class="line">        public ViewHolder(View itemView) &#123;</span><br><span class="line">            super(itemView);</span><br><span class="line">            cardView = (CardView) itemView;</span><br><span class="line">            funcImage = (ImageView) itemView.findViewById(R.id.nav_func_image);</span><br><span class="line">            funcName = (TextView) itemView.findViewById(R.id.nav_func_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>添加卡片显示代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化卡片</span></span><br><span class="line">private Func [] funcs = &#123;new Func (<span class="string">"Call"</span>,R.drawable.nav_call),new Func(<span class="string">"Friends"</span>,R.drawable.nav_friends),new Func(<span class="string">"Location"</span>,R.drawable.nav_location),</span><br><span class="line">new Func(<span class="string">"Mail"</span>, R.drawable.nav_mail), new Func(<span class="string">"Tasks"</span>,R.drawable.nav_task)&#125;;</span><br><span class="line">private void <span class="function"><span class="title">initFunc</span></span>() &#123;</span><br><span class="line">    funcList.clear();</span><br><span class="line">    Func toDoFunc = new Func();</span><br><span class="line">    toDoFunc.setImageId(R.drawable.todo_icon);</span><br><span class="line">    toDoFunc.setName(<span class="string">"ToDO"</span>);</span><br><span class="line">    funcList.add(toDoFunc);</span><br><span class="line"></span><br><span class="line">    Func toDoFunc2 = new Func(<span class="string">"Lee"</span>, R.drawable.lee);</span><br><span class="line">    funcList.add(toDoFunc2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i&lt;funcs.length;i++) &#123;</span><br><span class="line">        funcList.add(funcs[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># RecyclerView显示</span></span><br><span class="line">initFunc();</span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(R.id.nav_recycler_view);</span><br><span class="line">GridLayoutManager layoutManager = new GridLayoutManager(this,<span class="number">2</span>);</span><br><span class="line">recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">NavFuncAdapter adapter = new NavFuncAdapter(funcList);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<p>这样子就实现了卡片式侧边栏了，效果如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/nav_card_p.jpg" alt="nav_custom"></p>
<p>Item选中效果的实现方式见：<a href="http://huaqianlee.github.io/2017/08/17/Android/the-selected-effect-of-recyclerview-item/" target="_blank" rel="external">RecyclerView选中效果的实现</a> .</p>
<p>今天先这样子粗糙地写这篇博客，后续完善了有时间再更新一下。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间开始了利用空闲时间做一个练习APP &lt;a href=&quot;https://github.com/huaqianlee/ForMe&quot;&gt;ForMe&lt;/a&gt;。根据设计APP需要通过左边导航栏切换主界面功能，自己平时在使用Google的NewsTab，觉得很不错，就准备参考其界面来设计。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/blog/app/newstab_view.jpg&quot; alt=&quot;newsTab&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>no no no, go go go</title>
    <link href="http://huaqianlee.github.io/2017/07/20/Life/no-no-no-go-go-go/"/>
    <id>http://huaqianlee.github.io/2017/07/20/Life/no-no-no-go-go-go/</id>
    <published>2017-07-20T11:29:53.000Z</published>
    <updated>2017-07-20T11:31:46.967Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xjdax.com1.z0.glb.clouddn.com//life/bing.jpg" alt="bing"></p>
<p>最近工作一忙起来，自己又懈怠了， 回家啥都不想做，大多数时候都是锻炼一下，然后撸两把王者，就睡觉了。 好忧伤，人越来越没有以前的激情了， 有时候都在想接受现状，拿着不算太差的工资，好好上班，不用花时间去折腾学习了。这种想法好可怕！</p>
<p>调整调整！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com//life/bing.jpg&quot; alt=&quot;bing&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近工作一忙起来，自己又懈怠了， 回家啥都不想做，大多数时候都是锻炼一下，然后撸两把王者，就睡觉了。 好忧伤
    
    </summary>
    
      <category term="Life" scheme="http://huaqianlee.github.io/categories/Life/"/>
    
    
      <category term="成长" scheme="http://huaqianlee.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>MTK Modem 问题集</title>
    <link href="http://huaqianlee.github.io/2017/07/12/Android/MTK-Modem-%E9%97%AE%E9%A2%98%E9%9B%86/"/>
    <id>http://huaqianlee.github.io/2017/07/12/Android/MTK-Modem-问题集/</id>
    <published>2017-07-12T15:01:42.000Z</published>
    <updated>2017-07-12T15:02:54.498Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始做MTK相关的工作，在第一步编译Modem时就遇到了挺多问题。特在此文整理和Modem相关的问题。</p>
<h1 id="编译相关问题">编译相关问题</h1><a id="more"></a>
<h2 id="编译权限问题">编译权限问题</h2><p>编译时提示如下权限问题：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">*******************************************</span><br><span class="line">* [OS]                : Linux</span><br><span class="line">* [PERL]              : v5.<span class="number">10.1</span> or v5.<span class="number">14.2</span></span><br><span class="line">* [MAKE]              : GNU Make v3.<span class="number">81</span></span><br><span class="line">* [SHELL]             : GNU bash v4.<span class="number">1.5</span></span><br><span class="line">* [GCC-ARM-NONE-EABI] : v4.<span class="number">6.2</span> or above</span><br><span class="line">* [NATIVE GCC(UBUNTU)]: v4.<span class="number">5</span> or above</span><br><span class="line"></span><br><span class="line">*******************************************</span><br><span class="line"> Start checking current Build Environment  </span><br><span class="line">*******************************************</span><br><span class="line">* [PERL]              : v5.<span class="number">14.2</span>            [OK] !!!</span><br><span class="line">* [MAKE]              : GNU Make v3.<span class="number">81</span>     [OK] !!!</span><br><span class="line">* [SHELL]             : GNU bash v4.<span class="number">2.25</span>    [HIGHER THAN RECOMMENDED] !!!</span><br><span class="line">sh: <span class="number">1</span>: tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-gcc: Permission denied</span><br><span class="line">* [GCC-ARM-NONE-EABI] : [UNKNOWN VERSION] !!!</span><br><span class="line">* [NATIVE GCC(UBUNTU)]: gcc (Ubuntu/Linaro <span class="number">4.6</span>.<span class="number">3</span>-<span class="number">1</span>ubuntu5) <span class="number">4.6</span>.<span class="number">3</span>  [OK] !!!</span><br><span class="line"></span><br><span class="line">current Build Env. is not recommendation </span><br><span class="line">To avoid unexpected errors , please install the recommended Tool Chain.</span><br><span class="line">*******************************************</span><br><span class="line">  Build Environment is NOT RECOMMENDED!</span><br><span class="line">*******************************************</span><br><span class="line"></span><br><span class="line">makefile check is <span class="keyword">done</span></span><br><span class="line">/bin/bash: tools/init/strcmpex_linux.exe: Permission denied</span><br><span class="line">make: *** [getoptions] Error <span class="number">126</span></span><br></pre></td></tr></table></figure></p>
<p>这种问题很好解决， 通过chmod对其提供执行权限即可。</p>
<h2 id="不能定位数据库问题">不能定位数据库问题</h2><p>提示不能定位原始codegen 数据库，错误log如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ERROR] Cannot determine the original codegen database: BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P1 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P10 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P11 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P12 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P13 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P14 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P15 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P16 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P17 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P18 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P19 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P2 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P20 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P21 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P3 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P4 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P5 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P6 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P7 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P8 BPLGUInfoCustomApp_MT6735_S00_MOLY_LR9_W1444_MD_LWTG_MP_V94_P9</span><br><span class="line">make[<span class="number">1</span>]: *** [build/ZECHIN6737T_65_M0/LWG_DSDS_COTSX/bin/dep/codegen_dep/cgen_cfg_Modem.det] Error <span class="number">2</span></span><br><span class="line">make: *** [cgen] Error <span class="number">2</span></span><br></pre></td></tr></table></figure></p>
<p>此问题是因为[mt6735m_all_modem\mtk_rel\ZECHIN6737T_65_M0\LTG_DSDS\dhl\database]路径下面太多的数据库文件，只需要将多余的删除掉即可。</p>
<h2 id="编译工具链问题">编译工具链问题</h2><p>提示某些工具不能找到，log如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lnosys</span><br><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lm</span><br><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lc</span><br><span class="line">tools/GCC/<span class="number">4.6</span>.<span class="number">2</span>/linux/bin/arm-none-eabi-ld: cannot find -lgcc</span><br></pre></td></tr></table></figure></p>
<p>此问题是因为代码里面的gcc工具链有问题，需要重新安装正确的工具链，由于十分不好找，所以我上传了百度云：<a href="http://pan.baidu.com/s/1pLblCkN" target="_blank" rel="external">GCC地址</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近开始做MTK相关的工作，在第一步编译Modem时就遇到了挺多问题。特在此文整理和Modem相关的问题。&lt;/p&gt;
&lt;h1 id=&quot;编译相关问题&quot;&gt;编译相关问题&lt;/h1&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="MTK" scheme="http://huaqianlee.github.io/tags/MTK/"/>
    
  </entry>
  
  <entry>
    <title>实现真正意义上的第一个APP之启程</title>
    <link href="http://huaqianlee.github.io/2017/07/11/Android/%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E6%84%8F%E4%B9%89%E4%B8%8A%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAAPP%E4%B9%8B%E5%90%AF%E7%A8%8B/"/>
    <id>http://huaqianlee.github.io/2017/07/11/Android/实现真正意义上的第一个APP之启程/</id>
    <published>2017-07-11T13:20:58.000Z</published>
    <updated>2017-07-11T13:25:04.928Z</updated>
    
    <content type="html"><![CDATA[<p>自学了这么久的Android，各种例程和Demo敲了不少，但是还未自己从头设计实现过一个完整的APP，今天准备根据自己的需求定制一款APP：ForMe（暂定此名）。第一次完全自己设计实现，可能会有很多问题，自己边学边优化。</p>
<a id="more"></a>
<h2 id="功能">功能</h2><p>根据自己平时的生活，目前暂时拟定如下功能：</p>
<ol>
<li>可自由选择默认显示界面</li>
<li>TODOLIST - 足够使用的精简模块</li>
<li>读取通讯录生日信息，查看提醒</li>
<li>英语学习，录入和复习</li>
<li>引入讯飞语音识别，思考所有功能与其结合</li>
<li>公交查询，自动播报还有几个站多少时间</li>
<li>支持MarkDown录入随笔博客，并可以导出</li>
<li>支持NFC读取卡片信息</li>
</ol>
<p>目前想到需要这些功能，一步步实现。</p>
<h2 id="UI设计">UI设计</h2><p>虽然没有多少审美细胞，但是也想自己来设计UI。本想先设计出UI效果，但这方面接触太少，短时间内难以做出来，所以就先放一放，后期再来完整设计。</p>
<h2 id="TODOLIST">TODOLIST</h2><p>一直需要一个TODOLIST来提醒自己，所以先实现此部分，做一个精简版的模块，使用Material Design语言来设计。碰巧在Github上面有看到一个类似项目<a href="https://github.com/avjinder/Minimal-Todo" target="_blank" rel="external">Minimal-Todo</a>，UI风格我挺喜欢的，这部分的UI就准备直接借用此项目的图片了。</p>
<p>好的就这样了， 开始一步一步地做。</p>
<blockquote>
<p>在公司完成这个计划，现在公司空调有问题，热死了，感觉都要虚脱了的感觉。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自学了这么久的Android，各种例程和Demo敲了不少，但是还未自己从头设计实现过一个完整的APP，今天准备根据自己的需求定制一款APP：ForMe（暂定此名）。第一次完全自己设计实现，可能会有很多问题，自己边学边优化。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://huaqianlee.github.io/categories/Android/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>Bye Idea， Hi Coban！</title>
    <link href="http://huaqianlee.github.io/2017/07/10/Life/Bye-Idea%EF%BC%8C-Hi-Coban%EF%BC%81/"/>
    <id>http://huaqianlee.github.io/2017/07/10/Life/Bye-Idea，-Hi-Coban！/</id>
    <published>2017-07-10T11:46:44.000Z</published>
    <updated>2017-07-10T11:58:57.926Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/life/idea-coban.png" alt="idea_coban"></p>
<p>最终还是离开了IDEA，加入了一家新公司，公司不大，但是工作内容吸引我。之前在IDEA时就总是觉得在方案公司一直做底层学不到新的东西， 并且工作内容也变得乏味了些， 这次到这家公司就是因为来是负责车载产品的系统，会有很多Framework和JNI的工作，对我有十分大的吸引力！</p>
<a id="more"></a>
<p> 过来上班有一周了，发现工作期间可能会有一些空闲的时间，但是公司加密很厉害，一些自学的方式就不再适用了（譬如，之前自己计划的写一些APP，提升一下android开发技能），今下午思考了一下，准备曲线救国，有空时间的时候就分析一些写的好的开源源码和Android的系统源码，然后输出一些博客。</p>
<p> 新的一个开始， 加油吧！多积累些知识经验，为回成都做好储备。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/life/idea-coban.png&quot; alt=&quot;idea_coban&quot;&gt;&lt;/p&gt;
&lt;p&gt;最终还是离开了IDEA，加入了一家新公司，公司不大，但是工作内容吸引我。之前在IDEA时就总是觉得在方案公司一直做底层学不到新的东西， 并且工作内容也变得乏味了些， 这次到这家公司就是因为来是负责车载产品的系统，会有很多Framework和JNI的工作，对我有十分大的吸引力！&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://huaqianlee.github.io/categories/Life/"/>
    
    
      <category term="成长" scheme="http://huaqianlee.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>Android Kotlin之曲折HelloWord</title>
    <link href="http://huaqianlee.github.io/2017/05/23/Kotlin/Kotlin-HElloWorld/"/>
    <id>http://huaqianlee.github.io/2017/05/23/Kotlin/Kotlin-HElloWorld/</id>
    <published>2017-05-23T00:09:56.000Z</published>
    <updated>2017-08-21T13:54:41.570Z</updated>
    
    <content type="html"><![CDATA[<p>最近工作业余时间一直在自学Android，Google I/O 2017 惊闻Kotlin成为Google支持的官方语言，当然得紧跟“中央”的脚步，开始程序入门必备之HelloWord，殊不知这个HelloWord充满了曲折。</p>
<h2 id="了解Kotlin">了解Kotlin</h2><p>知道了Kotlin之后就开始在网上搜集相关资料，发现了如下个人觉得比较好的资料：<br><a href="https://kotlinlang.org/docs/tutorials/kotlin-android.html" target="_blank" rel="external">Getting started with Android and Kotlin</a><br><a href="https://github.com/JetBrains/kotlin" target="_blank" rel="external">kotlin项目</a><br><a href="https://github.com/JetBrains/kotlin-examples" target="_blank" rel="external">kotlin配置及与java的互操作</a><br><a href="https://github.com/Kotlin/kotlin-koans" target="_blank" rel="external">kotlin语法练习</a><br><a href="doc/kotlin-docs.pdf">Kotlin1.1手册</a><br><a href="http://tanfujun.com/kotlin-web-site-cn/docs/reference/" target="_blank" rel="external">kotlin中文网</a><br><a href="https://kotlinlang.org/" target="_blank" rel="external">kotlin官网</a><br><a href="https://github.com/huanglizhuo/kotlin-in-chinese" target="_blank" rel="external">中文kotlin项目</a><br><a id="more"></a></p>
<h2 id="曲折之路">曲折之路</h2><h3 id="安装插件+HelloWorld">安装插件+HelloWorld</h3><p>自己一直是使用的Android Studio的稳定版，通过<strong>File-&gt;setting-&gt;Install JetBrains Plugins</strong>安装了Kotlin插件。安装完成后会发现<strong>Tools-&gt;Kotlin</strong>工具，可以进行相关Kotlin操作。</p>
<p>插件装好后，新建HelloWord项目，新建完成后打开MainActivity.java，然后通过<strong>Code-&gt;Convert Java File to Kotlin File</strong>或者<strong>Ctrl+Alt+Shift+K</strong>将其转换为kt文件，Android Studio将自动在build.gradle文件添加依赖，如下：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ext.kotlin_version = <span class="string">'1.1.2-4'</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">classpath</span> <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span></span><br></pre></td></tr></table></figure></p>
<p>本以为马上就是见证奇迹的时刻了，可惜各种错误纷至沓来，主要就集中在Android Studio不能成功自动下载kotlin的相关依赖，翻墙下载也不能成功，所以就通过错误log和Task手动下载相关包，这样解决了大部分问题，但是仍然不能成功编译。</p>
<h3 id="Android_Studio_3-0">Android Studio 3.0</h3><p>折腾良久不能成功， 就决定下载Google新发布的自带Kotlin的3.0。下载安装完成后，导入HellowWorld项目，又出现了一大堆翻墙不能解决的gradle和kotlin依赖下载问题，所以又通过手动下载的方式解决了问题。3.0自动对项目的一些依赖进行了更新，kotlin更新为如下：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ext.kotlin_version = <span class="string">'1.1.3-eap-34'</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">classpath</span> <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>自带Kotlin的IDE，新建项目的时候就能选择kotin或者java</p>
</blockquote>
<p>本以为终于可以开心的见证奇迹了，3.0 和我的Ubuntu16.1又出现了兼容性问题，由于之前不小心把系统升级后已经多次遇到和软件不够兼容的问题，所以这次就放弃继续折腾，就准备再切换回Android Studio2.3.2再试试，实在不行就只有备份重装系统了。</p>
<blockquote>
<p>血的教训：Linux开发机千万要用之前的稳定版本，不要升级到最新系统。</p>
</blockquote>
<h3 id="终见证奇迹">终见证奇迹</h3><p>Android3.0+ubuntu16.01 不成功，最终用回2.3.2+kotlin插件，老天总算没让继续折腾，通过3.0更新了Kotlin版本后，在2.3.2中一下就编译过了，赶紧如下添加一点代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class KotlinActivity : AppCompatActivity() &#123;</span><br><span class="line"></span><br><span class="line">    private lateinit var hello_view:android.widget.TextView</span><br><span class="line">    //private lateinit var hello_anko:android.widget.TextView</span><br><span class="line"></span><br><span class="line">    override fun onCreate(savedInstanceState: Bundle?) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_kotlin)</span><br><span class="line"></span><br><span class="line">        hello_view = findViewById(R.id.hello_view) as android.widget.TextView</span><br><span class="line">        hello_view.text = "Hello, Kotlin! "</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>编译下载，终于在手机里面看到了：Hello，Kotlin！。</p>
<p>不过仍然有一个小瑕疵，由于兼容性有些问题，总会有IDE Error和Plugin Error提示，不过就这样子将就用了，不准备耗掉大量时间来折腾系统了，相信随着Google的更新和系统补丁，这些问题终将解决。</p>
<h2 id="Anko项目">Anko项目</h2><p>尝试了一下比较火的开源项目<a href="https://github.com/Kotlin/anko" target="_blank" rel="external">Anko</a>，通过Anko实现HelloWord。<br>引入依赖，我这里选择了自己能用到的部分依赖，如下：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ext.anko_version = <span class="string">"0.10"</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">compile</span> <span class="string">"org.jetbrains.anko:anko-sdk25:$anko_version"</span> <span class="comment">// sdk15, sdk19, sdk21, sdk23 are also available</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">"org.jetbrains.anko:anko-appcompat-v7:$anko_version"</span></span><br></pre></td></tr></table></figure></p>
<p>实现代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#24120;&#35268;&#29992;&#27861;&#10;private lateinit var hello_anko:android.widget.TextView&#10;hello_anko = find&#60;TextView&#62;(R.id.hello_anko) //&#21487;&#20197;&#30465;&#30053;&#27867;&#22411;&#10;&#10;# &#30452;&#25509;&#23558;TextView&#30340;id&#24403;&#20316;&#31034;&#20363;&#10;hello_anko.text = &#34;Hello, Anko!&#34;&#10;&#10;# &#21160;&#24577;&#21152;&#36733;&#24067;&#23616;&#10;verticalLayout &#123;&#10;    val name = editText()&#10;    button(&#34;Say Hello&#34;) &#123;&#10;        onClick &#123; toast(&#34;Hello, $&#123;name.text&#125;!&#34;) &#125;&#10;    &#125;&#10;&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Kotlin学习项目">Kotlin学习项目</h2><p><a href="https://github.com/huaqianlee/KotlinDemo" target="_blank" rel="external">Github地址</a></p>
<h2 id="附上一点经验">附上一点经验</h2><ol>
<li><p>依赖包总是下载失败时，通过log和Task确定链接，手动下载然后放到相应路径。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 依赖包路徑，可以通过ExternalLibraries-&gt;&lt;PackegName&gt;-&gt;Library Properties查看</span></span><br><span class="line">/home/lee/.gradle/caches/modules-<span class="number">2</span>/files-<span class="number">2.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gradle路徑</span></span><br><span class="line">/home/lee/.gradle/wrapper/dists</span><br><span class="line"></span><br><span class="line"><span class="comment"># gradle下载路径</span></span><br><span class="line">http://services.gradle.org/distributions/</span><br></pre></td></tr></table></figure>
</li>
<li><p>图形界面查看和添加依赖</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看</span></span><br><span class="line">Project Structure-&gt;app-&gt;Dependencies</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加, 这样添加后会自动在build.gradle中添加语句</span></span><br><span class="line">Project Structure-&gt;app-&gt;Dependencies-&gt;+-&gt;Library/Jar/Module Dependency</span><br></pre></td></tr></table></figure>
<p>看log耐心一些，做一些分析尝试，再加上Google会找到原因的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近工作业余时间一直在自学Android，Google I/O 2017 惊闻Kotlin成为Google支持的官方语言，当然得紧跟“中央”的脚步，开始程序入门必备之HelloWord，殊不知这个HelloWord充满了曲折。&lt;/p&gt;
&lt;h2 id=&quot;了解Kotlin&quot;&gt;了解Kotlin&lt;/h2&gt;&lt;p&gt;知道了Kotlin之后就开始在网上搜集相关资料，发现了如下个人觉得比较好的资料：&lt;br&gt;&lt;a href=&quot;https://kotlinlang.org/docs/tutorials/kotlin-android.html&quot;&gt;Getting started with Android and Kotlin&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/JetBrains/kotlin&quot;&gt;kotlin项目&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;kotlin配置及与java的互操作&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Kotlin/kotlin-koans&quot;&gt;kotlin语法练习&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;doc/kotlin-docs.pdf&quot;&gt;Kotlin1.1手册&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://tanfujun.com/kotlin-web-site-cn/docs/reference/&quot;&gt;kotlin中文网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://kotlinlang.org/&quot;&gt;kotlin官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/huanglizhuo/kotlin-in-chinese&quot;&gt;中文kotlin项目&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Kotlin" scheme="http://huaqianlee.github.io/categories/Kotlin/"/>
    
    
      <category term="Android Studio" scheme="http://huaqianlee.github.io/tags/Android-Studio/"/>
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之高级技巧</title>
    <link href="http://huaqianlee.github.io/2017/05/13/FirstCode/FirstCode-advanced-skills/"/>
    <id>http://huaqianlee.github.io/2017/05/13/FirstCode/FirstCode-advanced-skills/</id>
    <published>2017-05-13T11:09:08.000Z</published>
    <updated>2017-06-18T01:37:45.252Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="全局获取Context">全局获取Context</h2><p>新建一个自己Application，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Context context;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        context = getApplicationContext();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Context <span class="title">getContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> context;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>指定程序启动时初始化的Application，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">application</span></span><br><span class="line">    <span class="attribute">android:name</span>=<span class="value">"com.example.networknest.MyApplication"</span> //完整的包名</span><br><span class="line">    <span class="attribute">...</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>需要Context时而没有，即可调用如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Toast.makeText(MyApplication.getContext(),...).show();</span><br></pre></td></tr></table></figure></p>
<p>不过LItePal要正常工作也需要配置起自己的Application，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:name="org.litepal.LitePalApplication"</span><br></pre></td></tr></table></figure></p>
<p>其也是为了能在内部自动获取Context，遇到这种冲突，类似如下方式解决：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Context context;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        context = getApplicationContext();</span><br><span class="line">        LitePalApplication.initialize(context);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="使用Intent传递对象">使用Intent传递对象</h2><h3 id="Serializable方式">Serializable方式</h3><p>将对象实现Serializable接口，让对象成为序列化可存储传输状态，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 对象实现接口</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"># 传输</span><br><span class="line">intent.putExtra(<span class="string">"person_data"</span>,person);</span><br><span class="line"></span><br><span class="line"># 接收</span><br><span class="line">Person person = (Person)getIntent().getSerializableExtra(<span class="string">"person_data"</span>);</span><br></pre></td></tr></table></figure></p>
<h3 id="Parcelable方式">Parcelable方式</h3><blockquote>
<p><strong>推荐此方式，效率更高</strong></p>
</blockquote>
<p>Parcelable方式是将对象分解为Intent支持的数据类型，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># 对象实现接口</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Parcelable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">        dest.writeString(name); <span class="comment">// 写出name</span></span><br><span class="line">        dest.writeInt(age);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Parcelable.Creator&lt;Person&gt; CREATOR = <span class="keyword">new</span> Parecelable.Creator&lt;Person&gt;() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Person <span class="title">createFromParcel</span><span class="params">(Parcel source)</span> </span>&#123;</span><br><span class="line">            Person person = <span class="keyword">new</span> Person();</span><br><span class="line">            <span class="comment">/*必须与上面写出的顺序一致*/</span></span><br><span class="line">            person.name = source.readString();<span class="comment">// 读取name</span></span><br><span class="line">            person.age = source.readInt();</span><br><span class="line">            <span class="keyword">return</span> person;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Person[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Person[size];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 传输</span><br><span class="line">intent.putExtra(<span class="string">"person_data"</span>,person);</span><br><span class="line"></span><br><span class="line"># 接收</span><br><span class="line">Person person = (Person)getIntent().getParcelableExtra(<span class="string">"person_data"</span>);</span><br></pre></td></tr></table></figure></p>
<h2 id="定制日志工具">定制日志工具</h2><p>为了方便控制开关日志，一般会定义一个日志工具类，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VERBOSE = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEBUG = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INFO = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WARN = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ERROR = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NOTHING = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> level = VERBOSE;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">v</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= VERBOSE) &#123;</span><br><span class="line">            Log.v(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">d</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= DEBUG) &#123;</span><br><span class="line">            Log.d(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">i</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= INFO) &#123;</span><br><span class="line">            Log.i(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">w</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= WARN) &#123;</span><br><span class="line">            Log.w(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">e</span><span class="params">(String tag, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (level &lt;= ERROR) &#123;</span><br><span class="line">            Log.e(tag, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 调用</span><br><span class="line">LogUtil.v() ...</span><br><span class="line"></span><br><span class="line"># 关闭所有日志</span><br><span class="line">LogUtil.level = NOTHING;</span><br></pre></td></tr></table></figure></p>
<h2 id="创建定时任务">创建定时任务</h2><h3 id="Alarm机制">Alarm机制</h3><p>简单用法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);</span><br><span class="line"><span class="keyword">long</span> triggerAtTime = SystemClock.elapsedRealtime() + <span class="number">10</span>*<span class="number">1000</span>;</span><br><span class="line"><span class="comment">/*开机至今时间（ms）+定时时间*/</span></span><br><span class="line">manager.set(AlarmManager.ELAPSED_REALTIME_WAKE_UP, triggerAtTime, pendingIntent);</span><br><span class="line"><span class="comment">/*</span><br><span class="line">** arg1: 指定AlarmManager工作类型，即时间计算方式与是否唤醒CPU。</span><br><span class="line">*/</span></span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> triggerAtTime = System.currentTimeMillis() + <span class="number">10</span>*<span class="number">1000</span>;</span><br><span class="line"><span class="comment">/*1970.1.1 0点至今时间（ms）+定时时间*/</span></span><br><span class="line">manager.set(AlarmManager.RTC_WAKEUP, triggerAtTime, pendingIntent);</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>一个后台定时服务示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongRunningService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    onBind()&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent , <span class="keyword">int</span> flags , <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">                    <span class="comment">// 执行具体逻辑操作， 新开线程，为了定时准确性</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);</span><br><span class="line">        <span class="keyword">long</span> triggerAtTime = SystemClock.elapsedRealtime() + <span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>;<span class="comment">// 定时一小时</span></span><br><span class="line">        Intent i = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, LongRunningService.class);</span><br><span class="line">        PenddingIntent pi = PendingIntent.getService(<span class="keyword">this</span>, <span class="number">0</span>, i, <span class="number">0</span>);</span><br><span class="line">        manager.set(AlarmManager.ELAPSED_REALTIME_WAKE_UP, triggerAtTime, pendingIntent);   </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>需要定时服务时启动服务：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, LongRunningService.class);</span><br><span class="line">context.startService(intent);</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>不过为了功耗，Android限制减少了cpu唤醒次数，set()可能不十分准确，若准确性要求高，可使用setExact()方法。</p>
</blockquote>
<h3 id="Doze模式">Doze模式</h3><p>Android6.0及以上为了省电新加入了Doze模式，满足未插电、屏幕关闭等一段时间将进入doze模式，对cpu、网络、Alarm等进行限制，如下为Android7.0进入Doze模式的两个阶段：<br>阶段一：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/doze_first_level.png" alt="First Level"><br>阶段二：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/image/firstcode/doze_second_level.png" alt="Second Level"></p>
<p>如若想Alarm在Doze模式也能正常执行，则需要使用AlarmManager的如下两个方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setAndAllowWhileIdle()        </span><br><span class="line">setExactAndAllowWhileIdle()</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>区别同上set()与setExact()</p>
</blockquote>
<h2 id="多窗口模式编程">多窗口模式编程</h2><p>进入多窗口模式活动会重建，可以通过如下方式改变：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">    <span class="attribute">...</span></span><br><span class="line">    <span class="attribute">android:configChanges</span>=<span class="value">"orientation|keyboardHidden|screenSize|screenLayout"</span>&gt;</span></span><br><span class="line">    // 多窗口、横竖屏切换，活动皆不会被重建</span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>屏幕的变化将通知到Acitvity的onConfigurationChanged()方法，可以重写此方法进行逻辑处理。</p>
<p>禁用多窗口模式：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="tag">&lt;<span class="title">application</span>&gt;</span>或<span class="tag">&lt;<span class="title">activity</span>&gt;</span>标签加入</span><br><span class="line">android:resizeableActivity="false"  // 默认为true，支持</span><br></pre></td></tr></table></figure></p>
<p>不过targetSDKVersion低于24的，上述属性将不会生效，这就得通过另一种方案：制定不支持横竖屏切换，因为android规定24以下不允许横竖屏切换的亦不知多窗口，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:screenOrientation=["portrait"|"landscape"]</span><br></pre></td></tr></table></figure></p>
<h2 id="Lambda表达式">Lambda表达式</h2><p>使用Java8新特性，需先在app/build.gradle添加如下配置：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">    ...</span><br><span class="line">    jackOptions.enabled = <span class="keyword">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">compileOptions &#123;</span><br><span class="line">    <span class="keyword">sourceCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class="line">    <span class="keyword">targetCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>只有一个待实现方法的接口，都可使用Lambda表达式，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br><span class="line"># Lambda 方式</span><br><span class="line"><span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">    <span class="comment">// 实现run()逻辑</span></span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure></p>
<p>带参数的书写方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(String a, <span class="keyword">int</span> b) -&gt; &#123;<span class="comment">// 还可以省略掉参数类型，Java根据上下文推断    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;全局获取Context&quot;&gt;全局获取Context&lt;/h2&gt;&lt;p&gt;新建一个自己Application，如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyApplication&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Application&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Context context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context = getApplicationContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Context &lt;span class=&quot;title&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之Material Design</title>
    <link href="http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Material-Design/"/>
    <id>http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Material-Design/</id>
    <published>2017-05-10T13:31:27.000Z</published>
    <updated>2017-08-21T13:53:01.893Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="Toolbar控件">Toolbar控件</h2><h3 id="主题定义">主题定义</h3><p>对应于ActionBar，由于ActionBar被限定于活动顶部，不能实现一些Material Design效果，因此已不推荐使用了。</p>
<p>ActionBar来自项目指定的主题定义的显示，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line">android:theme="@style/AppTheme"</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>主题的定义：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># res/values/styles.xml</span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"AppTheme"</span> <span class="attribute">parent</span> = "<span class="attribute">Theme.AppCompat.Light.DarkActionBar</span>"&gt;</span><span class="css"> # 定义指定父主题</span><br><span class="line">    &lt;!<span class="tag">--</span> <span class="tag">Customize</span> <span class="tag">your</span> <span class="tag">theme</span> <span class="tag">here</span>. <span class="tag">--</span>&gt;</span><br><span class="line">    &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="tag">colorPrimary</span>"&gt;<span class="at_rule">@<span class="keyword">color/colorPrimary&lt;/item&gt;</span></span><br><span class="line">    &lt;item name=<span class="string">"colorPrimaryDark"</span>&gt;@color/colorPrimaryDark&lt;/item&gt;</span><br><span class="line">    &lt;item name=<span class="string">"colorAccent"</span>&gt;@color/colorAccent&lt;/item&gt;</span><br><span class="line">&lt;/resources&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>父主题Theme.AppCompat.Light.DarkActionBar自带了ActionBar，使用Toolbar则需要将父主题替换，主要有如下两种可选主题：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Theme.AppCompat.Light.NoActionBar : 淡色主题，主题颜色设为淡色，陪衬颜色设为深色</span><br><span class="line">Theme.AppCompat.NoActionBar: 深色主题，界面主题颜色设为深色，陪衬颜色设为淡色</span><br></pre></td></tr></table></figure></p>
<p>为了使用Toolbar修改主题定义：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"AppTheme"</span> <span class="attribute">parent</span> = "<span class="attribute">Theme.AppCompat.Light.NoActionBar</span>"&gt;</span><span class="css"> # 定义指定父主题</span><br><span class="line">    &lt;!<span class="tag">--</span> <span class="tag">Customize</span> <span class="tag">your</span> <span class="tag">theme</span> <span class="tag">here</span>. <span class="tag">--</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/<span class="tag">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>主题中的颜色控制属性，主要如下几种：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">colorPrimary       指定标题栏背影色</span><br><span class="line">colorPrimaryDrak   指定状态栏颜色</span><br><span class="line">textColorPrimary   指定标题文字颜色</span><br><span class="line">windowBackground   背景色</span><br><span class="line">navigationBarColor 指定状态导航条颜色</span><br><span class="line">colorAccent        指定浮动按钮颜色以及一些控件选择状态</span><br></pre></td></tr></table></figure></p>
<p>每个属性指定颜色的位置如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/toolbar_anay.jpg" alt="各属性指定颜色位置"></p>
<h3 id="引入Toolbar">引入Toolbar</h3><p>Toolbar控件是由appcompat-v7库提供，引入布局：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;FrameLayout ...</span><br><span class="line"> xmlns:app="http://schemas.android.com/apk/res-auto"</span><br><span class="line"> //引入app命名空间，因为android:attribute之类属性只支持5.0及以上系统，5.0以下需要使用app:xx来兼容</span><br><span class="line"> </span><br><span class="line"> &lt;android.support.v7.widget.Toolbar</span><br><span class="line">    android:id="@+id/toolbar"</span><br><span class="line">    android:layout_width="match_parent"</span><br><span class="line">    android:layout_height="?attr/actionBarSize" // 高度设置为actionBar的高度</span><br><span class="line">    android:background="?attr/colorPrimary"</span><br><span class="line">    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span><br><span class="line">    // 为了Toolbar单独使用深色主题让效果更好，通过此属性设置，如不设置这使用默认的浅色主题效果</span><br><span class="line">    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"</span><br><span class="line">    // 将Toolbar中菜单按钮弹出的菜单项设为浅色主题</span><br><span class="line">    app:layout_scrollFlags="enterAlways|snap|scroll"</span><br><span class="line">    /&gt;</span><br><span class="line">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>加入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">setSupportActionBar(toolbar);</span><br></pre></td></tr></table></figure></p>
<h3 id="美化Toolbar">美化Toolbar</h3><p>修改标题栏显示内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">  <span class="attribute">...</span></span><br><span class="line">  <span class="attribute">android:label</span>=<span class="value">"Fruits"</span>&gt;</span></span><br><span class="line">  // 未指定的话，则显示application中android:label指定的内容</span><br><span class="line"> <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>添加action按钮：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"># 引入布局</span><br><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"</span><br><span class="line">    xmlns:app="http://schemas.android.com/apk/res-auto"&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id="@+id/backup"</span><br><span class="line">        android:icon="@drawable/ic_backup"</span><br><span class="line">        android:title="Backup"</span><br><span class="line">        app:showAsAction="always"/&gt; </span><br><span class="line">        //指定显示位置,永远显示在Toolbar中，屏幕不够则隐藏</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id="@+id/del"</span><br><span class="line">        android:icon="@drawable/ic_delete"</span><br><span class="line">        android:title="Delete"</span><br><span class="line">        app:showAsAction="ifRoom"/&gt;</span><br><span class="line">        //如果屏幕空间足够则显示，不够则显示在菜单中</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id="@+id/setting"</span><br><span class="line">        android:icon="@drawable/ic_settings"</span><br><span class="line">        android:title="Setting"</span><br><span class="line">        app:showAsAction="never"/&gt;</span><br><span class="line">        //永远隐藏，显示在菜单中</span><br><span class="line">&lt;/menu&gt;</span><br><span class="line"></span><br><span class="line"># 加入代码</span><br><span class="line">    @Override</span><br><span class="line">    public boolean onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        // 加载toolbal.xml</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean onOptionsItemSelected(MenuItem item) &#123;</span><br><span class="line">        switch (item.getItemId()) &#123;</span><br><span class="line">            case R.id.backup:</span><br><span class="line">                //Toolbar上按钮响应逻辑</span><br><span class="line">                break;</span><br><span class="line">            case R.id.del:</span><br><span class="line">                break;</span><br><span class="line">            case R.id.setting:</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>效果如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/toolbar_xiaoguo.jpg" alt="带action按钮的Toolbar"></p>
<h2 id="滑动菜单">滑动菜单</h2><h3 id="DrawerLayout">DrawerLayout</h3><p>DrawerLayout是一个布局，允许放入两个子控件，第一个控件是主屏幕中显示的内容，第二个子控件是滑动菜单中显示的内容。<br>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v4.widget.DrawerLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/drawer_layout"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="tag">&lt;<span class="title">FrameLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span>    </span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">                <span class="attribute">...</span></span><br><span class="line">                /&gt;</span></span><br><span class="line">                </span><br><span class="line">    <span class="tag">&lt;/<span class="title">FrameLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> </span><br><span class="line">        <span class="attribute">android:layout_gravity</span>=<span class="value">"start"</span> </span><br><span class="line">        //表示根据系统语言判断第二界面隐藏在左边还是右边，比如英语和中文从左边开始，就为左边，也可指定“<span class="attribute">right</span>" "<span class="attribute">left</span>" "<span class="attribute">end</span>"</span><br><span class="line">        <span class="attribute">...</span>/&gt;</span> //滑动界面先加载一个TextView</span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入导航按钮：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> DrawerLayout mlayout;</span><br><span class="line"></span><br><span class="line">mlayout = (DrawerLayout) findViewById(R.id.drawer_layout);</span><br><span class="line">ActionBar actionBar = getSupportActionBar();<span class="comment">//获得ActionBar(其实是Toolbar)</span></span><br><span class="line"><span class="keyword">if</span> (actionBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">    actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>); <span class="comment">// 显示导航按钮(HomeAsUp按钮)，默认是一个返回箭头</span></span><br><span class="line">    actionBar.setHomeAsUpIndicator(R.drawable.ic_menu);<span class="comment">//设置图标</span></span><br><span class="line">&#125;</span><br><span class="line"># 也可以直接在布局文件中加入：</span><br><span class="line">app:navigationIcon=<span class="string">"@drawable/ic_menu"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">        mlayout.openDrawer(GravityCompat.START);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p>
<h3 id="NavigationView">NavigationView</h3><p>NavigationView是Design Support提供的一个空间，可以让滑动菜单设计好看又简单，首先需要加入依赖：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:design:24.2.1'</span> <span class="comment">//Design Support库</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'de.hdodenhof:circleimageview:2.1.0'</span> <span class="comment">// Circleimageview，实现图片圆形化功能，用于头像</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><a href="https://github.com/hdodenhof/Circleimageview" target="_blank" rel="external">Circleimageview项目主页地址</a></p>
</blockquote>
<p>准备滑动菜单页面布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"># menu  </span><br><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">menu</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">group</span> <span class="attribute">android:checkableBehavior</span>=<span class="value">"single"</span>&gt;</span> //指定这一组菜单项单选</span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_call"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_call"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Call"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_friends"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_friends"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Friends"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_location"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_location"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Location"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_mail"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_mail"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Mail"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">item</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/nav_task"</span></span><br><span class="line">            <span class="attribute">android:icon</span>=<span class="value">"@drawable/nav_task"</span></span><br><span class="line">            <span class="attribute">android:title</span>=<span class="value">"Tasks"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">menu</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># headerLayout</span><br><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"180dp"</span></span><br><span class="line">    <span class="attribute">android:padding</span>=<span class="value">"10dp"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"?attr/colorPrimary"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">de.hdodenhof.circleimageview.CircleImageView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/icon_image"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"70dp"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"70dp"</span></span><br><span class="line">        <span class="attribute">android:src</span>=<span class="value">"@drawable/nav_icon"</span></span><br><span class="line">        <span class="attribute">android:layout_centerInParent</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/mail"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_alignParentBottom</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"huaqinalee@gmail.com"</span></span><br><span class="line">        <span class="attribute">android:textColor</span>=<span class="value">"#FFF"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"14sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/usr_name"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_above</span>=<span class="value">"@+id/mail"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"Andy Lee"</span></span><br><span class="line">        <span class="attribute">android:textColor</span>=<span class="value">"#fff"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"14sp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>引入滑动菜单页面布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 将前面的TextView换为NavigationView</span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.NavigationView</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/nav_view"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_gravity</span>=<span class="value">"start"</span></span><br><span class="line">    <span class="attribute">app:menu</span>=<span class="value">"@menu/nav_menu"</span>  // 引入<span class="attribute">menu</span></span><br><span class="line">    <span class="attribute">app:headerLayout</span>=<span class="value">"@layout/nav_header"</span> // 引入<span class="attribute">headerLayout</span></span><br><span class="line">    /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入响应代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">NavigationView navView = (NavigationView) findViewById(R.id.nav_view);</span><br><span class="line"><span class="comment">//navView.setCheckedItem(R.id.nav_call); //设置菜单默认选中项</span></span><br><span class="line">navView.setNavigationItemSelectedListener(<span class="keyword">new</span> NavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNavigationItemSelected</span><span class="params">(@NonNull MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//添加菜单项响应逻辑</span></span><br><span class="line">        <span class="comment">//mlayout.closeDrawers(); 关闭滑动菜单</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/blog/app/navigation_view.jpg" alt="NavigationView滑动菜单界面"></p>
<h2 id="悬浮按钮和可交互提示">悬浮按钮和可交互提示</h2><h3 id="FloatingActionButton">FloatingActionButton</h3><p>引入悬浮按钮布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">FrameLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">            <span class="attribute">...</span></span><br><span class="line">            /&gt;</span></span><br><span class="line">            </span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.FloatingActionButton</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/fab"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_gravity</span>=<span class="value">"bottom|end"</span> //对于中英文，右下角</span><br><span class="line">            <span class="attribute">android:layout_margin</span>=<span class="value">"16dp"</span></span><br><span class="line">            <span class="attribute">android:src</span>=<span class="value">"@drawable/ic_done"</span></span><br><span class="line">            <span class="attribute">app:elevation</span>=<span class="value">"8dp"</span> //悬浮高度</span><br><span class="line">            /&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="title">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入响应代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);</span><br><span class="line">fab.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 实现响应逻辑</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Snackbar">Snackbar</h3><p>提供交互的提示，与Toast类似，加入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">**arg1：一个View，当前界面的任意view，会自动找到最外层布局</span><br><span class="line">**arg2：显示的内容</span><br><span class="line">**arg3：时长</span><br><span class="line">*/</span></span><br><span class="line">Snackbar.make(v, <span class="string">"Data deleted"</span>, Snackbar.LENGTH_SHORT).setAction(<span class="string">"Undo"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"Del undo!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).show();</span><br></pre></td></tr></table></figure></p>
<h3 id="CoordinatorLayout">CoordinatorLayout</h3><p>直接如上加入Snackbar，提示的内容直接弹出会覆盖悬浮按钮，体验不好，所以就需要引入加强版FrameLayout：CoordinatorLayout。此布局可以监听子控件，并且做出响应调整。<br>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 替换掉FrameLayout</span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.FloatingActionButton</span></span><br><span class="line">    <span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这样替换布局后，悬浮按钮会自动上移以避免覆盖，效果如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/android/firstcode/coorlayout.jpg" alt="效果图"></p>
<blockquote>
<p>Snackbar.make时传入的view是Snackbar本身，包含在CoordinatorLayout中，所以能响应，如若传入的是外面的View，则不能响应。</p>
</blockquote>
<h2 id="卡片式布局">卡片式布局</h2><h3 id="CardView">CardView</h3><p>CardView也是appcompat-v7库提供的一个FrameLayout，不过增加了圆角阴影等立体效果。</p>
<h4 id="基本用法：">基本用法：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:cardCornerRadius</span>=<span class="value">"4dp"</span> // 圆角弧度</span><br><span class="line">    <span class="attribute">app:elevation</span>=<span class="value">"5dp"</span>/&gt;</span>// 投影高度</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">...</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="RecyclerView和CardView等控件实现水果列表效果">RecyclerView和CardView等控件实现水果列表效果</h4><p>添加依赖：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:24.2.1'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:cardview-v7:24.2.1'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">'com.github.bumptech.glide:glide:3.7.0'</span> </span><br><span class="line"><span class="comment">//一个强大的图片加载库，可加载（网络）图片、GIF、本地视频。</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p><a href="https://github.com/bumptech/glide" target="_blank" rel="external">Glide项目主页地址</a></p>
</blockquote>
<p>引入RecyclerView布局：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">    &lt;android.support.v7.widget.Toolbar</span><br><span class="line">        ..../&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">        android:id="@+id/recycler_view"</span><br><span class="line">        android:layout_width="match_parent"</span><br><span class="line">        android:layout_height="match_parent"/&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>这样子RecyclerView会将Toolbar给遮住，因为CoordinatorLayout(类似FrameLayout)布局默认置于左上角，后面通过APPBarLayout解决此问题</p>
</blockquote>
<p>定义一个Fruit实体类（只有name和imageId两个字段）。接下来需要为RecyclerView的子项指定自定义布局fruit_item.xml。</p>
<p>引入CardView布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span>     <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_margin</span>=<span class="value">"5dp"</span></span><br><span class="line">    <span class="attribute">app:cardCornerRadius</span>=<span class="value">"4dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/fruit_image"</span></span><br><span class="line">            <span class="attribute">android:scaleType</span>=<span class="value">"centerCrop"</span> //指定图片缩放方式</span><br><span class="line">            <span class="attribute">...</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/fruit_name"</span></span><br><span class="line">            <span class="attribute">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>添加RecyclerView适配器FruitAdapter，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">FruitAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; mLists;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(List&lt;Fruit&gt; lists)</span> </span>&#123;</span><br><span class="line">        mLists = lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> FruitAdapter.<span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mContext = parent.getContext();</span><br><span class="line">        &#125;</span><br><span class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> viewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(FruitAdapter.ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        Fruit fruit = mLists.get(position);</span><br><span class="line">        holder.fruitName.setText(fruit.getName());</span><br><span class="line">        Glide.with(mContext).load(fruit.getImageId()).into(holder.fruitImage);</span><br><span class="line">        <span class="comment">// 使用Glide加载图片</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mLists.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        CardView cardView;</span><br><span class="line">        ImageView fruitImage;</span><br><span class="line">        TextView fruitName;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cardView = (CardView) itemView;</span><br><span class="line">            fruitImage = (ImageView) itemView.findViewById(R.id.fruit_image);</span><br><span class="line">            fruitName = (TextView) itemView.findViewById(R.id.fruit_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>添加加载RecyclerView代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(...);</span><br><span class="line">GridLayoutManager layoutManager = <span class="keyword">new</span> GridLayoutManager(<span class="keyword">this</span>, <span class="number">2</span>);</span><br><span class="line">recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">adapter = <span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">recyclerView.setAdapter(adapter);</span><br></pre></td></tr></table></figure></p>
<h3 id="AppBarLayout">AppBarLayout</h3><p>APPBarLayout也是Design Support提供，解决RecyclerView遮挡Toolbar问题只需两步：</p>
<ol>
<li>将Toolbar嵌套到APPBarLayout中。</li>
<li>给RecyclerView指定一个布局行为。</li>
</ol>
<p>修改布局如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">    <span class="attribute">app:layout_scrollFlags</span>=<span class="value">"enterAlways|snap|scroll"</span></span><br><span class="line">    /*  </span><br><span class="line">    ** <span class="attribute">enterAlways</span> <span class="attribute">-</span> <span class="attribute">Toolbar</span>跟随向下滚动并重新显示</span><br><span class="line">    ** <span class="attribute">snap</span> <span class="attribute">-</span> <span class="attribute">Toolbar</span>还未完全隐藏或显示时，根据滚动距离自动选择</span><br><span class="line">    ** <span class="attribute">scroll</span> <span class="attribute">-</span> <span class="attribute">Toolbar</span>跟着向上滚动并隐藏</span><br><span class="line">    */</span><br><span class="line">        <span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">    <span class="attribute">...</span> </span><br><span class="line">    <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="下拉刷新">下拉刷新</h2><p>support-v4提供的SwipeRefreshLayout可以很简单的实现刷新功能。<br>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v4.widget.SwipeRefreshLayout</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/swipe_refresg"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line">    // 需要将上述的布局行为移到其父控件了</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">        <span class="attribute">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>代码实现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SwipeRefreshLayout swipeRefresh;</span><br><span class="line">swipeRefresh = (SwipeRefreshLayout)findViewById(R.id.swipe_refresg);</span><br><span class="line">swipeRefresh.setColorSchemeResources(R.color.colorPrimary); <span class="comment">// 设置下拉进度条颜色</span></span><br><span class="line">swipeRefresh.setOnRefreshListener(<span class="keyword">new</span> SwipeRefreshLayout.OnRefreshListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        refreshFruits();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshFruits</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">2000</span>); <span class="comment">//获取数据，这里模拟时间</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;<span class="comment">//切回主线程更新UI</span></span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                initFruits();</span><br><span class="line">                adapter.notifyDataSetChanged();</span><br><span class="line">                swipeRefresh.setRefreshing(<span class="keyword">false</span>);<span class="comment">//刷新结束，隐藏进度条</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure></p>
<h2 id="可折叠式标题栏">可折叠式标题栏</h2><h3 id="CollapsingToolbarLayout">CollapsingToolbarLayout</h3><p>如下所示，左边必须作为右边的子控件才能存在：</p>
<p><strong>CollapsingToolbarLayout -&gt; AppBarLayout -&gt; CoordinatorLayout.</strong></p>
<p>新建一个水果详情展示页面布局（activity_fruit.xml）来应用可折叠式标题栏。</p>
<p>引入布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span></span><br><span class="line">    <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    # 标题部分</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">        <span class="attribute">...</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.CollapsingToolbarLayout</span></span><br><span class="line">            <span class="attribute">...</span></span><br><span class="line">            <span class="attribute">android:theme</span>=<span class="value">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span> // <span class="attribute">Toolbar</span>主题，移到此父控件</span><br><span class="line">            <span class="attribute">app:contentScrim</span>=<span class="value">"?attr/colorPrimary"</span> //折叠背景色,折叠后就变成一个普通<span class="attribute">Toolbar</span>了</span><br><span class="line">            <span class="attribute">app:layout_scrollFlags</span>=<span class="value">"scroll|exitUntilCollapsed"</span></span><br><span class="line">            /*</span><br><span class="line">            ** <span class="attribute">Toolbar</span>属性，移到父控件了</span><br><span class="line">            ** <span class="attribute">exitUntilCollapsed</span> <span class="attribute">-</span> 表示折叠后保留不隐藏</span><br><span class="line">            */</span><br><span class="line">            <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            /*标题栏内容：图片+普通标题栏*/</span><br><span class="line">            <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">                <span class="attribute">...</span></span><br><span class="line">                <span class="attribute">android:scaleType</span>=<span class="value">"centerCrop"</span></span><br><span class="line">                <span class="attribute">app:layout_collapseMode</span>=<span class="value">"parallax"</span> // 指定折叠模式，<span class="attribute">parallax-</span>折叠时错位偏移</span><br><span class="line">                <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">android.support.v7.widget.Toolbar</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/toolbar"</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"?attr/actionBarSize"</span></span><br><span class="line">                <span class="attribute">app:layout_collapseMode</span>=<span class="value">"pin"</span> // 表示折叠过程中<span class="attribute">Toolbar</span>位置不变</span><br><span class="line">                /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="title">android.support.design.widget.CollapsingToolbarLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.design.widget.AppBarLayout</span>&gt;</span>    </span><br><span class="line">    </span><br><span class="line">    # 详情页部分</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v4.widget.NestedScrollView</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">        <span class="attribute">app:layout_behavior</span>=<span class="value">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">        ** 同ScrollView，允许滚动查看，不过多了响应滚动事件</span><br><span class="line">        ** 因为外使用CoordinatorLayout，需要用此控件或RecyclerView，用法同上RecyclerView一样</span><br><span class="line">        ** 只允许存在一个直接子布局</span><br><span class="line">        */</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">            <span class="attribute">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">android.support.v7.widget.CardView</span></span><br><span class="line">                <span class="attribute">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">                    <span class="attribute">...</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="title">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">android.support.v4.widget.NestedScrollView</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    # 增加一个悬浮按钮</span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.design.widget.FloatingActionButton</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">        <span class="attribute">app:layout_anchor</span>=<span class="value">"@id/appBar"</span> //指定描点，这里写<span class="attribute">APPBarLayout</span>的<span class="attribute">id</span>，这样按钮就出现在标题栏区域</span><br><span class="line">        <span class="attribute">app:layout_anchorGravity</span>=<span class="value">"bottom|end"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># Adapter中添加RecyclerView子项响应代码</span><br><span class="line"><span class="keyword">public</span> FruitAdapter.<span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mContext == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mContext = parent.getContext();</span><br><span class="line">    &#125;</span><br><span class="line">    View view = LayoutInflater.from(mContext).inflate(R.layout.fruit_item, parent, <span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">final</span> ViewHolder holder = <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">    holder.cardView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> position = holder.getAdapterPosition();</span><br><span class="line">            Fruit fruit = mLists.get(position);</span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(mContext,FruitActivity.class);</span><br><span class="line">            intent.putExtra(FruitActivity.FRUIT_NAME,fruit.getName());</span><br><span class="line">            intent.putExtra(FruitActivity.FRUIT_IMAGE_ID,fruit.getImageId());</span><br><span class="line">            mContext.startActivity(intent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> holder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 详情页面代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_NAME = <span class="string">"fruit_name"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_IMAGE_ID = <span class="string">"fruit_image_id"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_fruit);</span><br><span class="line"></span><br><span class="line">        Intent intent = getIntent();</span><br><span class="line">        String  fruitName = intent.getStringExtra(FRUIT_NAME);</span><br><span class="line">        <span class="keyword">int</span> fruitImageId = intent.getIntExtra(FRUIT_IMAGE_ID,<span class="number">0</span>);</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">//显示默认HomeAsUp按钮，一个返回箭头</span></span><br><span class="line">        setSupportActionBar(toolbar); </span><br><span class="line">        ActionBar actionBar = getSupportActionBar();</span><br><span class="line">        <span class="keyword">if</span> (actionBar != <span class="keyword">null</span>) &#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        collapsingToolbar.setTitle(fruitName);</span><br><span class="line">        Glide.with(<span class="keyword">this</span>).load(fruitImageId).into(fruitImageView);</span><br><span class="line">        fruitText.setText(fruitContent); <span class="comment">//设置详情页内容</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:  <span class="comment">// HomeAsUp按钮返回上一活动</span></span><br><span class="line">                finish();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="背景图片和系统状态栏融合">背景图片和系统状态栏融合</h3><p>对ImageView及其所有父布局属性设定，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">android.support.design.widget.CoordinatorLayout</span></span><br><span class="line"> <span class="attribute">...</span></span><br><span class="line"> <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">android.support.design.widget.AppBarLayout</span></span><br><span class="line">        <span class="attribute">...</span></span><br><span class="line">        <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">android.support.design.widget.CollapsingToolbarLayout</span></span><br><span class="line">            <span class="attribute">...</span></span><br><span class="line">            <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">                <span class="attribute">...</span></span><br><span class="line">                <span class="attribute">android:fitsSystemWindows</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>接下来需要将状态栏指定撑透明，但是android:statusBarColor属性是API21开始支持的（即Android5.0）。先为5.0以上新建一个values-21/styles.xml，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"FruitActivityTheme"</span> <span class="attribute">parent</span>=<span class="value">"AppTheme"</span>&gt;</span><span class="css"></span><br><span class="line">        &lt;<span class="tag">item</span> <span class="tag">name</span>="<span class="rule"><span class="attribute">android</span>:<span class="value">statusBarColor<span class="string">"&gt;@android:color/transparent&lt;/item&gt;</span><br><span class="line">    </span></span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>为了支持5.0以前，对values/styles.xml进行修改，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="title">style</span> <span class="attribute">name</span>=<span class="value">"FruitActivityTheme"</span> <span class="attribute">parent</span>=<span class="value">"AppTheme"</span>&gt;</span><span class="css"></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"># 因为5.0以前不能指定状态栏颜色，所以留空即可了。</span><br></pre></td></tr></table></figure></p>
<p>最后让activity调用此主题，如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># AndroidManifest.xml</span><br><span class="line">&lt;activity</span><br><span class="line">    ...</span><br><span class="line">    android:theme="@style/FruitActivityTheme"</span><br><span class="line">&lt;/activiy&gt;</span><br></pre></td></tr></table></figure></p>
<p>android5.0以上的版本还有一种融合及透明状态栏的方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 参考coolweather融合必应图片，及头布局间隔设置</span><br><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">21</span>) &#123;</span><br><span class="line">    View decorView = getWindow().getDecorView();</span><br><span class="line">    decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);</span><br><span class="line">    getWindow().setStatusBarColor(Color.TRANSPARENT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>效果图如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/fruit_effct.gif" alt="fruit_effect"></p>
<h2 id="示例源码">示例源码</h2><p>整个Material Design示例源码的地址如下：</p>
<p><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter12" target="_blank" rel="external">Material Design示例源码</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Toolbar控件&quot;&gt;Toolbar控件&lt;/h2&gt;&lt;h3 id=&quot;主题定义&quot;&gt;主题定义&lt;/h3&gt;&lt;p&gt;对应于ActionBar，由于ActionBar被限定于活动顶部，不能实现一些Material Design效果，因此已不推荐使用了。&lt;/p&gt;
&lt;p&gt;ActionBar来自项目指定的主题定义的显示，如下：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# AndroidManifest.xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android:theme=&quot;@style/AppTheme&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之碎片</title>
    <link href="http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Fragment/"/>
    <id>http://huaqianlee.github.io/2017/05/10/FirstCode/FirstCode-Fragment/</id>
    <published>2017-05-10T04:24:05.000Z</published>
    <updated>2017-06-18T10:13:33.451Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="碎片的使用">碎片的使用</h2><h3 id="碎片的简单用法">碎片的简单用法</h3><p>新建一个示例包含两个碎片，平分活动空间，新建左侧碎片布局，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">Button...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>新建右侧碎片布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">TextView...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>新建LeftFragment类，继承于Fragment（选择来自support-v4库的类，做到向下兼容）。如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">leftFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">	onCreateView() &#123;</span><br><span class="line">		View view = inflater.inflate(R.layout.left_fragment, container, <span class="keyword">false</span>);</span><br><span class="line">		<span class="keyword">return</span> view;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>新建RightFragment类，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">leftFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">	onCreateView() &#123;</span><br><span class="line">		View view = inflater.inflate(R.layout.right_fragment, container, <span class="keyword">false</span>);</span><br><span class="line">		<span class="keyword">return</span> view;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>修改主活动布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">	<span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>	</span><br><span class="line">	<span class="attribute">...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.LeftFragment"</span>	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.RightFragment"</span>	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="动态添加碎片">动态添加碎片</h3><p>新建another_right_fragment.xml：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">TextView...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>新建AnotherRightFragment类，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnotherRightFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">	onCreateView() &#123;</span><br><span class="line">		inflater.inflate(R.another_right_fragment, container, <span class="keyword">false</span>);</span><br><span class="line">		<span class="keyword">return</span> view;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>主活动添加布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">FrameLaout</span> <span class="attribute">...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>修改主活动代码：<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">replaceFragment(<span class="keyword">new</span> <span class="type">AnotherRightFragment</span><span class="literal">()</span>);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">private</span> void replaceFragment(<span class="type">Fragment</span> fragment) &#123;</span><br><span class="line">	<span class="type">FragmentManager</span> fragmentManager = getSupportFragmentManager<span class="literal">()</span>;</span><br><span class="line">	<span class="type">FragmentTransaction</span> transaction = fragmentManager.beginTransaction<span class="literal">()</span>;</span><br><span class="line">	transaction.replace(<span class="type">R</span>.id.right, fagment);</span><br><span class="line">	transaction.commit<span class="literal">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="碎片中模拟返回栈">碎片中模拟返回栈</h3><p>修改代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">replaceFragment()&#123;</span><br><span class="line">	...</span><br><span class="line">	transaction.addToBackStack(<span class="keyword">null</span>);<span class="comment">//按下返回键后，则回退碎片</span></span><br><span class="line">	transaction.commmit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="碎片与活动通信">碎片与活动通信</h3><p>活动中获取碎片实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RightFragment rightFragment = (RightFragment) getFragmentManager()</span><br><span class="line">	.findFragmentById(R.id.right_fragment);</span><br></pre></td></tr></table></figure></p>
<p>碎片中获取活动：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MainActivity activity = (MainActivity)getActivity();<span class="comment">//获取碎片相关联的活动实例</span></span><br></pre></td></tr></table></figure></p>
<h2 id="碎片的生命周期">碎片的生命周期</h2><p>碎片生命周期中的状态有：</p>
<ol>
<li>运行状态：碎片可见，关联活动处于运行状态，碎片也处于运行状态。</li>
<li>暂停状态：活动进入暂停状态（另一非占全屏的活动加到栈顶），关联碎片也就进入暂停状态。</li>
<li>停止状态：活动进入停止状态，或调用FragmentTransaction.remove()、replace()，事务提交前有调用addToBackStack()。进入停止状态不可见，可能会被系统回收。</li>
<li>销毁状态：活动被销毁，或调用FragmentTransaction.remove()、replace()，事务提交前未调用addToBackStack()。</li>
</ol>
<p>碎片生命周期如下：</p>
<p><img src="http://7xjdax.com1.z0.glb.clouddn.com/fragment_lifecycle.png" alt="碎片的生命周期"></p>
<p>几个关键回调：</p>
<ul>
<li>onAttach()：碎片和活动建立关联时调用。</li>
<li>onCreateView()：为碎片创建视图（加载布局）时调用。</li>
<li>onActivityCreated()：确保与碎片相关联的活动创建完毕时调用。</li>
<li>onDestroyView()：与碎片关联的视图被移除时调用。</li>
<li>onDetach()：碎片与活动解除关联时调用。</li>
</ul>
<h2 id="动态加载布局">动态加载布局</h2><h3 id="使用限定符">使用限定符</h3><p>修改主活动布局：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">	<span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>	</span><br><span class="line">	<span class="attribute">...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.LeftFragment"</span></span><br><span class="line">	//满屏显示	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>新建新的主布局res/layout-large/activity_main.xml，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">	<span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span>	</span><br><span class="line">	<span class="attribute">...</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.LeftFragment"</span>	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">	<span class="attribute">android:name</span>=<span class="value">"com.example.lee.fragmentdemo.RightFragment"</span>	</span><br><span class="line">	<span class="attribute">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这样布局后，手机就会默认加载第一个布局，平板则加载large布局。</p>
<p>Android中场景限定符（Qualifiers）如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">限定符</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">small</td>
<td style="text-align:center">小屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">normal</td>
<td style="text-align:center">中等屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">large</td>
<td style="text-align:center">大屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">xlarge</td>
<td style="text-align:center">超大屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">ldpi</td>
<td style="text-align:center">低分辨率设备的资源（120dpi以下）</td>
</tr>
<tr>
<td style="text-align:center">mdpi</td>
<td style="text-align:center">中分辨率设备的资源（120～160dpi）</td>
</tr>
<tr>
<td style="text-align:center">hdpi</td>
<td style="text-align:center">高分辨率设备的资源（160～240dpi）</td>
</tr>
<tr>
<td style="text-align:center">xhdpi</td>
<td style="text-align:center">超高分辨率设备的资源（240～320dpi）</td>
</tr>
<tr>
<td style="text-align:center">xxhdpi</td>
<td style="text-align:center">超超高分辨率设备的资源（320～480dpi）</td>
</tr>
<tr>
<td style="text-align:center">land</td>
<td style="text-align:center">横屏设备的资源</td>
</tr>
<tr>
<td style="text-align:center">port</td>
<td style="text-align:center">竖屏设备的资源</td>
</tr>
</tbody>
</table>
<h3 id="使用最小宽度限定符">使用最小宽度限定符</h3><p>不用large，新建res/layout-sw600dp/activity_main.xml。这样在屏幕宽度大于600dp时，则会自动调此布局。</p>
<h2 id="示例源码">示例源码</h2><p>示例源码地址： <a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter4/FragmentBestPractice" target="_blank" rel="external">一个简易新闻应用示例源码地址</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;碎片的使用&quot;&gt;碎片的使用&lt;/h2&gt;&lt;h3 id=&quot;碎片的简单用法&quot;&gt;碎片的简单用法&lt;/h3&gt;&lt;p&gt;新建一个示例包含两个碎片，平分活动空间，新建左侧碎片布局，如下：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;LinearLayout...&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Button...&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;LinearLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>第一行代码之网络</title>
    <link href="http://huaqianlee.github.io/2017/05/09/FirstCode/FirstCode-Network/"/>
    <id>http://huaqianlee.github.io/2017/05/09/FirstCode/FirstCode-Network/</id>
    <published>2017-05-09T11:29:56.000Z</published>
    <updated>2017-06-18T06:11:49.845Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/" target="_blank" rel="external">《第一行代码》第2版思维导图及所有学习笔记目录</a></p>
<h2 id="WebView">WebView</h2><p>WebView控件使用十分简单：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 布局</span><br><span class="line">&lt;WebView /&gt;</span><br><span class="line"></span><br><span class="line"># 应用</span><br><span class="line">webView.getSettings().setJavaScriptEnabled(<span class="keyword">true</span>); <span class="comment">// 设置浏览器属性，支持JavaScript脚本</span></span><br><span class="line">webView.setWebViewClient(<span class="keyword">new</span> WebViewClient());<span class="comment">//目标网页在当前WebView中显示，而不打开系统浏览器</span></span><br><span class="line">webView.loadUrl(<span class="string">"http://huaqianlee.github.io"</span>);</span><br><span class="line"></span><br><span class="line"># 权限</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.INTERNET"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="HTTP协议">HTTP协议</h2><h3 id="HttpURLConnection">HttpURLConnection</h3><p>获取实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"http://huaqianlee.github.io"</span>);</span><br><span class="line">HttpURLConnection connection = (HttpURLConnection) url.openConnection();</span><br></pre></td></tr></table></figure></p>
<p>设置HTTP请求所使用的方法：GET或POST。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.setRequestMethod(<span class="string">"GET"</span>);</span><br></pre></td></tr></table></figure></p>
<p>其它定制：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">connection.setReadTimeout(<span class="number">8000</span>);<span class="comment">// ms</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>读取服务器返回的输入流：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream in = connection.getInputStream();</span><br></pre></td></tr></table></figure></p>
<p>关闭HTTP连接：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.disconnect();</span><br></pre></td></tr></table></figure></p>
<p>提交数据：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conneciton.setRequestMethod(<span class="string">"POST"</span>);</span><br><span class="line">DataOutputStream out = <span class="keyword">new</span> DataOutputStream(connection.getOutputStream());</span><br><span class="line">out.writeBytes(<span class="string">"username=admin&amp;password=123456"</span>);</span><br><span class="line"><span class="comment">//数据之间用“&amp;”隔开</span></span><br></pre></td></tr></table></figure></p>
<h3 id="OkHttp">OkHttp</h3><p>OkHttp项目地址：<a href="https://github.com/square/okhttp" target="_blank" rel="external">https://github.com/square/okhttp</a>。</p>
<p>下载：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Gradle: app/build.gradle</span><br><span class="line">compile 'com.squareup.okhttp3:okhttp:3.7.0'</span><br></pre></td></tr></table></figure></p>
<p>用法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 创建实例</span><br><span class="line">OKHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line"></span><br><span class="line"># 创建Request对象,build()之前可以定制Request对象</span><br><span class="line">Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">    .url(<span class="string">"http://huaqianlee.github.io"</span>)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"># 创建Call对象,response为服务器返回的数据</span><br><span class="line">Response response  = client.newCall(request).execute();</span><br><span class="line"></span><br><span class="line"># 获取具体内容</span><br><span class="line">String responseData = response.body().string();</span><br><span class="line"></span><br><span class="line"># 如果发起POST请求，需先构建Body对象存储提交的参数</span><br><span class="line">RequestBody requestBOdy = <span class="keyword">new</span> FormBody.Builder()</span><br><span class="line">    .add(<span class="string">"username"</span>,<span class="string">"admin"</span>)</span><br><span class="line">    .add(<span class="string">"password"</span>,<span class="string">"123456"</span>)</span><br><span class="line">    .build();</span><br><span class="line">    </span><br><span class="line"># 创建Request对象</span><br><span class="line">Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">    .url(<span class="string">"http://huaqianlee.github.io"</span>)</span><br><span class="line">    .post(requestBody)</span><br><span class="line">    .build();</span><br><span class="line"># 其余就和上面GET请求一样了</span><br></pre></td></tr></table></figure></p>
<h2 id="解析XML格式数据">解析XML格式数据</h2><p>假设服务器有如下一段xml：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">apps</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">id</span>&gt;</span>1<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">name</span>&gt;</span>Google Maps<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">app</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="title">apps</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Pull解析方式">Pull解析方式</h3><p>获取到网页字符数据后，解析方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">XmlPullParserFactory factory = XmlPullParserFactory.newInstance();</span><br><span class="line">XmlPullParser xmlPullParser = factory.newPullParser();</span><br><span class="line"><span class="comment">/*设入需要解析的服务器数据*/</span></span><br><span class="line">xmlPullParser.setInput(<span class="keyword">new</span> StringReader(xmlData));</span><br><span class="line"><span class="keyword">int</span> eventType = xmlPullParser.getEventType();</span><br><span class="line"><span class="keyword">while</span> (eventType != XmlPullParser.END_DOCUMENT) &#123;</span><br><span class="line">    String nodeName = xmlPullParser.getName(); <span class="comment">//获取当前节点名</span></span><br><span class="line">    <span class="keyword">switch</span> (eventType) &#123;</span><br><span class="line">        <span class="comment">// 开始解析某个结点</span></span><br><span class="line">        <span class="keyword">case</span> XmlPullParser.START_TAG: &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"id"</span>.equals(nodeName)) &#123;</span><br><span class="line">                id = xmlPullParser.nextText();</span><br><span class="line">            &#125; ...</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 完成解析某个结点</span></span><br><span class="line">        <span class="keyword">case</span> XmlPullParser.END_TAG: &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"app"</span>.equals(nodeName)) &#123;</span><br><span class="line">                <span class="comment">// 完成一个节点解析，要做什么代码写在这</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    eventType = xmlPullParser.next();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="SAX解析方式">SAX解析方式</h3><p>新建一个继承于DefaultHandler的子类，并重写5个方法，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContentHandler</span> <span class="keyword">extends</span> <span class="title">DefaultHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String nodeName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder version;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDocument</span><span class="params">()</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        id = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        name = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        version = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="comment">// 记录当前结点名</span></span><br><span class="line">        nodeName = localName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">characters</span><span class="params">(<span class="keyword">char</span>[] ch, <span class="keyword">int</span> start, <span class="keyword">int</span> length)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="comment">// 根据当前的结点名判断将内容添加到哪一个StringBuilder对象中</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"id"</span>.equals(nodeName)) &#123;</span><br><span class="line">            id.append(ch, start, length);</span><br><span class="line">        &#125; <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(<span class="string">"name"</span>.equals(nodeName)</span>) </span>&#123;</span><br><span class="line">            name.append(ch, start, length);</span><br><span class="line">        &#125; <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(<span class="string">"version"</span>.equals(nodeName)</span>) </span>&#123;</span><br><span class="line">            version.append(ch, start, length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endElement</span><span class="params">(String uri, String localName, String qName)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"app"</span>.equals(localName)) &#123;</span><br><span class="line">            <span class="comment">/*解析出来带换行符，所以调用trim()去掉*/</span></span><br><span class="line">            Log.d(<span class="string">"ContentHandler"</span>, <span class="string">"id is "</span> + id.toString().trim());</span><br><span class="line">            ...</span><br><span class="line">            <span class="comment">// 最后要将StringBuilder清空掉</span></span><br><span class="line">            id.setLength(<span class="number">0</span>);</span><br><span class="line">            name.setLength(<span class="number">0</span>);</span><br><span class="line">            version.setLength(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endDocument</span><span class="params">()</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.endDocument();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>解析代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    SAXParserFactory factory = SAXParserFactory.newInstance();</span><br><span class="line">    XMLReader xmlReader = factory.newSAXParser().getXMLReader();</span><br><span class="line">    ContentHandler handler = <span class="keyword">new</span> ContentHandler();</span><br><span class="line">    <span class="comment">// 将ContentHandler的实例设置到XMLReader中</span></span><br><span class="line">    xmlReader.setContentHandler(handler);</span><br><span class="line">    <span class="comment">// 开始执行解析</span></span><br><span class="line">    xmlReader.parse(<span class="keyword">new</span> InputSource(<span class="keyword">new</span> StringReader(xmlData)));</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="解析JSON格式数据">解析JSON格式数据</h2><p>假设服务器有如下JSON数据：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;"<span class="attribute">id</span>":<span class="value"><span class="string">"5"</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"Google Map"</span></span>,"<span class="attribute">version</span>":<span class="value"><span class="string">"1.0"</span></span>&#125;,...]</span><br></pre></td></tr></table></figure></p>
<h3 id="使用JSONObject">使用JSONObject</h3><p>获取到字符数据后，解析方式如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将服务器的JSON数组传入JSONArray*/</span></span><br><span class="line">JSONArray jsonArray = <span class="keyword">new</span> JSONArray(jsonData);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; jsonArray.length(); i++) &#123;</span><br><span class="line">    JSONObject jsonObject = jsonArray.getJSONObject(i);</span><br><span class="line">    String id = jsonObject.getString(<span class="string">"id"</span>);</span><br><span class="line">    String name = jsonObject.getString(<span class="string">"name"</span>);</span><br><span class="line">    String version = jsonObject.getString(<span class="string">"version"</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="使用GSON">使用GSON</h3><p>加入依赖：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile 'com.google.code.gson:gson:2.7'</span><br></pre></td></tr></table></figure></p>
<p>基本用法：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># json 数据</span><br><span class="line">&#123;"name":"Tom","age":"20"&#125;</span><br><span class="line"></span><br><span class="line"># 解析</span><br><span class="line">Gson gson = new Gson();</span><br><span class="line">Person person = gson.fromJson(jsonData, Person.class);</span><br><span class="line"></span><br><span class="line"># 数组内容解析：</span><br><span class="line">List&lt;Person&gt; people = gson.fromJson(jsonData, new TypeToken&lt;List&lt;Person&gt;&gt;()&#123;&#125;.getType());</span><br></pre></td></tr></table></figure></p>
<p>示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 首先需要新建个App类</span><br><span class="line"></span><br><span class="line"># 解析</span><br><span class="line">Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">List&lt;App&gt; appList = gson.fromJson(jsonData, <span class="keyword">new</span> TypeToken&lt;List&lt;App&gt;&gt;() &#123;&#125;.getType());</span><br><span class="line"><span class="keyword">for</span> (App app : appList) &#123;</span><br><span class="line">    Log.d(<span class="string">"MainActivity"</span>, <span class="string">"id is "</span> + app.getId());</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="封装网络请求">封装网络请求</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"># HTTP方式首先得新建一个回调接口</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">HttpCallbackListener</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onFinish</span><span class="params">(String s)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Exception e)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 封装</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendHttpRequest</span><span class="params">(<span class="keyword">final</span> String address, <span class="keyword">final</span> HttpCallbackListener listener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                HttpURLConnection connection = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    URL url = <span class="keyword">new</span> URL(address);</span><br><span class="line">                    connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">                    connection.setRequestMethod(<span class="string">"GET"</span>);</span><br><span class="line">                    connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">                    connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">                    InputStream in = connection.getInputStream();</span><br><span class="line">                    BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">                    StringBuilder response = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    String line;</span><br><span class="line">                    <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        response.append(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 回调onFinish()方法</span></span><br><span class="line">                        listener.onFinish(response.toString());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 回调onError()方法</span></span><br><span class="line">                        listener.onError(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        connection.disconnect();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendOkHttpRequest</span><span class="params">(<span class="keyword">final</span> String address, <span class="keyword">final</span> okhttp3.Callback callback)</span> </span>&#123;</span><br><span class="line">        OkHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(address)</span><br><span class="line">                .build();</span><br><span class="line">        client.newCall(request).enqueue(callback);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 调用</span><br><span class="line">HttpUtil.sendHttpRequest(<span class="string">"http://huaqianlee.github.io"</span>, <span class="keyword">new</span> HttpCallbackListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinish</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Exception e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">HttpUtil.sendOkHttprequest(<span class="string">"http://huaqinalee.github.io"</span>, <span class="keyword">new</span> Callback() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String data = response.body().string();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="示例源码">示例源码</h2><p>整个示例源码的地址：<br><a href="https://github.com/huaqianlee/AndroidDemo/tree/master/FirstCode/chapter9/NetworkTest" target="_blank" rel="external">示例源码地址</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://huaqianlee.github.io/2017/03/24/FirstCode/The-departure-of-FirstCode-learning-notes/&quot;&gt;《第一行代码》第2版思维导图及所有学习笔记目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;WebView&quot;&gt;WebView&lt;/h2&gt;&lt;p&gt;WebView控件使用十分简单：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 布局&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;WebView /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 应用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.getSettings().setJavaScriptEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 设置浏览器属性，支持JavaScript脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.setWebViewClient(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebViewClient());&lt;span class=&quot;comment&quot;&gt;//目标网页在当前WebView中显示，而不打开系统浏览器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webView.loadUrl(&lt;span class=&quot;string&quot;&gt;&quot;http://huaqianlee.github.io&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://huaqianlee.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="App" scheme="http://huaqianlee.github.io/tags/App/"/>
    
      <category term="FirstCode" scheme="http://huaqianlee.github.io/tags/FirstCode/"/>
    
  </entry>
  
  <entry>
    <title>美式音标与英式音标</title>
    <link href="http://huaqianlee.github.io/2017/05/08/English/Americal-and-english-phonetic/"/>
    <id>http://huaqianlee.github.io/2017/05/08/English/Americal-and-english-phonetic/</id>
    <published>2017-05-08T11:06:31.000Z</published>
    <updated>2017-05-14T01:42:31.176Z</updated>
    
    <content type="html"><![CDATA[<p>由于自己现在自学的是美音，与学生时代学的国际音标有很大不同，查单词的时候时不时就会被音标搞困惑。因此特意搜索整理了一份美式音标表(K.k音标)以及与英式音标的区别。</p>
<h2 id="美式音标">美式音标</h2><p><img src="http://7xjdax.com1.z0.glb.clouddn.com/english/America_ph.png" alt="美式音标"></p>
<blockquote>
<p><strong>[m] [n] [ŋ] [l] [r] - 母音前母音后发音不同</strong></p>
</blockquote>
<a id="more"></a>
<h2 id="美式音标与英式音标的区别">美式音标与英式音标的区别</h2><p>两种音标有很大的区别容易混淆，需要注意。如下：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/english/yuying_dif.jpg" alt="元音"></p>
<p>辅音没什么区别，也在此列出：<br><img src="http://7xjdax.com1.z0.glb.clouddn.com/english/fuying_dif.jpg" alt="辅音"></p>
<blockquote>
<p>国际音标还有如下四个音标：[tr] [dr] [ts] [dz]</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于自己现在自学的是美音，与学生时代学的国际音标有很大不同，查单词的时候时不时就会被音标搞困惑。因此特意搜索整理了一份美式音标表(K.k音标)以及与英式音标的区别。&lt;/p&gt;
&lt;h2 id=&quot;美式音标&quot;&gt;美式音标&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xjdax.com1.z0.glb.clouddn.com/english/America_ph.png&quot; alt=&quot;美式音标&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;[m] [n] [ŋ] [l] [r] - 母音前母音后发音不同&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="English" scheme="http://huaqianlee.github.io/categories/English/"/>
    
    
      <category term="英语" scheme="http://huaqianlee.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
</feed>
