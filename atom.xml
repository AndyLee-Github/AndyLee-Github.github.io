<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Andy.Lee]]></title>
  <subtitle><![CDATA[Good good study, day day up !]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2014-12-25T08:05:50.372Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Andy.Lee]]></name>
    <email><![CDATA[huaqianlee@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[The idle work to waste time]]></title>
    <link href="http://yoursite.com/2014/12/24/The-idle-work-to-waste-time/"/>
    <id>http://yoursite.com/2014/12/24/The-idle-work-to-waste-time/</id>
    <published>2014-12-24T09:46:14.000Z</published>
    <updated>2014-12-25T08:05:50.372Z</updated>
    <content type="html"><![CDATA[<p>　　上一个公司闲,不喜欢,所以辞职了，幸运地找到了自己喜欢的做Android驱动的工作,到现在来这个公司已经一个月,可这一个月都比较闲,自己又没有一个好的规划,导致自己浪费了很多时间,没能学到什么东西.并且因为工作的原因导致自己业余时间学习计划也破产了,这样子就会让自己产生一种不安全生命虚度的感觉,很不喜欢这样子,但是自己又有些懒散不够勤奋.这样子的情况已经在之前的生命的中出现太多次了,自己还得继续加油提升自己的控制力.<br><a id="more"></a></p>
<p>　　到目前为止,很多时候都比较闲没有很多事情需要做,并且来了没有被重视的感觉,有些小小失落,呵呵… 也可能是自己那太脆弱的自尊心在作祟.管他的呢, 表想那么多了, 自己再好好定个计划,按照自己的计划走就行了,加油! 时间在行走,每天都是一个”新的太阳”. </p>
<p>　　现在自己实力还不够,所以更多的是需要精心学习,以后在遇到自己想辞职闲的公司,一定得相信自己的直觉,不然像在上一家公司浪费那么多时间就不好了.</p>
<p>　　有很多缺点,也有很多优点,但是一直在进步,这就行了. wiznote 每日计划必须实行,提升自制力,改变自己的心态,每天进步一点点,加油!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>　　上一个公司闲,不喜欢,所以辞职了，幸运地找到了自己喜欢的做Android驱动的工作,到现在来这个公司已经一个月,可这一个月都比较闲,自己又没有一个好的规划,导致自己浪费了很多时间,没能学到什么东西.并且因为工作的原因导致自己业余时间学习计划也破产了,这样子就会让自己产生一种不安全生命虚度的感觉,很不喜欢这样子,但是自己又有些懒散不够勤奋.这样子的情况已经在之前的生命的中出现太多次了,自己还得继续加油提升自己的控制力.<br>]]>
    
    </summary>
    
      <category term="Nonsense" scheme="http://yoursite.com/tags/Nonsense/"/>
    
      <category term="Life" scheme="http://yoursite.com/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to read]]></title>
    <link href="http://yoursite.com/2014/11/01/How-to-read/"/>
    <id>http://yoursite.com/2014/11/01/How-to-read/</id>
    <published>2014-10-31T16:26:22.000Z</published>
    <updated>2014-10-31T17:24:17.228Z</updated>
    <content type="html"><![CDATA[<p>　　我这里想谈的是关于编程等学习方面的阅读. 不知道其他人怎么样,关于我一直以来总是有一个错误的方法去阅读书籍.　　</p>
<p>　　从初中伊始,我对于学习就有了一个错误的想法:想一步步的认真学习每个知识点,掌握每个知识点;因为这个想法让我一直学得很累.当我上了大学后,开始接触单片机、c语言、PCB等新鲜而有趣的知识，但是悲哀的我还是秉承着错误的学习方法。所以在大学阶段虽然自己很辛苦很认真的在学习，可是最终发现这样效果并不好，反而在一直消磨着自己的兴趣。这样子一度都让自己怀疑自己的能力。不过还好，我一直没有放弃，不管怎么样一直在坚持学习者，到后面开始学习Linux、Java及Android之后，自己终于深刻意识到自己之前的错误方法。　　<br><a id="more"></a><br>　　学习其实不是那样子学习的,尤其是作为我们IT行业的人来说,要学习的东西太多太多了,那样永远学不好的. 　　<br>　<br>现将自己的体会总结如下:</p>
<ol>
<li><p>新接触一种技术,如Android,可以找官方文档(看英文原版更好)大致浏览一下overview,然后按照官方例程跑一些demo,对其有一个大致的认识.接下来就是对自己感兴趣的部分再进行升入研究,如此这般,当自己多做几个项目多深入研究几次也就掌握得差不多了.</p>
</li>
<li><p>对于自己已经有一定了解的技术,然后想看一些提升自己的经典书籍,比如&lt;<thinking in="" java="">&gt; ,不要从头至尾去细读,这样效率不高,而且每那么多时间,尤其是对于已经参加工作的人,这个时候最好的方式就是,浏览书的目录,快速浏览一下此书的大概类容,然后在实际运用中遇到了想详细了解时,找出书翻到那个地方开始研究.　　</thinking></p>
</li>
<li>阅读源代码,这个对于从事编程工作的人是十分重要的.每个人都要看很多源代码才能真正提升自己的技能,但是看源代码也得有方法,不然一头扎进去,什么都不能学到.比如对于Linux源代码来讲,如果要深入每一个细节,估计终其一生也不能理解Linux的精华.这个时候就是看框架,遇到重要的感兴趣的再去研究细节.</li>
</ol>
<p>其实总结起来,最重要的就是不要去研究细节,遇到问题-学习-解决问题,这是最好的方式.　　</p>
<p>已经凌晨1:20了,有点昏昏沉沉的,暂时脑海里面就是这些．</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>　　我这里想谈的是关于编程等学习方面的阅读. 不知道其他人怎么样,关于我一直以来总是有一个错误的方法去阅读书籍.　　</p>
<p>　　从初中伊始,我对于学习就有了一个错误的想法:想一步步的认真学习每个知识点,掌握每个知识点;因为这个想法让我一直学得很累.当我上了大学后,开始接触单片机、c语言、PCB等新鲜而有趣的知识，但是悲哀的我还是秉承着错误的学习方法。所以在大学阶段虽然自己很辛苦很认真的在学习，可是最终发现这样效果并不好，反而在一直消磨着自己的兴趣。这样子一度都让自己怀疑自己的能力。不过还好，我一直没有放弃，不管怎么样一直在坚持学习者，到后面开始学习Linux、Java及Android之后，自己终于深刻意识到自己之前的错误方法。　　<br>]]>
    
    </summary>
    
      <category term="Experience" scheme="http://yoursite.com/tags/Experience/"/>
    
      <category term="Thinking" scheme="http://yoursite.com/categories/Thinking/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[The document convetions for Java]]></title>
    <link href="http://yoursite.com/2014/10/27/The-document-convetions-for-Java/"/>
    <id>http://yoursite.com/2014/10/27/The-document-convetions-for-Java/</id>
    <published>2014-10-27T14:28:28.000Z</published>
    <updated>2014-10-31T16:30:26.376Z</updated>
    <content type="html"><![CDATA[<p>　　注释一直是编程最重要的部分之一,学习Java很长一段时间了,由于之前一直没有很正式的写过项目，所以一直也就没怎么认真的写过注释．因为注释又是如此的重要，所以今天对Java的注释规范加以总结，也促使自己以后写代码注意注释．</p>
<h2 id="注释的地方">注释的地方</h2><ol>
<li>每个源文件开头应该有一段注释,介绍代码的作者\时间等信息.</li>
<li>当代码比较长,嵌套较深时,应该在某些花括号末尾注明花括号对应的起点.</li>
<li>重要的属性需要添加注释,每个方法需要添加注释.</li>
<li>典型的算法等需要特别注意的地方需要添加注释.</li>
<li>有bug的地方需要加以注释,修改过的代码需要加修改标志注释.</li>
</ol>
<a id="more"></a>
<h2 id="注释的方法">注释的方法</h2><ol>
<li>单行注释 // </li>
<li>多行注释 /**/</li>
<li>文档注释<br>这是最重要的注释方式，并且用此方式注释后能生成Java doc，例如下面是一个servlet创建后生成的一个注释文档:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * The <span class="keyword">do</span>Get method of the servlet. &lt;br&gt;</span><br><span class="line"> *</span><br><span class="line"> * This method is called when a form has its tag value method equals to get.</span><br><span class="line"> * </span><br><span class="line"> * @param request the request send by the client to the server</span><br><span class="line"> * @param response the response send by the server to the client</span><br><span class="line"> * @throws ServletException <span class="keyword">if</span> an error occurred</span><br><span class="line"> * @throws IOException <span class="keyword">if</span> an error occurred</span><br><span class="line"> */</span><br><span class="line">public void <span class="keyword">do</span>Get(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">        throws ServletException, IOException &#123;</span><br><span class="line">                    <span class="keyword">do</span>Post();</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>a.类注释</p>
<p>在myEclipse中，可以通过快捷键Alt+Shift+J生成，注释的内容可以通过Eclipse -&gt; Window -&gt; Preferences -&gt; Java -&gt; Code Style -&gt; Code Templates -&gt; Comments -&gt; Types -&gt; Edt 设置,格式如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author </span><br><span class="line"> *</span><br><span class="line"> * @Time </span><br><span class="line"> */</span><br></pre></td></tr></table></figure></p>
<p>b.类的英文注释模板<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/***************************************************************************************** </span><br><span class="line"> *</span><br><span class="line"> *</span><br><span class="line"> * CopyRright (c)<span class="number">2014</span>-xxxx:                          </span><br><span class="line"> * Project:               &lt;项目工程名 &gt;                                          </span><br><span class="line"> * Module ID:             &lt;(模块)类编号，可以引用系统设计中的类编号&gt;    </span><br><span class="line"> * Comments:              &lt;对此类的描述，可以引用系统设计中的描述&gt;                                           </span><br><span class="line"> * JDK version used:      &lt;jdk1.<span class="number">7</span>&gt;                              </span><br><span class="line"> * Namespace:             &lt;命名空间&gt;                              </span><br><span class="line"> * Author：                       </span><br><span class="line"> * Create Date：  </span><br><span class="line"> * Modified By：                                           </span><br><span class="line"> * Modified Date:                                     </span><br><span class="line"> * Why &amp; What is modified:     </span><br><span class="line"> * Version:                                       </span><br><span class="line"> ****************************************************************************************/</span><br></pre></td></tr></table></figure></p>
<p>c.构造函数注释<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/** </span><br><span class="line"> * 构造方法 的描述 </span><br><span class="line"> * @param </span><br><span class="line"> *       </span><br><span class="line"> */</span><br></pre></td></tr></table></figure></p>
<p>d.方法注释<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/** </span><br><span class="line"> * 方法描述 </span><br><span class="line"> * @param </span><br><span class="line"> * @<span class="built_in">return</span>  </span><br><span class="line"> * @exception  (方法有异常的话加) </span><br><span class="line"> * @author  </span><br><span class="line"> * @Time  </span><br><span class="line"> */</span><br></pre></td></tr></table></figure></p>
<p>e.成员变量注释<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/** The count is the number of charactersin the String. */</span><br><span class="line">private int count;</span><br></pre></td></tr></table></figure></p>
<p>有必要时要说明变量功能，涉及到的方法等等。</p>
<h2 id="javadoc参数说明：">javadoc参数说明：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@see 生成文档中的“参见xx 的条目”的超链接，后边可以加上：<span class="string">"类名"</span>、<span class="string">"完整类名"</span>、<span class="string">"完整类名#方法"</span>。可用于：类、方法、变量注释。 </span><br><span class="line">@param 参数的说明。可用于：方法注释。 </span><br><span class="line">@<span class="built_in">return</span> 返回值的说明。可用于：方法注释。 </span><br><span class="line">@exception 可能抛出异常的说明。可用于：方法注释。 </span><br><span class="line">@version 版本信息。可用于：类注释。 </span><br><span class="line">@author 作者名。可用于：类注释。 </span><br><span class="line">@deprecated 对类或方法的说明 该类或方法不建议使用,引起不推荐使用的警告 </span><br><span class="line">@note 表示注解，暴露给源码阅读者的文档 </span><br><span class="line">@remark 表示评论，暴露给客户程序员的文档 </span><br><span class="line">@since 表示从那个版本起开始有了这个函数 </span><br><span class="line">@see 表示交叉参考</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>　　注释一直是编程最重要的部分之一,学习Java很长一段时间了,由于之前一直没有很正式的写过项目，所以一直也就没怎么认真的写过注释．因为注释又是如此的重要，所以今天对Java的注释规范加以总结，也促使自己以后写代码注意注释．</p>
<h2 id="注释的地方">注释的地方</h2><ol>
<li>每个源文件开头应该有一段注释,介绍代码的作者\时间等信息.</li>
<li>当代码比较长,嵌套较深时,应该在某些花括号末尾注明花括号对应的起点.</li>
<li>重要的属性需要添加注释,每个方法需要添加注释.</li>
<li>典型的算法等需要特别注意的地方需要添加注释.</li>
<li>有bug的地方需要加以注释,修改过的代码需要加修改标志注释.</li>
</ol>]]>
    
    </summary>
    
      <category term="Program Kill" scheme="http://yoursite.com/tags/Program-Kill/"/>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Build person blog with hexo and  github]]></title>
    <link href="http://yoursite.com/2014/10/24/build-person-blog-with-hexo/"/>
    <id>http://yoursite.com/2014/10/24/build-person-blog-with-hexo/</id>
    <published>2014-10-23T17:12:15.000Z</published>
    <updated>2015-04-23T15:24:11.327Z</updated>
    <content type="html"><![CDATA[<p>　　基于Hexo和Github的个人博客构建，我参照<a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a>、<a href="http://hexo.io/docs/" target="_blank" rel="external">hexo官方文档</a>及<a href="https://help.github.com/articles/set-up-git/" target="_blank" rel="external">github官方文档</a>完成了自己的个人blog。通过前段时间学习Android和这些天build自己的github、个人blog，关于学习新东西有一个新的体会，就是官方文档和帮助是最好的资料，虽然是英文的，但是看官方的源文档能提升自己的效率。</p>
<p>现在写博客只需要几个简单的命令就能完成发布了．</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br><span class="line">$ hexo generat</span><br><span class="line">$ hexo deploy</span><br><span class="line">也可以直接简写为：</span><br><span class="line">$ hexo n</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>博客内容编辑语法教程：</p>
<ul>
<li><a href="http://daringfireball.net/projects/markdown/syntax.php" target="_blank" rel="external">Markdown_en</a></li>
<li><a href="http://wowubuntu.com/markdown/#overview" target="_blank" rel="external">Markdown_cn</a></li>
</ul>
<hr>
<h2 id="Github">Github　　</h2><p>要成功构建blog首先得有Github账号和Github　Pages. 　　</p>
<ul>
<li>首先注册一个 <a href="https://github.com" target="_blank" rel="external">github</a>账号　　</li>
<li>建立一个与用户名对应的repository来构建Github　pages,仓库名必须为your_user_name.github.com或者your_user_name.github.io．也可以<a href="https://help.github.com/articles/creating-pages-with-the-automatic-generator/" target="_blank" rel="external">creating pages with the automatic generator</a>.</li>
<li><a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="external">添加ssh公钥到Github</a>,如果安装<a href="https://windows.github.com/" target="_blank" rel="external">Github for windows</a>可以省掉这一步,因为软件已经自动生成了.</li>
</ul>
<h2 id="环境安装">环境安装　　</h2><p>安装hexo十分容易，不过在安装之前需要先做一些准备工作：　　</p>
<ul>
<li><a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a></li>
<li><a href="http://git-scm.com/" target="_blank" rel="external">Git</a>　　</li>
</ul>
<h3 id="安装git">安装git　　</h3><p>关于Git版本我个人安装<a href="http://msysgit.github.io/" target="_blank" rel="external">msysgit</a>；如果装<a href="https://windows.github.com/" target="_blank" rel="external">Github for windows</a>，其会自动为电脑安装git，而且还有另外一个好处，它会自动为github创建一个ssh密匙，为我们省去很多工作。　　</p>
<h3 id="安装Node-js">安装Node.js　　</h3><p>最好的方法是通过<a href="https://github.com/creationix/nvm" target="_blank" rel="external">nvm</a>安装.　　</p>
<p>cURL:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>
<p>Wget:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>
<p>安装成功后,重启terminal终端,然后运行接下来命令安装Node.js　　</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install <span class="number">0.10</span>  <span class="comment">#版本号</span></span><br></pre></td></tr></table></figure>
<p>当然也可以通过上面Node.js下载安装.　　</p>
<h3 id="安装hexo">安装hexo　　</h3><p>当上面的所有准备工作做好后,可以安装hexo通过npm.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$npm</span> install -g hexo</span><br></pre></td></tr></table></figure>
<h3 id="初始化">初始化</h3><p>当Hexo安装完成后,运行接下来的命令,hexo将编译所有需要的文件到目标路径.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>编译完成后,工程目录如下:</p>
<p>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── scripts<br>├── source<br>|├── _drafts<br>|└── _posts<br>└── themes</p>
<p>详细配置信息及文件内容格式参照 <a href="http://hexo.io/docs/setup.html" target="_blank" rel="external">hexo configuration</a></p>
<h3 id="生成静态页面">生成静态页面</h3><p>进入hexo目标目录,执行如下命令,生成静态文件至hexo\pulbic.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo generate / hexo g</span><br><span class="line">* 必须在init目录下(hexo目录)执行.</span><br><span class="line">*当修改文章Tag或内容，不能正确重新生成内容，可以删除hexo\db.json后重试，还不行就到public目录删除对应的文件，重新生成。</span><br></pre></td></tr></table></figure>
<p>执行如下命令,将启动本地服务,进行文章预览调试.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></p>
<p>在浏览器输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>即可看到效果.</p>
<h3 id="写文章">写文章</h3><p>执行如下命令,生成制定名称的文章至hexo\source_post\pstName.md.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] <span class="string">"postName"</span> </span><br><span class="line">*postName为文件名,如果包含空格,则必须加<span class="string">""</span>,其将出现在文章的URL中.</span><br></pre></td></tr></table></figure></p>
<p>*layout为可选参数,默认为post,详细见scaffolds目录,若添加自己的layout,只需新建一个文件在scaffolds目录即可,也可以编辑现有的layout,比如修改默认的post.md,想添加一个categories分类,让每次生成文章时能自动添加分类栏目,就只需在—-上面添加categories.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">categories: <span class="comment"># 添加</span></span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line">*注意大括号之间多加了空格,否则会被转义,而不能正常显示</span><br><span class="line">* 所有文件后面必须有个一个空格,否则会报错</span><br></pre></td></tr></table></figure></p>
<h3 id="fancybox_(此段摘录自hexo你的博客)">fancybox (此段摘录自<a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a>)</h3><p>可能有人对这个Reading页面中图片的fancybox效果感兴趣，这个是怎么做的呢。<br>很简单，只需要在你的文章*.md文件的头上添加photos项即可，然后一行行添加你要展示的照片：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">layout: photo</span><br><span class="line">title: 我的阅历</span><br><span class="line">date: <span class="number">2085</span>-<span class="number">01</span>-<span class="number">16</span> <span class="number">07</span>:<span class="number">33</span>:<span class="number">44</span></span><br><span class="line">tags: [hexo]</span><br><span class="line">photos:</span><br><span class="line">- http://bruce.u.qiniudn.com/<span class="number">2013</span>/<span class="number">11</span>/<span class="number">27</span>/reading/photos-<span class="number">0</span>.jpg</span><br><span class="line">- http://bruce.u.qiniudn.com/<span class="number">2013</span>/<span class="number">11</span>/<span class="number">27</span>/reading/photos-<span class="number">1</span>.jpg</span><br><span class="line">*经过测试，文件头上的layout: photo可以省略。</span><br></pre></td></tr></table></figure></p>
<p>不想每次都手动添加怎么办？同样的，打开您的hexo\scaffolds\photo.md<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">layout: &#123; &#123; layout &#125; &#125;</span><br><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">tags: </span><br><span class="line">photos: </span><br><span class="line">- </span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<p>然后每次可以执行带layout的new命令生成照片文章：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new photo <span class="string">"photoPostName"</span> <span class="comment">#新建照片文章</span></span><br></pre></td></tr></table></figure></p>
<h4 id="description">description</h4><p>markdown文件头中也可以添加description，以覆盖全局配置文件中的description内容，请参考下文_config.yml的介绍。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: hexo你的博客</span><br><span class="line">date: <span class="number">2013</span>-<span class="number">11</span>-<span class="number">22</span> <span class="number">17</span>:<span class="number">11</span>:<span class="number">54</span></span><br><span class="line">categories: default</span><br><span class="line">tags: [hexo]</span><br><span class="line">description: 你对本页的描述</span><br><span class="line">---</span><br><span class="line">*hexo默认会处理全部markdown和html文件，如果不想让hexo处理你的文件，可以在文件头中加入layout: <span class="literal">false</span>。</span><br></pre></td></tr></table></figure></p>
<h3 id="文章摘要">文章摘要</h3><p>在需要显示摘要的地方添加如下代码即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以上是摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure></p>
<p>more以上内容即是文章摘要，在主页显示，more以下内容点击『&gt; Read More』链接打开全文才显示。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo中所有文件的编码格式均是UTF-<span class="number">8</span>。</span><br></pre></td></tr></table></figure></p>
<h2 id="主题安装">主题安装</h2><p>到hexo的主题列表<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">Hexo Themes</a>安装自己中意的主题.我比较喜欢简洁版的,所以clone安装的<a href="https://github.com/winterland1989/hexo-theme-winterland" target="_blank" rel="external">winterland</a>.主题的安装方法基本每个主题的READEM.md都有描述.</p>
<p>*自己最初clone了<a href="https://github.com/halfer53/metro-light" target="_blank" rel="external">metro-light</a>,结果主题未完善,发表博文是格式总是不对,浪费了自己大半天的时间,后面换个主题就行了.在警示一下自己.</p>
<p>未完待续…<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*到这为至,自己的个人blog基本完成,能满足基本需求.</span><br><span class="line">*我会在使用blog的过程中不断加入自己喜欢的元素,到时再继续.</span><br></pre></td></tr></table></figure></p>
<h2 id="附_补充一下出错解决方法">附 补充一下出错解决方法</h2><p>搞软件总是会出现很多错误,很多时候各种方法试尽仍不能解决,从头再来很多时候问题就解决了.如果遇到怎么都不能解决的问题可以试试如下方式.</p>
<ol>
<li>备份自己的配置文件(_config.yml source文件夹 themes文件夹).然后删除Hexo目录下的所有文件.</li>
</ol>
<p>2.rebuild Hexo文件夹,进入Hexo文件夹执行如下命令.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p>
<p>3.执行如下命令,在浏览器输入 localhost:4000,预览测试博客.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p>
<p>4.如果3成功则将备份文件copy回来,再通过3测试.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>　　基于Hexo和Github的个人博客构建，我参照<a href="http://ibruce.info/2013/11/22/hexo-your-blog/">hexo你的博客</a>、<a href="http://hexo.io/docs/">hexo官方文档</a>及<a href="https://help.github.com/articles/set-up-git/">github官方文档</a>完成了自己的个人blog。通过前段时间学习Android和这些天build自己的github、个人blog，关于学习新东西有一个新的体会，就是官方文档和帮助是最好的资料，虽然是英文的，但是看官方的源文档能提升自己的效率。</p>
<p>现在写博客只需要几个简单的命令就能完成发布了．</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br><span class="line">$ hexo generat</span><br><span class="line">$ hexo deploy</span><br><span class="line">也可以直接简写为：</span><br><span class="line">$ hexo n</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Tools" scheme="http://yoursite.com/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2014/10/20/hello-world/"/>
    <id>http://yoursite.com/2014/10/20/hello-world/</id>
    <published>2014-10-19T17:12:15.000Z</published>
    <updated>2014-12-25T06:29:20.273Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Tools" scheme="http://yoursite.com/categories/Tools/"/>
    
  </entry>
  
</feed>